var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Answer.html",[0,0.991,1,1.524]],["body/interfaces/Answer.html",[0,1.862,1,2.262,2,1.891,3,0.161,4,0.161,5,0.141,6,2.333,7,0.082,8,0.829,9,3.864,10,2.46,11,4.2,12,3.478,13,1.346,14,0.973,15,0.255,16,0.017,17,0.719,18,0.911,19,0.245,20,2.067,21,2.64,22,0.289,23,2.091,24,0.662,25,0.515,26,1.72,27,0.266,28,2.64,29,2.64,30,2.64,31,2.64,32,2.333,33,2.205,34,2.64,35,3.471,36,3.471,37,3.067,38,3.956,39,3.067,40,1.986,41,2.333,42,2.64,43,3.64,44,2.64,45,2.64,46,0.831,47,0.912,48,1.411,49,3.471,50,2.64,51,2.64,52,3.471,53,2.899,54,2.64,55,3.441,56,2.64,57,2.476,58,2.64,59,3.067,60,2.899,61,2.476,62,2.64,63,2.64,64,2.64,65,2.64,66,2.64,67,2.64,68,3.256,69,2.476,70,3.878,71,2.205,72,3.426,73,2.476,74,3.256,75,2.205,76,2.64,77,0.012,78,0.012]],["title/interfaces/AnswerPivot.html",[0,0.991,72,2.066]],["body/interfaces/AnswerPivot.html",[0,1.87,1,1.747,2,1.92,3,0.163,4,0.163,5,0.143,6,2.369,7,0.084,8,0.838,9,2.515,10,2.411,11,3.887,12,3.493,13,1.103,14,0.889,15,0.256,16,0.017,17,0.719,18,0.912,19,0.249,20,2.088,21,2.682,22,0.29,23,2.123,24,0.672,25,0.523,26,1.747,27,0.268,28,2.682,29,2.682,30,2.682,31,2.682,32,2.369,33,2.24,34,2.682,35,3.507,36,3.507,37,3.098,38,3.971,39,3.098,40,2.017,41,2.369,42,2.682,43,3.662,44,2.682,45,2.682,46,0.844,47,0.921,48,1.425,49,3.507,50,2.682,51,2.682,52,3.507,53,2.929,54,2.682,55,3.462,56,2.682,57,2.515,58,2.682,59,3.098,60,2.929,61,2.515,62,2.682,63,2.682,64,2.682,65,2.682,66,2.682,67,2.682,68,3.289,69,2.515,70,3.908,71,2.24,72,3.662,73,2.515,74,3.289,75,3.462,76,2.682,77,0.012,78,0.012]],["title/interfaces/AnswerRelation.html",[0,0.991,71,1.953]],["body/interfaces/AnswerRelation.html",[0,1.87,1,1.747,2,1.92,3,0.163,4,0.163,5,0.143,6,2.369,7,0.084,8,0.838,9,2.515,10,2.466,11,3.887,12,3.493,13,1.103,14,0.889,15,0.254,16,0.017,17,0.719,18,0.911,19,0.249,20,2.088,21,2.682,22,0.29,23,2.123,24,0.672,25,0.523,26,1.747,27,0.268,28,2.682,29,2.682,30,2.682,31,2.682,32,2.369,33,2.24,34,2.682,35,3.507,36,3.507,37,3.098,38,3.971,39,3.098,40,2.017,41,2.369,42,2.682,43,3.662,44,2.682,45,2.682,46,0.844,47,0.921,48,1.425,49,3.507,50,2.682,51,2.682,52,3.507,53,2.929,54,2.682,55,3.462,56,2.682,57,2.515,58,2.682,59,3.098,60,2.929,61,2.515,62,2.682,63,2.682,64,2.682,65,2.682,66,2.682,67,2.682,68,3.289,69,2.515,70,3.908,71,2.929,72,4.028,73,2.515,74,3.289,75,2.24,76,2.682,77,0.012,78,0.012]],["title/injectables/AnswerRelationService.html",[79,0.643,80,2.508]],["body/injectables/AnswerRelationService.html",[3,0.152,4,0.152,5,0.133,7,0.078,12,2.99,13,1.054,14,1.054,15,0.23,16,0.017,17,0.364,18,0.744,19,0.35,22,0.152,24,0.627,27,0.297,46,1.269,71,3.154,75,2.09,77,0.011,78,0.011,79,0.922,80,3.593,81,1.426,82,4.491,83,5.698,84,5.208,85,3.541,86,0.519,87,1.309,88,5.484,89,5.484,90,2.708,91,6.182,92,5.484,93,4.251,94,4.251,95,0.549,96,0.685,97,4.097,98,5.484,99,6.604,100,2.278,101,4.097,102,0.798,103,0.755,104,5.344,105,0.629,106,5.484,107,4.097,108,4.097,109,2.01,110,4.097,111,5.484,112,4.097,113,4.251,114,4.097,115,0.786,116,4.251,117,4.097,118,0.341,119,1.061,120,0.822,121,1.426,122,1.366,123,0.364,124,0.875,125,4.097,126,0.753,127,6.182,128,4.097,129,0.923,130,4.097,131,4.097,132,0.627,133,5.484,134,4.097,135,5.484,136,5.484,137,4.097,138,4.097,139,4.097,140,4.097,141,4.097,142,5.484,143,4.097,144,4.097,145,4.097]],["title/injectables/ApiService.html",[79,0.643,146,1.851]],["body/injectables/ApiService.html",[3,0.171,4,0.171,5,0.149,7,0.087,8,0.862,10,2.087,13,0.882,15,0.242,16,0.017,18,0.887,19,0.414,22,0.171,27,0.289,77,0.012,78,0.012,79,0.993,81,1.598,86,0.559,87,1.214,90,2.791,95,0.525,96,0.676,102,0.824,103,0.735,105,0.581,118,0.382,121,1.598,122,1.53,123,0.408,124,0.778,129,0.866,146,2.858,147,3.968,148,5.649,149,4.889,150,6.535,151,1.918,152,6.9,153,4.59,154,7.309,155,5.909,156,4.59,157,4.59,158,5.909,159,4.013,160,3.945,161,4.59,162,4.59,163,4.59,164,7.14,165,4.59,166,4.59,167,2.247,168,1.292,169,5.909,170,4.59,171,2.109,172,4.59,173,2.63,174,2.477,175,4.58,176,3.558,177,3.252,178,4.59,179,4.59,180,0.844,181,3.252,182,4.59,183,3.968,184,1.53,185,3.968,186,2.63,187,3.558,188,4.186,189,4.59,190,3.007,191,4.59,192,4.59,193,2.804,194,4.59,195,4.59,196,4.59,197,0.807,198,4.59,199,4.59]],["title/components/AppComponent.html",[200,0.09,201,0.736]],["body/components/AppComponent.html",[3,0.156,4,0.156,5,0.137,7,0.08,8,0.814,13,0.808,15,0.137,16,0.017,17,0.373,19,0.393,22,0.156,25,0.5,27,0.262,47,0.895,77,0.011,78,0.011,86,0.528,87,1.255,90,2.277,95,0.496,96,0.592,102,0.474,103,0.448,105,0.373,115,0.5,118,0.35,122,1.86,123,0.373,126,1.226,132,0.854,168,1.183,180,0.773,197,1.34,200,0.147,201,1.282,202,1.12,203,0.881,204,0.881,205,0.881,206,0.881,207,3.632,208,0.881,209,1.685,210,1.685,211,1.169,212,1.169,213,1.312,214,2.087,215,1.169,216,6.26,217,1.169,218,5.577,219,6.669,220,6.669,221,3.257,222,3.851,223,3.929,224,4.77,225,5.577,226,4.202,227,5.577,228,4.202,229,0.706,230,1.286,231,2.977,232,2.977,233,4.202,234,4.202,235,4.202,236,3.632,237,3.632,238,0.881,239,1.169,240,1.169,241,0.881,242,0.881,243,0.881,244,0.808,245,0.881,246,0.808,247,0.881,248,0.881,249,0.808,250,0.773,251,1.608,252,0.808,253,0.881,254,0.881,255,0.808,256,0.881,257,0.808,258,0.881,259,0.808,260,0.881,261,0.844,262,0.808,263,0.808,264,0.881,265,0.808,266,0.881,267,0.773,268,0.881,269,0.808,270,0.881,271,0.808,272,0.881,273,0.808,274,0.881,275,0.808,276,0.881,277,0.808,278,0.808,279,0.881,280,0.808,281,0.881,282,0.808,283,0.881,284,0.808,285,0.844,286,0.808,287,0.881,288,0.808,289,0.881,290,0.808,291,0.881,292,0.808,293,0.844,294,0.808,295,0.808,296,0.881,297,0.808,298,0.808,299,0.881,300,0.881,301,0.881]],["title/interfaces/Association.html",[0,0.991,302,2.066]],["body/interfaces/Association.html",[0,1.546,2,2.041,3,0.174,4,0.174,5,0.152,7,0.089,8,0.871,10,2.414,12,2.257,14,1.02,15,0.248,16,0.017,17,0.701,18,0.912,20,1.697,22,0.278,23,2.257,27,0.301,77,0.012,78,0.012,124,0.555,302,3.223,303,3.057,304,5.563,305,6.346,306,6.204,307,4.919,308,2.518,309,4.315,310,4.629,311,4.629,312,4.629,313,4.629,314,4.629,315,4.629,316,4.629,317,4.629,318,4.629,319,3.913,320,4.666,321,4.629,322,5.105,323,3.306,324,2.197,325,2.257,326,3.306,327,4.034,328,4.034,329,4.034,330,4.034,331,4.034,332,4.034,333,4.034,334,4.034,335,4.034,336,4.034,337,4.034,338,4.034,339,4.034,340,4.034,341,4.034,342,4.034,343,4.034,344,4.034,345,4.034,346,3.306,347,3.057,348,4.034,349,4.034,350,3.306,351,4.034]],["title/injectables/AssociationService.html",[79,0.643,352,2.339]],["body/injectables/AssociationService.html",[3,0.159,4,0.159,5,0.139,7,0.081,8,0.823,10,1.802,13,1.084,14,0.877,15,0.227,16,0.017,17,0.561,19,0.42,20,1.555,22,0.159,27,0.281,77,0.012,78,0.012,79,0.948,81,1.488,86,0.534,87,1.343,90,2.608,95,0.501,96,0.692,102,0.757,103,0.716,105,0.62,115,0.672,118,0.356,121,1.488,122,1.425,123,0.38,124,0.799,129,0.918,146,3.468,159,2.307,160,3.408,167,2.146,168,1.588,171,1.965,173,3.232,174,2.307,302,2.307,324,1.727,350,3.029,352,3.447,353,3.314,354,6.49,355,5.641,356,6.714,357,6.714,358,5.641,359,5.641,360,3.029,361,3.536,362,5.641,363,5.641,364,4.275,365,5.448,366,3.045,367,4.275,368,4.275,369,5.641,370,4.275,371,5.641,372,4.275,373,4.877,374,3.029,375,2.307,376,2.801,377,3.029,378,2.801,379,3.029,380,2.801,381,3.314,382,3.314,383,3.029,384,4.275,385,5.641,386,4.275,387,3.314,388,3.314,389,4.275,390,4.275,391,3.029,392,4.275,393,4.275,394,3.314,395,3.314,396,4.275,397,3.314,398,3.314,399,4.275,400,4.275,401,4.275,402,3.696,403,4.275,404,4.275,405,4.275,406,4.275,407,4.275,408,4.275,409,4.373]],["title/injectables/AuthGuard.html",[79,0.643,410,2.967]],["body/injectables/AuthGuard.html",[3,0.202,4,0.202,5,0.177,7,0.103,8,0.958,15,0.229,16,0.017,19,0.4,22,0.202,27,0.228,77,0.013,78,0.013,79,1.103,81,1.892,86,0.621,90,2.729,95,0.483,96,0.694,102,0.613,103,0.579,105,0.483,118,0.452,121,1.892,122,1.812,123,0.483,124,0.647,129,0.682,132,0.832,151,2.071,184,1.812,410,5.089,411,4.698,412,4.228,413,4.514,414,6.335,415,4.698,416,5.434,417,5.434,418,4.698,419,6.565,420,3.114,421,3.85,422,5.434,423,5.676,424,4.698,425,4.698]],["title/interfaces/AuthManagement.html",[0,0.991,426,2.712]],["body/interfaces/AuthManagement.html",[0,1.683,2,2.338,3,0.199,4,0.199,5,0.174,7,0.102,8,0.949,10,2.076,15,0.247,16,0.017,17,0.578,18,0.911,22,0.282,23,2.586,27,0.273,77,0.013,78,0.013,115,0.636,167,2.033,180,1.288,181,3.787,188,3.787,307,4.605,309,3.503,426,4.605,427,3.787,428,5.163,429,5.163,430,6.3,431,3.787,432,3.724,433,4.621,434,4.621,435,3.266,436,4.621,437,4.621,438,3.787,439,5.039,440,4.621,441,4.621,442,4.621,443,4.621,444,4.621,445,4.605,446,4.621]],["title/injectables/AuthService.html",[79,0.643,412,2.066]],["body/injectables/AuthService.html",[3,0.136,4,0.136,5,0.119,7,0.07,13,1.12,14,0.705,15,0.223,16,0.017,18,0.829,19,0.417,22,0.136,27,0.287,77,0.01,78,0.01,79,0.853,81,1.272,86,0.48,87,1.345,90,2.844,95,0.451,96,0.71,102,0.772,103,0.729,105,0.661,115,0.815,118,0.304,121,1.272,122,1.218,123,0.325,124,0.893,129,0.881,146,3.395,151,2.244,159,2.738,160,1.973,167,2.799,171,1.679,173,2.907,174,1.973,176,2.833,177,2.589,184,2.205,185,4.385,186,3.922,187,2.833,188,4.973,190,3.324,324,1.119,374,2.589,379,2.589,383,2.589,398,2.833,412,2.738,413,3.922,420,2.094,425,3.159,428,4.128,429,4.46,431,2.589,432,3.339,438,2.589,445,4.128,447,2.833,448,5.073,449,6.295,450,6.295,451,6.295,452,5.073,453,6.295,454,6.295,455,5.073,456,5.073,457,3.654,458,7.019,459,3.654,460,5.073,461,3.654,462,3.654,463,3.654,464,3.654,465,5.073,466,3.654,467,3.654,468,5.827,469,3.654,470,3.654,471,3.654,472,3.654,473,5.073,474,3.654,475,5.073,476,5.127,477,3.654,478,3.654,479,4.385,480,3.159,481,3.159,482,3.159,483,2.833,484,4.88,485,4.88,486,3.159,487,3.159,488,1.39,489,3.654,490,3.654,491,2.094,492,3.654,493,3.654,494,3.654,495,5.073,496,5.073,497,5.073,498,3.654,499,3.654,500,3.654,501,3.159,502,3.654,503,3.159,504,3.159,505,1.455,506,3.654,507,5.073,508,3.654,509,3.654,510,3.654,511,3.159,512,3.654,513,5.073,514,3.654,515,3.654,516,3.654]],["title/components/AutocompleteComponent.html",[200,0.09,244,0.736]],["body/components/AutocompleteComponent.html",[1,1.955,3,0.101,4,0.101,5,0.088,7,0.052,8,0.595,10,1.971,13,1.296,14,0.857,15,0.235,16,0.017,17,0.24,18,0.875,19,0.389,20,1.484,22,0.101,24,0.414,25,0.322,27,0.276,40,2.257,46,0.944,47,0.655,48,1.532,53,2.082,75,2.082,77,0.008,78,0.008,86,0.386,87,1.328,90,1.787,95,0.363,96,0.708,100,2.081,102,0.695,103,0.657,105,0.611,109,1.101,115,0.734,118,0.225,119,0.7,120,0.543,123,0.24,124,0.842,126,1.006,129,0.804,132,1.052,168,1.148,180,0.498,183,4.728,186,3.133,197,1.271,200,0.115,201,0.52,202,0.819,203,0.567,204,0.567,205,0.567,206,0.567,208,0.567,209,1.629,210,1.629,211,0.855,212,0.855,213,1.029,214,1.638,215,0.855,217,0.855,229,0.455,230,0.828,238,0.567,239,0.855,240,0.855,241,0.567,242,0.567,243,0.567,244,1.051,245,0.567,246,0.52,247,0.567,248,0.567,249,0.52,250,0.498,251,1.483,252,0.52,253,0.567,254,0.567,255,0.52,256,0.567,257,0.52,258,0.567,259,0.52,260,0.567,261,0.543,262,0.52,263,0.52,264,0.567,265,0.52,266,0.567,267,0.498,268,0.567,269,0.52,270,0.567,271,0.52,272,0.567,273,0.52,274,0.567,275,0.52,276,0.567,277,0.52,278,0.52,279,0.567,280,0.52,281,0.567,282,0.52,283,0.567,284,0.52,285,0.543,286,0.52,287,0.567,288,0.52,289,0.567,290,0.52,291,0.567,292,0.52,293,0.543,294,0.52,295,1.051,296,0.567,297,0.52,298,0.52,299,0.567,300,0.567,301,0.567,308,1.46,352,1.653,375,1.46,488,1.552,517,2.339,518,1.787,519,4.08,520,4.911,521,4.08,522,4.246,523,6.403,524,4.08,525,4.08,526,4.239,527,5.469,528,5.469,529,4.08,530,1.674,531,5.469,532,4.08,533,3.163,534,1.249,535,1.569,536,3.807,537,5.073,538,2.706,539,3.341,540,2.549,541,2.435,542,4.08,543,3.527,544,2.706,545,2.706,546,2.706,547,2.706,548,3.527,549,3.527,550,2.706,551,4.08,552,2.706,553,4.08,554,2.706,555,2.706,556,2.706,557,2.706,558,4.08,559,2.706,560,2.891,561,2.706,562,2.706,563,4.08,564,2.706,565,3.527,566,2.706,567,4.911,568,2.097,569,3.527,570,4.08,571,2.706,572,2.706,573,1.736,574,2.097,575,3.163,576,1.653,577,2.801,578,2.706,579,2.706,580,2.097,581,1.128,582,1.077,583,1.243,584,2.097,585,1.917,586,4.08,587,2.706,588,2.706,589,2.706,590,2.706,591,2.79,592,2.645,593,4.911,594,1.773,595,2.706,596,4.911,597,3.527,598,2.339,599,2.339,600,3.163,601,2.891,602,3.527,603,2.706,604,3.527,605,2.097,606,2.706,607,2.891,608,1.917,609,2.706,610,2.706,611,2.706,612,2.097,613,2.339,614,2.706,615,2.706,616,2.339,617,2.706,618,2.706,619,1.309,620,2.706,621,3.48,622,1.55,623,2.097,624,1.653,625,2.339,626,1.917,627,2.097]],["title/components/DataquestHeaderComponent.html",[200,0.09,246,0.736]],["body/components/DataquestHeaderComponent.html",[3,0.123,4,0.123,5,0.107,7,0.063,8,0.689,13,0.634,14,0.92,15,0.179,16,0.017,17,0.566,18,0.372,19,0.361,22,0.123,25,0.393,27,0.231,47,0.965,60,2.408,77,0.01,78,0.01,86,0.447,87,1.199,95,0.419,96,0.672,102,0.372,103,0.351,105,0.588,115,0.562,118,0.275,123,0.293,124,0.393,126,1.171,129,0.692,132,0.723,151,1.618,168,0.928,180,0.607,184,1.574,193,2.015,197,1.282,200,0.129,201,0.634,202,0.948,203,0.691,204,0.691,205,0.691,206,0.691,208,0.691,209,1.657,210,1.657,211,0.989,212,0.989,213,1.155,214,1.837,215,0.989,217,0.989,229,0.554,230,1.01,238,0.691,239,0.989,240,0.989,241,0.691,242,0.691,243,0.691,244,0.634,245,0.691,246,1.156,247,1.461,248,0.691,249,0.634,250,0.607,251,1.543,252,0.634,253,0.691,254,0.691,255,0.634,256,0.691,257,0.634,258,0.691,259,0.634,260,0.691,261,0.662,262,0.634,263,0.634,264,0.691,265,0.634,266,0.691,267,0.607,268,0.691,269,0.634,270,0.691,271,0.634,272,0.691,273,0.634,274,0.691,275,0.634,276,0.691,277,0.634,278,0.634,279,0.691,280,0.634,281,0.691,282,0.634,283,0.691,284,0.634,285,0.662,286,0.634,287,0.691,288,0.634,289,0.691,290,0.634,291,0.691,292,0.634,293,0.662,294,0.634,295,0.634,296,0.691,297,0.634,298,0.634,299,0.691,300,0.691,301,0.691,324,1.445,435,2.883,488,1.795,518,2.005,530,1.842,534,1.445,540,2.714,541,2.593,573,1.328,575,3.659,581,1.968,582,1.313,583,1.516,585,2.337,619,2.283,624,3.367,628,6.225,629,5.102,630,2.851,631,2.411,632,5.511,633,4.72,634,4.764,635,6.015,636,5.2,637,5.2,638,4.262,639,4.262,640,5.511,641,3.298,642,3.574,643,5.893,644,4.72,645,3.298,646,3.298,647,3.298,648,3.298,649,3.298,650,3.298,651,3.298,652,2.337,653,2.851,654,3.298,655,3.298,656,3.298,657,2.851,658,4.08,659,2.421,660,2.851,661,4.08,662,4.08,663,2.851,664,2.851,665,3.344,666,3.659,667,2.851,668,3.344,669,4.764,670,5.2,671,2.557,672,1.516,673,1.89,674,1.443,675,1.443,676,2.161,677,2.337,678,3.659,679,2.851,680,2.851,681,2.851,682,2.337,683,1.89,684,2.557,685,2.557,686,3.344,687,3.659,688,3.298,689,2.337,690,2.557,691,2.851,692,4.262,693,3.298,694,2.337,695,2.557,696,3.298,697,3.447,698,3.905,699,5.511,700,3.298,701,3.298,702,3.298,703,2.851,704,4.72,705,4.72,706,4.72,707,4.72,708,2.015,709,1.89,710,1.89,711,2.337,712,2.337]],["title/components/DateDataTypeComponent.html",[200,0.09,249,0.736]],["body/components/DateDataTypeComponent.html",[3,0.113,4,0.113,5,0.098,7,0.058,13,0.582,14,0.855,15,0.226,16,0.017,17,0.547,18,0.852,19,0.349,22,0.113,24,0.463,25,0.36,27,0.269,46,1.009,47,0.712,48,1.596,77,0.009,78,0.009,86,0.42,87,1.13,95,0.269,96,0.678,100,1.809,102,0.651,103,0.616,105,0.59,109,1.197,115,0.688,118,0.252,119,0.784,120,0.608,123,0.269,124,0.9,126,1.063,129,0.772,132,1.081,180,0.557,190,2.906,197,1.4,200,0.123,201,0.582,202,0.89,203,0.634,204,0.634,205,0.634,206,0.634,208,0.634,209,1.646,210,1.646,211,0.93,212,0.93,213,1.1,215,0.93,217,0.93,229,0.509,238,0.634,239,0.93,240,0.93,241,0.634,242,0.634,243,0.634,244,0.582,245,0.634,246,0.582,247,0.634,248,0.634,249,1.111,250,1.383,251,1.518,252,0.582,253,0.634,254,0.634,255,0.582,256,0.634,257,0.582,258,0.634,259,0.582,260,0.634,261,0.608,262,0.582,263,0.582,264,0.634,265,0.582,266,0.634,267,0.557,268,0.634,269,0.582,270,0.634,271,0.582,272,0.634,273,0.582,274,1.1,275,0.582,276,0.634,277,0.582,278,0.582,279,0.634,280,0.582,281,0.634,282,0.582,283,0.634,284,0.582,285,0.608,286,0.582,287,0.634,288,0.582,289,0.634,290,0.582,291,0.634,292,0.582,293,0.608,294,0.582,295,0.582,296,0.634,297,0.582,298,0.582,299,0.634,300,0.634,301,0.634,320,3.718,324,0.927,366,3.676,505,2.3,530,1.769,534,1.358,535,1.677,541,2.445,573,1.627,577,3.09,581,1.262,582,1.205,583,1.391,591,2.263,592,2.539,713,6.26,714,5.614,715,1.324,716,2.296,717,2.296,718,1.94,719,5.779,720,5.779,721,4.434,722,2.795,723,4.434,724,2.263,725,2.144,726,2.394,727,1.634,728,1.849,729,2.616,730,3.027,731,4.434,732,6.151,733,3.027,734,5.248,735,2.346,736,1.734,737,4.434,738,3.027,739,2.263,740,2.41,741,2.616,742,1.544,743,3.027,744,3.027,745,1.983,746,3.027,747,2.616,748,3.027,749,3.027,750,5.779,751,1.734,752,3.027,753,3.027,754,3.027,755,3.833,756,3.833,757,3.027,758,3.027,759,3.027,760,3.027,761,1.544,762,3.027,763,3.027,764,4.434,765,3.027,766,3.027,767,1.849,768,2.144,769,3.027,770,3.027,771,2.616,772,4.537,773,2.616,774,1.849,775,3.027,776,4.434,777,1.983,778,3.027,779,4.434,780,1.983,781,3.027,782,3.027,783,3.027,784,4.434,785,3.027,786,3.833,787,2.616]],["title/components/DetailPage.html",[200,0.09,255,0.736]],["body/components/DetailPage.html",[3,0.162,4,0.162,5,0.142,7,0.083,8,0.835,13,0.839,16,0.016,17,0.388,19,0.398,22,0.162,25,0.52,27,0.24,47,0.918,77,0.012,78,0.012,86,0.541,95,0.567,96,0.604,105,0.388,115,0.52,118,0.363,119,1.13,123,0.388,126,1.245,132,0.876,168,1.229,180,0.803,197,1.348,200,0.169,201,0.839,202,1.148,203,0.915,204,0.915,205,0.915,206,0.915,208,0.915,209,1.689,210,1.689,211,1.199,212,1.199,213,1.337,214,2.127,215,1.199,217,1.199,229,0.734,230,1.337,238,0.915,239,1.199,240,1.199,241,0.915,242,0.915,243,0.915,244,0.839,245,0.915,246,0.839,247,0.915,248,0.915,249,0.839,250,0.803,251,1.617,252,1.301,253,0.915,254,0.915,255,1.301,256,0.915,257,0.839,258,0.915,259,0.839,260,0.915,261,0.876,262,0.839,263,0.839,264,0.915,265,0.839,266,0.915,267,0.803,268,0.915,269,0.839,270,0.915,271,0.839,272,0.915,273,0.839,274,0.915,275,0.839,276,0.915,277,0.839,278,0.839,279,0.915,280,0.839,281,0.915,282,0.839,283,0.915,284,0.839,285,0.876,286,0.839,287,0.915,288,0.839,289,0.915,290,0.839,291,0.915,292,0.839,293,0.876,294,0.839,295,0.839,296,0.915,297,0.839,298,0.839,299,0.915,300,0.915,301,0.915,488,2.175,518,2.321,530,2.073,582,1.738,788,3.774,789,4.434,790,5.514,791,6.379,792,5.719,793,5.719,794,4.365,795,4.365,796,4.365]],["title/components/DetailedFormComponent.html",[200,0.09,252,0.736]],["body/components/DetailedFormComponent.html",[3,0.103,4,0.103,5,0.09,7,0.053,8,0.606,13,0.533,14,0.865,15,0.09,16,0.017,17,0.443,19,0.385,22,0.103,24,0.424,25,0.593,27,0.209,33,3.177,47,0.888,77,0.009,78,0.009,86,0.393,87,1.135,95,0.369,96,0.68,102,0.313,103,0.295,105,0.624,115,0.769,118,0.231,120,0.557,123,0.246,124,0.79,126,1.018,129,0.81,132,0.636,151,1.463,167,1.581,168,0.78,180,0.51,184,2.076,190,2.723,197,1.235,200,0.146,201,0.533,202,0.834,203,0.581,204,0.581,205,0.581,206,0.581,208,0.581,209,1.633,210,1.633,211,0.871,212,0.871,213,1.045,214,1.662,215,0.871,217,0.871,229,0.466,230,0.849,238,0.581,239,0.871,240,0.871,241,0.581,242,0.581,243,0.581,244,0.533,245,0.581,246,1.064,247,0.581,248,0.581,249,0.533,250,0.764,251,1.491,252,1.064,253,1.392,254,0.581,255,0.533,256,0.581,257,0.533,258,0.581,259,0.533,260,0.581,261,0.557,262,0.533,263,0.533,264,0.581,265,0.533,266,0.581,267,0.51,268,0.581,269,0.533,270,0.581,271,0.533,272,0.581,273,0.533,274,0.871,275,0.533,276,0.581,277,0.533,278,0.533,279,0.581,280,0.533,281,0.581,282,0.533,283,0.581,284,0.533,285,0.557,286,1.197,287,0.581,288,0.533,289,0.581,290,0.533,291,0.581,292,0.533,293,0.557,294,0.533,295,0.533,296,0.581,297,0.533,298,0.533,299,0.581,300,0.581,301,0.581,325,2.678,346,3.531,347,3.886,505,1.104,540,2.57,541,2.368,573,0.78,581,1.156,582,2.914,583,1.274,585,1.964,622,1.588,627,2.149,629,1.964,631,2.18,638,3.922,639,3.922,659,1.896,665,3.531,668,2.944,672,2.861,674,2.18,675,2.18,684,2.149,685,2.149,687,4.292,692,1.964,694,1.964,697,2.381,709,2.381,710,2.381,725,1.964,755,2.397,756,2.397,771,2.397,772,3.592,773,2.397,774,1.694,797,6.275,798,2.397,799,4.984,800,4.155,801,4.786,802,4.786,803,5.382,804,6.226,805,4.292,806,4.786,807,5.536,808,5.536,809,5.536,810,3.699,811,5.581,812,4.155,813,2.772,814,2.01,815,2.772,816,2.772,817,2.772,818,2.772,819,2.772,820,2.772,821,2.772,822,2.772,823,2.772,824,2.772,825,2.149,826,2.397,827,2.149,828,2.772,829,2.772,830,2.397,831,2.772,832,2.772,833,2.397,834,2.772,835,2.772,836,4.984,837,2.397,838,2.772,839,2.772,840,2.772,841,4.155,842,2.772,843,4.155,844,3.221,845,6.226,846,4.984,847,4.984,848,4.984,849,6.639,850,5.382,851,4.826,852,3.531,853,3.531,854,4.984,855,4.984,856,4.984,857,2.856,858,4.984,859,4.984,860,2.411,861,2.772,862,2.772,863,2.772,864,2.772,865,4.155,866,2.397,867,2.772,868,2.772,869,2.397,870,2.397,871,4.155,872,2.772,873,2.772,874,2.772,875,4.155,876,2.397,877,2.397,878,2.772,879,2.772,880,2.772,881,2.772,882,2.772,883,2.772,884,5.536,885,4.155,886,4.155,887,4.155,888,4.155,889,4.155,890,2.944,891,4.155,892,4.155,893,3.592,894,4.155,895,4.155,896,2.944,897,4.155,898,4.155,899,2.772,900,2.397,901,1.817,902,2.397,903,3.592,904,2.772,905,2.772,906,4.155,907,2.772,908,2.397,909,2.772,910,2.772,911,2.772,912,2.149,913,2.772,914,2.772]],["title/injectables/DetailedFormService.html",[79,0.643,541,1.456]],["body/injectables/DetailedFormService.html",[3,0.103,4,0.103,5,0.09,7,0.053,8,0.607,14,1.087,15,0.225,16,0.017,17,0.37,19,0.398,20,1.011,22,0.103,24,0.425,25,0.742,26,1.106,27,0.249,40,2.969,77,0.009,78,0.009,79,0.699,81,0.967,82,4.679,86,0.394,87,1.365,90,2.88,95,0.37,96,0.722,102,0.669,103,0.633,105,0.66,115,0.865,118,0.231,120,0.558,121,0.967,122,0.926,123,0.247,124,0.809,126,0.511,129,0.919,132,0.989,151,1.829,167,2.108,184,1.848,222,3.487,223,3.487,229,0.467,324,1.908,375,1.5,504,2.402,540,2.572,541,1.583,582,3.048,631,1.821,638,3.927,639,3.927,642,3.487,659,1.583,671,3.226,672,1.277,673,2.385,674,1.821,675,1.821,683,2.385,761,2.546,801,4.791,802,4.791,803,4.791,805,4.296,810,3.57,814,3.398,826,2.402,827,2.154,860,2.013,866,2.402,869,2.402,870,2.402,896,3.927,915,2.402,916,3.869,917,4.99,918,4.99,919,3.536,920,4.99,921,5.542,922,5.542,923,4.162,924,4.99,925,4.791,926,4.162,927,5.542,928,5.542,929,5.542,930,4.791,931,2.402,932,4.162,933,2.778,934,2.778,935,4.162,936,2.778,937,2.778,938,2.778,939,2.778,940,2.778,941,2.778,942,2.778,943,2.778,944,4.162,945,2.778,946,4.99,947,2.778,948,5.542,949,5.542,950,5.542,951,2.778,952,2.778,953,4.162,954,2.778,955,4.162,956,2.778,957,2.778,958,2.778,959,2.778,960,2.778,961,2.778,962,2.778,963,2.778,964,2.778,965,1.968,966,2.949,967,2.778,968,2.778,969,2.778,970,2.778,971,2.402,972,5.542,973,3.598,974,3.598,975,3.598,976,2.402,977,4.162,978,4.162,979,4.162,980,4.99,981,5.936,982,4.99,983,2.778,984,4.162,985,2.778,986,4.99,987,2.778,988,2.778,989,5.542,990,2.154,991,2.402,992,2.154,993,2.402,994,2.778,995,2.778,996,4.162,997,2.778,998,2.778,999,4.99,1000,2.778,1001,2.778,1002,4.99,1003,2.778,1004,2.778,1005,2.778,1006,2.778,1007,2.154,1008,2.402,1009,2.778,1010,2.778,1011,1.5,1012,2.778,1013,2.154,1014,2.778,1015,2.778,1016,2.778,1017,2.778,1018,2.778,1019,2.778,1020,3.598,1021,2.778,1022,2.778,1023,2.778,1024,3.598,1025,2.402,1026,2.778,1027,2.778,1028,2.778]],["title/injectables/DraftService.html",[79,0.643,223,2.066]],["body/injectables/DraftService.html",[3,0.139,4,0.139,5,0.122,7,0.131,8,0.752,13,0.718,15,0.23,16,0.017,17,0.524,18,0.717,19,0.391,20,1.874,22,0.139,24,0.572,26,1.488,27,0.289,40,3.167,77,0.011,78,0.011,79,0.866,81,1.301,86,0.488,87,1.313,90,2.871,95,0.458,96,0.712,102,0.777,103,0.734,105,0.657,115,0.903,118,0.311,120,0.75,121,1.301,122,1.246,123,0.332,124,0.896,129,0.837,168,1.052,223,2.781,250,1.299,308,2.781,324,1.144,361,3.334,375,2.018,376,2.449,505,2.53,539,3.883,543,5.098,584,2.898,601,2.648,602,3.231,604,3.231,616,3.231,761,3.009,786,5.764,814,3.727,908,3.231,916,4.927,930,4.454,965,2.648,966,3.651,990,5.168,1025,3.231,1029,3.231,1030,5.153,1031,4.454,1032,6.356,1033,5.494,1034,6.356,1035,5.153,1036,5.153,1037,6.356,1038,6.356,1039,3.231,1040,5.153,1041,5.153,1042,3.738,1043,4.454,1044,3.738,1045,3.738,1046,3.738,1047,3.738,1048,5.153,1049,3.738,1050,5.153,1051,3.738,1052,3.738,1053,3.738,1054,5.153,1055,3.738,1056,3.738,1057,4.454,1058,4.454,1059,3.738,1060,3.738,1061,3.738,1062,5.153,1063,3.738,1064,3.738,1065,3.738,1066,3.738,1067,3.738,1068,3.738,1069,3.738,1070,3.738,1071,5.153,1072,3.738,1073,3.231,1074,3.738,1075,3.738,1076,6.356,1077,3.738,1078,5.153,1079,3.738,1080,3.738,1081,3.738,1082,3.738,1083,3.738,1084,3.738,1085,3.738,1086,3.738]],["title/components/DraftsPage.html",[200,0.09,257,0.736]],["body/components/DraftsPage.html",[3,0.129,4,0.129,5,0.113,7,0.093,15,0.184,16,0.017,17,0.547,19,0.392,22,0.129,24,0.531,25,0.413,26,1.381,27,0.272,47,0.988,77,0.01,78,0.01,86,0.463,87,1.184,95,0.435,96,0.614,102,0.639,103,0.604,105,0.547,115,0.413,118,0.289,120,0.697,123,0.308,124,0.675,126,1.132,129,0.436,132,0.868,151,2.031,180,0.638,184,2.245,197,1.295,200,0.133,201,0.667,202,0.982,203,0.727,204,0.727,205,0.727,206,0.727,208,0.727,209,1.663,210,1.663,211,1.026,212,1.026,213,1.188,214,1.89,215,1.026,217,1.026,223,3.734,224,4.412,229,0.583,230,1.063,232,2.459,237,3,238,0.727,239,1.026,240,1.026,241,0.727,242,0.727,243,0.727,244,0.667,245,0.727,246,0.667,247,0.727,248,0.727,249,0.667,250,0.638,251,1.558,252,0.667,253,0.727,254,0.727,255,0.667,256,0.727,257,1.183,258,0.727,259,0.667,260,0.727,261,0.697,262,0.667,263,0.667,264,0.727,265,0.667,266,0.727,267,0.638,268,0.727,269,0.667,270,0.727,271,0.667,272,0.727,273,0.667,274,0.727,275,0.667,276,0.727,277,0.667,278,0.667,279,0.727,280,0.667,281,0.727,282,0.667,283,0.727,284,0.667,285,0.697,286,0.667,287,0.727,288,0.667,289,0.727,290,0.667,291,0.727,292,0.667,293,0.697,294,0.667,295,0.667,296,0.727,297,0.667,298,0.667,299,0.727,300,0.727,301,0.727,324,1.498,413,3.964,420,1.988,435,2.12,540,2.754,541,2.632,581,1.447,582,1.381,583,1.595,619,1.679,631,2.14,659,2.156,665,2.459,668,2.459,672,2.249,673,1.988,674,2.14,675,2.14,676,2.274,677,2.459,682,2.459,683,1.988,708,2.12,709,2.804,710,2.804,711,2.459,712,2.459,814,2.741,851,3.793,860,1.679,890,3.467,896,2.459,990,3.793,991,3,1011,1.873,1031,4.23,1033,5.32,1043,4.23,1073,4.23,1087,3,1088,5.667,1089,4.893,1090,4.23,1091,5.32,1092,3,1093,4.902,1094,3.47,1095,3.47,1096,3.47,1097,4.893,1098,3.47,1099,3,1100,3.47,1101,3.47,1102,3,1103,3,1104,3.47,1105,3.47,1106,3,1107,3,1108,3,1109,3.47,1110,3.47,1111,2.69,1112,3.47,1113,3.47,1114,2.69,1115,3,1116,3.47,1117,3.47,1118,3,1119,3,1120,2.69,1121,3,1122,2.459,1123,3,1124,2.69,1125,3,1126,3,1127,3,1128,4.893,1129,4.893,1130,4.893,1131,4.893,1132,2.69,1133,2.69]],["title/components/DrawingPadDataTypeComponent.html",[200,0.09,259,0.736]],["body/components/DrawingPadDataTypeComponent.html",[3,0.112,4,0.112,5,0.098,7,0.057,8,0.645,14,0.614,15,0.23,16,0.017,17,0.268,18,0.498,19,0.348,22,0.112,24,0.461,25,0.359,27,0.242,46,1.006,47,0.709,48,1.593,77,0.009,78,0.009,86,0.418,87,0.921,95,0.465,96,0.703,100,1.806,102,0.498,103,0.471,105,0.604,109,1.193,115,0.81,118,0.251,119,0.78,120,0.605,123,0.268,124,0.526,126,1.251,132,1.041,180,0.554,197,1.411,200,0.123,201,0.579,202,0.887,203,0.631,204,0.631,205,0.631,206,0.631,208,0.631,209,1.645,210,1.645,211,0.926,212,0.926,213,1.097,215,0.926,217,0.926,229,0.506,238,0.631,239,0.926,240,0.926,241,0.631,242,0.631,243,0.631,244,0.579,245,0.631,246,0.579,247,0.631,248,0.631,249,0.579,250,0.554,251,1.517,252,0.579,253,0.631,254,0.631,255,0.579,256,0.631,257,0.579,258,0.631,259,1.108,260,1.426,261,1.595,262,0.579,263,0.579,264,0.631,265,0.579,266,0.631,267,0.554,268,0.631,269,0.579,270,0.631,271,0.579,272,0.631,273,0.579,274,0.631,275,0.579,276,0.631,277,0.579,278,0.579,279,0.631,280,0.579,281,0.631,282,0.579,283,0.631,284,0.579,285,0.605,286,0.579,287,0.631,288,0.579,289,0.631,290,0.579,291,0.631,292,0.579,293,0.605,294,0.579,295,0.579,296,0.631,297,0.579,298,0.579,299,0.631,300,0.631,301,0.631,505,1.199,534,1.353,535,1.672,568,2.335,573,1.623,574,2.335,619,2.138,621,4.085,622,2.532,623,3.426,624,3.198,625,3.82,626,3.131,627,4.058,666,3.426,686,2.134,697,2.999,698,4.085,715,1.318,717,2.29,718,1.933,726,1.626,727,1.626,728,1.841,735,2.335,736,1.726,740,2.836,741,2.604,745,1.974,751,1.726,761,2.255,901,1.974,1107,3.82,1134,6.46,1135,5.793,1136,5.766,1137,5.234,1138,6.417,1139,5.766,1140,4.419,1141,5.766,1142,5.766,1143,5.766,1144,5.766,1145,4.419,1146,5.766,1147,2.896,1148,2.134,1149,3.013,1150,4.419,1151,3.013,1152,1.974,1153,2.604,1154,3.013,1155,4.419,1156,3.013,1157,5.234,1158,4.419,1159,2.604,1160,3.013,1161,3.013,1162,3.013,1163,4.419,1164,3.013,1165,3.013,1166,3.013,1167,3.013,1168,3.013,1169,3.013,1170,5.766,1171,3.013,1172,3.013,1173,3.013,1174,3.013,1175,3.013,1176,4.419,1177,5.234,1178,3.013,1179,4.419,1180,3.013,1181,4.419,1182,4.419,1183,3.82,1184,4.419,1185,3.013,1186,3.013,1187,3.013,1188,3.013,1189,3.013,1190,3.013,1191,4.419,1192,4.419,1193,2.134,1194,3.013,1195,3.013]],["title/components/EmailDataTypeComponent.html",[200,0.09,262,0.736]],["body/components/EmailDataTypeComponent.html",[3,0.145,4,0.145,5,0.127,7,0.074,14,0.736,15,0.227,16,0.017,17,0.346,18,0.597,19,0.366,22,0.145,24,0.596,25,0.463,27,0.252,46,1.157,47,0.85,48,1.732,77,0.011,78,0.011,86,0.501,95,0.535,96,0.675,100,1.964,102,0.438,103,0.414,105,0.535,109,1.429,115,0.63,118,0.324,119,1.007,120,0.781,123,0.346,126,1.189,129,0.488,132,1.112,180,1.336,197,1.411,200,0.141,201,0.748,202,1.063,203,0.815,204,0.815,205,0.815,206,0.815,208,0.815,209,1.677,210,1.677,211,1.11,212,1.11,213,1.262,215,1.11,217,1.11,229,0.654,238,0.815,239,1.11,240,1.11,241,0.815,242,0.815,243,0.815,244,0.748,245,0.815,246,0.748,247,0.815,248,0.815,249,0.748,250,0.715,251,1.588,252,0.748,253,0.815,254,0.815,255,0.748,256,0.815,257,0.748,258,0.815,259,0.748,260,0.815,261,0.781,262,1.242,263,0.748,264,0.815,265,0.748,266,0.815,267,0.715,268,0.815,269,0.748,270,0.815,271,0.748,272,0.815,273,0.748,274,0.815,275,0.748,276,0.815,277,0.748,278,0.748,279,0.815,280,0.748,281,0.815,282,0.748,283,0.815,284,0.748,285,0.781,286,0.748,287,0.815,288,0.748,289,0.815,290,0.748,291,0.815,292,0.748,293,0.781,294,0.748,295,0.748,296,0.815,297,0.748,298,0.748,299,0.815,300,0.815,301,0.815,488,2.014,518,2.19,530,1.979,534,1.621,535,1.923,573,1.819,715,1.701,716,2.634,717,2.634,718,2.316,722,3.126,724,2.702,726,2.858,727,2.1,728,2.376,736,2.229,739,2.702,740,1.622,751,2.229,1147,2.549,1152,2.549,1196,6.28,1197,5.631,1198,3.015]],["title/interfaces/Form.html",[0,0.991,25,0.456]],["body/interfaces/Form.html",[0,1.823,1,1.597,2,1.755,3,0.149,4,0.149,5,0.131,6,2.166,7,0.076,8,0.789,9,2.299,10,2.433,11,3.751,12,2.959,13,1.039,14,0.95,15,0.259,16,0.017,17,0.716,18,0.916,19,0.227,20,2.486,21,2.452,22,0.287,23,1.941,24,0.614,25,0.644,26,2.606,27,0.295,28,4,29,4,30,4,31,4,32,3.534,33,3.34,34,4,35,4.175,36,4.175,37,3.689,38,4.001,39,3.689,40,2.811,41,2.166,42,2.452,43,3.534,44,2.452,45,2.452,46,0.771,47,0.868,48,1.343,49,3.304,50,2.452,51,2.452,52,3.304,53,2.76,54,2.452,55,3.34,56,2.452,57,2.299,58,2.452,59,2.919,60,2.76,61,2.299,62,2.452,63,2.452,64,2.452,65,2.452,66,2.452,67,2.452,68,3.099,69,2.299,70,3.737,71,2.048,72,3.302,73,2.299,74,3.099,75,2.048,76,2.452,77,0.011,78,0.011]],["title/components/FormListComponent.html",[200,0.09,263,0.736]],["body/components/FormListComponent.html",[3,0.119,4,0.119,5,0.104,7,0.061,13,1.042,14,0.911,15,0.22,16,0.017,17,0.285,19,0.399,22,0.119,24,0.49,25,0.862,26,1.274,27,0.264,47,0.741,48,1.147,77,0.009,78,0.009,86,0.437,87,1.274,95,0.411,96,0.667,102,0.611,103,0.578,105,0.527,115,0.645,118,0.266,120,0.643,123,0.285,124,0.381,126,1.091,132,0.908,151,1.591,168,1.526,180,0.589,184,1.54,197,1.274,200,0.127,201,0.615,202,0.927,203,0.671,204,0.671,205,0.671,206,0.671,208,0.671,209,1.653,210,1.653,211,0.968,212,0.968,213,1.136,214,1.807,215,0.968,217,0.968,222,3.647,223,3.647,224,4.428,229,0.538,230,0.98,231,2.268,232,2.268,238,0.671,239,0.968,240,0.968,241,0.671,242,0.671,243,0.671,244,0.615,245,0.671,246,0.615,247,0.671,248,0.671,249,0.615,250,0.589,251,1.535,252,0.615,253,0.671,254,0.671,255,0.615,256,0.671,257,0.615,258,0.671,259,0.615,260,0.671,261,0.643,262,0.615,263,1.14,264,0.671,265,0.615,266,0.671,267,0.589,268,0.671,269,0.615,270,0.671,271,0.615,272,0.671,273,0.615,274,0.671,275,0.615,276,0.671,277,0.615,278,0.615,279,0.671,280,0.615,281,0.671,282,0.615,283,0.671,284,0.615,285,0.643,286,0.615,287,0.671,288,0.615,289,0.671,290,0.615,291,0.671,292,0.615,293,0.643,294,0.615,295,0.615,296,0.671,297,0.615,298,0.615,299,0.671,300,0.671,301,0.671,324,2.007,413,3.872,420,1.834,530,1.817,534,1.414,540,2.69,541,2.57,573,1.771,575,4.6,581,1.335,582,1.274,583,1.471,585,3.84,619,1.549,631,1.401,659,1.218,672,2.123,673,1.834,674,1.401,675,1.401,683,1.834,708,1.956,709,2.647,710,2.647,711,2.268,712,2.268,740,1.335,810,3.4,814,3.043,825,2.482,851,3.581,860,1.549,890,3.273,896,2.268,901,2.098,916,4.201,919,3.84,973,3.993,974,2.768,975,2.768,1011,1.728,1093,4.787,1099,2.768,1115,2.768,1118,2.768,1119,2.768,1120,2.482,1121,2.768,1122,2.268,1123,2.768,1124,2.482,1125,2.768,1126,2.768,1127,2.768,1132,2.482,1133,2.482,1199,6.185,1200,5.069,1201,2.768,1202,4.62,1203,5.42,1204,4.62,1205,4.62,1206,4.62,1207,5.933,1208,4.204,1209,3.202,1210,4.62,1211,4.62,1212,3.202,1213,3.202,1214,3.202,1215,4.62,1216,3.202,1217,4.62,1218,3.202,1219,3.202,1220,3.202,1221,4.62,1222,3.202,1223,3.202,1224,3.202,1225,2.768,1226,4.62,1227,4.62,1228,4.62,1229,4.62,1230,4.62,1231,2.768]],["title/injectables/FormService.html",[79,0.643,810,2.193]],["body/injectables/FormService.html",[3,0.147,4,0.147,5,0.129,7,0.075,15,0.198,16,0.017,18,0.447,19,0.419,22,0.147,24,0.607,25,0.835,27,0.255,38,3.281,39,2.14,46,1.379,77,0.011,78,0.011,79,0.902,81,1.38,86,0.508,87,1.327,90,2.212,95,0.477,96,0.644,102,0.685,103,0.648,105,0.579,109,1.97,115,0.639,118,0.33,120,0.796,121,1.38,122,1.322,123,0.352,124,0.854,126,0.729,129,0.9,146,3.393,159,2.14,160,3.281,167,2.04,171,1.822,173,3.073,174,2.14,250,1.252,360,2.809,361,3.47,366,2.14,376,2.598,377,2.809,378,2.598,379,2.809,380,2.598,381,3.073,383,2.809,387,3.073,388,3.073,391,2.809,394,3.073,395,3.073,397,3.073,398,3.073,491,2.271,505,2.42,576,2.422,789,3.073,810,3.073,814,3.529,1057,5.256,1058,3.427,1208,5.239,1232,3.073,1233,5.364,1234,5.364,1235,4.158,1236,5.364,1237,5.364,1238,5.364,1239,6.514,1240,6.514,1241,5.256,1242,5.364,1243,3.964,1244,3.964,1245,3.964,1246,3.964,1247,3.964,1248,5.364,1249,3.964,1250,3.073,1251,2.809,1252,3.964,1253,3.964,1254,5.364,1255,3.964,1256,6.08,1257,3.427,1258,3.964,1259,3.073,1260,3.073,1261,6.806,1262,3.964,1263,3.964,1264,3.964,1265,3.964,1266,4.637,1267,3.964,1268,3.964,1269,3.964,1270,5.364,1271,3.964,1272,3.964,1273,3.964,1274,3.964,1275,5.256,1276,3.964,1277,3.964,1278,3.964,1279,3.964,1280,3.964,1281,3.427,1282,3.964,1283,3.073,1284,5.364,1285,3.964,1286,3.964,1287,3.964,1288,3.964,1289,3.073]],["title/components/FormsPage.html",[200,0.09,265,0.736]],["body/components/FormsPage.html",[3,0.16,4,0.16,5,0.14,7,0.082,8,0.826,15,0.184,16,0.017,17,0.382,19,0.407,22,0.16,24,0.657,25,0.511,27,0.265,47,0.908,77,0.012,78,0.012,86,0.535,95,0.382,96,0.599,102,0.484,103,0.458,105,0.382,115,0.511,118,0.357,120,0.862,123,0.382,126,1.237,132,0.866,180,0.79,197,1.344,200,0.148,201,0.825,202,1.136,203,0.9,204,0.9,205,0.9,206,0.9,208,0.9,209,1.687,210,1.687,211,1.186,212,1.186,213,1.326,214,2.11,215,1.186,217,1.186,229,0.722,230,1.315,238,0.9,239,1.186,240,1.186,241,0.9,242,0.9,243,0.9,244,0.825,245,0.9,246,0.825,247,0.9,248,0.9,249,0.825,250,0.79,251,1.613,252,0.825,253,0.9,254,0.9,255,0.825,256,0.9,257,0.825,258,0.9,259,0.825,260,0.9,261,0.862,262,0.825,263,1.293,264,0.9,265,1.293,266,0.9,267,0.79,268,0.9,269,0.825,270,0.9,271,0.825,272,0.9,273,0.825,274,0.9,275,0.825,276,0.9,277,0.825,278,0.825,279,0.9,280,0.825,281,0.9,282,0.825,283,0.9,284,0.825,285,0.862,286,0.825,287,0.9,288,0.825,289,0.9,290,0.825,291,0.9,292,0.825,293,0.862,294,0.825,295,0.825,296,0.9,297,0.825,298,0.825,299,0.9,300,0.9,301,0.9,742,2.191,810,4.113,814,2.737,825,3.328,931,3.712,1200,3.042,1208,5.085,1225,3.712,1290,3.712,1291,6.328,1292,5.658,1293,6.726,1294,5.658,1295,4.294,1296,3.712,1297,3.712,1298,4.294]],["title/components/HomePage.html",[200,0.09,267,0.704]],["body/components/HomePage.html",[3,0.121,4,0.121,5,0.106,7,0.062,8,0.683,15,0.195,16,0.017,17,0.29,18,0.675,19,0.385,22,0.121,25,0.388,27,0.23,47,1.059,77,0.01,78,0.01,86,0.443,87,1.195,95,0.416,96,0.68,102,0.368,103,0.348,105,0.586,115,0.755,118,0.272,123,0.29,124,0.558,126,1.101,129,0.41,132,0.717,151,1.937,180,0.6,184,1.996,193,2.861,197,1.279,200,0.128,201,0.627,202,0.94,203,0.684,204,0.684,205,0.684,206,0.684,208,0.684,209,1.656,210,1.663,211,0.982,212,0.982,213,1.148,215,0.982,217,0.982,221,2.529,222,3.561,229,0.548,231,2.312,238,0.684,239,0.982,240,0.982,241,0.684,242,0.684,243,0.684,244,0.627,245,0.684,246,0.627,247,0.684,248,0.684,249,0.627,250,0.6,251,1.54,252,0.627,253,0.684,254,0.684,255,0.627,256,0.684,257,0.627,258,0.684,259,0.627,260,0.684,261,0.655,262,0.627,263,0.627,264,0.684,265,0.627,266,0.684,267,1.101,268,0.684,269,0.627,270,0.684,271,0.627,272,0.684,273,0.627,274,0.684,275,0.627,276,0.684,277,0.627,278,0.627,279,0.684,280,0.627,281,0.684,282,0.627,283,0.684,284,0.627,285,0.655,286,0.627,287,0.684,288,0.627,289,0.684,290,0.627,291,0.684,292,0.627,293,0.655,294,0.627,295,0.627,296,0.684,297,0.627,298,0.627,299,0.684,300,0.684,301,0.684,412,3.668,421,2.312,429,4.491,431,2.312,432,3.429,435,2.861,476,3.63,482,2.821,522,5.479,530,1.833,539,4.152,540,2.705,568,2.529,569,4.048,574,2.529,584,2.529,613,2.821,619,2.649,622,1.87,624,1.993,631,2.618,659,1.781,674,2.048,675,2.048,676,3.069,677,3.318,678,2.529,682,3.318,686,2.312,689,2.312,690,2.529,692,2.312,694,2.312,697,2.683,703,2.821,708,1.993,900,2.821,901,2.138,1013,2.529,1102,4.048,1103,4.048,1106,2.821,1193,2.312,1299,2.821,1300,5.478,1301,5.478,1302,4.683,1303,4.735,1304,6.597,1305,5.985,1306,5.985,1307,4.64,1308,4.683,1309,3.263,1310,3.263,1311,3.263,1312,3.263,1313,3.263,1314,3.263,1315,4.683,1316,3.263,1317,3.263,1318,2.821,1319,3.263,1320,3.263,1321,3.263,1322,4.683,1323,3.263,1324,4.683,1325,4.246,1326,3.263,1327,3.263,1328,3.63,1329,4.683,1330,3.263,1331,4.683,1332,6.338,1333,5.479,1334,2.821,1335,3.263,1336,3.263,1337,3.263,1338,4.683,1339,4.683,1340,4.048,1341,4.683,1342,4.683,1343,4.683,1344,4.683,1345,4.683,1346,4.683,1347,4.048,1348,3.263,1349,3.263,1350,3.263,1351,3.263,1352,4.683,1353,5.478,1354,2.821]],["title/components/LoginPage.html",[200,0.09,269,0.736]],["body/components/LoginPage.html",[3,0.182,4,0.129,5,0.113,7,0.066,8,0.714,13,0.666,15,0.159,16,0.017,17,0.308,19,0.381,22,0.129,25,0.732,27,0.237,47,0.909,59,1.872,60,1.769,77,0.01,78,0.01,86,0.463,87,1.082,95,0.435,96,0.582,100,1.594,102,0.391,103,0.369,105,0.435,115,0.413,118,0.289,119,0.898,123,0.308,124,0.674,126,1.131,132,0.749,151,1.663,168,0.976,180,1.131,181,3.465,184,2.394,197,1.295,200,0.133,201,0.666,202,0.982,203,0.727,204,0.727,205,0.727,206,0.727,208,0.727,209,1.663,210,1.663,211,1.025,212,1.025,213,1.187,214,1.889,215,1.025,217,1.025,229,0.822,230,1.062,238,0.727,239,1.025,240,1.025,241,0.727,242,0.727,243,0.727,244,0.666,245,0.727,246,0.666,247,0.727,248,0.727,249,0.666,250,0.638,251,1.557,252,0.666,253,0.727,254,0.727,255,0.666,256,0.727,257,0.666,258,0.727,259,0.666,260,0.727,261,0.696,262,0.666,263,0.666,264,0.727,265,0.666,266,0.727,267,0.638,268,0.727,269,1.182,270,0.727,271,0.666,272,0.727,273,0.666,274,0.727,275,0.666,276,0.727,277,0.666,278,0.666,279,0.727,280,0.666,281,0.727,282,0.666,283,0.727,284,0.666,285,0.696,286,0.666,287,0.727,288,0.666,289,0.727,290,0.666,291,0.727,292,0.666,293,0.696,294,0.666,295,0.666,296,0.727,297,0.666,298,0.666,299,0.727,300,0.727,301,0.727,412,3.733,421,2.457,428,5.004,488,1.86,505,2.449,518,2.061,530,1.884,540,2.753,573,1.376,576,3.758,577,2.837,619,2.74,621,2.457,622,3.525,624,3.461,626,2.457,631,2.139,659,2.155,673,2.802,674,2.139,675,2.139,683,2.802,687,2.688,689,2.457,692,4.013,694,2.457,695,2.688,697,1.987,698,2.457,709,1.987,710,1.987,716,2.478,790,4.897,837,2.997,852,4.013,853,2.457,857,1.987,860,2.365,876,2.997,877,4.897,902,4.227,912,3.791,1011,1.872,1193,4.013,1333,4.227,1354,4.227,1355,2.997,1356,5.665,1357,4.89,1358,3.467,1359,5.979,1360,3.467,1361,4.89,1362,3.467,1363,3.467,1364,4.89,1365,5.318,1366,4.89,1367,4.89,1368,3.467,1369,1.987,1370,2.997,1371,2.997,1372,2.997,1373,2.997,1374,3.467,1375,3.467,1376,5.665,1377,3.467,1378,2.272,1379,3.467,1380,3.467,1381,3.467,1382,4.89,1383,4.89,1384,4.89,1385,3.467,1386,3.467,1387,3.467,1388,5.665,1389,3.467,1390,2.688,1391,2.688,1392,3.467,1393,3.467,1394,3.467,1395,3.467,1396,3.467,1397,3.467,1398,2.997]],["title/components/MoneyDataTypeComponent.html",[200,0.09,271,0.736]],["body/components/MoneyDataTypeComponent.html",[3,0.113,4,0.113,5,0.099,7,0.058,8,0.651,13,0.857,14,0.62,15,0.226,16,0.017,17,0.271,18,0.785,19,0.387,22,0.113,24,0.467,25,0.363,27,0.243,46,1.013,47,0.716,48,1.6,77,0.009,78,0.009,86,0.422,87,0.784,95,0.396,96,0.67,100,1.814,102,0.503,103,0.475,105,0.515,109,1.204,115,0.363,118,0.254,119,0.79,120,0.612,123,0.271,124,0.829,126,1.067,129,0.56,132,1.083,148,5.572,151,1.702,167,1.696,168,1.255,180,0.561,184,1.934,197,1.398,200,0.124,201,0.586,202,0.895,203,0.639,204,0.639,205,0.639,206,0.639,208,0.639,209,1.647,210,1.647,211,0.935,212,0.935,213,1.105,215,0.935,217,0.935,229,0.513,230,0.934,238,0.639,239,0.935,240,1.105,241,0.639,242,0.639,243,0.639,244,0.586,245,0.639,246,0.586,247,0.639,248,0.639,249,0.586,250,0.561,251,1.52,252,0.586,253,0.639,254,0.639,255,0.586,256,0.639,257,0.586,258,0.639,259,0.586,260,0.639,261,0.612,262,0.586,263,0.586,264,0.639,265,0.586,266,0.639,267,0.561,268,0.639,269,0.586,270,0.639,271,1.115,272,1.431,273,0.586,274,0.639,275,0.586,276,0.639,277,0.586,278,0.586,279,0.639,280,0.586,281,0.639,282,0.586,283,0.639,284,0.586,285,0.612,286,0.586,287,0.639,288,0.586,289,0.639,290,0.586,291,0.639,292,0.586,293,0.612,294,0.586,295,0.586,296,0.639,297,0.586,298,0.586,299,0.639,300,0.639,301,0.639,534,1.365,535,1.684,540,2.566,573,1.633,577,3.095,591,2.69,592,2.55,594,1.999,631,1.951,659,2.532,672,2.665,674,1.951,675,1.951,715,1.334,716,2.306,717,2.306,718,1.951,722,2.805,724,2.276,739,2.276,740,2.419,767,1.863,774,2.725,777,4.043,780,4.043,857,1.748,860,2.157,1011,1.646,1147,1.999,1152,1.999,1153,2.637,1369,1.748,1378,1.999,1390,4.496,1399,6.199,1400,5.559,1401,5.272,1402,5.272,1403,5.272,1404,5.8,1405,4.496,1406,2.161,1407,6.657,1408,2.637,1409,2.637,1410,2.637,1411,3.05,1412,2.637,1413,3.05,1414,5.272,1415,5.272,1416,5.272,1417,4.46,1418,4.46,1419,4.46,1420,4.46,1421,4.46,1422,2.637,1423,3.05,1424,2.637,1425,2.637,1426,2.637,1427,3.05,1428,2.364,1429,2.364,1430,4.46,1431,5.272,1432,5.272,1433,3.855,1434,3.05,1435,2.364,1436,2.364,1437,3.457,1438,4.372,1439,3.16,1440,2.364,1441,2.364,1442,2.364,1443,3.16,1444,2.364,1445,5.272,1446,4.46,1447,5.272,1448,2.161,1449,2.161,1450,2.161]],["title/components/MonthDataTypeComponent.html",[200,0.09,273,0.736]],["body/components/MonthDataTypeComponent.html",[3,0.142,4,0.142,5,0.124,7,0.073,14,0.727,15,0.226,16,0.017,17,0.34,18,0.59,19,0.364,22,0.142,24,0.585,25,0.455,27,0.25,46,1.147,47,0.84,48,1.723,77,0.011,78,0.011,86,0.495,95,0.53,96,0.672,100,1.953,102,0.431,103,0.407,105,0.53,109,1.412,115,0.623,118,0.318,119,0.989,120,0.767,123,0.34,124,0.623,126,1.18,129,0.48,132,1.108,180,0.703,197,1.41,200,0.14,201,0.735,202,1.05,203,0.801,204,0.801,205,0.801,206,0.801,208,0.801,209,1.675,210,1.675,211,1.097,212,1.097,213,1.25,215,1.097,217,1.097,229,0.642,238,0.801,239,1.097,240,1.097,241,0.801,242,0.801,243,0.801,244,0.735,245,0.801,246,0.735,247,0.801,248,0.801,249,0.735,250,1.18,251,1.584,252,0.735,253,0.801,254,0.801,255,0.735,256,0.801,257,0.735,258,0.801,259,0.735,260,0.801,261,0.767,262,0.735,263,0.735,264,0.801,265,0.735,266,0.801,267,0.703,268,0.801,269,0.735,270,0.801,271,0.735,272,0.801,273,1.233,274,1.516,275,0.735,276,0.801,277,0.735,278,0.735,279,0.801,280,0.735,281,0.801,282,0.735,283,0.801,284,0.735,285,0.767,286,0.735,287,0.801,288,0.735,289,0.801,290,0.735,291,0.801,292,0.735,293,0.767,294,0.735,295,0.735,296,0.801,297,0.735,298,0.735,299,0.801,300,0.801,301,0.801,488,1.99,505,2.083,518,2.17,530,1.964,534,1.602,535,1.906,573,1.806,577,2.61,715,1.672,716,2.61,717,2.61,718,2.289,722,3.103,726,2.824,727,2.063,728,2.335,736,2.19,740,1.594,787,3.304,1147,2.504,1152,2.504,1451,6.253,1452,5.608,1453,5.232,1454,5.232,1455,3.822,1456,3.822,1457,3.822,1458,3.822,1459,3.822]],["title/components/MultipleComponent.html",[200,0.09,275,0.736]],["body/components/MultipleComponent.html",[1,1.219,3,0.114,4,0.114,5,0.1,7,0.058,8,0.653,10,2.293,13,1.431,14,1.041,15,0.23,16,0.017,17,0.592,18,0.798,19,0.35,22,0.114,24,0.469,25,0.365,27,0.286,46,1.016,47,0.718,48,1.602,53,1.562,77,0.009,78,0.009,86,0.423,87,1.135,95,0.47,96,0.699,100,2.173,102,0.728,103,0.688,105,0.619,109,1.207,115,0.83,118,0.255,119,0.793,120,0.615,123,0.272,124,0.872,126,1.069,129,0.776,132,1.067,168,0.862,180,0.563,197,1.262,200,0.124,201,0.589,202,0.898,203,0.642,204,0.642,205,0.642,206,0.642,208,0.642,209,1.647,210,1.647,211,0.937,212,0.937,213,1.107,214,1.762,215,0.937,217,0.937,229,0.515,230,0.937,238,0.642,239,0.937,240,1.107,241,0.642,242,0.642,243,0.642,244,0.589,245,0.642,246,0.589,247,0.642,248,0.642,249,0.589,250,0.563,251,1.521,252,0.589,253,0.642,254,0.642,255,0.589,256,0.642,257,0.589,258,0.642,259,0.589,260,0.642,261,0.615,262,0.589,263,0.589,264,0.642,265,0.589,266,0.642,267,0.563,268,0.642,269,0.589,270,0.642,271,0.589,272,0.642,273,0.589,274,0.642,275,1.117,276,0.642,277,0.589,278,0.589,279,0.642,280,0.589,281,0.642,282,0.589,283,0.642,284,0.589,285,0.615,286,0.589,287,0.642,288,0.589,289,0.642,290,0.589,291,0.642,292,0.589,293,0.615,294,0.589,295,0.589,296,0.642,297,0.589,298,0.589,299,0.642,300,0.642,301,0.642,324,1.779,488,1.701,491,2.563,518,1.922,526,4.504,530,1.779,533,3.467,534,1.369,535,1.688,573,1.636,577,2.542,591,2.282,592,2.163,594,2.006,600,2.374,605,2.374,607,4.117,608,2.169,612,2.374,716,2.311,740,2.577,747,3.866,761,1.562,767,1.871,768,3.169,1460,2.647,1461,4.472,1462,5.284,1463,4.472,1464,3.866,1465,4.472,1466,5.811,1467,4.472,1468,3.866,1469,4.472,1470,4.472,1471,3.062,1472,3.062,1473,3.062,1474,3.866,1475,3.062,1476,4.567,1477,4.472,1478,3.062,1479,3.062,1480,4.722,1481,3.062,1482,4.472,1483,3.062,1484,3.866,1485,3.062,1486,3.062,1487,4.472,1488,3.062,1489,4.472,1490,3.062,1491,4.567,1492,3.062,1493,4.472,1494,3.062,1495,3.062,1496,2.647,1497,3.062,1498,4.567,1499,2.647,1500,2.647,1501,3.062,1502,3.866,1503,3.866,1504,2.647,1505,2.647,1506,2.647,1507,2.647,1508,2.647,1509,2.647,1510,3.866,1511,3.866]],["title/components/NumberDataTypeComponent.html",[200,0.09,277,0.736]],["body/components/NumberDataTypeComponent.html",[3,0.127,4,0.127,5,0.111,7,0.065,14,0.672,15,0.224,16,0.017,17,0.625,18,0.727,19,0.346,22,0.127,24,0.523,25,0.407,27,0.256,46,1.08,47,0.777,48,1.663,77,0.01,78,0.01,86,0.458,95,0.304,96,0.666,100,1.885,102,0.545,103,0.516,105,0.543,109,1.306,115,0.407,118,0.284,119,0.884,120,0.686,123,0.304,124,0.797,126,1.124,129,0.607,132,1.077,151,1.649,167,1.84,180,0.628,184,2.038,197,1.403,200,0.132,201,0.657,202,0.971,203,0.716,204,0.716,205,0.716,206,0.716,208,0.716,209,1.661,210,1.661,211,1.014,212,1.014,213,1.178,215,1.014,217,1.014,229,0.574,238,0.716,239,1.014,240,1.178,241,0.716,242,0.716,243,0.716,244,0.657,245,0.716,246,0.657,247,0.716,248,0.716,249,0.657,250,0.628,251,1.553,252,0.657,253,0.716,254,0.716,255,0.657,256,0.716,257,0.657,258,0.716,259,0.657,260,0.716,261,0.686,262,0.657,263,0.657,264,0.716,265,0.657,266,0.716,267,0.628,268,0.716,269,0.657,270,0.716,271,0.657,272,0.716,273,0.657,274,0.716,275,0.657,276,0.716,277,1.175,278,0.657,279,0.716,280,0.657,281,0.716,282,0.657,283,0.716,284,0.657,285,0.686,286,0.657,287,0.716,288,0.657,289,0.716,290,0.657,291,0.716,292,0.657,293,0.686,294,0.657,295,0.657,296,0.716,297,0.657,298,0.657,299,0.716,300,0.716,301,0.716,518,1.243,534,1.482,535,1.795,540,2.666,573,1.72,577,3.174,591,2.867,592,2.718,594,2.238,631,2.117,659,2.62,672,2.224,674,2.117,675,2.117,715,1.494,716,2.458,717,2.458,718,2.117,722,2.956,724,2.469,729,2.953,736,2.772,739,2.469,740,2.548,742,1.743,767,2.087,768,3.428,774,2.956,777,4.389,780,4.389,857,1.957,860,2.34,1011,1.844,1369,1.957,1378,2.238,1405,4.737,1406,2.42,1408,2.953,1409,2.953,1428,2.648,1429,2.648,1435,2.648,1436,2.648,1437,3.751,1438,4.57,1439,3.428,1440,2.648,1441,2.648,1442,2.648,1443,3.428,1444,2.648,1448,2.42,1449,2.42,1450,2.42,1512,6.187,1513,5.548,1514,5.283,1515,2.953,1516,2.648,1517,3.416,1518,2.953]],["title/injectables/OfflineManagerService.html",[79,0.643,1519,2.712]],["body/injectables/OfflineManagerService.html",[0,1.084,3,0.156,4,0.156,5,0.136,7,0.08,10,1.778,15,0.203,16,0.017,17,0.372,18,0.804,19,0.419,22,0.156,26,1.667,27,0.262,32,2.261,33,2.84,77,0.011,78,0.011,79,0.935,81,1.458,86,0.527,87,1.254,90,2.593,95,0.495,96,0.63,102,0.705,103,0.666,105,0.555,118,0.349,121,1.458,122,1.396,123,0.372,124,0.663,129,0.895,146,3.518,149,4.719,151,1.835,160,3.742,167,2.117,171,1.925,173,2.4,174,2.261,197,1.299,229,0.704,325,2.026,361,3.448,380,2.744,505,1.667,659,2.117,965,2.967,966,3.943,1039,3.621,1093,5.153,1111,4.314,1114,4.314,1235,4.314,1250,3.247,1251,2.967,1391,4.314,1519,3.943,1520,4.912,1521,4.912,1522,2.967,1523,5.758,1524,5.403,1525,5.565,1526,4.188,1527,4.188,1528,4.188,1529,5.234,1530,4.188,1531,5.403,1532,4.811,1533,4.188,1534,3.621,1535,3.247,1536,4.811,1537,3.621,1538,3.621,1539,5.993,1540,3.621,1541,3.621,1542,3.621,1543,4.811,1544,3.621,1545,3.621,1546,3.621,1547,4.811,1548,4.811,1549,4.811,1550,3.621,1551,3.621,1552,3.621,1553,3.621,1554,3.621,1555,3.621,1556,3.621,1557,3.621,1558,4.811,1559,4.811,1560,3.621,1561,3.621,1562,3.621,1563,3.621,1564,3.621,1565,3.943,1566,3.621,1567,3.621,1568,4.811,1569,3.621,1570,3.247,1571,3.621,1572,3.621,1573,3.621,1574,3.621,1575,3.621,1576,3.621,1577,3.247]],["title/components/OpenComponent.html",[200,0.09,278,0.736]],["body/components/OpenComponent.html",[3,0.134,4,0.134,5,0.118,7,0.069,14,0.7,15,0.188,16,0.017,17,0.447,18,0.568,19,0.438,22,0.134,24,0.553,25,0.43,27,0.211,46,1.113,47,1.005,48,1.693,77,0.01,78,0.01,86,0.476,95,0.515,96,0.645,100,1.92,105,0.447,109,1.359,115,0.43,118,0.301,119,0.936,120,0.726,123,0.321,126,1.152,129,0.454,132,1.093,180,0.926,197,1.403,200,0.136,201,0.695,202,1.011,203,0.758,204,0.758,205,0.758,206,0.758,208,0.758,209,1.668,210,1.668,211,1.055,212,1.055,213,1.214,214,1.931,215,1.055,217,1.055,229,0.607,230,1.107,238,0.758,239,1.055,240,1.055,241,0.758,242,0.758,243,0.758,244,1.204,245,0.758,246,0.695,247,0.758,248,0.758,249,1.204,250,0.926,251,1.569,252,0.695,253,0.758,254,0.758,255,0.695,256,0.758,257,0.695,258,0.758,259,1.204,260,1.055,261,1.163,262,1.204,263,0.695,264,0.758,265,0.695,266,0.758,267,0.665,268,0.758,269,0.695,270,0.758,271,1.204,272,1.055,273,1.204,274,1.055,275,0.695,276,0.758,277,1.204,278,1.204,279,0.758,280,1.204,281,1.055,282,1.204,283,1.055,284,1.204,285,1.011,286,0.695,287,0.758,288,0.695,289,0.758,290,0.695,291,0.758,292,1.204,293,1.163,294,1.204,295,0.695,296,0.758,297,0.695,298,0.695,299,0.758,300,0.758,301,0.758,488,1.915,518,2.107,530,1.918,534,1.541,535,1.85,536,3.902,573,1.763,581,1.507,642,1.951,652,2.561,714,2.802,1135,2.802,1197,2.802,1400,2.802,1452,2.802,1513,2.802,1578,3.124,1579,5.793,1580,5.034,1581,5.416,1582,5.034,1583,3.614,1584,3.614,1585,3.614,1586,3.614,1587,2.802,1588,2.802,1589,6.413,1590,3.567,1591,2.802,1592,2.802,1593,3.614]],["title/components/PercentageDataTypeComponent.html",[200,0.09,280,0.736]],["body/components/PercentageDataTypeComponent.html",[3,0.128,4,0.128,5,0.112,7,0.066,14,0.677,15,0.225,16,0.017,17,0.306,18,0.73,19,0.348,22,0.128,24,0.528,25,0.41,27,0.257,46,1.085,47,0.781,48,1.668,77,0.01,78,0.01,86,0.461,95,0.306,96,0.667,100,1.891,102,0.549,103,0.519,105,0.545,109,1.314,115,0.41,118,0.287,119,0.892,120,0.692,123,0.306,124,0.77,126,1.128,129,0.611,132,1.08,151,1.657,180,0.634,184,2.046,197,1.403,200,0.132,201,0.662,202,0.977,203,0.722,204,0.722,205,0.722,206,0.722,208,0.722,209,1.663,210,1.663,211,1.021,212,1.021,213,1.183,215,1.021,217,1.021,229,0.579,238,0.722,239,1.021,240,1.183,241,0.722,242,0.722,243,0.722,244,0.662,245,0.722,246,0.662,247,0.722,248,0.722,249,0.662,250,0.634,251,1.556,252,0.662,253,0.722,254,0.722,255,0.662,256,0.722,257,0.662,258,0.722,259,0.662,260,0.722,261,0.692,262,0.662,263,0.662,264,0.722,265,0.662,266,0.722,267,0.634,268,0.722,269,0.662,270,0.722,271,0.662,272,0.722,273,0.662,274,0.722,275,0.662,276,0.722,277,0.662,278,0.662,279,0.722,280,1.179,281,1.478,282,0.662,283,0.722,284,0.662,285,0.692,286,0.662,287,0.722,288,0.662,289,0.722,290,0.662,291,0.722,292,0.662,293,0.692,294,0.662,295,0.662,296,0.722,297,0.662,298,0.662,299,0.722,300,0.722,301,0.722,518,1.254,534,1.491,535,1.803,540,2.674,573,1.727,577,3.02,591,2.484,592,2.355,631,2.13,659,2.626,672,2.237,674,2.13,675,2.13,715,1.507,716,2.47,717,2.47,718,2.13,722,2.967,724,2.484,727,2.628,728,2.105,739,2.484,740,2.558,742,1.758,751,1.975,767,2.105,768,3.449,774,2.974,777,4.402,780,4.402,857,1.975,860,2.355,1011,1.86,1369,1.975,1378,2.258,1405,4.756,1406,2.442,1428,2.671,1429,2.671,1435,2.671,1436,2.671,1437,3.774,1438,4.585,1439,3.449,1440,2.671,1441,2.671,1442,2.671,1443,3.449,1444,2.671,1448,2.442,1449,2.442,1450,2.442,1514,5.303,1515,2.979,1518,2.979,1591,5.559,1594,6.199,1595,3.446,1596,3.446,1597,3.446,1598,3.446]],["title/components/PhoneDataTypeComponent.html",[200,0.09,282,0.736]],["body/components/PhoneDataTypeComponent.html",[3,0.124,4,0.124,5,0.108,7,0.063,8,0.694,11,3.464,13,0.641,14,0.84,15,0.24,16,0.017,17,0.608,18,0.536,19,0.377,22,0.124,24,0.511,25,0.397,27,0.279,46,1.066,47,0.763,48,1.65,77,0.01,78,0.01,86,0.45,87,0.837,95,0.296,96,0.704,100,2.003,102,0.682,103,0.644,105,0.591,109,1.284,115,0.72,118,0.278,119,0.863,120,0.67,123,0.296,124,0.566,126,1.112,129,0.419,132,1.071,151,1.628,168,0.939,171,1.533,180,0.613,193,2.037,197,1.413,200,0.13,201,0.641,202,0.955,203,0.699,204,0.699,205,0.699,206,0.699,208,0.699,209,1.658,210,1.658,211,0.997,212,0.997,213,1.162,214,1.849,215,0.997,217,0.997,229,0.56,230,1.021,238,0.699,239,0.997,240,0.997,241,0.699,242,0.699,243,0.699,244,0.641,245,0.699,246,0.641,247,0.699,248,0.699,249,0.641,250,0.613,251,1.546,252,0.641,253,0.699,254,0.699,255,0.641,256,0.699,257,0.641,258,0.699,259,0.641,260,0.699,261,0.67,262,0.641,263,0.641,264,0.699,265,0.641,266,0.699,267,0.613,268,0.699,269,0.641,270,0.699,271,0.641,272,0.699,273,0.641,274,0.699,275,0.641,276,0.699,277,0.641,278,0.641,279,0.699,280,0.641,281,0.699,282,1.162,283,1.466,284,0.641,285,0.67,286,0.641,287,0.699,288,0.641,289,0.699,290,0.641,291,0.699,292,0.641,293,0.67,294,0.641,295,0.641,296,0.699,297,0.641,298,0.641,299,0.699,300,0.699,301,0.699,324,1.456,488,1.809,505,1.327,518,2.017,530,1.851,534,1.456,535,1.771,540,2.645,573,1.702,577,2.644,591,1.702,592,1.613,594,2.185,608,2.363,689,2.363,690,3.687,691,2.883,715,1.459,717,2.425,718,2.081,722,2.301,724,2.427,726,1.8,727,1.8,735,2.585,736,1.911,739,2.427,740,1.391,742,1.702,1108,4.112,1148,2.363,1369,1.911,1406,2.363,1480,4.283,1516,2.585,1592,5.811,1599,6.48,1600,5.545,1601,6.045,1602,5.545,1603,5.545,1604,4.757,1605,5.545,1606,4.112,1607,3.335,1608,3.335,1609,3.335,1610,4.757,1611,2.883,1612,3.335,1613,3.335,1614,5.545,1615,3.335,1616,3.335,1617,3.335,1618,3.335,1619,3.335,1620,3.335,1621,3.335,1622,4.757,1623,3.335,1624,3.335]],["title/components/PhotoDataTypeComponent.html",[200,0.09,284,0.736]],["body/components/PhotoDataTypeComponent.html",[3,0.139,4,0.139,5,0.121,7,0.071,14,0.715,15,0.224,16,0.017,17,0.332,19,0.378,22,0.139,24,0.571,25,0.444,27,0.247,46,1.132,47,0.826,48,1.71,77,0.011,78,0.011,86,0.487,95,0.332,96,0.668,100,1.939,102,0.421,103,0.398,105,0.524,109,1.389,115,0.613,118,0.31,119,0.966,120,0.749,123,0.332,126,1.168,129,0.468,132,1.101,180,0.686,193,2.279,197,1.408,200,0.138,201,0.717,202,1.033,203,0.782,204,0.782,205,0.782,206,0.782,208,0.782,209,1.672,210,1.672,211,1.079,212,1.079,213,1.235,215,1.079,217,1.079,229,0.627,238,0.782,239,1.079,240,1.079,241,0.782,242,0.782,243,0.782,244,0.717,245,0.782,246,0.717,247,0.782,248,0.782,249,0.717,250,0.686,251,1.577,252,0.717,253,0.782,254,0.782,255,0.717,256,0.782,257,0.717,258,0.782,259,0.717,260,0.782,261,0.749,262,0.717,263,0.717,264,0.782,265,0.717,266,0.782,267,0.686,268,0.782,269,0.717,270,0.782,271,0.717,272,0.782,273,0.717,274,0.782,275,0.717,276,0.782,277,0.717,278,0.717,279,0.782,280,0.717,281,0.782,282,0.717,283,0.782,284,1.221,285,1.483,286,0.717,287,0.782,288,0.717,289,0.782,290,0.717,291,0.782,292,0.717,293,0.749,294,0.717,295,0.717,296,0.782,297,0.717,298,0.717,299,0.782,300,0.782,301,0.782,488,1.957,518,2.143,530,1.944,534,1.576,535,1.882,573,1.788,581,1.556,619,2.849,621,3.646,622,2.138,623,2.892,624,2.279,626,3.646,686,2.643,697,2.949,698,2.643,715,1.632,717,2.577,718,2.251,726,2.014,727,2.014,742,1.904,751,2.138,1148,3.646,1193,2.643,1410,3.225,1422,3.225,1588,5.576,1606,3.225,1625,6.218,1626,6.351,1627,5.49,1628,3.731,1629,4.88,1630,3.731,1631,3.731,1632,3.731,1633,3.731,1634,3.731,1635,3.731,1636,3.731,1637,4.449,1638,3.731]],["title/injectables/PhotoService.html",[79,0.643,1629,2.712]],["body/injectables/PhotoService.html",[3,0.205,4,0.246,5,0.179,7,0.105,16,0.017,19,0.417,22,0.205,77,0.014,78,0.014,79,1.113,81,1.918,82,4.336,86,0.627,90,2.582,95,0.631,96,0.627,105,0.49,118,0.459,121,1.918,122,1.837,123,0.49,124,0.788,129,0.692,151,2.083,167,2.518,176,4.272,177,3.904,184,1.837,285,1.478,903,4.763,1627,6.365,1629,4.691,1639,4.763,1640,5.51,1641,5.51,1642,5.51,1643,5.51,1644,5.51,1645,4.763,1646,5.51,1647,5.51,1648,4.763,1649,5.51,1650,5.51,1651,5.51,1652,5.51,1653,5.51,1654,5.51,1655,5.51,1656,5.51]],["title/interfaces/Producer.html",[0,0.991,308,2.066]],["body/interfaces/Producer.html",[0,1.483,2,1.914,3,0.163,4,0.163,5,0.142,7,0.083,8,0.836,10,2.382,12,2.116,14,1.091,15,0.256,16,0.017,17,0.689,18,0.913,20,1.591,22,0.273,23,2.116,27,0.24,77,0.012,78,0.012,124,0.521,302,2.361,303,2.867,304,4.44,305,5.52,306,4.951,307,3.1,308,3.092,309,4.728,310,5.451,311,5.451,312,5.451,313,5.451,314,5.451,315,5.451,316,5.451,317,5.451,318,5.451,319,4.608,320,5.112,321,5.451,322,5.451,323,3.1,324,2.153,325,2.116,326,3.1,327,3.782,328,3.782,329,3.782,330,3.782,331,3.782,332,3.782,333,3.782,334,3.782,335,3.782,336,3.782,337,3.782,338,3.782,339,3.782,340,3.782,341,3.782,342,3.782,343,3.782,344,3.782,345,3.782,346,3.1,347,2.867,348,3.782,349,3.782,350,3.1,351,3.782]],["title/injectables/ProducerService.html",[79,0.643,539,2.339]],["body/injectables/ProducerService.html",[3,0.163,4,0.163,5,0.142,7,0.083,8,0.837,13,1.102,14,0.888,15,0.22,16,0.017,19,0.427,20,1.593,22,0.163,27,0.268,40,3.466,77,0.012,78,0.012,79,0.963,81,1.525,86,0.542,87,1.349,90,2.625,95,0.509,96,0.696,102,0.72,103,0.681,105,0.625,115,0.807,118,0.364,121,1.525,122,1.46,123,0.389,124,0.807,129,0.906,146,3.491,159,2.364,160,3.449,167,2.18,168,1.613,171,2.013,173,3.284,174,2.364,308,2.364,324,1.755,326,3.103,360,3.103,361,3.557,373,5.523,374,3.103,375,2.364,376,2.87,377,3.103,378,2.87,379,3.103,380,2.87,381,3.395,383,3.103,387,3.395,388,3.395,391,3.103,394,3.395,395,3.395,539,3.502,601,5.344,1251,3.103,1657,3.395,1658,6.778,1659,6.778,1660,5.732,1661,6.389,1662,6.778,1663,5.732,1664,4.38,1665,4.38,1666,5.732,1667,4.38,1668,4.38,1669,4.38,1670,4.38,1671,3.395,1672,5.732,1673,4.38,1674,4.38,1675,4.38,1676,4.38,1677,4.38,1678,3.786,1679,4.38,1680,4.38,1681,4.38,1682,4.38,1683,4.443]],["title/interfaces/Question.html",[0,0.991,46,0.736]],["body/interfaces/Question.html",[0,1.813,1,1.569,2,1.724,3,0.147,4,0.147,5,0.128,6,2.127,7,0.075,8,0.78,9,2.258,10,2.426,11,4.104,12,2.932,13,1.027,14,0.944,15,0.26,16,0.017,17,0.719,18,0.912,19,0.223,20,1.943,21,2.407,22,0.286,23,1.906,24,0.603,25,0.469,26,1.569,27,0.254,28,2.407,29,2.407,30,2.407,31,2.407,32,2.127,33,2.011,34,2.407,35,3.264,36,3.264,37,2.883,38,4.125,39,2.883,40,1.811,41,2.127,42,2.407,43,3.507,44,2.407,45,2.407,46,1.027,47,1.09,48,1.686,49,4.149,50,3.97,51,3.97,52,4.149,53,3.465,54,3.97,55,3.768,56,3.97,57,3.723,58,3.97,59,3.666,60,3.465,61,2.258,62,2.407,63,2.407,64,2.407,65,2.407,66,2.407,67,2.407,68,3.061,69,2.258,70,3.703,71,2.011,72,3.271,73,2.258,74,3.061,75,2.011,76,2.407,77,0.011,78,0.011,103,0.692]],["title/interfaces/QuestionCategory.html",[0,0.991,55,1.953]],["body/interfaces/QuestionCategory.html",[0,1.874,1,1.761,2,1.935,3,0.165,4,0.165,5,0.144,6,2.388,7,0.084,8,0.842,9,2.535,10,2.469,11,3.899,12,3.106,13,1.109,14,0.892,15,0.253,16,0.017,17,0.719,18,0.911,19,0.251,20,2.099,21,2.703,22,0.29,23,2.14,24,0.677,25,0.527,26,1.761,27,0.303,28,2.703,29,2.703,30,2.703,31,2.703,32,2.388,33,2.257,34,2.703,35,3.525,36,3.525,37,3.114,38,3.979,39,3.114,40,2.033,41,2.388,42,2.703,43,3.673,44,2.703,45,2.703,46,0.85,47,0.926,48,1.432,49,3.525,50,2.703,51,2.703,52,3.525,53,2.944,54,2.703,55,3.601,56,2.703,57,2.535,58,2.703,59,3.114,60,2.944,61,2.535,62,2.703,63,2.703,64,2.703,65,2.703,66,2.703,67,2.703,68,3.306,69,2.535,70,3.923,71,2.257,72,3.466,73,2.535,74,3.306,75,2.257,76,2.703,77,0.012,78,0.012]],["title/components/QuestionComponent.html",[200,0.09,286,0.736]],["body/components/QuestionComponent.html",[1,0.829,3,0.077,4,0.077,5,0.068,7,0.079,8,0.486,13,1.065,14,0.996,15,0.219,16,0.017,17,0.185,18,0.749,19,0.382,22,0.077,24,0.319,25,0.248,27,0.253,41,1.797,46,1.277,47,0.762,77,0.007,78,0.007,86,0.315,87,1.337,95,0.296,96,0.704,100,2.16,102,0.624,103,0.59,105,0.641,109,1.948,115,0.76,118,0.173,119,0.539,120,0.418,123,0.185,124,0.84,126,0.955,129,0.819,132,0.795,151,1.828,168,1.171,171,0.957,180,0.383,184,1.939,197,1.147,200,0.098,201,0.4,202,0.668,203,0.437,204,0.437,205,0.437,206,0.437,208,0.437,209,1.586,210,1.586,211,0.698,212,0.698,213,0.872,214,1.387,215,0.698,217,0.698,223,2.99,224,3.811,229,0.56,230,0.638,232,1.476,238,0.437,239,0.698,240,0.698,241,0.437,242,0.437,243,0.437,244,0.4,245,0.437,246,0.913,247,0.437,248,0.437,249,0.4,250,0.383,251,1.392,252,0.4,253,0.437,254,0.437,255,0.4,256,0.437,257,0.4,258,0.437,259,0.4,260,0.437,261,0.418,262,0.4,263,0.4,264,0.437,265,0.4,266,0.437,267,0.383,268,0.437,269,0.4,270,0.437,271,0.4,272,0.437,273,0.4,274,0.437,275,0.4,276,0.437,277,0.4,278,0.4,279,0.437,280,0.4,281,0.437,282,0.4,283,0.437,284,0.4,285,0.418,286,0.913,287,0.437,288,0.4,289,0.437,290,0.913,291,0.437,292,0.4,293,0.418,294,0.4,295,0.4,296,0.437,297,0.913,298,0.4,299,0.437,300,0.437,301,0.437,324,1.455,325,1.007,346,2.359,347,1.365,435,2.034,491,1.193,530,1.455,535,1.329,540,2.315,541,2.212,560,2.947,581,1.388,582,0.829,583,0.957,607,2.359,619,1.007,622,1.908,629,2.359,631,1.819,636,4.107,638,3.366,639,3.366,642,3.139,643,5.027,652,1.476,657,1.801,658,1.801,659,2.298,660,1.801,661,2.878,662,2.878,663,1.801,664,1.801,665,2.359,666,3.683,667,1.801,668,2.359,669,3.595,670,4.107,671,1.615,672,0.957,673,1.908,674,1.456,675,1.819,676,1.365,677,1.476,678,2.581,679,1.801,680,1.801,681,1.801,682,1.476,683,2.383,684,1.615,685,1.615,708,1.273,709,1.193,710,1.193,716,1.819,745,1.365,805,3.683,806,4.107,811,4.107,830,1.801,833,1.801,844,2.581,850,2.878,852,2.359,853,2.359,860,1.61,893,2.878,912,1.615,976,1.801,1007,2.581,1024,1.801,1122,2.359,1124,1.615,1259,3.224,1260,2.581,1283,3.224,1328,1.615,1359,5.027,1370,1.801,1371,1.801,1372,1.801,1373,1.801,1390,1.615,1684,1.801,1685,4.159,1686,3.329,1687,4.159,1688,4.159,1689,3.595,1690,3.683,1691,4.107,1692,4.751,1693,4.751,1694,4.751,1695,4.751,1696,5.384,1697,4.751,1698,2.878,1699,5.027,1700,4.159,1701,4.159,1702,4.159,1703,4.159,1704,2.083,1705,4.159,1706,3.329,1707,2.083,1708,2.083,1709,2.083,1710,2.083,1711,2.083,1712,2.083,1713,2.083,1714,2.083,1715,2.083,1716,2.083,1717,2.083,1718,2.083,1719,2.083,1720,2.083,1721,3.329,1722,2.083,1723,4.159,1724,2.083,1725,2.083,1726,2.083,1727,2.083,1728,2.083,1729,2.083,1730,2.083,1731,2.083,1732,2.083,1733,2.083,1734,4.159,1735,2.083,1736,2.083,1737,2.083,1738,2.083,1739,2.083,1740,3.224,1741,5.222,1742,2.083,1743,5.815,1744,4.159,1745,2.083,1746,2.083,1747,2.083,1748,2.083,1749,3.329,1750,2.083,1751,2.083,1752,4.159,1753,4.159,1754,4.159,1755,3.329,1756,2.083,1757,2.083,1758,2.083,1759,2.083,1760,2.083,1761,2.083,1762,3.595,1763,2.083,1764,2.083,1765,2.083,1766,2.083,1767,2.083,1768,2.083,1769,2.083,1770,2.083,1771,2.083,1772,2.083,1773,2.083,1774,4.751,1775,2.083,1776,2.083,1777,2.083,1778,3.329,1779,3.329,1780,2.083,1781,2.083,1782,3.329,1783,3.329,1784,3.329,1785,2.083,1786,2.083,1787,2.083,1788,2.083,1789,2.083,1790,2.083,1791,2.083,1792,2.083,1793,2.083,1794,2.083,1795,2.083,1796,1.801,1797,2.083,1798,2.083,1799,1.801,1800,2.878,1801,1.801,1802,2.083,1803,3.329,1804,2.083,1805,3.329,1806,4.159,1807,2.083,1808,2.083,1809,2.083,1810,2.083,1811,2.878,1812,2.083,1813,1.801,1814,2.083,1815,2.878,1816,2.083,1817,2.083,1818,1.801,1819,2.878,1820,1.801,1821,3.329,1822,2.083,1823,2.083,1824,2.878,1825,3.329,1826,2.083,1827,2.083,1828,2.083,1829,2.083,1830,2.083,1831,2.083,1832,1.801,1833,1.801,1834,2.083,1835,2.083,1836,2.083,1837,2.083,1838,3.329,1839,3.329,1840,2.083,1841,2.083,1842,2.083,1843,2.083,1844,2.083,1845,2.083,1846,2.083,1847,2.083,1848,2.083]],["title/injectables/QuestionControlService.html",[79,0.643,1849,2.508]],["body/injectables/QuestionControlService.html",[3,0.116,4,0.116,5,0.101,7,0.059,9,2.597,13,0.599,14,1.012,15,0.211,16,0.017,18,0.702,19,0.303,22,0.116,24,0.477,27,0.272,37,1.683,38,2.446,46,1.32,48,1.901,77,0.009,78,0.009,79,0.762,81,1.086,82,4.402,86,0.429,87,1.364,90,1.942,95,0.474,96,0.673,100,2.219,102,0.732,103,0.692,105,0.622,109,2.049,118,0.259,119,0.807,120,0.626,121,1.086,122,1.04,123,0.277,124,0.867,129,0.957,132,0.897,168,0.878,186,3.567,324,0.955,325,1.508,491,4.128,505,2.787,576,1.905,577,3.186,761,1.591,844,3.513,1007,3.513,1259,4.138,1260,2.417,1365,4.615,1369,1.786,1491,5.066,1570,2.417,1740,5.824,1799,2.695,1800,3.917,1801,2.695,1813,2.695,1815,3.917,1818,2.695,1819,3.917,1820,2.695,1824,2.695,1832,2.695,1833,2.695,1849,2.969,1850,5.585,1851,2.695,1852,5.339,1853,6.225,1854,4.532,1855,5.339,1856,4.532,1857,5.339,1858,6.225,1859,6.225,1860,4.532,1861,3.118,1862,3.118,1863,3.118,1864,3.118,1865,6.703,1866,4.532,1867,3.118,1868,3.118,1869,3.118,1870,4.532,1871,3.118,1872,3.118,1873,3.118,1874,3.118,1875,3.118,1876,4.532,1877,3.118,1878,5.86,1879,6.703,1880,3.118,1881,3.118,1882,3.118,1883,3.118,1884,3.118,1885,4.532,1886,3.118,1887,3.118,1888,3.118,1889,3.118,1890,3.118,1891,3.118,1892,3.118,1893,4.532,1894,3.118,1895,3.118,1896,3.118,1897,3.118,1898,3.118,1899,3.118,1900,3.118,1901,3.118,1902,3.118,1903,3.118,1904,3.118,1905,3.118,1906,5.86,1907,3.118,1908,3.118,1909,3.118,1910,3.118,1911,4.532,1912,3.118,1913,3.118,1914,3.118,1915,3.118,1916,3.118,1917,3.118,1918,3.118,1919,3.118,1920,3.118]],["title/injectables/QuestionService.html",[79,0.643,642,2.066]],["body/injectables/QuestionService.html",[1,1.205,3,0.113,4,0.113,5,0.098,7,0.058,8,0.647,10,0.967,13,0.582,14,0.616,15,0.238,16,0.017,17,0.66,18,0.341,19,0.364,22,0.113,24,0.463,27,0.296,37,2.394,46,1.309,77,0.009,78,0.009,79,0.745,80,4.352,81,1.054,82,4.678,84,2.144,86,0.42,87,1.36,93,3.438,94,3.438,95,0.394,96,0.722,100,2.22,102,0.796,103,0.753,105,0.665,109,2.167,113,3.438,115,0.811,116,3.438,118,0.252,119,0.784,120,0.608,121,1.054,122,1.009,123,0.269,124,0.732,129,0.953,151,0.888,168,0.852,184,1.009,325,2.145,366,1.634,412,3.585,491,4.31,535,1.417,634,4.537,637,4.995,642,2.394,653,3.833,761,2.948,925,3.833,1266,4.537,1281,5.318,1689,2.616,1696,4.537,1699,4.537,1796,3.833,1849,4.212,1921,2.616,1922,6.151,1923,5.248,1924,4.434,1925,5.779,1926,5.779,1927,4.995,1928,5.779,1929,4.434,1930,5.779,1931,5.779,1932,4.434,1933,5.248,1934,4.434,1935,4.434,1936,3.027,1937,4.434,1938,3.027,1939,3.027,1940,4.434,1941,3.027,1942,3.027,1943,3.027,1944,3.027,1945,3.027,1946,4.434,1947,3.027,1948,3.027,1949,3.027,1950,4.434,1951,3.027,1952,3.027,1953,3.027,1954,3.027,1955,4.434,1956,3.027,1957,4.434,1958,3.027,1959,4.434,1960,3.027,1961,3.027,1962,3.027,1963,3.027,1964,2.616,1965,3.027,1966,2.616,1967,3.027,1968,4.434,1969,4.434,1970,4.434,1971,3.027,1972,4.434,1973,3.027,1974,3.027,1975,3.027,1976,4.434,1977,3.027,1978,3.027,1979,4.434,1980,3.027,1981,3.027,1982,4.434,1983,4.434,1984,3.027,1985,3.833,1986,3.027,1987,3.027,1988,3.027,1989,3.027,1990,3.027,1991,4.434,1992,3.027,1993,3.027,1994,4.434,1995,3.027,1996,3.027,1997,3.027,1998,3.027,1999,3.027,2000,4.434,2001,3.027,2002,3.833,2003,3.027,2004,4.434,2005,3.027,2006,2.616,2007,2.616]],["title/injectables/SecureInnerPagesGuard.html",[79,0.643,2008,2.967]],["body/injectables/SecureInnerPagesGuard.html",[3,0.205,4,0.205,5,0.18,7,0.105,14,0.767,15,0.18,16,0.017,19,0.402,22,0.205,27,0.231,77,0.014,78,0.014,79,1.114,81,1.921,86,0.627,87,0.97,95,0.49,96,0.627,102,0.622,103,0.588,105,0.49,118,0.459,121,1.921,122,1.84,123,0.49,124,0.657,129,0.693,132,0.845,412,4.13,413,4.433,414,6.368,415,4.77,420,3.162,421,3.91,423,5.728,424,4.77,511,4.77,742,2.816,1334,4.77,2008,5.137,2009,6.139,2010,6.614,2011,6.139,2012,4.77,2013,5.518,2014,5.518]],["title/injectables/StorageService.html",[79,0.643,361,1.851]],["body/injectables/StorageService.html",[3,0.168,4,0.168,5,0.147,7,0.124,8,0.854,13,1.399,15,0.231,16,0.017,18,0.855,19,0.368,22,0.168,27,0.288,77,0.012,78,0.012,79,0.983,81,1.574,86,0.554,87,1.141,95,0.402,96,0.718,102,0.773,103,0.731,105,0.658,115,0.538,118,0.376,121,1.574,122,1.507,123,0.402,124,0.538,129,0.861,151,2.326,168,1.273,184,2.47,186,4.072,361,2.83,418,5.931,491,3.931,742,2.307,2002,6.293,2015,3.908,2016,6.488,2017,6.861,2018,7.28,2019,5.851,2020,5.851,2021,6.861,2022,4.521,2023,5.933,2024,5.851,2025,5.851,2026,4.521,2027,4.521,2028,4.521,2029,4.521,2030,5.851,2031,4.521,2032,5.851,2033,4.521,2034,4.521,2035,3.908,2036,3.908,2037,5.058,2038,3.908,2039,4.521,2040,4.521,2041,4.521,2042,4.521,2043,4.521,2044,5.851,2045,4.521,2046,4.521,2047,4.521,2048,4.521,2049,4.521,2050,4.521,2051,4.521,2052,4.521,2053,4.521,2054,4.521,2055,4.521]],["title/interfaces/StoredRequest.html",[0,0.991,1529,2.712]],["body/interfaces/StoredRequest.html",[0,1.148,2,1.94,3,0.165,4,0.165,5,0.144,7,0.084,8,0.843,10,2.256,15,0.222,16,0.017,17,0.571,18,0.843,19,0.424,22,0.165,26,1.765,32,2.393,33,2.948,77,0.012,78,0.012,79,0.971,87,1.198,90,2.102,95,0.394,118,0.369,121,1.544,122,1.478,123,0.394,124,0.688,129,0.909,146,3.109,149,5.131,151,1.302,160,3.469,167,1.687,171,2.038,173,2.541,174,2.393,197,1.33,229,0.745,325,2.145,361,3.109,380,2.906,505,1.765,659,2.198,965,3.142,966,4.094,1093,4.554,1111,4.479,1114,4.479,1235,4.479,1250,3.437,1251,3.142,1391,4.479,1519,3.142,1520,3.142,1521,3.142,1522,3.142,1523,3.833,1524,3.833,1529,5.225,1531,4.995,1532,3.833,1534,3.833,1535,3.437,1536,4.995,1537,3.833,1538,3.833,1539,6.106,1540,3.833,1541,3.833,1542,3.833,1543,4.995,1544,3.833,1545,3.833,1546,3.833,1547,4.995,1548,4.995,1549,4.995,1550,3.833,1551,3.833,1552,3.833,1553,3.833,1554,3.833,1555,3.833,1556,3.833,1557,3.833,1558,4.995,1559,6.106,1560,3.833,1561,3.833,1562,3.833,1563,3.833,1564,3.833,1565,4.094,1566,3.833,1567,3.833,1568,4.995,1569,3.833,1570,3.437,1571,3.833,1572,3.833,1573,3.833,1574,3.833,1575,3.833,1576,3.833,1577,3.437]],["title/injectables/SurveyService.html",[79,0.643,222,2.066]],["body/injectables/SurveyService.html",[3,0.133,4,0.133,5,0.117,7,0.095,8,0.73,13,0.962,14,0.913,15,0.214,16,0.017,19,0.396,22,0.133,24,0.549,27,0.242,77,0.01,78,0.01,79,0.841,81,1.248,86,0.474,87,1.359,90,2.839,95,0.445,96,0.713,102,0.65,103,0.615,105,0.651,115,0.912,118,0.298,120,0.72,121,1.248,122,1.195,123,0.319,124,0.861,129,0.824,132,0.549,146,3.29,151,1.693,159,1.935,160,2.702,167,1.904,168,1.409,171,1.647,184,1.669,222,2.702,229,0.602,324,1.532,360,2.54,361,3.377,366,2.702,374,2.54,376,2.349,377,2.54,378,2.349,391,4.086,501,3.099,503,3.099,540,2.779,631,1.568,659,1.363,673,2.054,674,1.568,675,1.568,683,2.054,814,3.643,852,2.54,853,2.54,860,1.734,919,4.423,992,4.839,1020,3.099,1122,2.54,1307,2.779,1325,2.779,1340,3.099,1535,2.779,1698,5.396,1762,3.099,2023,2.779,2056,2.779,2057,5.767,2058,6.242,2059,5.005,2060,6.242,2061,6.242,2062,5.396,2063,5.005,2064,6.242,2065,6.242,2066,6.242,2067,5.005,2068,3.584,2069,5.005,2070,7.329,2071,3.584,2072,3.584,2073,3.584,2074,3.584,2075,3.584,2076,5.005,2077,3.584,2078,3.584,2079,3.584,2080,3.584,2081,3.584,2082,3.584,2083,3.584,2084,3.584,2085,3.584,2086,5.005,2087,3.584,2088,5.005,2089,3.584,2090,6.567,2091,5.005,2092,3.584,2093,3.584,2094,3.584,2095,6.242,2096,3.584,2097,3.584,2098,3.584,2099,4.327,2100,3.584,2101,3.584,2102,3.584,2103,3.584,2104,3.584,2105,3.584,2106,3.584,2107,3.584,2108,3.584,2109,3.584,2110,5.005,2111,3.584,2112,5.005,2113,3.584,2114,3.584,2115,3.584,2116,3.584,2117,3.584,2118,3.584,2119,3.584,2120,5.005,2121,3.584,2122,3.584,2123,3.584,2124,3.099,2125,3.584,2126,3.88]],["title/components/SurveysPage.html",[200,0.09,288,0.736]],["body/components/SurveysPage.html",[3,0.123,4,0.123,5,0.108,7,0.063,15,0.154,16,0.017,17,0.295,18,0.68,19,0.396,22,0.123,24,0.508,25,0.395,26,1.321,27,0.253,47,0.761,59,1.791,60,1.693,77,0.01,78,0.01,86,0.449,87,1.167,95,0.421,96,0.661,102,0.534,103,0.505,105,0.607,115,0.658,118,0.276,120,0.666,123,0.295,124,0.79,126,1.109,129,0.801,132,0.847,180,0.61,193,2.027,197,1.283,200,0.13,201,0.638,202,0.952,203,0.695,204,0.695,205,0.695,206,0.695,208,0.695,209,1.658,210,1.658,211,0.993,212,0.993,213,1.159,214,1.843,215,0.993,217,0.993,221,2.572,222,3.581,229,0.558,230,1.016,231,2.351,236,2.868,238,0.695,239,0.993,240,0.993,241,0.695,242,0.695,243,0.695,244,0.638,245,0.695,246,0.638,247,0.695,248,0.695,249,0.638,250,0.61,251,1.545,252,0.638,253,0.695,254,0.695,255,0.638,256,0.695,257,0.638,258,0.695,259,0.638,260,0.695,261,0.666,262,0.638,263,0.911,264,0.695,265,0.638,266,0.695,267,0.61,268,0.695,269,0.638,270,0.695,271,0.638,272,0.695,273,0.638,274,0.695,275,0.638,276,0.695,277,0.638,278,0.638,279,0.695,280,0.638,281,0.695,282,0.638,283,0.695,284,0.638,285,0.666,286,0.638,287,0.695,288,1.159,289,0.695,290,0.638,291,0.695,292,0.638,293,0.666,294,0.638,295,0.638,296,0.695,297,0.638,298,0.638,299,0.695,300,0.695,301,0.695,324,1.451,413,3.913,420,1.901,541,2.598,581,1.384,582,1.321,583,1.525,619,2.292,672,2.772,697,2.716,708,2.027,709,2.716,710,2.716,711,2.351,712,2.351,814,3.646,857,1.901,890,4.273,901,2.174,919,2.351,992,5.143,993,2.868,1008,4.097,1090,4.097,1091,5.214,1120,2.572,1132,2.572,1133,2.572,1200,2.351,1231,2.868,1296,2.868,1297,2.868,1325,3.674,2062,5.214,2099,4.097,2127,2.868,2128,5.529,2129,4.739,2130,6.634,2131,6.031,2132,6.634,2133,6.031,2134,3.318,2135,3.318,2136,3.318,2137,3.318,2138,3.318,2139,3.318,2140,4.739,2141,3.318,2142,3.318,2143,6.031,2144,4.739,2145,3.318,2146,3.318,2147,3.318,2148,3.318,2149,4.739,2150,3.318,2151,3.318,2152,3.318,2153,4.739,2154,4.739,2155,4.739,2156,4.739,2157,4.739,2158,4.739,2159,4.739,2160,4.739,2161,4.739,2162,4.739,2163,4.739,2164,3.318,2165,3.318,2166,3.318,2167,3.318,2168,3.318]],["title/components/TableComponent.html",[200,0.09,290,0.736]],["body/components/TableComponent.html",[3,0.098,4,0.098,5,0.086,7,0.076,12,1.277,14,0.849,15,0.222,16,0.017,17,0.666,18,0.737,19,0.393,20,0.96,22,0.098,24,0.404,25,0.314,27,0.281,46,1.22,47,0.643,48,1.517,57,1.513,77,0.008,78,0.008,80,4.004,83,2.047,84,1.871,86,0.379,87,1.276,93,3.751,94,3.751,95,0.356,96,0.701,100,2.173,102,0.716,103,0.677,105,0.639,109,1.959,113,2.047,115,0.797,116,2.047,118,0.22,119,0.683,120,0.53,123,0.235,124,0.871,126,0.993,129,0.821,132,1.026,180,0.486,186,1.513,197,1.221,200,0.114,201,0.507,202,0.804,203,0.553,204,0.553,205,0.553,206,0.553,208,0.553,209,1.626,210,1.626,211,0.839,212,0.839,213,1.014,214,1.613,215,0.839,217,0.839,229,0.444,230,0.808,238,0.553,239,0.839,240,0.839,241,0.553,242,0.553,243,0.553,244,0.507,245,0.553,246,0.507,247,0.553,248,0.553,249,0.507,250,0.486,251,1.475,252,0.507,253,0.553,254,0.553,255,0.507,256,0.553,257,0.507,258,0.553,259,0.507,260,0.553,261,0.53,262,0.507,263,0.507,264,0.553,265,0.507,266,0.553,267,0.486,268,0.553,269,0.507,270,0.553,271,0.507,272,0.553,273,0.507,274,0.553,275,0.507,276,0.553,277,0.507,278,0.507,279,0.553,280,0.507,281,0.553,282,0.507,283,0.553,284,0.507,285,0.53,286,0.507,287,0.553,288,0.507,289,0.553,290,1.038,291,0.553,292,0.507,293,0.53,294,0.507,295,0.507,296,0.553,297,1.038,298,0.507,299,0.553,300,0.553,301,0.553,324,0.808,375,1.425,397,2.047,530,1.654,534,1.226,535,1.546,541,2.415,560,1.871,573,1.52,581,2.018,582,1.051,583,1.213,592,2.612,745,1.73,761,2.756,1241,4.669,1275,2.282,1283,3.751,1496,2.282,1589,2.282,1637,2.282,1690,4.737,1740,5.519,1811,5.019,1849,4.161,1850,2.047,1927,3.462,1964,2.282,1966,2.282,1985,4.669,2006,2.282,2007,2.282,2169,2.282,2170,3.462,2171,4.183,2172,4.839,2173,4.005,2174,5.401,2175,4.005,2176,4.839,2177,5.283,2178,5.283,2179,5.401,2180,5.401,2181,4.005,2182,2.64,2183,4.005,2184,2.64,2185,2.64,2186,2.64,2187,4.005,2188,2.64,2189,2.64,2190,2.64,2191,2.64,2192,2.64,2193,5.806,2194,2.64,2195,6.541,2196,4.005,2197,2.64,2198,2.64,2199,2.64,2200,2.64,2201,2.64,2202,2.64,2203,2.64,2204,4.005,2205,2.64,2206,2.047,2207,2.282,2208,4.005,2209,2.64,2210,4.005,2211,2.64,2212,2.64,2213,5.401,2214,2.64,2215,2.64,2216,2.64,2217,2.64,2218,2.64,2219,2.64,2220,2.64,2221,4.005,2222,2.64,2223,2.64,2224,2.64,2225,2.64,2226,2.64,2227,2.64,2228,2.64,2229,2.64,2230,2.64,2231,2.64,2232,2.64,2233,2.64,2234,2.64,2235,4.839,2236,4.005,2237,2.64,2238,2.64,2239,4.005,2240,2.64,2241,2.64,2242,4.005,2243,2.047,2244,2.64,2245,2.64,2246,2.64,2247,4.839,2248,2.64,2249,2.64,2250,2.64,2251,2.64,2252,2.64,2253,2.64,2254,4.839,2255,2.64,2256,2.64,2257,4.005]],["title/components/TextAreaDataTypeComponent.html",[200,0.09,292,0.736]],["body/components/TextAreaDataTypeComponent.html",[3,0.141,4,0.141,5,0.124,7,0.072,14,0.724,15,0.225,16,0.017,17,0.338,18,0.587,19,0.363,22,0.141,24,0.582,25,0.452,27,0.249,46,1.143,47,1.176,48,1.72,77,0.011,78,0.011,86,0.493,95,0.529,96,0.671,100,1.95,102,0.428,103,0.405,105,0.529,109,1.407,115,0.62,118,0.316,119,0.984,120,0.763,123,0.338,126,1.177,129,0.477,132,1.106,180,0.699,197,1.409,200,0.14,201,0.73,202,1.046,203,0.796,204,0.796,205,0.796,206,0.796,208,0.796,209,1.674,210,1.674,211,1.092,212,1.092,213,1.247,215,1.092,217,1.092,229,0.639,238,0.796,239,1.092,240,1.092,241,0.796,242,0.796,243,0.796,244,0.73,245,0.796,246,0.73,247,0.796,248,0.796,249,0.73,250,0.699,251,1.582,252,0.73,253,0.796,254,0.796,255,0.73,256,0.796,257,0.73,258,0.796,259,0.73,260,0.796,261,0.763,262,0.73,263,0.73,264,0.796,265,0.73,266,0.796,267,0.699,268,0.796,269,0.73,270,0.796,271,0.73,272,0.796,273,0.73,274,0.796,275,0.73,276,0.796,277,0.73,278,0.73,279,0.796,280,0.73,281,0.796,282,0.73,283,0.796,284,0.73,285,0.763,286,0.73,287,0.796,288,0.73,289,0.796,290,0.73,291,0.796,292,1.23,293,1.586,294,0.73,295,0.73,296,0.796,297,0.73,298,0.73,299,0.796,300,0.796,301,0.796,488,1.982,518,2.164,530,1.96,534,1.595,535,1.9,573,1.801,715,1.662,716,2.602,717,2.602,718,2.279,722,3.096,724,2.659,726,2.813,727,2.051,728,2.321,736,2.177,739,2.659,740,1.584,751,2.177,1147,2.49,1152,2.49,1198,2.945,1590,5.118,2258,5.6]],["title/components/TextDataTypeComponent.html",[200,0.09,294,0.736]],["body/components/TextDataTypeComponent.html",[3,0.129,4,0.129,5,0.112,7,0.066,14,0.786,15,0.225,16,0.017,17,0.434,18,0.55,19,0.392,20,1.258,22,0.129,24,0.53,25,0.412,27,0.258,46,1.087,47,1.152,48,1.67,77,0.01,78,0.01,86,0.462,87,1.241,95,0.434,96,0.679,100,1.893,102,0.55,103,0.52,105,0.576,109,1.318,115,0.732,118,0.288,119,0.895,120,0.694,123,0.307,124,0.771,126,1.13,129,0.613,132,1.099,180,0.636,197,1.407,200,0.133,201,0.665,202,0.98,203,0.725,204,0.725,205,0.725,206,0.725,208,0.725,209,1.663,210,1.663,211,1.023,212,1.023,213,1.186,215,1.023,217,1.023,229,0.581,238,0.725,239,1.023,240,1.023,241,0.725,242,0.725,243,0.725,244,0.665,245,0.725,246,0.665,247,0.725,248,0.725,249,0.665,250,0.636,251,1.557,252,0.665,253,0.725,254,0.725,255,0.665,256,0.725,257,0.665,258,0.725,259,0.665,260,0.725,261,0.694,262,0.665,263,0.665,264,0.725,265,0.665,266,0.725,267,0.636,268,0.725,269,0.665,270,0.725,271,0.665,272,0.725,273,0.665,274,0.725,275,0.665,276,0.725,277,0.665,278,0.665,279,0.725,280,0.665,281,0.725,282,0.665,283,0.725,284,0.665,285,0.694,286,0.665,287,0.725,288,0.665,289,0.725,290,0.665,291,0.725,292,0.665,293,0.694,294,1.181,295,0.665,296,0.725,297,0.665,298,0.665,299,0.725,300,0.725,301,0.725,302,3.317,319,2.266,347,2.266,352,4.223,365,4.353,366,3.317,375,1.867,488,1.856,518,2.058,530,1.881,534,1.494,535,1.807,541,2.558,573,1.73,577,2.688,580,2.681,581,1.442,582,1.377,583,1.589,591,1.765,592,1.673,715,1.513,716,2.474,717,2.474,718,2.135,722,2.972,724,2.49,725,2.45,726,1.867,739,2.49,740,1.442,745,2.266,751,1.981,1148,2.45,1198,2.681,1328,2.681,1412,2.989,1516,3.784,1590,5.154,1611,2.989,2243,2.681,2258,5.639,2259,6.145,2260,6.145,2261,3.458,2262,3.458,2263,3.458,2264,3.458,2265,4.881,2266,3.458,2267,3.458,2268,3.458,2269,3.458,2270,2.989,2271,3.458]],["title/components/TypeComponent.html",[200,0.09,297,0.736]],["body/components/TypeComponent.html",[3,0.138,4,0.138,5,0.121,7,0.071,14,0.712,15,0.216,16,0.017,17,0.522,18,0.81,19,0.413,22,0.138,24,0.568,25,0.442,27,0.215,46,1.129,47,0.823,48,1.707,77,0.011,78,0.011,86,0.485,95,0.522,96,0.698,100,1.935,105,0.611,109,1.384,115,0.442,118,0.309,119,0.96,120,0.745,123,0.33,126,1.165,129,0.835,132,1.1,180,0.682,197,1.311,200,0.149,201,0.713,202,1.029,203,0.778,204,0.778,205,0.778,206,0.778,208,0.778,209,1.671,210,1.671,211,1.074,212,1.074,213,1.231,214,1.958,215,1.074,217,1.074,229,0.623,230,1.136,238,0.778,239,1.074,240,1.074,241,0.778,242,0.778,243,0.778,244,1.218,245,0.778,246,0.713,247,0.778,248,0.778,249,0.713,250,0.682,251,1.576,252,0.713,253,0.778,254,0.778,255,0.713,256,0.778,257,0.713,258,0.778,259,0.713,260,0.778,261,0.745,262,0.713,263,0.713,264,0.778,265,0.713,266,0.778,267,0.682,268,0.778,269,0.713,270,0.778,271,0.713,272,0.778,273,0.713,274,0.778,275,1.218,276,0.778,277,0.713,278,1.218,279,0.778,280,0.713,281,0.778,282,0.713,283,0.778,284,0.713,285,0.745,286,0.713,287,0.778,288,0.713,289,0.778,290,0.713,291,0.778,292,0.713,293,0.745,294,0.713,295,0.713,296,0.778,297,1.218,298,1.218,299,0.778,300,0.778,301,0.778,488,1.95,518,2.137,530,1.94,534,1.569,535,1.876,536,2.876,573,1.783,717,2.569,718,2.242,1581,5.477,1587,2.876,1690,5.33,1691,5.477,2124,3.207,2177,5.944,2178,5.944,2272,3.207,2273,5.126,2274,3.71,2275,3.71,2276,3.71,2277,3.71,2278,3.71,2279,3.71,2280,3.71,2281,3.71,2282,3.71,2283,3.71,2284,3.71,2285,3.71,2286,3.71,2287,3.71,2288,3.71,2289,3.71,2290,3.71,2291,3.71]],["title/components/TypeaheadComponent.html",[200,0.09,295,0.736]],["body/components/TypeaheadComponent.html",[3,0.121,4,0.121,5,0.105,7,0.089,8,0.68,13,1.215,15,0.239,16,0.017,17,0.53,18,0.864,19,0.338,22,0.121,25,0.386,27,0.284,47,0.748,77,0.01,78,0.01,86,0.441,95,0.288,96,0.715,102,0.713,103,0.674,105,0.603,115,0.784,118,0.27,123,0.288,124,0.386,126,1.097,129,0.685,132,0.714,168,1.779,180,0.596,190,2.124,197,1.302,200,0.128,201,0.623,202,0.936,203,0.679,204,0.679,205,0.679,206,0.679,208,0.679,209,1.655,210,1.655,211,0.977,212,0.977,213,1.144,214,1.82,215,0.977,217,0.977,224,4.313,229,0.545,230,0.992,238,0.679,239,0.977,240,0.977,241,0.679,242,0.679,243,0.679,244,0.623,245,0.679,246,0.623,247,0.679,248,0.679,249,0.623,250,0.596,251,1.538,252,0.623,253,0.679,254,0.679,255,0.623,256,0.679,257,0.623,258,0.679,259,0.623,260,0.679,261,0.651,262,0.623,263,0.623,264,0.679,265,0.623,266,0.679,267,0.596,268,0.679,269,0.623,270,0.679,271,0.623,272,0.679,273,0.623,274,0.679,275,0.623,276,0.679,277,0.623,278,0.623,279,0.679,280,0.623,281,0.679,282,0.623,283,0.679,284,0.623,285,0.651,286,0.623,287,0.679,288,0.623,289,0.679,290,0.623,291,0.679,292,0.623,293,0.651,294,0.623,295,1.147,296,0.679,297,0.623,298,0.623,299,0.679,300,0.679,301,0.679,366,3.221,505,1.855,530,1.827,534,1.427,537,5.465,548,4.029,549,4.029,573,1.68,676,3.054,695,4.626,742,1.654,1092,2.802,1398,5.999,2171,4.718,2206,2.513,2207,2.802,2292,2.802,2293,4.661,2294,5.457,2295,4.661,2296,5.457,2297,5.457,2298,5.967,2299,5.967,2300,4.661,2301,4.661,2302,4.661,2303,4.661,2304,5.457,2305,4.661,2306,5.457,2307,5.457,2308,4.661,2309,3.241,2310,3.241,2311,3.241,2312,6.322,2313,3.241,2314,3.241,2315,3.241,2316,3.241,2317,4.661,2318,3.241,2319,4.661,2320,5.967,2321,4.661,2322,5.967,2323,6.322,2324,6.782,2325,4.661,2326,3.241,2327,4.661,2328,3.241,2329,3.241,2330,4.661,2331,3.241,2332,4.661,2333,3.241,2334,3.241,2335,5.457,2336,5.457,2337,4.661,2338,3.241,2339,3.241,2340,3.241,2341,3.241,2342,3.241,2343,3.241,2344,3.241,2345,3.241,2346,3.241,2347,3.241,2348,3.241,2349,3.241,2350,3.241,2351,3.241,2352,3.241,2353,4.661]],["title/components/UniqueComponent.html",[200,0.09,298,0.736]],["body/components/UniqueComponent.html",[1,1.427,3,0.085,4,0.085,5,0.074,7,0.044,8,0.523,10,2.138,13,1.326,14,1.024,15,0.227,16,0.017,17,0.393,18,0.852,19,0.372,20,0.832,22,0.085,24,0.35,25,0.272,27,0.275,46,0.85,47,0.575,48,1.432,53,1.167,75,3.185,77,0.007,78,0.007,86,0.339,87,1.314,95,0.319,96,0.701,100,2.171,102,0.704,103,0.665,105,0.633,109,0.968,115,0.821,118,0.19,119,0.592,120,0.459,123,0.203,124,0.91,126,0.921,129,0.866,132,1.042,168,1.009,180,0.421,186,3.455,197,1.177,200,0.104,201,0.439,202,0.72,203,0.479,204,0.479,205,0.479,206,0.479,208,0.479,209,1.602,210,1.602,211,0.751,212,0.751,213,0.927,214,1.474,215,0.751,217,0.751,229,0.384,230,0.7,238,0.479,239,0.751,240,0.751,241,0.479,242,0.479,243,0.479,244,0.962,245,0.479,246,0.439,247,0.479,248,0.479,249,0.439,250,0.421,251,1.426,252,0.439,253,0.479,254,0.479,255,0.439,256,0.479,257,0.439,258,0.479,259,0.439,260,0.479,261,0.459,262,0.439,263,0.439,264,0.479,265,0.439,266,0.479,267,0.421,268,0.479,269,0.439,270,0.479,271,0.439,272,0.479,273,0.439,274,0.479,275,0.439,276,0.479,277,0.439,278,0.439,279,0.479,280,0.439,281,0.479,282,0.439,283,0.479,284,0.439,285,0.459,286,0.439,287,0.479,288,0.439,289,0.479,290,0.439,291,0.479,292,0.439,293,0.459,294,0.439,295,0.439,296,0.479,297,0.439,298,0.962,299,0.927,300,0.479,301,0.479,302,1.234,304,3.427,319,1.498,324,1.846,352,3.058,365,1.62,366,1.234,375,1.234,488,1.363,518,1.608,526,3.88,530,1.533,533,3.427,534,1.098,535,1.412,541,2.194,560,3.852,565,1.977,573,1.409,577,2.928,580,1.773,581,1.495,582,0.91,583,1.051,591,3.185,592,3.019,597,3.099,598,1.977,599,1.977,600,1.773,605,1.773,607,3.546,608,1.62,612,1.773,642,3.255,652,1.62,659,2.068,672,1.647,716,1.934,722,2.421,724,1.829,725,1.62,739,1.829,740,2.267,761,1.167,767,1.397,774,2.701,777,3.779,780,3.779,857,1.31,1011,1.234,1013,1.773,1369,1.31,1378,1.498,1433,3.099,1438,3.852,1439,1.62,1443,1.62,1448,1.62,1449,1.62,1450,1.62,1464,3.822,1468,3.099,1474,1.977,1476,5.396,1480,3.852,1484,3.099,1498,3.822,1499,1.977,1500,1.977,1502,1.977,1503,3.099,1504,1.977,1505,1.977,1506,1.977,1507,1.977,1508,1.977,1509,1.977,1510,3.099,1511,3.099,1587,1.773,1741,1.977,2243,1.773,2270,1.977,2354,1.977,2355,4.421,2356,3.585,2357,3.585,2358,5.767,2359,5.005,2360,5.005,2361,5.005,2362,5.005,2363,3.585,2364,5.005,2365,3.585,2366,4.421,2367,3.585,2368,2.287,2369,2.287,2370,2.287,2371,2.287,2372,2.287,2373,3.585,2374,2.287,2375,1.977,2376,2.287,2377,2.287,2378,2.287,2379,2.287,2380,2.287,2381,2.287,2382,2.287,2383,2.287,2384,3.585,2385,2.287,2386,2.287,2387,2.287,2388,3.585,2389,2.287,2390,2.287,2391,2.287,2392,2.287,2393,2.287,2394,2.287,2395,2.287,2396,5.767,2397,2.287,2398,3.585,2399,2.287,2400,2.287,2401,3.585,2402,2.287,2403,2.287,2404,3.585,2405,2.287,2406,2.287,2407,3.585,2408,2.287,2409,2.287,2410,2.287,2411,2.287,2412,2.287,2413,2.287,2414,5.005,2415,5.005,2416,2.287,2417,2.287,2418,2.287,2419,3.585,2420,2.287,2421,2.287,2422,2.287,2423,2.287,2424,2.287,2425,2.287,2426,2.287,2427,2.287,2428,2.287,2429,2.287,2430,2.287,2431,2.287,2432,2.287,2433,2.287]],["title/interfaces/User.html",[0,0.991,432,2.193]],["body/interfaces/User.html",[0,1.608,2,2.173,3,0.185,4,0.185,5,0.162,7,0.095,8,0.907,10,2.336,15,0.26,16,0.017,17,0.631,18,0.919,22,0.277,23,2.402,27,0.307,77,0.013,78,0.013,115,0.591,167,1.889,180,1.372,181,3.519,188,3.519,307,5.181,309,3.255,426,3.519,427,3.519,428,3.519,429,3.519,431,3.519,432,3.884,433,6.14,434,6.14,435,4.339,436,6.14,437,6.14,438,3.519,439,4.816,440,4.294,441,4.294,442,4.294,443,4.294,444,4.294,445,4.401,446,4.294]],["title/coverage.html",[2434,4.528]],["body/coverage.html",[0,1.882,1,1.295,5,0.106,6,3.557,15,0.106,16,0.017,25,0.387,46,0.625,55,1.659,71,1.659,72,1.755,77,0.01,78,0.01,79,1.27,80,2.131,82,3.867,83,2.521,84,2.304,85,2.811,146,1.573,147,2.811,159,3.417,175,4.633,197,1.362,200,0.185,201,0.625,207,2.811,222,1.755,223,1.755,244,0.625,246,0.625,249,0.625,252,0.625,255,0.625,257,0.625,259,0.625,261,0.938,262,0.625,263,0.625,265,0.625,267,0.598,269,0.625,271,0.625,273,0.625,275,0.625,277,0.625,278,0.625,280,0.625,282,0.625,284,0.625,286,0.625,288,0.625,290,0.625,292,0.625,293,0.938,294,0.625,295,0.625,297,0.625,298,0.625,302,1.755,303,3.583,308,1.755,323,2.304,325,3.936,352,1.987,353,4.238,361,1.573,382,2.521,409,2.521,410,2.521,411,2.811,412,1.755,426,2.304,427,3.31,430,6.206,432,1.863,447,4.633,483,2.521,484,2.521,485,2.521,505,1.295,517,2.811,539,1.987,541,1.237,576,1.987,582,1.86,628,2.811,629,2.304,630,2.811,642,1.755,713,2.811,714,2.521,715,3.179,788,2.811,797,2.811,798,2.811,810,1.863,915,2.811,1029,2.811,1087,2.811,1134,2.811,1135,2.521,1196,2.811,1197,2.521,1199,2.811,1200,2.304,1201,2.811,1232,4.238,1289,2.521,1290,2.811,1299,2.811,1355,2.811,1399,2.811,1400,2.521,1451,2.811,1452,2.521,1460,2.811,1512,2.811,1513,2.521,1519,2.304,1520,3.874,1521,3.874,1522,3.874,1529,2.304,1565,2.304,1578,2.811,1588,2.521,1590,3.31,1591,2.521,1592,2.521,1594,2.811,1599,2.811,1625,2.811,1629,2.304,1639,2.811,1657,4.238,1671,2.521,1683,2.521,1684,2.811,1849,2.131,1850,2.521,1851,2.811,1921,2.811,2008,2.521,2009,2.811,2010,4.039,2011,2.811,2012,2.811,2015,2.811,2056,4.238,2126,2.521,2127,2.811,2169,2.811,2170,2.811,2258,3.622,2272,2.811,2292,2.811,2354,2.811,2434,2.811,2435,3.252,2436,3.252,2437,3.252,2438,6.33,2439,5.467,2440,5.976,2441,3.252,2442,3.252,2443,4.672,2444,3.252,2445,4.672,2446,6.789,2447,6.33,2448,5.467,2449,4.672,2450,3.252,2451,3.252,2452,3.252,2453,3.252,2454,5.976,2455,2.811,2456,7.634,2457,2.811,2458,7.857,2459,5.976,2460,5.467,2461,3.252,2462,4.672,2463,3.252,2464,3.252,2465,2.811,2466,3.252,2467,6.115,2468,2.811,2469,2.811,2470,2.811,2471,2.811,2472,2.811,2473,2.811,2474,2.811,2475,2.811,2476,2.811,2477,2.811,2478,2.811,2479,3.252]],["title/dependencies.html",[2480,2.758,2481,3.983]],["body/dependencies.html",[16,0.017,26,2.066,77,0.013,78,0.013,118,0.432,119,1.344,171,2.385,174,2.801,177,3.677,229,0.872,230,1.589,250,0.954,378,3.401,420,2.974,479,5.519,480,4.487,481,4.487,827,4.023,971,4.487,1159,4.487,1183,5.519,1318,4.487,1424,4.487,1425,4.487,1426,4.487,1645,4.487,1648,4.487,2023,4.023,2035,4.487,2036,4.487,2037,4.487,2038,4.487,2206,4.023,2481,4.487,2482,5.19,2483,7.639,2484,5.19,2485,6.384,2486,5.19,2487,5.19,2488,5.19,2489,5.19,2490,6.914,2491,7.715,2492,5.19,2493,5.19,2494,5.19,2495,5.19,2496,5.19,2497,5.19,2498,5.19,2499,5.19,2500,5.19,2501,5.19,2502,5.19,2503,6.914,2504,5.19,2505,5.19,2506,5.19,2507,5.19,2508,5.19,2509,5.19,2510,5.19,2511,5.19,2512,5.19,2513,5.19,2514,5.19,2515,5.19,2516,5.19,2517,5.19,2518,5.19,2519,5.19,2520,5.19,2521,5.19,2522,5.19,2523,5.19,2524,5.19,2525,5.19]],["title/miscellaneous/functions.html",[2526,1.949,2527,3.983]],["body/miscellaneous/functions.html",[1,2.116,7,0.101,16,0.017,25,0.633,27,0.327,40,2.443,43,2.87,46,1.022,77,0.013,78,0.013,99,4.596,102,0.88,103,0.832,104,4.596,105,0.694,109,1.435,302,2.87,308,2.87,365,3.767,382,5.022,402,4.596,432,3.046,476,4.121,483,5.022,576,3.958,814,2.572,1257,4.596,1480,3.767,1671,5.022,1678,4.596,2467,4.596,2468,5.601,2469,5.601,2470,5.601,2471,5.601,2472,5.601,2477,4.596,2478,6.041,2526,3.248,2527,4.596,2528,7.806,2529,5.316,2530,5.316,2531,5.316,2532,5.316,2533,5.316,2534,5.316,2535,5.316,2536,5.316,2537,5.316,2538,5.316]],["title/index.html",[7,0.073,2539,3.309]],["body/index.html",[2,2.732,16,0.015,77,0.015,78,0.015,81,2.175,202,1.254,2465,5.4,2539,5.4,2540,6.246,2541,6.246]],["title/modules.html",[2542,4.528]],["body/modules.html",[16,0.015,77,0.015,78,0.015,2542,5.452]],["title/properties.html",[8,0.672,2480,2.758]],["body/properties.html",[8,0.9,16,0.016,39,3.329,77,0.014,78,0.014,267,1.134,1347,5.332,2543,6.168,2544,7.074,2545,6.168,2546,6.168,2547,6.168,2548,6.168]],["title/miscellaneous/typealiases.html",[2526,1.949,2549,4.607]],["body/miscellaneous/typealiases.html",[6,3.06,7,0.108,15,0.26,16,0.014,41,3.635,43,3.635,55,2.893,61,3.859,68,3.859,69,3.859,73,3.859,74,3.859,77,0.014,78,0.014,303,3.715,322,5.22,326,4.771,350,4.771,427,4.017,438,4.771,439,5.22,445,4.771,2375,6.902,2526,3.464,2550,5.669,2551,7.778,2552,6.21,2553,7.184]],["title/miscellaneous/variables.html",[2526,1.949,2554,3.983]],["body/miscellaneous/variables.html",[7,0.083,10,1.399,13,1.518,15,0.254,16,0.017,18,0.85,25,0.761,77,0.012,78,0.012,124,0.682,132,0.671,149,4.802,159,4.109,168,2.224,175,5.782,187,3.395,303,2.87,309,2.87,310,3.395,311,3.395,312,3.395,313,3.395,314,3.395,315,3.395,316,3.395,317,3.395,318,3.395,319,2.87,320,3.103,321,3.395,323,4.061,324,2.284,325,2.118,353,3.395,354,5.523,409,4.953,413,2.509,447,3.395,484,4.443,485,4.443,486,3.786,487,5.523,541,1.666,601,4.527,789,4.953,1208,3.103,1232,3.395,1289,4.443,1303,3.786,1307,3.395,1520,3.103,1521,3.103,1522,4.061,1565,4.061,1577,3.395,1657,3.395,1683,4.953,2056,3.395,2126,4.953,2455,3.786,2457,4.955,2473,3.786,2474,3.786,2475,3.786,2476,3.786,2526,2.676,2552,3.786,2554,3.786,2555,5.732,2556,4.38,2557,6.389,2558,5.732,2559,5.732,2560,5.732,2561,4.38,2562,4.38,2563,4.38,2564,4.38,2565,4.38,2566,4.38,2567,4.38,2568,4.38,2569,4.38,2570,7.035,2571,6.778,2572,4.38,2573,5.732,2574,5.732,2575,5.732,2576,5.732,2577,5.732,2578,5.732,2579,5.732,2580,4.38,2581,4.38]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":325,"title":{},"body":{"interfaces/Association.html":{},"components/DetailedFormComponent.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Producer.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.13.0",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["0.17.3",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":1846,"title":{},"body":{"components/QuestionComponent.html":{}}}],["0.5",{"_index":1186,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["0.5em",{"_index":1842,"title":{},"body":{"components/QuestionComponent.html":{}}}],["0/1",{"_index":2458,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2440,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2447,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2444,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2462,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2439,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2443,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2445,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2461,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2450,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2442,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2464,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2451,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2463,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2441,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2459,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2438,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2454,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2460,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2449,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2446,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2448,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":761,"title":{},"body":{"components/DateDataTypeComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/MultipleComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/UniqueComponent.html":{}}}],["1).pop",{"_index":1063,"title":{},"body":{"injectables/DraftService.html":{}}}],["1)[0",{"_index":1074,"title":{},"body":{"injectables/DraftService.html":{}}}],["1.0.0",{"_index":2580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.1.2",{"_index":2543,"title":{},"body":{"properties.html":{}}}],["1.2",{"_index":1446,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["1.8.0",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":2503,"title":{},"body":{"dependencies.html":{}}}],["1/16",{"_index":2453,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1392,"title":{},"body":{"components/LoginPage.html":{}}}],["100",{"_index":698,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["100px",{"_index":1351,"title":{},"body":{"components/HomePage.html":{}}}],["100vh",{"_index":1387,"title":{},"body":{"components/LoginPage.html":{}}}],["10px",{"_index":1353,"title":{},"body":{"components/HomePage.html":{}}}],["11",{"_index":2541,"title":{},"body":{"index.html":{}}}],["11px",{"_index":1393,"title":{},"body":{"components/LoginPage.html":{}}}],["16",{"_index":2465,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["16.0.0",{"_index":2483,"title":{},"body":{"dependencies.html":{}}}],["16.1.1",{"_index":2505,"title":{},"body":{"dependencies.html":{}}}],["16.2.12",{"_index":2487,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":909,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["170",{"_index":744,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["1].value",{"_index":1825,"title":{},"body":{"components/QuestionComponent.html":{}}}],["1].value.split(':')[1",{"_index":1898,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["2",{"_index":1390,"title":{},"body":{"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/QuestionComponent.html":{}}}],["2.3.0",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["2.30.0",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":1840,"title":{},"body":{"components/QuestionComponent.html":{}}}],["200",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SurveyService.html":{}}}],["2000",{"_index":1115,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["200px",{"_index":1396,"title":{},"body":{"components/LoginPage.html":{}}}],["20px",{"_index":627,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{}}}],["22px",{"_index":910,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["26px",{"_index":907,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["29",{"_index":2540,"title":{},"body":{"index.html":{}}}],["2px",{"_index":625,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{}}}],["3.1.2",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1547,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["4",{"_index":1394,"title":{},"body":{"components/LoginPage.html":{}}}],["4.0.0",{"_index":2502,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1637,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"components/TableComponent.html":{}}}],["5.0.6",{"_index":2491,"title":{},"body":{"dependencies.html":{}}}],["5.0.7",{"_index":2492,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":2488,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":2493,"title":{},"body":{"dependencies.html":{}}}],["5.5.1",{"_index":2490,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":903,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/PhotoService.html":{}}}],["500px",{"_index":1397,"title":{},"body":{"components/LoginPage.html":{}}}],["6",{"_index":2452,"title":{},"body":{"coverage.html":{}}}],["6.1.0",{"_index":2508,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1348,"title":{},"body":{"components/HomePage.html":{}}}],["67vh",{"_index":2166,"title":{},"body":{"components/SurveysPage.html":{}}}],["7",{"_index":1080,"title":{},"body":{"injectables/DraftService.html":{}}}],["7.0.0",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["7.5.5",{"_index":2501,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["70vh",{"_index":1635,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["85",{"_index":1638,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["8c8c8c",{"_index":911,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["9.0.1",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":688,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["999999",{"_index":1388,"title":{},"body":{"components/LoginPage.html":{}}}],["_",{"_index":970,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["_.clonedeep(this.selectedform",{"_index":1021,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["_storage",{"_index":2016,"title":{},"body":{"injectables/StorageService.html":{}}}],["abierta",{"_index":1801,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["absolute",{"_index":899,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["abstractcontrol",{"_index":1491,"title":{},"body":{"components/MultipleComponent.html":{},"injectables/QuestionControlService.html":{}}}],["acceder",{"_index":1123,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["acción",{"_index":1105,"title":{},"body":{"components/DraftsPage.html":{}}}],["accordion::part(content",{"_index":2164,"title":{},"body":{"components/SurveysPage.html":{}}}],["action",{"_index":1558,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["actual_component",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["add",{"_index":1284,"title":{},"body":{"injectables/FormService.html":{}}}],["addnetworkchangelistener",{"_index":2058,"title":{},"body":{"injectables/SurveyService.html":{}}}],["addphone",{"_index":1603,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["addsection",{"_index":2174,"title":{},"body":{"components/TableComponent.html":{}}}],["agregar",{"_index":1622,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["ajustes",{"_index":856,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["al",{"_index":1124,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{}}}],["alert",{"_index":673,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["alert.present",{"_index":683,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["alertcontroller",{"_index":540,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["alertshown",{"_index":1687,"title":{},"body":{"components/QuestionComponent.html":{}}}],["aliases",{"_index":2550,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":694,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{}}}],["altitud",{"_index":34,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["altitude",{"_index":874,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["angular",{"_index":2036,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2482,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":170,"title":{},"body":{"injectables/ApiService.html":{}}}],["angular/compiler",{"_index":2484,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":118,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":119,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2485,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":420,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"injectables/SecureInnerPagesGuard.html":{},"components/SurveysPage.html":{},"dependencies.html":{}}}],["angular/template",{"_index":2504,"title":{},"body":{"dependencies.html":{}}}],["angular/template/for",{"_index":2207,"title":{},"body":{"components/TableComponent.html":{},"components/TypeaheadComponent.html":{}}}],["answer",{"_index":1,"title":{"interfaces/Answer.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AutocompleteComponent.html":{},"interfaces/Form.html":{},"components/MultipleComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["answer.checked",{"_index":1817,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answer.id.tostring",{"_index":600,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answer.value",{"_index":607,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/QuestionComponent.html":{},"components/UniqueComponent.html":{}}}],["answer.value.split(\":\")[0",{"_index":1511,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answer.value.tolowercase",{"_index":2411,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answer_id",{"_index":76,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["answerbuilder",{"_index":2468,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["answerbuilder(answer",{"_index":2530,"title":{},"body":{"miscellaneous/functions.html":{}}}],["answerformgroupkey",{"_index":2220,"title":{},"body":{"components/TableComponent.html":{}}}],["answergroup",{"_index":1476,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answergroup.get",{"_index":2431,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answergroup.get('other",{"_index":2415,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answergroup.get('other')?.disable",{"_index":1505,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answergroup.get('other')?.enable",{"_index":1504,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answergroup.get('other')?.setvalue(othervalue",{"_index":1501,"title":{},"body":{"components/MultipleComponent.html":{}}}],["answergroup.get('other')?.value",{"_index":1499,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answerid",{"_index":75,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/UniqueComponent.html":{}}}],["answeridtocheck",{"_index":2404,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answerlength",{"_index":50,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["answerpivot",{"_index":72,"title":{"interfaces/AnswerPivot.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"coverage.html":{}}}],["answerpivotbuilder",{"_index":2469,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["answerpivotbuilder(pivot",{"_index":2531,"title":{},"body":{"miscellaneous/functions.html":{}}}],["answerpivotresponse",{"_index":74,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["answerrelation",{"_index":71,"title":{"interfaces/AnswerRelation.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"coverage.html":{}}}],["answerrelation.every",{"_index":134,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["answerrelation.some",{"_index":137,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["answerrelation[0]?.answerpivot.type",{"_index":128,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["answerrelationbuilder",{"_index":2470,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["answerrelationbuilder(relation",{"_index":2533,"title":{},"body":{"miscellaneous/functions.html":{}}}],["answerrelationresponse",{"_index":73,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["answerrelationservice",{"_index":80,"title":{"injectables/AnswerRelationService.html":{}},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["answerrelationtype",{"_index":127,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["answerresponse",{"_index":69,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["answers",{"_index":53,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AutocompleteComponent.html":{},"interfaces/Form.html":{},"components/MultipleComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/UniqueComponent.html":{}}}],["answers.map((answer",{"_index":606,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["answers[answers.length",{"_index":1507,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answers_relation",{"_index":66,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["answerscontrols",{"_index":2218,"title":{},"body":{"components/TableComponent.html":{}}}],["answerscontrols[0",{"_index":2222,"title":{},"body":{"components/TableComponent.html":{}}}],["answerscontrols[1",{"_index":2223,"title":{},"body":{"components/TableComponent.html":{}}}],["answersformgroup",{"_index":560,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/QuestionComponent.html":{},"components/TableComponent.html":{},"components/UniqueComponent.html":{}}}],["answersformgroup.controls",{"_index":597,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/UniqueComponent.html":{}}}],["answersformgroup.controls['other'].value",{"_index":1822,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answersformgroup.controls[answer.id.tostring()].value",{"_index":1816,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answersformgroup.controls[key].setvalue(!value",{"_index":2400,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answersformgroup.controls[key].setvalue(false",{"_index":615,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["answersformgroup.controls[key].setvalue(true",{"_index":614,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["answersformgroup.controls[key].setvalue(value",{"_index":2399,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answersformgroup.controls[key].value",{"_index":598,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/UniqueComponent.html":{}}}],["answersformgroup.get(answerformgroupkey)?.setvalue(true",{"_index":2224,"title":{},"body":{"components/TableComponent.html":{}}}],["answersgroup",{"_index":1834,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answersgroup.controls[answer.order].value",{"_index":1835,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answersrelation",{"_index":56,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["answervalue",{"_index":2396,"title":{},"body":{"components/UniqueComponent.html":{}}}],["anterior",{"_index":1838,"title":{},"body":{"components/QuestionComponent.html":{}}}],["api",{"_index":1546,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["api/api.service",{"_index":374,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["apiservice",{"_index":146,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["app",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["app.component.html",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["app.getinfo().then((info",{"_index":1321,"title":{},"body":{"components/HomePage.html":{}}}],["appcomponent",{"_index":201,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["application/json",{"_index":194,"title":{},"body":{"injectables/ApiService.html":{}}}],["appversion",{"_index":1303,"title":{},"body":{"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["ar.questionid",{"_index":2239,"title":{},"body":{"components/TableComponent.html":{}}}],["area",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["areselected",{"_index":88,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["areselected(relation",{"_index":98,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["array",{"_index":38,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{}}}],["array.push(formgroup",{"_index":1904,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["asistencia",{"_index":333,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["asociacion",{"_index":348,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["asociación",{"_index":2266,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["assignbeneficiary",{"_index":524,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["assignbeneficiary(id",{"_index":551,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["assignformcontrols",{"_index":1852,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["assignformcontrols(question",{"_index":1862,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["assoaciationservice",{"_index":2366,"title":{},"body":{"components/UniqueComponent.html":{}}}],["association",{"_index":302,"title":{"interfaces/Association.html":{}},"body":{"interfaces/Association.html":{},"injectables/AssociationService.html":{},"interfaces/Producer.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["association!.farming",{"_index":2410,"title":{},"body":{"components/UniqueComponent.html":{}}}],["association.id",{"_index":408,"title":{},"body":{"injectables/AssociationService.html":{}}}],["association_id",{"_index":345,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["associationbuilder",{"_index":382,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["associationbuilder(association",{"_index":402,"title":{},"body":{"injectables/AssociationService.html":{},"miscellaneous/functions.html":{}}}],["associationfarming",{"_index":2409,"title":{},"body":{"components/UniqueComponent.html":{}}}],["associationfarming.tolowercase",{"_index":2412,"title":{},"body":{"components/UniqueComponent.html":{}}}],["associationid",{"_index":319,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["associationresponse",{"_index":350,"title":{},"body":{"interfaces/Association.html":{},"injectables/AssociationService.html":{},"interfaces/Producer.html":{},"miscellaneous/typealiases.html":{}}}],["associationresponse.map",{"_index":401,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associations",{"_index":354,"title":{},"body":{"injectables/AssociationService.html":{},"miscellaneous/variables.html":{}}}],["associations_storage_key",{"_index":409,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["associationsendpoint",{"_index":2576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associationservice",{"_index":352,"title":{"injectables/AssociationService.html":{}},"body":{"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["async",{"_index":151,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/PhotoService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["at_p5",{"_index":332,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["atención",{"_index":1758,"title":{},"body":{"components/QuestionComponent.html":{}}}],["atleastonechecked",{"_index":1853,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["auth/auth.service",{"_index":1965,"title":{},"body":{"injectables/QuestionService.html":{}}}],["auth/login",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth0/angular",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["authendpoint",{"_index":2573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":431,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"interfaces/User.html":{}}}],["authentication.authmanagement",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication.authparams",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication.authresponse",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication.user",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{},"miscellaneous/functions.html":{}}}],["authguard",{"_index":410,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["authmanagement",{"_index":426,"title":{"interfaces/AuthManagement.html":{}},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["author",{"_index":2547,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":195,"title":{},"body":{"injectables/ApiService.html":{}}}],["authparams",{"_index":445,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["authresponse",{"_index":438,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["authservice",{"_index":412,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["autocomplete",{"_index":519,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["autocomplete'},{'name",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["autocomplete.component.html",{"_index":521,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["autocomplete.component.scss",{"_index":520,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["autocomplete/autocomplete.component",{"_index":1587,"title":{},"body":{"components/OpenComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["autocompletecomponent",{"_index":244,"title":{"components/AutocompleteComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["await",{"_index":184,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"injectables/PhotoService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{}}}],["back",{"_index":635,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["backbuttonsubscription",{"_index":1688,"title":{},"body":{"components/QuestionComponent.html":{}}}],["background",{"_index":1193,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["bar",{"_index":2500,"title":{},"body":{"dependencies.html":{}}}],["base",{"_index":1275,"title":{},"body":{"injectables/FormService.html":{},"components/TableComponent.html":{}}}],["base.foreach((q",{"_index":2237,"title":{},"body":{"components/TableComponent.html":{}}}],["base.foreach((question",{"_index":2234,"title":{},"body":{"components/TableComponent.html":{}}}],["base.push(q",{"_index":1285,"title":{},"body":{"injectables/FormService.html":{}}}],["base64data",{"_index":1184,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["basearraycopy",{"_index":2226,"title":{},"body":{"components/TableComponent.html":{}}}],["bearer",{"_index":196,"title":{},"body":{"injectables/ApiService.html":{}}}],["behaviorsubject",{"_index":1614,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["behaviorsubject(this.phones",{"_index":1617,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["beneficiario",{"_index":999,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["beneficiary",{"_index":20,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["beneficiary.association",{"_index":365,"title":{},"body":{"injectables/AssociationService.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["beneficiary.associationresponse",{"_index":396,"title":{},"body":{"injectables/AssociationService.html":{}}}],["beneficiary.namespace",{"_index":21,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["beneficiary.producer",{"_index":40,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AutocompleteComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"interfaces/Form.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/functions.html":{}}}],["beneficiary.producerresponse",{"_index":1675,"title":{},"body":{"injectables/ProducerService.html":{}}}],["beneficiary.selectedquestions",{"_index":2211,"title":{},"body":{"components/TableComponent.html":{}}}],["beneficiary.specialized",{"_index":1070,"title":{},"body":{"injectables/DraftService.html":{}}}],["blaucast",{"_index":1384,"title":{},"body":{"components/LoginPage.html":{}}}],["boolean",{"_index":14,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/SurveyService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["booleanattribute",{"_index":575,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/FormListComponent.html":{}}}],["border",{"_index":621,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["borrador",{"_index":668,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/QuestionComponent.html":{}}}],["borradores",{"_index":1339,"title":{},"body":{"components/HomePage.html":{}}}],["bottom",{"_index":1391,"title":{},"body":{"components/LoginPage.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["break",{"_index":1803,"title":{},"body":{"components/QuestionComponent.html":{}}}],["browser",{"_index":1183,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"dependencies.html":{}}}],["builtform",{"_index":1256,"title":{},"body":{"injectables/FormService.html":{}}}],["builtform.fechadescarga",{"_index":1267,"title":{},"body":{"injectables/FormService.html":{}}}],["builtform.questions",{"_index":1264,"title":{},"body":{"injectables/FormService.html":{}}}],["builtform.questions.filter",{"_index":1265,"title":{},"body":{"injectables/FormService.html":{}}}],["builtform.questions.foreach((question",{"_index":1258,"title":{},"body":{"injectables/FormService.html":{}}}],["button",{"_index":1389,"title":{},"body":{"components/LoginPage.html":{}}}],["button[slot='fixed",{"_index":1195,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["buttons",{"_index":675,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["camera",{"_index":1642,"title":{},"body":{"injectables/PhotoService.html":{}}}],["camera.getphoto",{"_index":1651,"title":{},"body":{"injectables/PhotoService.html":{}}}],["cameraresulttype",{"_index":1643,"title":{},"body":{"injectables/PhotoService.html":{}}}],["cameraresulttype.base64",{"_index":1653,"title":{},"body":{"injectables/PhotoService.html":{}}}],["camerasource",{"_index":1644,"title":{},"body":{"injectables/PhotoService.html":{}}}],["camerasource.camera",{"_index":1654,"title":{},"body":{"injectables/PhotoService.html":{}}}],["campo",{"_index":2426,"title":{},"body":{"components/UniqueComponent.html":{}}}],["canactivate",{"_index":414,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["cancel",{"_index":677,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{}}}],["cancelar",{"_index":676,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{},"components/TypeaheadComponent.html":{}}}],["cancelchanges",{"_index":2298,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["canset",{"_index":984,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["canvas",{"_index":1136,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["capacitor/android",{"_index":2489,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":1318,"title":{},"body":{"components/HomePage.html":{},"dependencies.html":{}}}],["capacitor/camera",{"_index":1645,"title":{},"body":{"injectables/PhotoService.html":{},"dependencies.html":{}}}],["capacitor/core",{"_index":174,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{},"dependencies.html":{}}}],["capacitor/filesystem",{"_index":1648,"title":{},"body":{"injectables/PhotoService.html":{},"dependencies.html":{}}}],["capacitor/geolocation",{"_index":827,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"dependencies.html":{}}}],["capacitor/haptics",{"_index":2494,"title":{},"body":{"dependencies.html":{}}}],["capacitor/ios",{"_index":2495,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":2496,"title":{},"body":{"dependencies.html":{}}}],["capacitor/network",{"_index":378,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{},"dependencies.html":{}}}],["capacitor/preferences",{"_index":177,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/PhotoService.html":{},"dependencies.html":{}}}],["capacitor/splash",{"_index":2497,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":2499,"title":{},"body":{"dependencies.html":{}}}],["capacitorhttp",{"_index":172,"title":{},"body":{"injectables/ApiService.html":{}}}],["capacitorhttp.post(options",{"_index":199,"title":{},"body":{"injectables/ApiService.html":{}}}],["capital",{"_index":1752,"title":{},"body":{"components/QuestionComponent.html":{}}}],["capturedphoto",{"_index":1650,"title":{},"body":{"injectables/PhotoService.html":{}}}],["capturedphoto.base64string",{"_index":1656,"title":{},"body":{"injectables/PhotoService.html":{}}}],["card",{"_index":1395,"title":{},"body":{"components/LoginPage.html":{}}}],["cargando",{"_index":1372,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["cargo",{"_index":1345,"title":{},"body":{"components/HomePage.html":{}}}],["casa",{"_index":339,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["case",{"_index":1800,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["catch",{"_index":876,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{}}}],["catch((err",{"_index":1017,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["catcherror",{"_index":2082,"title":{},"body":{"injectables/SurveyService.html":{}}}],["catcherror((error",{"_index":2106,"title":{},"body":{"injectables/SurveyService.html":{}}}],["category",{"_index":2536,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cedula",{"_index":309,"title":{},"body":{"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Producer.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["center",{"_index":692,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{}}}],["cerrar",{"_index":1332,"title":{},"body":{"components/HomePage.html":{}}}],["changed",{"_index":2089,"title":{},"body":{"injectables/SurveyService.html":{}}}],["changeinputstate",{"_index":1464,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["changeinputstate(answergroup",{"_index":1474,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["changequestionid",{"_index":2175,"title":{},"body":{"components/TableComponent.html":{}}}],["changequestionid(base",{"_index":2187,"title":{},"body":{"components/TableComponent.html":{}}}],["changespecialized",{"_index":1030,"title":{},"body":{"injectables/DraftService.html":{}}}],["changespecialized(producer",{"_index":1041,"title":{},"body":{"injectables/DraftService.html":{}}}],["changesyncstatus",{"_index":2059,"title":{},"body":{"injectables/SurveyService.html":{}}}],["changesyncstatus(survey",{"_index":2069,"title":{},"body":{"injectables/SurveyService.html":{}}}],["check",{"_index":2345,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["checkandrelation",{"_index":89,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkandrelation(answerrelation",{"_index":106,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkanswer",{"_index":1465,"title":{},"body":{"components/MultipleComponent.html":{}}}],["checkanswer(event",{"_index":1477,"title":{},"body":{"components/MultipleComponent.html":{}}}],["checkanswerrelation",{"_index":91,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkanswerrelation(question",{"_index":108,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkbox",{"_index":1910,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["checkboxes",{"_index":1913,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["checkboxvalues",{"_index":1907,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["checkboxvalues.includes(true",{"_index":1909,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["checked",{"_index":9,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{}}}],["checkedanswersrelation",{"_index":1985,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["checkforevents",{"_index":1523,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["checkorrelation",{"_index":92,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkorrelation(answerrelation",{"_index":111,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkphonelistlength",{"_index":1604,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["checkphonelistlength(phones",{"_index":1608,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["child",{"_index":1280,"title":{},"body":{"injectables/FormService.html":{}}}],["childindex",{"_index":2193,"title":{},"body":{"components/TableComponent.html":{}}}],["childquestion",{"_index":2247,"title":{},"body":{"components/TableComponent.html":{}}}],["children",{"_index":1261,"title":{},"body":{"injectables/FormService.html":{}}}],["children.push(base",{"_index":1286,"title":{},"body":{"injectables/FormService.html":{}}}],["class",{"_index":123,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["clearpad",{"_index":1139,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["cm_p5",{"_index":338,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["color",{"_index":622,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{}}}],["comenzar",{"_index":895,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["commonmodule",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/LoginPage.html":{},"components/MultipleComponent.html":{},"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["como",{"_index":667,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["compatible",{"_index":1121,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["component",{"_index":200,"title":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["componente",{"_index":1764,"title":{},"body":{"components/QuestionComponent.html":{}}}],["components",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"index.html":{}}}],["components/detailed",{"_index":795,"title":{},"body":{"components/DetailPage.html":{}}}],["components/form",{"_index":1296,"title":{},"body":{"components/FormsPage.html":{},"components/SurveysPage.html":{}}}],["components/header/dataquest",{"_index":829,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["components/question/question.component",{"_index":828,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["components/typeahead/typeahead.component",{"_index":579,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["con",{"_index":844,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["conexión",{"_index":2119,"title":{},"body":{"injectables/SurveyService.html":{}}}],["confirm",{"_index":680,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["confirmchanges",{"_index":2299,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["confirmexit",{"_index":636,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["console.error(error",{"_index":2107,"title":{},"body":{"injectables/SurveyService.html":{}}}],["console.log",{"_index":873,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["console.log('associationresponse",{"_index":399,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log('date",{"_index":763,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["console.log('enabled",{"_index":2256,"title":{},"body":{"components/TableComponent.html":{}}}],["console.log('formcontrol",{"_index":749,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["console.log('index",{"_index":2054,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('key",{"_index":2053,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('make",{"_index":1569,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["console.log('network",{"_index":2088,"title":{},"body":{"injectables/SurveyService.html":{}}}],["console.log('no",{"_index":1551,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["console.log('online",{"_index":2091,"title":{},"body":{"injectables/SurveyService.html":{}}}],["console.log('selectedanswer",{"_index":2225,"title":{},"body":{"components/TableComponent.html":{}}}],["console.log('selectedanswers",{"_index":2215,"title":{},"body":{"components/TableComponent.html":{}}}],["console.log('status",{"_index":389,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log('storage",{"_index":2044,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('stringdate",{"_index":752,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["console.log('syncassociations",{"_index":393,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log('value",{"_index":2055,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(associationresponse",{"_index":400,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log(event",{"_index":1180,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["console.log(position.coords",{"_index":867,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["console.log(response",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SurveyService.html":{}}}],["console.log(status.connected",{"_index":390,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log(this.associations",{"_index":386,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log(this.filteredquestions",{"_index":1974,"title":{},"body":{"injectables/QuestionService.html":{}}}],["console.log(updatedsurveys",{"_index":2116,"title":{},"body":{"injectables/SurveyService.html":{}}}],["console.log(years",{"_index":782,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["const",{"_index":124,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":95,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["constructor(alertcontroller",{"_index":1406,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{}}}],["constructor(answerrelationservice",{"_index":2182,"title":{},"body":{"components/TableComponent.html":{}}}],["constructor(apiservice",{"_index":360,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["constructor(authservice",{"_index":415,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["constructor(detailedformservice",{"_index":725,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["constructor(draftservice",{"_index":1704,"title":{},"body":{"components/QuestionComponent.html":{}}}],["constructor(fb",{"_index":1358,"title":{},"body":{"components/LoginPage.html":{}}}],["constructor(formservice",{"_index":931,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormsPage.html":{}}}],["constructor(formsservice",{"_index":1209,"title":{},"body":{"components/FormListComponent.html":{}}}],["constructor(httpclient",{"_index":153,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(photoservice",{"_index":1628,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["constructor(platform",{"_index":1092,"title":{},"body":{"components/DraftsPage.html":{},"components/TypeaheadComponent.html":{}}}],["constructor(private",{"_index":742,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/FormsPage.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"components/TypeaheadComponent.html":{}}}],["constructor(producersservice",{"_index":538,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["constructor(public",{"_index":422,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(questioncontrolservice",{"_index":1936,"title":{},"body":{"injectables/QuestionService.html":{}}}],["constructor(questionservice",{"_index":641,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["constructor(router",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(storage",{"_index":2022,"title":{},"body":{"injectables/StorageService.html":{}}}],["constructor(storageservice",{"_index":1039,"title":{},"body":{"injectables/DraftService.html":{},"injectables/OfflineManagerService.html":{}}}],["constructor(surveyservice",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/SurveysPage.html":{}}}],["contain",{"_index":2347,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["container",{"_index":687,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/LoginPage.html":{}}}],["container's",{"_index":707,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["content",{"_index":193,"title":{},"body":{"injectables/ApiService.html":{},"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/SurveysPage.html":{}}}],["continuación",{"_index":1760,"title":{},"body":{"components/QuestionComponent.html":{}}}],["continuar",{"_index":1782,"title":{},"body":{"components/QuestionComponent.html":{}}}],["contraseña",{"_index":1380,"title":{},"body":{"components/LoginPage.html":{}}}],["control",{"_index":1456,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["control.service",{"_index":1964,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["control.service.ts",{"_index":1851,"title":{},"body":{"injectables/QuestionControlService.html":{},"coverage.html":{}}}],["control.service.ts:103",{"_index":1867,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:127",{"_index":1864,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:140",{"_index":1874,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:155",{"_index":1875,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:17",{"_index":1861,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:20",{"_index":1877,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:29",{"_index":1873,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:39",{"_index":1863,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:53",{"_index":1869,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:78",{"_index":1871,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.value",{"_index":1458,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["control/question",{"_index":1963,"title":{},"body":{"injectables/QuestionService.html":{}}}],["convert",{"_index":1268,"title":{},"body":{"injectables/FormService.html":{}}}],["conéctese",{"_index":2121,"title":{},"body":{"injectables/SurveyService.html":{}}}],["cop",{"_index":1432,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["copy",{"_index":1020,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/SurveyService.html":{}}}],["copy.uuid",{"_index":1022,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["cordova",{"_index":2506,"title":{},"body":{"dependencies.html":{}}}],["cordovasqlitedriver",{"_index":2037,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["corresponden",{"_index":1763,"title":{},"body":{"components/QuestionComponent.html":{}}}],["coverage",{"_index":2434,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1757,"title":{},"body":{"components/QuestionComponent.html":{}}}],["created_at",{"_index":443,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["creationdate",{"_index":436,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["credentials",{"_index":446,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["cssclass",{"_index":678,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{}}}],["cultivo",{"_index":2402,"title":{},"body":{"components/UniqueComponent.html":{}}}],["currency",{"_index":1430,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["currencypipe",{"_index":1407,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["current",{"_index":1281,"title":{},"body":{"injectables/FormService.html":{},"injectables/QuestionService.html":{}}}],["currentdate",{"_index":1057,"title":{},"body":{"injectables/DraftService.html":{},"injectables/FormService.html":{}}}],["currentdate.toisostring",{"_index":1058,"title":{},"body":{"injectables/DraftService.html":{},"injectables/FormService.html":{}}}],["currentindex",{"_index":1991,"title":{},"body":{"injectables/QuestionService.html":{}}}],["currentposition",{"_index":2000,"title":{},"body":{"injectables/QuestionService.html":{}}}],["currentprogress",{"_index":2004,"title":{},"body":{"injectables/QuestionService.html":{}}}],["currentquestion",{"_index":1689,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["cursor",{"_index":1843,"title":{},"body":{"components/QuestionComponent.html":{}}}],["d.id",{"_index":1084,"title":{},"body":{"injectables/DraftService.html":{}}}],["d.uuid",{"_index":1072,"title":{},"body":{"injectables/DraftService.html":{}}}],["danger",{"_index":681,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["data",{"_index":197,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"interfaces/StoredRequest.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["data.pop",{"_index":1189,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["data:image/jpeg;base64,${photobase64",{"_index":1634,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["dataquest",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["dataquestheadercomponent",{"_index":246,"title":{"components/DataquestHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["datatype",{"_index":49,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["date",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["date().gettime",{"_index":1560,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["date(control.value",{"_index":1459,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["date(draft.fechaultimocambio",{"_index":1082,"title":{},"body":{"injectables/DraftService.html":{}}}],["date(form.dateend",{"_index":1273,"title":{},"body":{"injectables/FormService.html":{}}}],["date(form.dateinit",{"_index":1271,"title":{},"body":{"injectables/FormService.html":{}}}],["date(this.getform().fechadescarga",{"_index":882,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["date(value",{"_index":770,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["date.getfullyear",{"_index":784,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["date.setfullyear(newyear",{"_index":785,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["date.toisostring",{"_index":787,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{}}}],["date.tolocaledatestring('es",{"_index":773,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["datedatatypecomponent",{"_index":249,"title":{"components/DateDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["dateend",{"_index":36,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["dateinit",{"_index":35,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["datethreshold",{"_index":1078,"title":{},"body":{"injectables/DraftService.html":{}}}],["datethreshold.setdate(datethreshold.getdate",{"_index":1079,"title":{},"body":{"injectables/DraftService.html":{}}}],["datetimeelement",{"_index":766,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["datetimeelement.value",{"_index":769,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["day",{"_index":755,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["de",{"_index":346,"title":{},"body":{"interfaces/Association.html":{},"components/DetailedFormComponent.html":{},"interfaces/Producer.html":{},"components/QuestionComponent.html":{}}}],["debes",{"_index":1009,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["decimalseparator",{"_index":1420,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["decimalzeropadding",{"_index":1417,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["decode",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodetoken",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodetoken(token",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoration",{"_index":913,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["decorators",{"_index":568,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{}}}],["default",{"_index":168,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":96,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["del",{"_index":850,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["deletedraft",{"_index":1031,"title":{},"body":{"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["deletedraft(index",{"_index":1043,"title":{},"body":{"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["deletedtoast",{"_index":1110,"title":{},"body":{"components/DraftsPage.html":{}}}],["deletedtoast.present",{"_index":1116,"title":{},"body":{"components/DraftsPage.html":{}}}],["deletionalert",{"_index":1101,"title":{},"body":{"components/DraftsPage.html":{}}}],["deletionalert.present",{"_index":1117,"title":{},"body":{"components/DraftsPage.html":{}}}],["demonstrationplot",{"_index":316,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["demostrativa",{"_index":337,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["dependencies",{"_index":2481,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["desarrollado",{"_index":1383,"title":{},"body":{"components/LoginPage.html":{}}}],["desarrollo",{"_index":1766,"title":{},"body":{"components/QuestionComponent.html":{}}}],["descargada",{"_index":885,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["description",{"_index":39,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"properties.html":{}}}],["desde",{"_index":1126,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["desea",{"_index":669,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["deseas",{"_index":1329,"title":{},"body":{"components/HomePage.html":{}}}],["deshabilitados",{"_index":879,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["deshacer",{"_index":1107,"title":{},"body":{"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{}}}],["detail",{"_index":789,"title":{},"body":{"components/DetailPage.html":{},"injectables/FormService.html":{},"miscellaneous/variables.html":{}}}],["detail'},{'name",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["detail.page.html",{"_index":792,"title":{},"body":{"components/DetailPage.html":{}}}],["detail.page.scss",{"_index":791,"title":{},"body":{"components/DetailPage.html":{}}}],["detailed",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["detailedformcomponent",{"_index":252,"title":{"components/DetailedFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["detailedformservice",{"_index":541,"title":{"injectables/DetailedFormService.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["detailedformservice.getform",{"_index":2568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detailpage",{"_index":255,"title":{"components/DetailPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["detailsguard",{"_index":2457,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":1182,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["directive",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["directives",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["directory",{"_index":1647,"title":{},"body":{"injectables/PhotoService.html":{}}}],["disabled",{"_index":535,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["disabledremovebutton",{"_index":1600,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["disablequestion",{"_index":93,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["disablequestion(question",{"_index":113,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["display",{"_index":689,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhoneDataTypeComponent.html":{}}}],["dispositivo",{"_index":851,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["div",{"_index":1623,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["documentation",{"_index":2435,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":705,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["dom",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["draft",{"_index":916,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/FormListComponent.html":{}}}],["draft.beneficiary.id",{"_index":995,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["draft.dateend",{"_index":1129,"title":{},"body":{"components/DraftsPage.html":{}}}],["draft.description",{"_index":1131,"title":{},"body":{"components/DraftsPage.html":{}}}],["draft.fechainicial",{"_index":1059,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.fechaultimocambio",{"_index":1060,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.id",{"_index":1085,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.name",{"_index":1128,"title":{},"body":{"components/DraftsPage.html":{}}}],["draft.questions[0].answers[0].value",{"_index":1130,"title":{},"body":{"components/DraftsPage.html":{}}}],["draft.uuid",{"_index":1073,"title":{},"body":{"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["draft/draft.service",{"_index":968,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["drafts",{"_index":990,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["drafts'},{'name",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["drafts.page.html",{"_index":1089,"title":{},"body":{"components/DraftsPage.html":{}}}],["drafts.page.scss",{"_index":1088,"title":{},"body":{"components/DraftsPage.html":{}}}],["drafts.some((draft",{"_index":994,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["draftservice",{"_index":223,"title":{"injectables/DraftService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"coverage.html":{}}}],["draftspage",{"_index":257,"title":{"components/DraftsPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["drafttype",{"_index":949,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["drawing",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["drawingpaddatatypecomponent",{"_index":259,"title":{"components/DrawingPadDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["duration",{"_index":1114,"title":{},"body":{"components/DraftsPage.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["dynamic",{"_index":2486,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":1278,"title":{},"body":{"injectables/FormService.html":{}}}],["el",{"_index":672,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/UniqueComponent.html":{}}}],["element",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["element.checked",{"_index":1494,"title":{},"body":{"components/MultipleComponent.html":{}}}],["elementref",{"_index":1157,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["elimina",{"_index":1003,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["eliminado",{"_index":1112,"title":{},"body":{"components/DraftsPage.html":{}}}],["eliminar",{"_index":1108,"title":{},"body":{"components/DraftsPage.html":{},"components/PhoneDataTypeComponent.html":{}}}],["email",{"_index":180,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["email_verified_at",{"_index":440,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["emaildatatypecomponent",{"_index":262,"title":{"components/EmailDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["emailverifiedat",{"_index":433,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["en",{"_index":855,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["enabled",{"_index":2254,"title":{},"body":{"components/TableComponent.html":{}}}],["enablequestion",{"_index":94,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["enablequestion(question",{"_index":116,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["encuesta",{"_index":884,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["encuestas",{"_index":1340,"title":{},"body":{"components/HomePage.html":{},"injectables/SurveyService.html":{}}}],["end",{"_index":1624,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["endpoint",{"_index":159,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":699,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["entre",{"_index":1448,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["environment",{"_index":175,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.url",{"_index":169,"title":{},"body":{"injectables/ApiService.html":{}}}],["environmentinjector",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["err",{"_index":1018,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["error",{"_index":877,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{}}}],["error(response.data.error",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.message",{"_index":1377,"title":{},"body":{"components/LoginPage.html":{}}}],["errors",{"_index":2423,"title":{},"body":{"components/UniqueComponent.html":{}}}],["errors?.max",{"_index":2429,"title":{},"body":{"components/UniqueComponent.html":{}}}],["errors?.min",{"_index":2428,"title":{},"body":{"components/UniqueComponent.html":{}}}],["errors?.required",{"_index":2425,"title":{},"body":{"components/UniqueComponent.html":{}}}],["es",{"_index":774,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["escoge",{"_index":1006,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["espacial",{"_index":342,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["especializado",{"_index":1002,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["esta",{"_index":1104,"title":{},"body":{"components/DraftsPage.html":{}}}],["este",{"_index":1013,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/HomePage.html":{},"components/UniqueComponent.html":{}}}],["estás",{"_index":1102,"title":{},"body":{"components/DraftsPage.html":{},"components/HomePage.html":{}}}],["ev",{"_index":2329,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["event",{"_index":740,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["event.detail.value",{"_index":1500,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["event.target",{"_index":767,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["event.target.complete",{"_index":1223,"title":{},"body":{"components/FormListComponent.html":{}}}],["event.target.value.length",{"_index":1621,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["eventemitter",{"_index":2312,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["events",{"_index":1552,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["eventtarget",{"_index":2416,"title":{},"body":{"components/UniqueComponent.html":{}}}],["eventtarget.value",{"_index":2417,"title":{},"body":{"components/UniqueComponent.html":{}}}],["everyanswerisselected",{"_index":133,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["exceed",{"_index":706,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["exists",{"_index":989,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["existsproducerwithspecializedform",{"_index":920,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["existsproducerwithspecializedform(producertosearch",{"_index":933,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["exitosamente",{"_index":1113,"title":{},"body":{"components/DraftsPage.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["extendable",{"_index":51,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["extends",{"_index":62,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["f4f4f4",{"_index":1848,"title":{},"body":{"components/QuestionComponent.html":{}}}],["fails",{"_index":1914,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["false",{"_index":324,"title":{},"body":{"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["farming",{"_index":304,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"components/UniqueComponent.html":{}}}],["favor",{"_index":853,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["fb",{"_index":1361,"title":{},"body":{"components/LoginPage.html":{}}}],["fechacarga",{"_index":31,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["fechadescarga",{"_index":28,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["fechainicial",{"_index":29,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["fechaultimocambio",{"_index":30,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["filesystem",{"_index":1646,"title":{},"body":{"injectables/PhotoService.html":{}}}],["filtereditems",{"_index":2296,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["filteredquestions",{"_index":1922,"title":{},"body":{"injectables/QuestionService.html":{}}}],["filterlist",{"_index":2300,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["filterlist(searchquery",{"_index":2317,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["finaldate",{"_index":1272,"title":{},"body":{"injectables/FormService.html":{}}}],["finaliza",{"_index":890,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["finalize",{"_index":1536,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["firstname",{"_index":310,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["firstquestion",{"_index":1796,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["firstquestion.id",{"_index":1798,"title":{},"body":{"components/QuestionComponent.html":{}}}],["fit",{"_index":2165,"title":{},"body":{"components/SurveysPage.html":{}}}],["flex",{"_index":690,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{},"components/PhoneDataTypeComponent.html":{}}}],["float",{"_index":1231,"title":{},"body":{"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["fns",{"_index":2509,"title":{},"body":{"dependencies.html":{}}}],["font",{"_index":709,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{}}}],["forcerefresh",{"_index":373,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ProducerService.html":{}}}],["forkjoin",{"_index":1535,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["forkjoin(obs",{"_index":1576,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["forkjoin(syncrequests).subscribe((syncresults",{"_index":2109,"title":{},"body":{"injectables/SurveyService.html":{}}}],["form",{"_index":25,"title":{"interfaces/Form.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["form'},{'name",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["form.component",{"_index":796,"title":{},"body":{"components/DetailPage.html":{}}}],["form.component.html",{"_index":800,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.scss",{"_index":799,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts",{"_index":798,"title":{},"body":{"components/DetailedFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:121",{"_index":816,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:125",{"_index":817,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:24",{"_index":812,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:33",{"_index":821,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:37",{"_index":813,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:41",{"_index":819,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:45",{"_index":818,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:49",{"_index":820,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:53",{"_index":823,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:59",{"_index":824,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:63",{"_index":822,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:67",{"_index":815,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.dateend",{"_index":1228,"title":{},"body":{"components/FormListComponent.html":{}}}],["form.description",{"_index":1230,"title":{},"body":{"components/FormListComponent.html":{}}}],["form.name",{"_index":1227,"title":{},"body":{"components/FormListComponent.html":{}}}],["form.questions.foreach((q",{"_index":1279,"title":{},"body":{"injectables/FormService.html":{}}}],["form.questions[0].answers[0].value",{"_index":1229,"title":{},"body":{"components/FormListComponent.html":{}}}],["form.service",{"_index":583,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["form.service.ts",{"_index":915,"title":{},"body":{"injectables/DetailedFormService.html":{},"coverage.html":{}}}],["form.service.ts:102",{"_index":934,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:131",{"_index":956,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:140",{"_index":957,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:150",{"_index":952,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:154",{"_index":937,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:165",{"_index":938,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:169",{"_index":958,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:17",{"_index":962,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:178",{"_index":943,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:18",{"_index":961,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:186",{"_index":959,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:19",{"_index":960,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:20",{"_index":963,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:21",{"_index":932,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:31",{"_index":936,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:35",{"_index":940,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:39",{"_index":939,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:43",{"_index":942,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:47",{"_index":951,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:62",{"_index":954,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:66",{"_index":941,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:70",{"_index":945,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.uuid",{"_index":1226,"title":{},"body":{"components/FormListComponent.html":{}}}],["form/control/question",{"_index":1850,"title":{},"body":{"injectables/QuestionControlService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["form/detailed",{"_index":582,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["form/form.service",{"_index":964,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form/question/answer",{"_index":83,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["form/question/photo/photo.service",{"_index":1630,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["form/question/photo/photo.service.ts",{"_index":1639,"title":{},"body":{"injectables/PhotoService.html":{},"coverage.html":{}}}],["form/question/photo/photo.service.ts:13",{"_index":1641,"title":{},"body":{"injectables/PhotoService.html":{}}}],["form/question/photo/photo.service.ts:9",{"_index":1640,"title":{},"body":{"injectables/PhotoService.html":{}}}],["form/question/question.service",{"_index":652,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/OpenComponent.html":{},"components/QuestionComponent.html":{},"components/UniqueComponent.html":{}}}],["form/question/question.service.ts",{"_index":1921,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["form/question/question.service.ts:108",{"_index":1953,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:12",{"_index":1961,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:128",{"_index":1954,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:13",{"_index":1962,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:132",{"_index":1960,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:139",{"_index":1944,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:14",{"_index":1937,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:143",{"_index":1939,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:147",{"_index":1938,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:29",{"_index":1949,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:33",{"_index":1956,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:47",{"_index":1948,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:51",{"_index":1942,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:55",{"_index":1943,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:60",{"_index":1945,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:66",{"_index":1947,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:75",{"_index":1958,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:94",{"_index":1941,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:99",{"_index":1951,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form_id",{"_index":45,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["formarray",{"_index":1740,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"components/TableComponent.html":{}}}],["formarray.at(0",{"_index":2214,"title":{},"body":{"components/TableComponent.html":{}}}],["formarray.at(index",{"_index":2245,"title":{},"body":{"components/TableComponent.html":{}}}],["formarray.controls",{"_index":1919,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formarray.push(newformgroup",{"_index":2232,"title":{},"body":{"components/TableComponent.html":{}}}],["formarray.removeat(formarray.length",{"_index":2240,"title":{},"body":{"components/TableComponent.html":{}}}],["formatteddate",{"_index":786,"title":{},"body":{"components/DateDataTypeComponent.html":{},"injectables/DraftService.html":{}}}],["formbuilder",{"_index":576,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/FormService.html":{},"components/LoginPage.html":{},"injectables/QuestionControlService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formbuilder(form",{"_index":1257,"title":{},"body":{"injectables/FormService.html":{},"miscellaneous/functions.html":{}}}],["formcontrol",{"_index":577,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/QuestionControlService.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["formcontrol(answer.checked",{"_index":1896,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formcontrol(answer.value",{"_index":1890,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formcontrol(value",{"_index":1900,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formcontrol.addvalidators(validators.max(this.question.max",{"_index":1429,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.addvalidators(validators.min(this.question.min",{"_index":1428,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.geterror('max",{"_index":1441,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.geterror('min",{"_index":1435,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.setvalue(association.name",{"_index":2269,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["formcontrol.setvalue(element.value",{"_index":1518,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.setvalue(maskitoparsenumber(element.value",{"_index":1434,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["formcontrol.setvalue(selection",{"_index":610,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["formcontrol.setvalue(transplantdate",{"_index":748,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["formcontrol.setvalue(value",{"_index":1497,"title":{},"body":{"components/MultipleComponent.html":{}}}],["formcontrol.value",{"_index":594,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{}}}],["formdetail",{"_index":24,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["formdetail.answer",{"_index":1480,"title":{},"body":{"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["formdetail.answerpivot",{"_index":2532,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formdetail.answerrelation",{"_index":99,"title":{},"body":{"injectables/AnswerRelationService.html":{},"miscellaneous/functions.html":{}}}],["formdetail.form",{"_index":814,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"miscellaneous/functions.html":{}}}],["formdetail.formresponse",{"_index":1254,"title":{},"body":{"injectables/FormService.html":{}}}],["formdetail.question",{"_index":109,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FormService.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["formdetail.questioncategory",{"_index":2537,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formgroup",{"_index":100,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["formgroup(group",{"_index":1883,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formgroup.addcontrol",{"_index":1899,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formgroup.controls",{"_index":1806,"title":{},"body":{"components/QuestionComponent.html":{}}}],["formgroup.controls[key].invalid",{"_index":1917,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formgroup.controls[lastansweredquestion.id.tostring()].valid",{"_index":1775,"title":{},"body":{"components/QuestionComponent.html":{}}}],["formgroup.controls[question.id].value",{"_index":1836,"title":{},"body":{"components/QuestionComponent.html":{}}}],["formgroup.get(`${order",{"_index":1620,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["formgroup.get(answer.id.tostring",{"_index":1492,"title":{},"body":{"components/MultipleComponent.html":{}}}],["formgroup.get(id)!.disabled",{"_index":1997,"title":{},"body":{"injectables/QuestionService.html":{}}}],["formgroup.get(id.tostring",{"_index":1495,"title":{},"body":{"components/MultipleComponent.html":{}}}],["formgroup.get(questionid)?.disable",{"_index":144,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["formgroup.get(questionid)?.enable",{"_index":145,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["formgroup.get(questionid)?.reset",{"_index":143,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["formgroup.valid",{"_index":1920,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formgroupdirective",{"_index":578,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["formid",{"_index":64,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["formlistcomponent",{"_index":263,"title":{"components/FormListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["formresponse",{"_index":41,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"miscellaneous/typealiases.html":{}}}],["forms",{"_index":1208,"title":{},"body":{"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"miscellaneous/variables.html":{}}}],["forms'},{'name",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["forms.filter((form",{"_index":1269,"title":{},"body":{"injectables/FormService.html":{}}}],["forms.page.html",{"_index":1292,"title":{},"body":{"components/FormsPage.html":{}}}],["forms.page.scss",{"_index":1291,"title":{},"body":{"components/FormsPage.html":{}}}],["forms_storage_key",{"_index":1289,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formsendpoint",{"_index":2574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formservice",{"_index":810,"title":{"injectables/FormService.html":{}},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"coverage.html":{}}}],["formsmodule",{"_index":790,"title":{},"body":{"components/DetailPage.html":{},"components/LoginPage.html":{}}}],["formspage",{"_index":265,"title":{"components/FormsPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["formsresponse",{"_index":1253,"title":{},"body":{"injectables/FormService.html":{}}}],["formsresponse.map",{"_index":1255,"title":{},"body":{"injectables/FormService.html":{}}}],["formsservice",{"_index":1211,"title":{},"body":{"components/FormListComponent.html":{}}}],["formtosend",{"_index":1099,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["formtype",{"_index":948,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["formulario",{"_index":896,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["formularios",{"_index":1338,"title":{},"body":{"components/HomePage.html":{}}}],["framework",{"_index":2548,"title":{},"body":{"properties.html":{}}}],["from(network.getstatus()).pipe",{"_index":387,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["from(this.apiservice.post(endpoint",{"_index":2102,"title":{},"body":{"injectables/SurveyService.html":{}}}],["from(this.apiservice.post(endpoint)).pipe",{"_index":394,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["from(this.getlocalassociations",{"_index":392,"title":{},"body":{"injectables/AssociationService.html":{}}}],["from(this.storageservice.get(storage_req_key)).pipe",{"_index":1537,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["full",{"_index":702,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["fullsavedstring",{"_index":1823,"title":{},"body":{"components/QuestionComponent.html":{}}}],["fullsavedstring.split",{"_index":1827,"title":{},"body":{"components/QuestionComponent.html":{}}}],["function",{"_index":430,"title":{},"body":{"interfaces/AuthManagement.html":{},"coverage.html":{}}}],["functions",{"_index":2527,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":1342,"title":{},"body":{"components/HomePage.html":{}}}],["generateformarray",{"_index":1854,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformarray(question",{"_index":1866,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformcontrol",{"_index":1855,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformcontrol(question",{"_index":1868,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformgroup",{"_index":1856,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformgroup(question",{"_index":1870,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateuuid",{"_index":1032,"title":{},"body":{"injectables/DraftService.html":{}}}],["genericmessage",{"_index":1783,"title":{},"body":{"components/QuestionComponent.html":{}}}],["geolocation",{"_index":826,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["geolocation.checkpermissions",{"_index":839,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["geolocation.getcurrentposition",{"_index":866,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["geolocation.requestpermissions",{"_index":862,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["get(answerid.tostring())!.value",{"_index":141,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["get(endpoint",{"_index":156,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(key",{"_index":2025,"title":{},"body":{"injectables/StorageService.html":{}}}],["get(questionid",{"_index":140,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["getall",{"_index":150,"title":{},"body":{"injectables/ApiService.html":{}}}],["getall(endpoint",{"_index":161,"title":{},"body":{"injectables/ApiService.html":{}}}],["getanswerid",{"_index":525,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getanswerid(value",{"_index":553,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getanswers",{"_index":526,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["getappversion",{"_index":1304,"title":{},"body":{"components/HomePage.html":{}}}],["getassociation",{"_index":2259,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["getassociationbyid",{"_index":355,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getassociationbyid(id",{"_index":363,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getassociations",{"_index":356,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getcategory",{"_index":1690,"title":{},"body":{"components/QuestionComponent.html":{},"components/TableComponent.html":{},"components/TypeComponent.html":{}}}],["getcheckedanswerid",{"_index":2357,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getcheckedanswerid(answersformgroup",{"_index":2373,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getchildquestion",{"_index":2176,"title":{},"body":{"components/TableComponent.html":{}}}],["getchildquestion(sectionindex",{"_index":2192,"title":{},"body":{"components/TableComponent.html":{}}}],["getcurrentindex",{"_index":1924,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getcurrentindex(current",{"_index":1940,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getdata",{"_index":527,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getdatatype",{"_index":1581,"title":{},"body":{"components/OpenComponent.html":{},"components/TypeComponent.html":{}}}],["getdrafts",{"_index":1033,"title":{},"body":{"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["getfilteredlength",{"_index":1925,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getfilteredquestions",{"_index":1967,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getfirst",{"_index":1926,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getform",{"_index":801,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["getform().dateend",{"_index":891,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["getform().dateinit",{"_index":889,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["getform().description",{"_index":894,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["getform().name",{"_index":886,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["getformcontrol",{"_index":1857,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["getformcontrol(question",{"_index":1872,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["getformgroup",{"_index":1927,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["getformgroup(index",{"_index":2196,"title":{},"body":{"components/TableComponent.html":{}}}],["getforms",{"_index":1239,"title":{},"body":{"injectables/FormService.html":{}}}],["gethelpertext",{"_index":1404,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["getlast",{"_index":1928,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getlastansweredquestion",{"_index":1773,"title":{},"body":{"components/QuestionComponent.html":{}}}],["getlocalassociations",{"_index":357,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getlocaldrafts",{"_index":1034,"title":{},"body":{"injectables/DraftService.html":{}}}],["getlocalforms",{"_index":1240,"title":{},"body":{"injectables/FormService.html":{}}}],["getlocalproducers",{"_index":1658,"title":{},"body":{"injectables/ProducerService.html":{}}}],["getlocalsurveys",{"_index":2060,"title":{},"body":{"injectables/SurveyService.html":{}}}],["getlocation",{"_index":802,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["getmaxdate",{"_index":719,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["getmindate",{"_index":720,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["getnetworkstatus",{"_index":2061,"title":{},"body":{"injectables/SurveyService.html":{}}}],["getnewyear",{"_index":721,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["getnewyear(years",{"_index":731,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["getnextquestion",{"_index":1929,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getnextquestion(current",{"_index":1946,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getorder",{"_index":2177,"title":{},"body":{"components/TableComponent.html":{},"components/TypeComponent.html":{}}}],["getoriginallength",{"_index":1930,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getoriginalquestions",{"_index":1931,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getothererrormessage",{"_index":2358,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getotherplaceholder",{"_index":2359,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getothervalue",{"_index":2360,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getphoto",{"_index":1626,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["getplaceholder",{"_index":1514,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["getpreviousquestion",{"_index":1932,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getpreviousquestion(current",{"_index":1950,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getpreviousvalidquestionfrom",{"_index":1933,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getpreviousvalidquestionfrom(question",{"_index":1952,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getproducers",{"_index":1659,"title":{},"body":{"injectables/ProducerService.html":{}}}],["getprogress",{"_index":637,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/QuestionService.html":{}}}],["getquestionchildren",{"_index":1241,"title":{},"body":{"injectables/FormService.html":{},"components/TableComponent.html":{}}}],["getquestionchildren(question",{"_index":1246,"title":{},"body":{"injectables/FormService.html":{}}}],["getquestionvalue",{"_index":528,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getselectedvalue",{"_index":529,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getselectedvalue(answersformgroup",{"_index":558,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getsurveys",{"_index":2062,"title":{},"body":{"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["getsyncedratio",{"_index":2130,"title":{},"body":{"components/SurveysPage.html":{}}}],["getsyncedsurveys",{"_index":2131,"title":{},"body":{"components/SurveysPage.html":{}}}],["gettext",{"_index":2178,"title":{},"body":{"components/TableComponent.html":{},"components/TypeComponent.html":{}}}],["gettextvalue",{"_index":1466,"title":{},"body":{"components/MultipleComponent.html":{}}}],["gettoken",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettotalquestions",{"_index":803,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["gettransformeddownladeddate",{"_index":804,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["gettype",{"_index":1691,"title":{},"body":{"components/QuestionComponent.html":{},"components/TypeComponent.html":{}}}],["getunsyncedratio",{"_index":2132,"title":{},"body":{"components/SurveysPage.html":{}}}],["getunsyncedsurveys",{"_index":2133,"title":{},"body":{"components/SurveysPage.html":{}}}],["getuser",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["getvalue",{"_index":722,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["getvalue(order",{"_index":1610,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["gotodetail",{"_index":1090,"title":{},"body":{"components/DraftsPage.html":{},"components/SurveysPage.html":{}}}],["gotodetail(formtosend",{"_index":1097,"title":{},"body":{"components/DraftsPage.html":{}}}],["gotodetail(survey",{"_index":2140,"title":{},"body":{"components/SurveysPage.html":{}}}],["granted",{"_index":841,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["gray",{"_index":1841,"title":{},"body":{"components/QuestionComponent.html":{}}}],["greenhouse",{"_index":317,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["grid",{"_index":1385,"title":{},"body":{"components/LoginPage.html":{}}}],["group",{"_index":1879,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[answer.id",{"_index":1895,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[answer.order",{"_index":1889,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[child.id",{"_index":1902,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[question.id",{"_index":1881,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["guardar",{"_index":666,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/QuestionComponent.html":{}}}],["habilita",{"_index":854,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["handled",{"_index":1237,"title":{},"body":{"injectables/FormService.html":{}}}],["handler",{"_index":682,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{}}}],["handlerefresh",{"_index":1205,"title":{},"body":{"components/FormListComponent.html":{}}}],["handlerefresh(event",{"_index":1215,"title":{},"body":{"components/FormListComponent.html":{}}}],["has_especializada",{"_index":331,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["hay",{"_index":2118,"title":{},"body":{"injectables/SurveyService.html":{}}}],["header",{"_index":631,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["header'},{'name",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["header.component",{"_index":830,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["header.component.html",{"_index":633,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.scss",{"_index":632,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts",{"_index":630,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:15",{"_index":645,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":644,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":651,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:30",{"_index":648,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:34",{"_index":646,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:41",{"_index":647,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:71",{"_index":650,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:75",{"_index":649,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header/dataquest",{"_index":629,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{},"coverage.html":{}}}],["headers",{"_index":192,"title":{},"body":{"injectables/ApiService.html":{}}}],["hecho",{"_index":2353,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["height",{"_index":697,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{},"components/SurveysPage.html":{}}}],["here",{"_index":1238,"title":{},"body":{"injectables/FormService.html":{}}}],["home",{"_index":1300,"title":{},"body":{"components/HomePage.html":{}}}],["home'},{'name",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["home.page.html",{"_index":1302,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1301,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":267,"title":{"components/HomePage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"properties.html":{}}}],["horizontally",{"_index":693,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["hover",{"_index":1847,"title":{},"body":{"components/QuestionComponent.html":{}}}],["html",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["htmlinputelement",{"_index":768,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["htmlionalertelement",{"_index":1437,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["htmlioninputelement",{"_index":1433,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["htmlioninputelement).getinputelement",{"_index":1427,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["htmlionmodalelement",{"_index":1315,"title":{},"body":{"components/HomePage.html":{}}}],["http://192.168.1.18:3000",{"_index":2579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":154,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpresponse",{"_index":173,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{}}}],["https://ionicframework.com",{"_index":2546,"title":{},"body":{"properties.html":{}}}],["https://pif5.blaucast.com",{"_index":2572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://programaintegraldefruticultura.com.co",{"_index":2581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":708,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{}}}],["id",{"_index":10,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/ApiService.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"interfaces/Form.html":{},"components/MultipleComponent.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionService.html":{},"interfaces/StoredRequest.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["id.tostring",{"_index":1496,"title":{},"body":{"components/MultipleComponent.html":{},"components/TableComponent.html":{}}}],["idcard",{"_index":434,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["identification",{"_index":305,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["identifier",{"_index":2436,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":704,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["img",{"_index":686,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["img::part(image",{"_index":1636,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["implements",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["import",{"_index":19,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["imports",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1754,"title":{},"body":{"components/QuestionComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["info.version",{"_index":1323,"title":{},"body":{"components/HomePage.html":{}}}],["información",{"_index":1341,"title":{},"body":{"components/HomePage.html":{}}}],["ingresa",{"_index":1125,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["ingrese",{"_index":1378,"title":{},"body":{"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["iniciado",{"_index":888,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["iniciar",{"_index":1382,"title":{},"body":{"components/LoginPage.html":{}}}],["init",{"_index":2017,"title":{},"body":{"injectables/StorageService.html":{}}}],["initialdate",{"_index":1270,"title":{},"body":{"injectables/FormService.html":{}}}],["initializeapp",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(detailedformservice",{"_index":2566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(environmentinjector",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(router",{"_index":2567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":79,"title":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{}},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["injectables",{"_index":81,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"index.html":{}}}],["inner",{"_index":2010,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["inner.jpg",{"_index":1350,"title":{},"body":{"components/HomePage.html":{}}}],["input",{"_index":573,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["inputchangeeventdetail",{"_index":2392,"title":{},"body":{"components/UniqueComponent.html":{}}}],["inputcustomevent",{"_index":2393,"title":{},"body":{"components/UniqueComponent.html":{}}}],["inputs",{"_index":534,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["instanceof",{"_index":1906,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["insumo_p5",{"_index":343,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["insumos",{"_index":344,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["intentarlo",{"_index":859,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"interfaces/User.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Form.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"interfaces/User.html":{},"index.html":{}}}],["internet",{"_index":2120,"title":{},"body":{"injectables/SurveyService.html":{}}}],["intl.datetimeformatoptions",{"_index":771,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["invalid",{"_index":2419,"title":{},"body":{"components/UniqueComponent.html":{}}}],["invalidcontrols",{"_index":1915,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["invalidcontrols.length",{"_index":1918,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["invernadero",{"_index":341,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["ion",{"_index":619,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{}}}],["ionic",{"_index":2544,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["ionic/storage",{"_index":2035,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["ionicons",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["ionmodal",{"_index":567,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["ionviewwillenter",{"_index":1091,"title":{},"body":{"components/DraftsPage.html":{},"components/SurveysPage.html":{}}}],["isassociationquestion",{"_index":2265,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["ischecked",{"_index":1467,"title":{},"body":{"components/MultipleComponent.html":{}}}],["ischecked(answer",{"_index":1482,"title":{},"body":{"components/MultipleComponent.html":{}}}],["isdraft",{"_index":638,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["isfarmingquestion",{"_index":2401,"title":{},"body":{"components/UniqueComponent.html":{}}}],["isfirstquestion",{"_index":1692,"title":{},"body":{"components/QuestionComponent.html":{}}}],["isform",{"_index":639,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["islast",{"_index":1510,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["islastanswer",{"_index":1468,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["islastanswer(id",{"_index":1484,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["islastquestion",{"_index":1693,"title":{},"body":{"components/QuestionComponent.html":{}}}],["islogged",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["isotherinvalid",{"_index":2361,"title":{},"body":{"components/UniqueComponent.html":{}}}],["isothertouched",{"_index":2421,"title":{},"body":{"components/UniqueComponent.html":{}}}],["isquestionspage",{"_index":921,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["isquestionvalid",{"_index":1694,"title":{},"body":{"components/QuestionComponent.html":{}}}],["isspecializedform",{"_index":981,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["issurvey",{"_index":805,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["istable",{"_index":1723,"title":{},"body":{"components/QuestionComponent.html":{}}}],["istokenexpired",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["istokenexpired(token",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalid",{"_index":1695,"title":{},"body":{"components/QuestionComponent.html":{}}}],["item",{"_index":1398,"title":{},"body":{"components/LoginPage.html":{},"components/TypeaheadComponent.html":{}}}],["item.tolowercase().includes(normalizedquery",{"_index":2352,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["item::part(native",{"_index":620,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["items",{"_index":695,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/LoginPage.html":{},"components/TypeaheadComponent.html":{}}}],["iterate",{"_index":1276,"title":{},"body":{"injectables/FormService.html":{}}}],["json",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["json.parse",{"_index":397,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"components/TableComponent.html":{}}}],["json.parse(json.stringify(survey",{"_index":2084,"title":{},"body":{"injectables/SurveyService.html":{}}}],["json.parse(response.data",{"_index":1676,"title":{},"body":{"injectables/ProducerService.html":{}}}],["json.parse(storedoperations",{"_index":1562,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["json.parse(value",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(resource",{"_index":198,"title":{},"body":{"injectables/ApiService.html":{}}}],["json.stringify(storedobj",{"_index":1566,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["json.stringify(this.question.questionchildren[0",{"_index":2227,"title":{},"body":{"components/TableComponent.html":{}}}],["json.stringify(user",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":691,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/PhoneDataTypeComponent.html":{}}}],["jwt",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt_decode",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_decode(token",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwthelperservice",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":186,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/UniqueComponent.html":{}}}],["keys",{"_index":2018,"title":{},"body":{"injectables/StorageService.html":{}}}],["la",{"_index":347,"title":{},"body":{"interfaces/Association.html":{},"components/DetailedFormComponent.html":{},"interfaces/Producer.html":{},"components/QuestionComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["large",{"_index":712,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["las",{"_index":1762,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["lastanswer",{"_index":1506,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["lastanswer.id",{"_index":1509,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["lastansweredquestion",{"_index":1774,"title":{},"body":{"components/QuestionComponent.html":{}}}],["lastindex",{"_index":1978,"title":{},"body":{"injectables/QuestionService.html":{}}}],["lastname",{"_index":312,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["lastquestion",{"_index":1979,"title":{},"body":{"injectables/QuestionService.html":{}}}],["left",{"_index":900,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/HomePage.html":{}}}],["legend",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["length",{"_index":2002,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/StorageService.html":{}}}],["lightgray",{"_index":623,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["limpiar",{"_index":1191,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["line",{"_index":906,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["list",{"_index":1202,"title":{},"body":{"components/FormListComponent.html":{}}}],["list'},{'name",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["list.component",{"_index":1297,"title":{},"body":{"components/FormsPage.html":{},"components/SurveysPage.html":{}}}],["list.component.html",{"_index":1204,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.scss",{"_index":1203,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts",{"_index":1201,"title":{},"body":{"components/FormListComponent.html":{},"coverage.html":{}}}],["list.component.ts:20",{"_index":1214,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:21",{"_index":1213,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:22",{"_index":1212,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:23",{"_index":1210,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:36",{"_index":1219,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:40",{"_index":1218,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:55",{"_index":1216,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:62",{"_index":1220,"title":{},"body":{"components/FormListComponent.html":{}}}],["list/form",{"_index":1200,"title":{},"body":{"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/SurveysPage.html":{},"coverage.html":{}}}],["literal",{"_index":2375,"title":{},"body":{"components/UniqueComponent.html":{},"miscellaneous/typealiases.html":{}}}],["loadforms",{"_index":1293,"title":{},"body":{"components/FormsPage.html":{}}}],["loading",{"_index":1370,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["loading.dismiss",{"_index":1772,"title":{},"body":{"components/QuestionComponent.html":{}}}],["loading.present",{"_index":1373,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["loadingcontroller",{"_index":1359,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["loadothercontrol",{"_index":2362,"title":{},"body":{"components/UniqueComponent.html":{}}}],["loadproducers",{"_index":1305,"title":{},"body":{"components/HomePage.html":{}}}],["loaduser",{"_index":1306,"title":{},"body":{"components/HomePage.html":{}}}],["local",{"_index":1235,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["localforage",{"_index":2038,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["locally",{"_index":1555,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["location",{"_index":643,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["locationalert",{"_index":865,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["locationalert.present",{"_index":875,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["lodash",{"_index":971,"title":{},"body":{"injectables/DetailedFormService.html":{},"dependencies.html":{}}}],["logged",{"_index":423,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["login",{"_index":428,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["login(authparams",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.page.html",{"_index":1357,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":1356,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":269,"title":{"components/LoginPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["logout",{"_index":429,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"interfaces/User.html":{}}}],["logoutalert",{"_index":1324,"title":{},"body":{"components/HomePage.html":{}}}],["logoutalert.present",{"_index":1331,"title":{},"body":{"components/HomePage.html":{}}}],["los",{"_index":845,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["malla",{"_index":340,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["manager.service.ts",{"_index":1522,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["manager.service.ts:13",{"_index":1526,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["manager.service.ts:20",{"_index":1527,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["manager.service.ts:44",{"_index":1533,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["manager.service.ts:73",{"_index":1530,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["manager/offline",{"_index":1521,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["managing",{"_index":1234,"title":{},"body":{"injectables/FormService.html":{}}}],["map",{"_index":379,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["map((response",{"_index":395,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["margin",{"_index":912,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["maskito/angular",{"_index":1425,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"dependencies.html":{}}}],["maskito/core",{"_index":1426,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"dependencies.html":{}}}],["maskito/kit",{"_index":1424,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"dependencies.html":{}}}],["maskitoelementpredicateasync",{"_index":1414,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskitomodule",{"_index":1401,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskitonumberoptionsgenerator",{"_index":1416,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskitooptions",{"_index":1415,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskitoparsenumber",{"_index":1423,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskpredicate",{"_index":1402,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["matching",{"_index":78,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(window.devicepixelratio",{"_index":1171,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["max",{"_index":60,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/DataquestHeaderComponent.html":{},"interfaces/Form.html":{},"components/LoginPage.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/SurveysPage.html":{}}}],["maxalert",{"_index":1442,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["maxalert.present",{"_index":1444,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["maxcurrency",{"_index":1447,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maxdate",{"_index":776,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["mayor",{"_index":1449,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["menor",{"_index":1450,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["mergemap",{"_index":2083,"title":{},"body":{"injectables/SurveyService.html":{}}}],["mergemap((response",{"_index":2104,"title":{},"body":{"injectables/SurveyService.html":{}}}],["message",{"_index":659,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/UniqueComponent.html":{}}}],["metadata",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["method",{"_index":2288,"title":{},"body":{"components/TypeComponent.html":{}}}],["methods",{"_index":86,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["middlename",{"_index":311,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":59,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"components/LoginPage.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/SurveysPage.html":{}}}],["minalert",{"_index":1436,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["minalert.present",{"_index":1440,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["mincurrency",{"_index":1445,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["mindate",{"_index":779,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["miscellaneous",{"_index":2526,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":522,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/HomePage.html":{}}}],["models/auth.namespace",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{}}}],["models/beneficiary.namespace",{"_index":375,"title":{},"body":{"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/ProducerService.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["models/formdetail.namespace",{"_index":120,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["modules",{"_index":2542,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["money",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["moneydatatypecomponent",{"_index":271,"title":{"components/MoneyDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["moneymask",{"_index":1403,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["month",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["monthdatatypecomponent",{"_index":273,"title":{"components/MonthDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["move",{"_index":2287,"title":{},"body":{"components/TypeComponent.html":{}}}],["moved",{"_index":1140,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["moved(event",{"_index":1150,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["multiple",{"_index":1461,"title":{},"body":{"components/MultipleComponent.html":{}}}],["multiple'},{'name",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["multiple.component.html",{"_index":1463,"title":{},"body":{"components/MultipleComponent.html":{}}}],["multiple.component.scss",{"_index":1462,"title":{},"body":{"components/MultipleComponent.html":{}}}],["multiple/multiple.component",{"_index":2283,"title":{},"body":{"components/TypeComponent.html":{}}}],["multiplecomponent",{"_index":275,"title":{"components/MultipleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["máximo",{"_index":1443,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["mínimo",{"_index":1439,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["móvil",{"_index":1127,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["múltiple",{"_index":1818,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["name",{"_index":27,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":23,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/User.html":{}}}],["navcontroller",{"_index":811,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["navctrl",{"_index":1705,"title":{},"body":{"components/QuestionComponent.html":{}}}],["navigate",{"_index":1206,"title":{},"body":{"components/FormListComponent.html":{}}}],["navigate(formtosend",{"_index":1217,"title":{},"body":{"components/FormListComponent.html":{}}}],["ndice",{"_index":1765,"title":{},"body":{"components/QuestionComponent.html":{}}}],["network",{"_index":377,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["network.addlistener('networkstatuschange",{"_index":2087,"title":{},"body":{"injectables/SurveyService.html":{}}}],["network.getstatus().then((status",{"_index":2092,"title":{},"body":{"injectables/SurveyService.html":{}}}],["network.removealllisteners",{"_index":2093,"title":{},"body":{"injectables/SurveyService.html":{}}}],["new",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"components/DrawingPadDataTypeComponent.html":{},"injectables/FormService.html":{},"components/LoginPage.html":{},"components/MonthDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/QuestionControlService.html":{},"interfaces/StoredRequest.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{}}}],["newformgroup",{"_index":2229,"title":{},"body":{"components/TableComponent.html":{}}}],["newformgroup.reset",{"_index":2231,"title":{},"body":{"components/TableComponent.html":{}}}],["newid",{"_index":2235,"title":{},"body":{"components/TableComponent.html":{}}}],["newyear",{"_index":783,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["next",{"_index":1982,"title":{},"body":{"injectables/QuestionService.html":{}}}],["nextquestion",{"_index":1696,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["ngafterviewinit",{"_index":1141,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["ngonchanges",{"_index":1405,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["ngondestroy",{"_index":806,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["ngoninit",{"_index":530,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["nica",{"_index":1820,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["nit",{"_index":306,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["none",{"_index":914,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["normalize",{"_index":2344,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["normalizedquery",{"_index":2349,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["null",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FormService.html":{},"components/MultipleComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{}}}],["number",{"_index":17,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"interfaces/StoredRequest.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["number(day",{"_index":762,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["number(id",{"_index":1508,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["number(month",{"_index":760,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["number(year",{"_index":759,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["numberdatatypecomponent",{"_index":277,"title":{"components/NumberDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["numeric",{"_index":772,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["o",{"_index":1005,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["object",{"_index":2570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(answersformgroup.controls",{"_index":2219,"title":{},"body":{"components/TableComponent.html":{}}}],["object.keys(formgroup.controls).filter",{"_index":1916,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["object.keys(sectionformgroup.controls).foreach((key",{"_index":2216,"title":{},"body":{"components/TableComponent.html":{}}}],["object.values(formgroup.value",{"_index":1908,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["obs",{"_index":1567,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["obs.push(oneobs",{"_index":1575,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["observable",{"_index":160,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["obtener",{"_index":848,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["of(false",{"_index":1553,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["of(response.status",{"_index":2105,"title":{},"body":{"injectables/SurveyService.html":{}}}],["of(undefined",{"_index":2108,"title":{},"body":{"injectables/SurveyService.html":{}}}],["offline",{"_index":1557,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["offlinemanagerservice",{"_index":1519,"title":{"injectables/OfflineManagerService.html":{}},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{}}}],["ok",{"_index":860,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["onchange",{"_index":1453,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["onchange(event",{"_index":1454,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["one",{"_index":1570,"title":{},"body":{"injectables/OfflineManagerService.html":{},"injectables/QuestionControlService.html":{},"interfaces/StoredRequest.html":{}}}],["oneobs",{"_index":1572,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["oninit",{"_index":518,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["online",{"_index":2057,"title":{},"body":{"injectables/SurveyService.html":{}}}],["onsubmit",{"_index":1697,"title":{},"body":{"components/QuestionComponent.html":{}}}],["op",{"_index":1568,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["op.data",{"_index":1574,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["open",{"_index":536,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/OpenComponent.html":{},"components/TypeComponent.html":{}}}],["open'},{'name",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["open.component.html",{"_index":1580,"title":{},"body":{"components/OpenComponent.html":{}}}],["open.component.scss",{"_index":1579,"title":{},"body":{"components/OpenComponent.html":{}}}],["open/open.component",{"_index":2282,"title":{},"body":{"components/TypeComponent.html":{}}}],["opencomponent",{"_index":278,"title":{"components/OpenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["openmodal",{"_index":531,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["operations",{"_index":1531,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["optional",{"_index":103,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":190,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/TypeaheadComponent.html":{}}}],["order",{"_index":11,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"components/PhoneDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["organizacional",{"_index":1768,"title":{},"body":{"components/QuestionComponent.html":{}}}],["originalquestions",{"_index":1923,"title":{},"body":{"injectables/QuestionService.html":{}}}],["othercontrol",{"_index":2414,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othercontrol.setvalue(othervalue",{"_index":2418,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othercontrol?.errors",{"_index":2424,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othercontrol?.invalid",{"_index":2420,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othercontrol?.touched",{"_index":2422,"title":{},"body":{"components/UniqueComponent.html":{}}}],["otherformcontrol",{"_index":2430,"title":{},"body":{"components/UniqueComponent.html":{}}}],["otherformcontrol.addvalidators(validators.max(this.question.max",{"_index":2433,"title":{},"body":{"components/UniqueComponent.html":{}}}],["otherformcontrol.addvalidators(validators.min(this.question.min",{"_index":2432,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othervalue",{"_index":1498,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["otherwise",{"_index":2343,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["otro",{"_index":1007,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["output",{"_index":2335,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["outputs",{"_index":2305,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["overflow",{"_index":2167,"title":{},"body":{"components/SurveysPage.html":{}}}],["overview",{"_index":2539,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":908,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{}}}],["p.id",{"_index":1069,"title":{},"body":{"injectables/DraftService.html":{}}}],["package",{"_index":2480,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pad",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["padding",{"_index":1352,"title":{},"body":{"components/HomePage.html":{}}}],["pages.guard.ts",{"_index":2012,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["pages.guard.ts:11",{"_index":2014,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{}}}],["pages.guard.ts:8",{"_index":2013,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{}}}],["pages/secure",{"_index":2011,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["para",{"_index":1122,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["parcela",{"_index":336,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["parseddate",{"_index":758,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["parseddate.toisostring",{"_index":764,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["pasamos",{"_index":1761,"title":{},"body":{"components/QuestionComponent.html":{}}}],["passes",{"_index":1912,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["password",{"_index":181,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthManagement.html":{},"components/LoginPage.html":{},"interfaces/User.html":{}}}],["pd_p5",{"_index":335,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["percentage",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["percentagedatatypecomponent",{"_index":280,"title":{"components/PercentageDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["permisos",{"_index":846,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissionalert",{"_index":842,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissionalert.present",{"_index":864,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissionresult",{"_index":861,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissionresult.location",{"_index":863,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissions",{"_index":838,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissions.location",{"_index":840,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["pertenece",{"_index":2267,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["phone",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["phonedatatypecomponent",{"_index":282,"title":{"components/PhoneDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["phones",{"_index":1601,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["phonesobserver",{"_index":1602,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["photo",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["photobase64",{"_index":1633,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["photodatatypecomponent",{"_index":284,"title":{"components/PhotoDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["photoservice",{"_index":1629,"title":{"injectables/PhotoService.html":{}},"body":{"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"coverage.html":{}}}],["pivot",{"_index":43,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["place",{"_index":1386,"title":{},"body":{"components/LoginPage.html":{}}}],["platform",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"components/TypeaheadComponent.html":{}}}],["pointer",{"_index":1844,"title":{},"body":{"components/QuestionComponent.html":{}}}],["por",{"_index":852,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["position",{"_index":33,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/DetailedFormComponent.html":{},"interfaces/Form.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{}}}],["position.coords.altitude",{"_index":872,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["position.coords.latitude",{"_index":869,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["position.coords.longitude",{"_index":870,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["post",{"_index":152,"title":{},"body":{"injectables/ApiService.html":{}}}],["post(endpoint",{"_index":163,"title":{},"body":{"injectables/ApiService.html":{}}}],["precision",{"_index":1421,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["preferences",{"_index":176,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/PhotoService.html":{}}}],["preferences.get",{"_index":185,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["preferences.remove",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["preferences.set(options",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["prefix",{"_index":1418,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["pregunta",{"_index":1784,"title":{},"body":{"components/QuestionComponent.html":{}}}],["preguntas",{"_index":893,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["preloadfarmingvalue",{"_index":2363,"title":{},"body":{"components/UniqueComponent.html":{}}}],["preloadfarmingvalue(answersformgroup",{"_index":2384,"title":{},"body":{"components/UniqueComponent.html":{}}}],["preloadselectedanswers",{"_index":2179,"title":{},"body":{"components/TableComponent.html":{}}}],["preloadtransplantdate",{"_index":723,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["preloadtransplantdate(transplantdate",{"_index":737,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["preloadvalue",{"_index":2260,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["presentalert",{"_index":1698,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["presentalert(istable",{"_index":1721,"title":{},"body":{"components/QuestionComponent.html":{}}}],["previous",{"_index":1994,"title":{},"body":{"injectables/QuestionService.html":{}}}],["previousbeneficiary",{"_index":979,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["previousbeneficiary.specialized",{"_index":983,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["previousquestion",{"_index":1699,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["previousquestion.id.tostring",{"_index":1996,"title":{},"body":{"injectables/QuestionService.html":{}}}],["primer_apellido",{"_index":329,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["primer_nombre",{"_index":327,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["primero",{"_index":1012,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["priorizado",{"_index":2403,"title":{},"body":{"components/UniqueComponent.html":{}}}],["private",{"_index":87,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["problema",{"_index":843,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["proceso",{"_index":1326,"title":{},"body":{"components/HomePage.html":{}}}],["producer",{"_index":308,"title":{"interfaces/Producer.html":{}},"body":{"interfaces/Association.html":{},"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["producer.id",{"_index":604,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{}}}],["producer.specialized",{"_index":1066,"title":{},"body":{"injectables/DraftService.html":{}}}],["producerbaseparams",{"_index":323,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["producerbuilder",{"_index":1671,"title":{},"body":{"injectables/ProducerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["producerbuilder(producer",{"_index":1678,"title":{},"body":{"injectables/ProducerService.html":{},"miscellaneous/functions.html":{}}}],["producerresponse",{"_index":326,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"miscellaneous/typealiases.html":{}}}],["producerresponse.map",{"_index":1677,"title":{},"body":{"injectables/ProducerService.html":{}}}],["producers",{"_index":601,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"injectables/ProducerService.html":{},"miscellaneous/variables.html":{}}}],["producers.find",{"_index":616,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{}}}],["producers.map((producer",{"_index":603,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["producers_storage_key",{"_index":1683,"title":{},"body":{"injectables/ProducerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["producersendpoint",{"_index":2575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producerservice",{"_index":539,"title":{"injectables/ProducerService.html":{}},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"components/HomePage.html":{},"injectables/ProducerService.html":{},"coverage.html":{}}}],["producersservice",{"_index":543,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{}}}],["producertosearch",{"_index":935,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["producertosearch.id",{"_index":996,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["production",{"_index":2571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progreso",{"_index":664,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["progress",{"_index":634,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/QuestionService.html":{}}}],["progressbar",{"_index":640,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["project",{"_index":2545,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":42,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["promise",{"_index":167,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/FormService.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"interfaces/User.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DrawingPadDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provided",{"_index":2322,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["providedin",{"_index":121,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["proyecto",{"_index":887,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["public",{"_index":90,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["pudo",{"_index":847,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["puede",{"_index":1106,"title":{},"body":{"components/DraftsPage.html":{},"components/HomePage.html":{}}}],["pushdraft",{"_index":1035,"title":{},"body":{"injectables/DraftService.html":{}}}],["pushdraft(draft",{"_index":1048,"title":{},"body":{"injectables/DraftService.html":{}}}],["pushsurvey",{"_index":2063,"title":{},"body":{"injectables/SurveyService.html":{}}}],["pushsurvey(survey",{"_index":2076,"title":{},"body":{"injectables/SurveyService.html":{}}}],["q.answersrelation.foreach((ar",{"_index":2238,"title":{},"body":{"components/TableComponent.html":{}}}],["q.questionparentid",{"_index":1282,"title":{},"body":{"injectables/FormService.html":{}}}],["quality",{"_index":1655,"title":{},"body":{"injectables/PhotoService.html":{}}}],["que",{"_index":1328,"title":{},"body":{"components/HomePage.html":{},"components/QuestionComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["query",{"_index":2324,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["question",{"_index":46,"title":{"interfaces/Question.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["question'},{'name",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["question.answers.foreach((answer",{"_index":1815,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["question.answers[0",{"_index":1837,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.answers[0].value",{"_index":1894,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["question.answers[question.answers.length",{"_index":1824,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["question.answersrelation",{"_index":125,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["question.component.html",{"_index":1686,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.component.scss",{"_index":1685,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.datatype",{"_index":1832,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["question.id",{"_index":1283,"title":{},"body":{"injectables/FormService.html":{},"components/QuestionComponent.html":{},"components/TableComponent.html":{}}}],["question.id.tostring",{"_index":142,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["question.questionchildren",{"_index":1263,"title":{},"body":{"injectables/FormService.html":{}}}],["question.questionchildren.foreach((section",{"_index":1901,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["question.questionparentid",{"_index":1266,"title":{},"body":{"injectables/FormService.html":{},"injectables/QuestionService.html":{}}}],["question.required",{"_index":1884,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["question.type",{"_index":1259,"title":{},"body":{"injectables/FormService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["question.usertyperestriction",{"_index":1972,"title":{},"body":{"injectables/QuestionService.html":{}}}],["question/question.service",{"_index":967,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["question?.id",{"_index":1797,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question_category",{"_index":67,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["question_category_id",{"_index":65,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["question_id",{"_index":70,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["questionbuilder",{"_index":2471,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["questionbuilder(question",{"_index":2534,"title":{},"body":{"miscellaneous/functions.html":{}}}],["questioncategory",{"_index":55,"title":{"interfaces/QuestionCategory.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["questioncategorybuilder",{"_index":2472,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["questioncategorybuilder(category",{"_index":2535,"title":{},"body":{"miscellaneous/functions.html":{}}}],["questioncategoryid",{"_index":54,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["questioncategoryresponse",{"_index":68,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["questionchildren",{"_index":57,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/TableComponent.html":{}}}],["questionchildren[sectionindex][childindex",{"_index":2246,"title":{},"body":{"components/TableComponent.html":{}}}],["questioncomponent",{"_index":286,"title":{"components/QuestionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["questioncontrolservice",{"_index":1849,"title":{"injectables/QuestionControlService.html":{}},"body":{"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["questionformarray",{"_index":1809,"title":{},"body":{"components/QuestionComponent.html":{}}}],["questionformarray.at",{"_index":1812,"title":{},"body":{"components/QuestionComponent.html":{}}}],["questionformcontrol",{"_index":765,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["questionformcontrol.setvalue(stringdate",{"_index":775,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["questionformgroup",{"_index":1805,"title":{},"body":{"components/QuestionComponent.html":{}}}],["questionid",{"_index":12,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"interfaces/Association.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/TableComponent.html":{}}}],["questionpage",{"_index":955,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["questionparentid",{"_index":52,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["questionresponse",{"_index":61,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["questions",{"_index":37,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{}}}],["questions.foreach((question",{"_index":1880,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["questionservice",{"_index":642,"title":{"injectables/QuestionService.html":{}},"body":{"components/DataquestHeaderComponent.html":{},"injectables/DetailedFormService.html":{},"components/OpenComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["questionspage",{"_index":917,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["radius",{"_index":626,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["ratio",{"_index":1170,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["reactiveformsmodule",{"_index":716,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["readonly",{"_index":148,"title":{},"body":{"injectables/ApiService.html":{},"components/MoneyDataTypeComponent.html":{}}}],["realizar",{"_index":1010,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["reanudar",{"_index":898,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["recommendedactions",{"_index":321,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["relation",{"_index":104,"title":{},"body":{"injectables/AnswerRelationService.html":{},"miscellaneous/functions.html":{}}}],["relation.answerpivot.answerid",{"_index":139,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.questionid",{"_index":138,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service",{"_index":1966,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["relation.service.ts",{"_index":85,"title":{},"body":{"injectables/AnswerRelationService.html":{},"coverage.html":{}}}],["relation.service.ts:11",{"_index":110,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:26",{"_index":107,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:35",{"_index":112,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:45",{"_index":101,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:55",{"_index":114,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:61",{"_index":117,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:8",{"_index":97,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation/answer",{"_index":84,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["remote",{"_index":1236,"title":{},"body":{"injectables/FormService.html":{}}}],["remove",{"_index":2019,"title":{},"body":{"injectables/StorageService.html":{}}}],["remove(key",{"_index":2030,"title":{},"body":{"injectables/StorageService.html":{}}}],["removealllisteners",{"_index":2064,"title":{},"body":{"injectables/SurveyService.html":{}}}],["removeddraft",{"_index":1025,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{}}}],["removeddraft.beneficiary",{"_index":1064,"title":{},"body":{"injectables/DraftService.html":{}}}],["removeddraft.id",{"_index":1065,"title":{},"body":{"injectables/DraftService.html":{}}}],["removedraft",{"_index":1036,"title":{},"body":{"injectables/DraftService.html":{}}}],["removedraft(draft",{"_index":1050,"title":{},"body":{"injectables/DraftService.html":{}}}],["removeolddrafts",{"_index":1037,"title":{},"body":{"injectables/DraftService.html":{}}}],["removephone",{"_index":1605,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["removesection",{"_index":2180,"title":{},"body":{"components/TableComponent.html":{}}}],["removetoken",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeuser",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["rendered",{"_index":2320,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["requerida",{"_index":1785,"title":{},"body":{"components/QuestionComponent.html":{}}}],["requerido",{"_index":2427,"title":{},"body":{"components/UniqueComponent.html":{}}}],["request",{"_index":1571,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["requestdata",{"_index":1207,"title":{},"body":{"components/FormListComponent.html":{}}}],["required",{"_index":48,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["requiredchildrenresponse",{"_index":1858,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["requiredtableresponse",{"_index":1859,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["resizecanvas",{"_index":1142,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["resource",{"_index":164,"title":{},"body":{"injectables/ApiService.html":{}}}],["respectivo",{"_index":1004,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["responda",{"_index":1779,"title":{},"body":{"components/QuestionComponent.html":{}}}],["response",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.data",{"_index":398,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{}}}],["response.status",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["respuesta",{"_index":1819,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["result",{"_index":183,"title":{},"body":{"injectables/ApiService.html":{},"components/AutocompleteComponent.html":{}}}],["result.value",{"_index":189,"title":{},"body":{"injectables/ApiService.html":{}}}],["results",{"_index":77,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resulttype",{"_index":1652,"title":{},"body":{"injectables/PhotoService.html":{}}}],["resumedraft",{"_index":807,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["return",{"_index":129,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FormService.html":{},"components/HomePage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["returns",{"_index":105,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":901,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/SurveysPage.html":{}}}],["role",{"_index":435,"title":{},"body":{"interfaces/AuthManagement.html":{},"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{},"interfaces/User.html":{}}}],["roles",{"_index":441,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["root",{"_index":122,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["root'},{'name",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["router",{"_index":413,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"injectables/SecureInnerPagesGuard.html":{},"components/SurveysPage.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/home/forms",{"_index":2569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rx",{"_index":2206,"title":{},"body":{"components/TableComponent.html":{},"components/TypeaheadComponent.html":{},"dependencies.html":{}}}],["rxfor",{"_index":2171,"title":{},"body":{"components/TableComponent.html":{},"components/TypeaheadComponent.html":{}}}],["rxjs",{"_index":171,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1251,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{}}}],["sale",{"_index":662,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["salir",{"_index":670,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["save",{"_index":2125,"title":{},"body":{"injectables/SurveyService.html":{}}}],["savedrafts",{"_index":1038,"title":{},"body":{"injectables/DraftService.html":{}}}],["savedstringarray",{"_index":1826,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savedstringarray.join",{"_index":1831,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savedstringarray.length",{"_index":1828,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savedstringarray.push(textanswered",{"_index":1830,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savedstringarray[1",{"_index":1829,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveopenresponse",{"_index":1700,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveopenresponse(question",{"_index":1725,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savepad",{"_index":1143,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["saveresponse",{"_index":1701,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveresponse(question",{"_index":1727,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveselection",{"_index":1702,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveselection(question",{"_index":1729,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savesurvey",{"_index":922,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["savesurveys",{"_index":2065,"title":{},"body":{"injectables/SurveyService.html":{}}}],["savetableresponse",{"_index":1703,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savetableresponse(question",{"_index":1731,"title":{},"body":{"components/QuestionComponent.html":{}}}],["screen",{"_index":2498,"title":{},"body":{"dependencies.html":{}}}],["scroll",{"_index":2168,"title":{},"body":{"components/SurveysPage.html":{}}}],["se",{"_index":665,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/QuestionComponent.html":{}}}],["search",{"_index":2323,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchansweridbyfarming",{"_index":2364,"title":{},"body":{"components/UniqueComponent.html":{}}}],["searchbarinput",{"_index":2301,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchbarinput(ev",{"_index":2327,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchquery",{"_index":2325,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchquery.tolowercase",{"_index":2350,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["secciones",{"_index":1781,"title":{},"body":{"components/QuestionComponent.html":{}}}],["sección",{"_index":2257,"title":{},"body":{"components/TableComponent.html":{}}}],["secondary",{"_index":679,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["secondlastname",{"_index":313,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["section.foreach((child",{"_index":1813,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["sectionformgroup",{"_index":1811,"title":{},"body":{"components/QuestionComponent.html":{},"components/TableComponent.html":{}}}],["sectionformgroup.get",{"_index":2217,"title":{},"body":{"components/TableComponent.html":{}}}],["sectionindex",{"_index":2195,"title":{},"body":{"components/TableComponent.html":{}}}],["secureinnerpagesguard",{"_index":2008,"title":{"injectables/SecureInnerPagesGuard.html":{}},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["see",{"_index":2346,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["seem",{"_index":1556,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["segundo_apellido",{"_index":330,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["segundo_nombre",{"_index":328,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["seguro",{"_index":1103,"title":{},"body":{"components/DraftsPage.html":{},"components/HomePage.html":{}}}],["selecciona",{"_index":548,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TypeaheadComponent.html":{}}}],["select",{"_index":2302,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["select(item",{"_index":2330,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selectedanswers",{"_index":2210,"title":{},"body":{"components/TableComponent.html":{}}}],["selectedanswers[key",{"_index":2221,"title":{},"body":{"components/TableComponent.html":{}}}],["selectedbeneficiary",{"_index":946,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["selectedbeneficiary.specialized",{"_index":986,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["selectedform",{"_index":918,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["selecteditem",{"_index":2304,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selectedquestionids",{"_index":349,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["selectedquestions",{"_index":322,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/typealiases.html":{}}}],["selectedvalue",{"_index":596,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selection",{"_index":523,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selectioncancel",{"_index":2306,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selectionchange",{"_index":2307,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selectionchanged",{"_index":532,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selectionchanged(selection",{"_index":563,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selector",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["sendrequests",{"_index":1524,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["sendrequests(operations",{"_index":1528,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["server",{"_index":2514,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":1233,"title":{},"body":{"injectables/FormService.html":{}}}],["services/api/api.service",{"_index":1250,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["services/association/association.service",{"_index":580,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["services/auth/auth.service",{"_index":421,"title":{},"body":{"injectables/AuthGuard.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["services/detailed",{"_index":581,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/OpenComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["services/draft/draft.service",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{}}}],["services/form/form.service",{"_index":825,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{}}}],["services/producer/producer.service",{"_index":584,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"components/HomePage.html":{}}}],["services/storage/storage.service",{"_index":1534,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["services/survey/survey.service",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/SurveysPage.html":{}}}],["servicios",{"_index":878,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["sesión",{"_index":1333,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["set",{"_index":2020,"title":{},"body":{"injectables/StorageService.html":{}}}],["set(key",{"_index":2032,"title":{},"body":{"injectables/StorageService.html":{}}}],["setbeneficiary",{"_index":923,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setbeneficiary(selectedbeneficiary",{"_index":944,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setcheckedvalue",{"_index":533,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["setcheckedvalue(answersformgroup",{"_index":565,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/UniqueComponent.html":{}}}],["setcheckedvalue(formgroup",{"_index":1487,"title":{},"body":{"components/MultipleComponent.html":{}}}],["setform",{"_index":924,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setform(form",{"_index":947,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setlocalassociations",{"_index":358,"title":{},"body":{"injectables/AssociationService.html":{}}}],["setlocalassociations(associations",{"_index":369,"title":{},"body":{"injectables/AssociationService.html":{}}}],["setlocalforms",{"_index":1242,"title":{},"body":{"injectables/FormService.html":{}}}],["setlocalforms(forms",{"_index":1248,"title":{},"body":{"injectables/FormService.html":{}}}],["setlocalproducers",{"_index":1660,"title":{},"body":{"injectables/ProducerService.html":{}}}],["setlocalproducers(producers",{"_index":1666,"title":{},"body":{"injectables/ProducerService.html":{}}}],["setothervalue",{"_index":2365,"title":{},"body":{"components/UniqueComponent.html":{}}}],["setothervalue(event",{"_index":2388,"title":{},"body":{"components/UniqueComponent.html":{}}}],["setquestions",{"_index":925,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/QuestionService.html":{}}}],["setquestions(questions",{"_index":1955,"title":{},"body":{"injectables/QuestionService.html":{}}}],["setquestionspage",{"_index":926,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setquestionspage(questionpage",{"_index":953,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setsignature",{"_index":1144,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["settextvalue",{"_index":1469,"title":{},"body":{"components/MultipleComponent.html":{}}}],["settextvalue(event",{"_index":1489,"title":{},"body":{"components/MultipleComponent.html":{}}}],["settimeout",{"_index":1222,"title":{},"body":{"components/FormListComponent.html":{}}}],["settoken",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["settoken(token",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuser",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuser(user",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["setvalue",{"_index":724,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["setvalue(event",{"_index":739,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["short",{"_index":883,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["showalreadyspecializedbeneficiaryalert",{"_index":927,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["shownospecializedbeneficiaryalert",{"_index":928,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["showquestion",{"_index":2181,"title":{},"body":{"components/TableComponent.html":{}}}],["showquestion(childindex",{"_index":2204,"title":{},"body":{"components/TableComponent.html":{}}}],["showquestion(id",{"_index":2253,"title":{},"body":{"components/TableComponent.html":{}}}],["showstorage",{"_index":2021,"title":{},"body":{"injectables/StorageService.html":{}}}],["si",{"_index":661,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["signature",{"_index":1177,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["signature_pad",{"_index":1159,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"dependencies.html":{}}}],["signatureimg",{"_index":1137,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["signaturepad",{"_index":1138,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["signaturepad(this.canvas.nativeelement",{"_index":1161,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["siguiente",{"_index":1839,"title":{},"body":{"components/QuestionComponent.html":{}}}],["sin",{"_index":1008,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/SurveysPage.html":{}}}],["sincronizadas",{"_index":2153,"title":{},"body":{"components/SurveysPage.html":{}}}],["sincronizar",{"_index":1325,"title":{},"body":{"components/HomePage.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["size",{"_index":710,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{}}}],["small",{"_index":1132,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["social",{"_index":1753,"title":{},"body":{"components/QuestionComponent.html":{}}}],["socio",{"_index":1767,"title":{},"body":{"components/QuestionComponent.html":{}}}],["solid",{"_index":1192,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["someanswerisselected",{"_index":136,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["specialized",{"_index":314,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["sqlite",{"_index":2507,"title":{},"body":{"dependencies.html":{}}}],["src/.../association.service.ts",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.namespace.ts",{"_index":2553,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../auth.service.ts",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../beneficiary.namespace.ts",{"_index":2552,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../builder.ts",{"_index":2528,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../details.guard.ts",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":2561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.mobile.ts",{"_index":2562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../form.service.ts",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../formdetail.namespace.ts",{"_index":2551,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":2529,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../offline",{"_index":2565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../producer.service.ts",{"_index":2559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../survey.service.ts",{"_index":2560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/detailed",{"_index":797,"title":{},"body":{"components/DetailedFormComponent.html":{},"coverage.html":{}}}],["src/app/components/form",{"_index":1199,"title":{},"body":{"components/FormListComponent.html":{},"coverage.html":{}}}],["src/app/components/header/dataquest",{"_index":628,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/question/question.component.ts",{"_index":1684,"title":{},"body":{"components/QuestionComponent.html":{},"coverage.html":{}}}],["src/app/components/question/question.component.ts:149",{"_index":1724,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:159",{"_index":1722,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:173",{"_index":1720,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:183",{"_index":1708,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:187",{"_index":1709,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:191",{"_index":1714,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:195",{"_index":1716,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:199",{"_index":1713,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:210",{"_index":1711,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:216",{"_index":1728,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:236",{"_index":1732,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:253",{"_index":1730,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:281",{"_index":1726,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:300",{"_index":1712,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:304",{"_index":1710,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:308",{"_index":1715,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:35",{"_index":1735,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:36",{"_index":1737,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:37",{"_index":1736,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:38",{"_index":1733,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:39",{"_index":1706,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:52",{"_index":1719,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:63",{"_index":1718,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:67",{"_index":1707,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:97",{"_index":1717,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts",{"_index":517,"title":{},"body":{"components/AutocompleteComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:101",{"_index":564,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:122",{"_index":566,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:132",{"_index":552,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:141",{"_index":554,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:31",{"_index":571,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:32",{"_index":547,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:33",{"_index":545,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:34",{"_index":546,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:35",{"_index":550,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:36",{"_index":544,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:38",{"_index":572,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:40",{"_index":542,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:48",{"_index":561,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:52",{"_index":562,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:57",{"_index":557,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:73",{"_index":559,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:85",{"_index":556,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:97",{"_index":555,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts",{"_index":1460,"title":{},"body":{"components/MultipleComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:16",{"_index":1473,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:17",{"_index":1472,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:18",{"_index":1471,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:20",{"_index":1470,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:24",{"_index":1486,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:26",{"_index":1479,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:30",{"_index":1483,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:44",{"_index":1478,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:53",{"_index":1488,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:62",{"_index":1481,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:70",{"_index":1490,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:78",{"_index":1475,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:89",{"_index":1485,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/open/date",{"_index":713,"title":{},"body":{"components/DateDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/drawing",{"_index":1134,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/email",{"_index":1196,"title":{},"body":{"components/EmailDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/money",{"_index":1399,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/month",{"_index":1451,"title":{},"body":{"components/MonthDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/number",{"_index":1512,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/open.component.ts",{"_index":1578,"title":{},"body":{"components/OpenComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/open.component.ts:44",{"_index":1584,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/open.component.ts:45",{"_index":1583,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/open.component.ts:46",{"_index":1582,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/open.component.ts:50",{"_index":1586,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/open.component.ts:52",{"_index":1585,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/percentage",{"_index":1594,"title":{},"body":{"components/PercentageDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/phone",{"_index":1599,"title":{},"body":{"components/PhoneDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/photo",{"_index":1625,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/text",{"_index":2258,"title":{},"body":{"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/table/table.component.ts",{"_index":2169,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/table/table.component.ts:102",{"_index":2200,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:106",{"_index":2198,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:110",{"_index":2191,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:114",{"_index":2197,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:121",{"_index":2194,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:130",{"_index":2205,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:158",{"_index":2190,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:165",{"_index":2189,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:21",{"_index":2185,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:22",{"_index":2184,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:23",{"_index":2183,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:31",{"_index":2201,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:38",{"_index":2202,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:59",{"_index":2186,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:74",{"_index":2188,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:88",{"_index":2203,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:98",{"_index":2199,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/type.component.ts",{"_index":2272,"title":{},"body":{"components/TypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/type.component.ts:27",{"_index":2275,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:28",{"_index":2274,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:29",{"_index":2273,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:33",{"_index":2281,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:36",{"_index":2276,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:40",{"_index":2280,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:44",{"_index":2277,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:48",{"_index":2279,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:52",{"_index":2278,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts",{"_index":2354,"title":{},"body":{"components/UniqueComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:102",{"_index":2385,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:114",{"_index":2386,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:131",{"_index":2378,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:140",{"_index":2389,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:150",{"_index":2381,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:167",{"_index":2376,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:183",{"_index":2377,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:192",{"_index":2382,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:205",{"_index":2371,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:219",{"_index":2380,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:25",{"_index":2370,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:26",{"_index":2369,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:27",{"_index":2368,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:29",{"_index":2391,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:30",{"_index":2367,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:38",{"_index":2383,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:40",{"_index":2372,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:44",{"_index":2390,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:55",{"_index":2379,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:69",{"_index":2374,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:87",{"_index":2387,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts",{"_index":2292,"title":{},"body":{"components/TypeaheadComponent.html":{},"coverage.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:14",{"_index":2309,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:15",{"_index":2310,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:16",{"_index":2311,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:18",{"_index":2313,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:19",{"_index":2314,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:21",{"_index":2334,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:22",{"_index":2308,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:26",{"_index":2326,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:30",{"_index":2331,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:35",{"_index":2333,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:39",{"_index":2315,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:43",{"_index":2316,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:47",{"_index":2328,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:57",{"_index":2318,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/guards/auth/auth.guard.ts",{"_index":411,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth/auth.guard.ts:11",{"_index":417,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/guards/auth/auth.guard.ts:8",{"_index":416,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/guards/auth/auth.guard.ts:9",{"_index":419,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/guards/details/details.guard.ts",{"_index":2455,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/guards/secure",{"_index":2009,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["src/app/models/auth.namespace.ts",{"_index":427,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/models/beneficiary.namespace.ts",{"_index":303,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/formdetail.namespace.ts",{"_index":6,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/detail/detail.page.ts",{"_index":788,"title":{},"body":{"components/DetailPage.html":{},"coverage.html":{}}}],["src/app/pages/detail/detail.page.ts:16",{"_index":793,"title":{},"body":{"components/DetailPage.html":{}}}],["src/app/pages/detail/detail.page.ts:20",{"_index":794,"title":{},"body":{"components/DetailPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts",{"_index":1087,"title":{},"body":{"components/DraftsPage.html":{},"coverage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:16",{"_index":1094,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:26",{"_index":1100,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:30",{"_index":1096,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:34",{"_index":1095,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:59",{"_index":1098,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/forms/forms.page.ts",{"_index":1290,"title":{},"body":{"components/FormsPage.html":{},"coverage.html":{}}}],["src/app/pages/forms/forms.page.ts:16",{"_index":1294,"title":{},"body":{"components/FormsPage.html":{}}}],["src/app/pages/forms/forms.page.ts:20",{"_index":1295,"title":{},"body":{"components/FormsPage.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1299,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:18",{"_index":1316,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:20",{"_index":1317,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:21",{"_index":1308,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:30",{"_index":1313,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:38",{"_index":1314,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:60",{"_index":1312,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:84",{"_index":1311,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:90",{"_index":1310,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:94",{"_index":1309,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/login/login.page.ts",{"_index":1355,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/pages/login/login.page.ts:22",{"_index":1360,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:30",{"_index":1368,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:38",{"_index":1363,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:40",{"_index":1362,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts",{"_index":2127,"title":{},"body":{"components/SurveysPage.html":{},"coverage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:17",{"_index":2134,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:25",{"_index":2142,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:29",{"_index":2135,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:33",{"_index":2137,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:38",{"_index":2139,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:43",{"_index":2141,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:48",{"_index":2136,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:54",{"_index":2138,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/services/api/api.service.ts",{"_index":147,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api/api.service.ts:13",{"_index":155,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:19",{"_index":162,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:23",{"_index":157,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:31",{"_index":165,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/association/association.service.ts",{"_index":353,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/association/association.service.ts:15",{"_index":362,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:26",{"_index":367,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:31",{"_index":372,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:61",{"_index":370,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:65",{"_index":368,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:69",{"_index":364,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth/auth.service.ts:19",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:26",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:31",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:36",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:42",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:46",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:52",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:56",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:63",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:83",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:88",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:94",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/detailed",{"_index":82,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/DetailedFormService.html":{},"injectables/PhotoService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["src/app/services/draft/draft.service.ts",{"_index":1029,"title":{},"body":{"injectables/DraftService.html":{},"coverage.html":{}}}],["src/app/services/draft/draft.service.ts:12",{"_index":1040,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:21",{"_index":1049,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:29",{"_index":1044,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:38",{"_index":1042,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:47",{"_index":1051,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:55",{"_index":1047,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:64",{"_index":1046,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:68",{"_index":1052,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:77",{"_index":1053,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:81",{"_index":1045,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:85",{"_index":1055,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/form/form.service.ts",{"_index":1232,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/form/form.service.ts:18",{"_index":1243,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:24",{"_index":1244,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:70",{"_index":1247,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:92",{"_index":1245,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:96",{"_index":1249,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/offline",{"_index":1520,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/producer/producer.service.ts",{"_index":1657,"title":{},"body":{"injectables/ProducerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/producer/producer.service.ts:16",{"_index":1663,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:23",{"_index":1665,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:27",{"_index":1670,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:33",{"_index":1669,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:59",{"_index":1664,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:63",{"_index":1667,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/storage/storage.service.ts",{"_index":2015,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/services/storage/storage.service.ts:10",{"_index":2024,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:16",{"_index":2027,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:29",{"_index":2033,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:33",{"_index":2026,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:37",{"_index":2031,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:41",{"_index":2029,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:45",{"_index":2028,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:49",{"_index":2034,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/survey/survey.service.ts",{"_index":2056,"title":{},"body":{"injectables/SurveyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/survey/survey.service.ts:106",{"_index":2071,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:13",{"_index":2081,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:14",{"_index":2067,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:22",{"_index":2077,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:28",{"_index":2068,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:36",{"_index":2073,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:44",{"_index":2078,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:48",{"_index":2072,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:54",{"_index":2074,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:58",{"_index":2079,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:62",{"_index":2080,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:96",{"_index":2075,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/utils/builder.ts",{"_index":2467,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.development.ts",{"_index":2473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.mobile.ts",{"_index":2474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2476,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":2477,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["standalone",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["startdraft",{"_index":929,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["startdrawing",{"_index":1145,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["startdrawing(event",{"_index":1155,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["startform",{"_index":808,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["statements",{"_index":2437,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":570,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["status",{"_index":2070,"title":{},"body":{"injectables/SurveyService.html":{}}}],["status.connected",{"_index":391,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["storage",{"_index":2023,"title":{},"body":{"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"dependencies.html":{}}}],["storage/storage.service",{"_index":376,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["storage_req_key",{"_index":1565,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageservice",{"_index":361,"title":{"injectables/StorageService.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["stored",{"_index":1554,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedobj",{"_index":1539,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedobj.length",{"_index":1541,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedobj.push(action",{"_index":1563,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedoperations",{"_index":1540,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedreq",{"_index":1577,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"miscellaneous/variables.html":{}}}],["storedrequest",{"_index":1529,"title":{"interfaces/StoredRequest.html":{}},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{}}}],["storerequest",{"_index":1525,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["storerequest(url",{"_index":1532,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"injectables/DraftService.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"components/HomePage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["stringdate",{"_index":750,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["stringdate.split",{"_index":757,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["strong",{"_index":905,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["styles",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["styleurls",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["su",{"_index":663,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["subheader",{"_index":1759,"title":{},"body":{"components/QuestionComponent.html":{}}}],["subscription",{"_index":1734,"title":{},"body":{"components/QuestionComponent.html":{}}}],["substring",{"_index":2348,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["succesfully",{"_index":1544,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["success",{"_index":1194,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["sum",{"_index":732,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["supplies",{"_index":318,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["survey",{"_index":919,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["survey)).pipe",{"_index":2103,"title":{},"body":{"injectables/SurveyService.html":{}}}],["survey.beneficiary.id",{"_index":998,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["survey.id",{"_index":2115,"title":{},"body":{"injectables/SurveyService.html":{}}}],["survey.sync",{"_index":2099,"title":{},"body":{"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["survey/survey.service",{"_index":969,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["surveys",{"_index":992,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["surveys'},{'name",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["surveys.filter((survey",{"_index":2144,"title":{},"body":{"components/SurveysPage.html":{}}}],["surveys.length",{"_index":2149,"title":{},"body":{"components/SurveysPage.html":{}}}],["surveys.page.html",{"_index":2129,"title":{},"body":{"components/SurveysPage.html":{}}}],["surveys.page.scss",{"_index":2128,"title":{},"body":{"components/SurveysPage.html":{}}}],["surveys.some((survey",{"_index":997,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["surveys_storage_key",{"_index":2126,"title":{},"body":{"injectables/SurveyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["surveyservice",{"_index":222,"title":{"injectables/SurveyService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"coverage.html":{}}}],["surveyspage",{"_index":288,"title":{"components/SurveysPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["surveystosync",{"_index":2097,"title":{},"body":{"injectables/SurveyService.html":{}}}],["surveystosync.map((survey",{"_index":2101,"title":{},"body":{"injectables/SurveyService.html":{}}}],["surveytype",{"_index":950,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["switch",{"_index":1799,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["switchmap",{"_index":380,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{}}}],["switchmap((status",{"_index":388,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["switchmap((storedoperations",{"_index":1538,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["sync",{"_index":32,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{}}}],["syncassociations",{"_index":359,"title":{},"body":{"injectables/AssociationService.html":{}}}],["syncassociations(forcerefresh",{"_index":371,"title":{},"body":{"injectables/AssociationService.html":{}}}],["synced",{"_index":1545,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["syncedsurvey",{"_index":2112,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncedsurvey.dateend",{"_index":2156,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurvey.description",{"_index":2158,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurvey.name",{"_index":2155,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurvey.questions[0].answers[0].value",{"_index":2157,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurvey.uuid",{"_index":2154,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurveys",{"_index":2146,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurveys.length",{"_index":2148,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncendpoint",{"_index":2577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syncproducers",{"_index":1661,"title":{},"body":{"injectables/ProducerService.html":{}}}],["syncproducers(forcerefresh",{"_index":1668,"title":{},"body":{"injectables/ProducerService.html":{}}}],["syncrequests",{"_index":2100,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncresult?.id",{"_index":2114,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncresults.find((syncresult",{"_index":2113,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncsurveys",{"_index":2066,"title":{},"body":{"injectables/SurveyService.html":{}}}],["t",{"_index":158,"title":{},"body":{"injectables/ApiService.html":{}}}],["tabla",{"_index":1260,"title":{},"body":{"injectables/FormService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["table",{"_index":2170,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["table.component.html",{"_index":2173,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":2172,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecomponent",{"_index":290,"title":{"components/TableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["tablemessage",{"_index":1778,"title":{},"body":{"components/QuestionComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2479,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1649,"title":{},"body":{"injectables/PhotoService.html":{}}}],["takephoto",{"_index":1627,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{}}}],["takes",{"_index":700,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["tap",{"_index":381,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["tap((associations",{"_index":403,"title":{},"body":{"injectables/AssociationService.html":{}}}],["tap((producers",{"_index":1679,"title":{},"body":{"injectables/ProducerService.html":{}}}],["tardar",{"_index":1327,"title":{},"body":{"components/HomePage.html":{}}}],["technicalassistance",{"_index":315,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["tel",{"_index":1833,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["template",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["templateurl",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["text",{"_index":47,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["textanswered",{"_index":1821,"title":{},"body":{"components/QuestionComponent.html":{}}}],["textareadatatypecomponent",{"_index":292,"title":{"components/TextAreaDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["textdatatypecomponent",{"_index":294,"title":{"components/TextDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["then((alert",{"_index":1769,"title":{},"body":{"components/QuestionComponent.html":{}}}],["then((position",{"_index":1015,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this._storage",{"_index":2042,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.foreach((value",{"_index":2052,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.get(key",{"_index":2048,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.keys",{"_index":2051,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.length",{"_index":2050,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.remove(key",{"_index":2049,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.set(key",{"_index":2047,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.alertcontroller",{"_index":1756,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.alertcontroller.create",{"_index":674,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["this.alertshown",{"_index":1755,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.answerrelationservice.checkanswerrelation",{"_index":2250,"title":{},"body":{"components/TableComponent.html":{}}}],["this.answerrelationservice.checkanswerrelation(nextquestion",{"_index":1986,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.answerrelationservice.disablequestion(question",{"_index":2007,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["this.answerrelationservice.enablequestion(question",{"_index":2006,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["this.apiservice.post",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(op.url",{"_index":1573,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.appversion",{"_index":1322,"title":{},"body":{"components/HomePage.html":{}}}],["this.areselected(relation",{"_index":135,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["this.assignbeneficiary(selection",{"_index":609,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.assignformcontrols(question",{"_index":1885,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.assoaciationservice.getassociationbyid(associationid",{"_index":2408,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.associations",{"_index":385,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associations.find((association",{"_index":407,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associationservice.getassociationbyid(associationid",{"_index":2271,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["this.atleastonechecked",{"_index":1897,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.authservice.getuser()).type",{"_index":1973,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.authservice.getuser().then((user",{"_index":1335,"title":{},"body":{"components/HomePage.html":{}}}],["this.authservice.islogged",{"_index":424,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["this.authservice.login(this.form.value",{"_index":1375,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authservice.logout",{"_index":1334,"title":{},"body":{"components/HomePage.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["this.backbuttonsubscription",{"_index":1745,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.backbuttonsubscription.unsubscribe",{"_index":1747,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.canvas.nativeelement.getcontext('2d').scale(ratio",{"_index":1174,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.height",{"_index":1173,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.offsetheight",{"_index":1169,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.offsetwidth",{"_index":1168,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.style.height",{"_index":1167,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.style.width",{"_index":1166,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.width",{"_index":1172,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.changeinputstate(answersformgroup",{"_index":2398,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.changeinputstate(formgroup",{"_index":1493,"title":{},"body":{"components/MultipleComponent.html":{}}}],["this.changequestionid(basearraycopy",{"_index":2228,"title":{},"body":{"components/TableComponent.html":{}}}],["this.changespecialized(producer",{"_index":1067,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.checkandrelation(answerrelation",{"_index":130,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["this.checkorrelation(answerrelation",{"_index":131,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["this.checkphonelistlength(phones",{"_index":1619,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["this.confirmchanges",{"_index":2339,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.confirmexit",{"_index":657,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["this.currencypipe.transform",{"_index":1431,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["this.currentquestion",{"_index":1743,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion.questioncategory.name",{"_index":1751,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion.questionchildren.foreach((section",{"_index":1810,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion.type",{"_index":1770,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion?.questioncategory.name",{"_index":1790,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion?.type",{"_index":1791,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.data",{"_index":588,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.decodetoken(token",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.detailedformservice.getform",{"_index":832,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.getform().beneficiary.associationid",{"_index":2270,"title":{},"body":{"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.detailedformservice.getform().beneficiary.recommendedactions",{"_index":2212,"title":{},"body":{"components/TableComponent.html":{}}}],["this.detailedformservice.getform().beneficiary.transplantdate",{"_index":743,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["this.detailedformservice.gettotalquestions",{"_index":881,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.isdraft",{"_index":685,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["this.detailedformservice.isform",{"_index":684,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["this.detailedformservice.isquestionspage",{"_index":656,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["this.detailedformservice.issurvey",{"_index":833,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["this.detailedformservice.savesurvey",{"_index":1787,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.detailedformservice.setbeneficiary(beneficiary",{"_index":617,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.detailedformservice.setform(formtosend",{"_index":1119,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["this.detailedformservice.setform(survey",{"_index":2145,"title":{},"body":{"components/SurveysPage.html":{}}}],["this.detailedformservice.setquestionspage(false",{"_index":831,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.setquestionspage(true",{"_index":836,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.startdraft",{"_index":835,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.updatemodifydate",{"_index":1808,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.disabled",{"_index":745,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["this.disablequestion(childquestion",{"_index":2252,"title":{},"body":{"components/TableComponent.html":{}}}],["this.disablequestion(nextquestion",{"_index":1989,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.draft",{"_index":974,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{}}}],["this.drafts",{"_index":1076,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts.filter((draft",{"_index":1081,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts.findindex((d",{"_index":1071,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts.push(draft",{"_index":1061,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts.splice(index",{"_index":1062,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts[index].fechaultimocambio",{"_index":1086,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.draftservice.deletedraft(index",{"_index":1109,"title":{},"body":{"components/DraftsPage.html":{}}}],["this.draftservice.getdrafts",{"_index":991,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{}}}],["this.draftservice.getlocaldrafts",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/DraftsPage.html":{}}}],["this.draftservice.pushdraft(copy",{"_index":1023,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.draftservice.removedraft",{"_index":1026,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.draftservice.savedrafts",{"_index":1024,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["this.draftservice.updatemodifydate(this.selectedform",{"_index":1028,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.enablequestion(childquestion",{"_index":2251,"title":{},"body":{"components/TableComponent.html":{}}}],["this.enablequestion(nextquestion",{"_index":1987,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.existsproducerwithspecializedform(selectedbeneficiary",{"_index":985,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.farming",{"_index":2407,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.fb.group",{"_index":1364,"title":{},"body":{"components/LoginPage.html":{}}}],["this.filtereditems",{"_index":2336,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.filteredquestions",{"_index":1970,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions.filter",{"_index":1971,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions.indexof(current",{"_index":1992,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions.length",{"_index":1976,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions[0",{"_index":1977,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions[lastindex",{"_index":1980,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions[this.getcurrentindex(current",{"_index":1983,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filterlist(ev.target.value",{"_index":2342,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.form",{"_index":973,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{}}}],["this.form.valid",{"_index":1374,"title":{},"body":{"components/LoginPage.html":{}}}],["this.formgroup",{"_index":1741,"title":{},"body":{"components/QuestionComponent.html":{},"components/UniqueComponent.html":{}}}],["this.formgroup.controls",{"_index":2213,"title":{},"body":{"components/TableComponent.html":{}}}],["this.formgroup.controls[nextquestion.id]!.disabled",{"_index":1795,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.formgroup.controls[this.currentquestion.id].valid",{"_index":1792,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.formgroup.controls[this.question.id",{"_index":1457,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["this.formgroup.controls[this.question.id].setvalue(event.detail.value",{"_index":1455,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["this.formgroup.get",{"_index":591,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.formgroup.get(`${this.question.id",{"_index":747,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MultipleComponent.html":{}}}],["this.formgroup.get(`${this.question.id}`)?.setvalue(base64data",{"_index":1187,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.formgroup.get(`${this.question.id}`)?.setvalue(event.target.value",{"_index":1198,"title":{},"body":{"components/EmailDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["this.formgroup.get(`${this.question.id}`)?.setvalue(photo",{"_index":1632,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.formgroup.get(`${this.question.id}`)?.value",{"_index":751,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["this.formgroup.valid",{"_index":1793,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.forms",{"_index":1225,"title":{},"body":{"components/FormListComponent.html":{},"components/FormsPage.html":{}}}],["this.formservice.getforms().subscribe((forms",{"_index":1298,"title":{},"body":{"components/FormsPage.html":{}}}],["this.formsservice.getforms().subscribe((forms",{"_index":1224,"title":{},"body":{"components/FormListComponent.html":{}}}],["this.generateformarray(question",{"_index":1887,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.generateformcontrol(question",{"_index":1886,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.generateformgroup(question",{"_index":1888,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.getanswerid(selection",{"_index":611,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getanswers",{"_index":605,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["this.getanswers().find((answer",{"_index":618,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getassociation",{"_index":2268,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["this.getcheckedanswerid(answersformgroup",{"_index":2397,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.getchildquestion",{"_index":2248,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getcurrentindex(currentquestion",{"_index":2001,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getdata",{"_index":589,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getfilteredlength",{"_index":2003,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getfirst",{"_index":1993,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getform().altitud",{"_index":871,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.getform().position",{"_index":868,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.getformcontrol(child",{"_index":1903,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.getformcontrol(question",{"_index":1882,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.getformgroup(i).get(questionid)!.enabled",{"_index":2255,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getformgroup(sectionindex",{"_index":2249,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getlast",{"_index":1981,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getlocaldrafts",{"_index":1056,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.getlocalforms",{"_index":1252,"title":{},"body":{"injectables/FormService.html":{}}}],["this.getlocalproducers",{"_index":1674,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.getlocation",{"_index":834,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.getnewyear(number(this.question.max",{"_index":778,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["this.getnewyear(number(this.question.min",{"_index":781,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["this.getnextquestion(question",{"_index":1984,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getpreviousquestion(question",{"_index":1995,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getpreviousvalidquestionfrom(previousquestion",{"_index":1998,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getprogress",{"_index":654,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["this.getquestionchildren(question",{"_index":1262,"title":{},"body":{"injectables/FormService.html":{}}}],["this.getquestionvalue",{"_index":587,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getselectedvalue(answers",{"_index":595,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getsurveys",{"_index":2143,"title":{},"body":{"components/SurveysPage.html":{}}}],["this.getsyncedsurveys",{"_index":2147,"title":{},"body":{"components/SurveysPage.html":{}}}],["this.gettoken",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getunsyncedsurveys",{"_index":2151,"title":{},"body":{"components/SurveysPage.html":{}}}],["this.httpclient.get(`/api/${endpoint",{"_index":178,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient.get(`/api/${endpoint}/${id",{"_index":179,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient.post(`/api/${endpoint",{"_index":182,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.init",{"_index":2039,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.initializeapp",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdraft",{"_index":671,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["this.isform",{"_index":660,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["this.islastanswer(id",{"_index":1502,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["this.isquestionvalid",{"_index":1748,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.issurvey",{"_index":976,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["this.istokenexpired(token",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isvalid",{"_index":1786,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.items",{"_index":2337,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.items.filter((item",{"_index":2351,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.jwthelperservice.istokenexpired(token",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keys().then((keys",{"_index":2045,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.length().then((length",{"_index":2043,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.loadingcontroller.create",{"_index":1371,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["this.loadingcontroller.dismiss",{"_index":1376,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loadothercontrol",{"_index":2413,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.loadproducers",{"_index":1319,"title":{},"body":{"components/HomePage.html":{}}}],["this.loaduser",{"_index":1320,"title":{},"body":{"components/HomePage.html":{}}}],["this.location.back",{"_index":658,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["this.modal.dismiss",{"_index":613,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/HomePage.html":{}}}],["this.modal.present",{"_index":590,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.navcontroller.pop",{"_index":880,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.navctrl.pop",{"_index":1788,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.online",{"_index":2090,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.open",{"_index":593,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.originalquestions",{"_index":1969,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.originalquestions.filter",{"_index":1968,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.originalquestions.length",{"_index":1975,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.other",{"_index":1503,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["this.phones",{"_index":1615,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["this.phonesobserver",{"_index":1616,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["this.phonesobserver.subscribe((phones",{"_index":1618,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["this.photoservice.takephoto().then((photo",{"_index":1631,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.platform.backbutton.subscribewithpriority(10",{"_index":1746,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.platform.is('mobile",{"_index":1118,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["this.platform.ready().then",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["this.preloadfarmingvalue(answersformgroup",{"_index":2395,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.preloadselectedanswers",{"_index":2209,"title":{},"body":{"components/TableComponent.html":{}}}],["this.preloadtransplantdate(transplantdate",{"_index":746,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["this.preloadvalue",{"_index":2264,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["this.presentalert",{"_index":2117,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.presentalert(false",{"_index":1789,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.presentalert(istable",{"_index":1771,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.producers",{"_index":1672,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.producerservice.updateproducers",{"_index":1337,"title":{},"body":{"components/HomePage.html":{}}}],["this.producersservice.getproducers",{"_index":602,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{}}}],["this.progress",{"_index":653,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/QuestionService.html":{}}}],["this.question.answers",{"_index":608,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.answers.find",{"_index":599,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.datatype",{"_index":1593,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.question.id",{"_index":592,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.max",{"_index":777,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.min",{"_index":780,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.order",{"_index":2208,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questioncategory.name",{"_index":2244,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questionchildren",{"_index":2242,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questionchildren.length",{"_index":2236,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questionchildren.pop",{"_index":2241,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questionchildren.push(basearraycopy",{"_index":2233,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.text",{"_index":2243,"title":{},"body":{"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question?.datatype",{"_index":2289,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.question?.order",{"_index":2291,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.question?.questioncategory.name",{"_index":2285,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.question?.text",{"_index":2290,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.question?.type",{"_index":2286,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.questioncontrolservice.toformgroup(basearraycopy",{"_index":2230,"title":{},"body":{"components/TableComponent.html":{}}}],["this.questioncontrolservice.toformgroup(this.filteredquestions",{"_index":2005,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.questionservice.getfirst",{"_index":1744,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.getformgroup",{"_index":1742,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.getnextvalidquestionfrom",{"_index":1776,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.getpreviousvalidquestionfrom",{"_index":1777,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.getprogress",{"_index":655,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["this.questionservice.setquestions(this.selectedform.questions",{"_index":1014,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.questionservice.togglenextquestionfrom",{"_index":1750,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.togglenextquestionfrom(question",{"_index":1794,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.togglenextquestionfrom(this.question",{"_index":2394,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.questionspage",{"_index":978,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.removeolddrafts",{"_index":1077,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.removetoken",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removeuser",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.requestdata",{"_index":1221,"title":{},"body":{"components/FormListComponent.html":{}}}],["this.requiredchildrenresponse",{"_index":1893,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.requiredtableresponse",{"_index":1905,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.resizecanvas",{"_index":1163,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.router.navigate(['/home",{"_index":425,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.router.navigate(['/login",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["this.router.navigate(['detail",{"_index":1120,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["this.savedrafts",{"_index":1068,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.saveopenresponse(question",{"_index":1802,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.saveresponse(child",{"_index":1814,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.saveresponse(this.currentquestion",{"_index":1749,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.saveselection(question",{"_index":1807,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.savesurveys",{"_index":2086,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.savetableresponse(question",{"_index":1804,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.searchansweridbyfarming",{"_index":2405,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.selectedform",{"_index":972,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.beneficiary",{"_index":980,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.id",{"_index":982,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.position",{"_index":1016,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.questions.length",{"_index":1019,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selection",{"_index":586,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.selectioncancel.emit",{"_index":2340,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.selectionchange.emit(this.workingselectedvalue",{"_index":2341,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.sendrequests(storedobj).pipe",{"_index":1542,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.setcheckedvalue(answersformgroup",{"_index":2406,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.setcheckedvalue(formgroup",{"_index":612,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["this.setlocalassociations(associations",{"_index":404,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.setlocalforms(forms",{"_index":1274,"title":{},"body":{"injectables/FormService.html":{}}}],["this.setlocalproducers(producers",{"_index":1680,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.setquestions",{"_index":977,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.setsignature",{"_index":1175,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.settoken(authresponse.token",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setuser(user",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.showalreadyspecializedbeneficiaryalert",{"_index":987,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.shownospecializedbeneficiaryalert",{"_index":988,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.showstorage",{"_index":2046,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.signatureimg",{"_index":1179,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad",{"_index":1160,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.clear",{"_index":1176,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.fromdata(data",{"_index":1190,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.fromdataurl(signature",{"_index":1178,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.off",{"_index":1164,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.on",{"_index":1165,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.todata",{"_index":1188,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.todataurl('image/png",{"_index":1185,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.storage.create",{"_index":2041,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.storage.definedriver(cordovasqlitedriver",{"_index":2040,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.storageservice.get('drafts').then((drafts",{"_index":1075,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.storageservice.get(associations_storage_key",{"_index":406,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.storageservice.get(forms_storage_key",{"_index":1287,"title":{},"body":{"injectables/FormService.html":{}}}],["this.storageservice.get(producers_storage_key",{"_index":1681,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.storageservice.get(storage_req_key).then((storedoperations",{"_index":1561,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.storageservice.get(surveys_storage_key).then((surveys",{"_index":2094,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.storageservice.remove(storage_req_key",{"_index":1550,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.storageservice.set",{"_index":1564,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.storageservice.set('associations",{"_index":405,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.storageservice.set('drafts",{"_index":1083,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.storageservice.set(endpoint",{"_index":1682,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.storageservice.set(forms_storage_key",{"_index":1288,"title":{},"body":{"injectables/FormService.html":{}}}],["this.storageservice.set(surveys_storage_key",{"_index":2096,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.survey",{"_index":975,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{}}}],["this.surveys",{"_index":2095,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.filter((survey",{"_index":2098,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.indexof(survey",{"_index":2122,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.map((survey",{"_index":2111,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.push(copy",{"_index":2085,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys[index].sync",{"_index":2123,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveyservice.addnetworkchangelistener",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["this.surveyservice.getlocalsurveys",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/SurveysPage.html":{}}}],["this.surveyservice.getsurveys",{"_index":993,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/SurveysPage.html":{}}}],["this.surveyservice.pushsurvey(removeddraft",{"_index":1027,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.surveyservice.syncsurveys",{"_index":1330,"title":{},"body":{"components/HomePage.html":{}}}],["this.syncassociations(true).subscribe((associations",{"_index":384,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.syncproducers(true).subscribe((producers",{"_index":1673,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.toastcontroller.create",{"_index":1111,"title":{},"body":{"components/DraftsPage.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.togglenextquestionfrom(nextquestion",{"_index":1990,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.updateprogress(nextquestion",{"_index":1988,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.updateprogress(previousquestion",{"_index":1999,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.url}/api/${endpoint",{"_index":191,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.user",{"_index":1336,"title":{},"body":{"components/HomePage.html":{}}}],["this.workingselectedvalue",{"_index":2338,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["thousandseparator",{"_index":1419,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["through",{"_index":1277,"title":{},"body":{"injectables/FormService.html":{}}}],["throw",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{}}}],["tiene",{"_index":1001,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["time",{"_index":1559,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["title",{"_index":537,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TypeaheadComponent.html":{}}}],["toast",{"_index":1543,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["toast.present",{"_index":1549,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["toast.then((toast",{"_index":1548,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["toastcontroller",{"_index":1093,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["todas",{"_index":1780,"title":{},"body":{"components/QuestionComponent.html":{}}}],["today",{"_index":753,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["today.toisostring",{"_index":754,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["todo",{"_index":2124,"title":{},"body":{"injectables/SurveyService.html":{},"components/TypeComponent.html":{}}}],["toformgroup",{"_index":1860,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["toformgroup(questions",{"_index":1876,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["togglenextquestionfrom",{"_index":1934,"title":{},"body":{"injectables/QuestionService.html":{}}}],["togglenextquestionfrom(question",{"_index":1957,"title":{},"body":{"injectables/QuestionService.html":{}}}],["token",{"_index":188,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["token.value",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["token_key",{"_index":187,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["token_storage_key",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokengetter",{"_index":2478,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toolbar",{"_index":703,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{}}}],["top",{"_index":902,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{}}}],["total",{"_index":892,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["trackitems",{"_index":2303,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["trackitems(index",{"_index":2332,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["transform",{"_index":585,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/FormListComponent.html":{}}}],["transition",{"_index":1845,"title":{},"body":{"components/QuestionComponent.html":{}}}],["translatey",{"_index":904,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["transplantdate",{"_index":320,"title":{},"body":{"interfaces/Association.html":{},"components/DateDataTypeComponent.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["true",{"_index":132,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":837,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{}}}],["tslib",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type'},{'name",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["type.component",{"_index":1589,"title":{},"body":{"components/OpenComponent.html":{},"components/TableComponent.html":{}}}],["type.component.html",{"_index":718,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{}}}],["type.component.scss",{"_index":717,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{}}}],["type.component.ts",{"_index":715,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"coverage.html":{}}}],["type.component.ts:14",{"_index":1595,"title":{},"body":{"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:15",{"_index":728,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:16",{"_index":727,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:17",{"_index":726,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:18",{"_index":1148,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:19",{"_index":1516,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:20",{"_index":1515,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:21",{"_index":736,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:22",{"_index":1606,"title":{},"body":{"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:23",{"_index":1147,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:24",{"_index":1410,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:25",{"_index":1409,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{}}}],["type.component.ts:26",{"_index":1611,"title":{},"body":{"components/PhoneDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:27",{"_index":1152,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:28",{"_index":2261,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["type.component.ts:29",{"_index":738,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["type.component.ts:30",{"_index":1422,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:31",{"_index":1597,"title":{},"body":{"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:33",{"_index":2263,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["type.component.ts:34",{"_index":735,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:35",{"_index":1598,"title":{},"body":{"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:36",{"_index":1408,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{}}}],["type.component.ts:37",{"_index":2262,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["type.component.ts:42",{"_index":1613,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:43",{"_index":1413,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["type.component.ts:44",{"_index":1517,"title":{},"body":{"components/NumberDataTypeComponent.html":{}}}],["type.component.ts:46",{"_index":1154,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:54",{"_index":1412,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:55",{"_index":741,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:59",{"_index":1607,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:60",{"_index":1151,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:62",{"_index":1596,"title":{},"body":{"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:64",{"_index":1149,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:68",{"_index":1153,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{}}}],["type.component.ts:71",{"_index":729,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{}}}],["type.component.ts:74",{"_index":1156,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:78",{"_index":730,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["type.component.ts:80",{"_index":1612,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:85",{"_index":733,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["type.component.ts:89",{"_index":1609,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:95",{"_index":1411,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["type/date",{"_index":714,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/drawing",{"_index":1135,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/email",{"_index":1197,"title":{},"body":{"components/EmailDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/money",{"_index":1400,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/month",{"_index":1452,"title":{},"body":{"components/MonthDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/number",{"_index":1513,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/percentage",{"_index":1591,"title":{},"body":{"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"coverage.html":{}}}],["type/phone",{"_index":1592,"title":{},"body":{"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"coverage.html":{}}}],["type/photo",{"_index":1588,"title":{},"body":{"components/OpenComponent.html":{},"components/PhotoDataTypeComponent.html":{},"coverage.html":{}}}],["type/table/table.component",{"_index":1738,"title":{},"body":{"components/QuestionComponent.html":{}}}],["type/text",{"_index":1590,"title":{},"body":{"components/OpenComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"coverage.html":{}}}],["type/type.component",{"_index":1739,"title":{},"body":{"components/QuestionComponent.html":{}}}],["typeahead",{"_index":2293,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["typeahead'},{'name",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["typeahead.component.html",{"_index":2295,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["typeahead.component.scss",{"_index":2294,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["typeaheadcomponent",{"_index":295,"title":{"components/TypeaheadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["typealiases",{"_index":2549,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typecomponent",{"_index":297,"title":{"components/TypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["types",{"_index":442,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["técnica",{"_index":334,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["ubicación",{"_index":849,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["un",{"_index":1011,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["una",{"_index":1379,"title":{},"body":{"components/LoginPage.html":{}}}],["undefined",{"_index":366,"title":{},"body":{"injectables/AssociationService.html":{},"components/DateDataTypeComponent.html":{},"injectables/FormService.html":{},"injectables/QuestionService.html":{},"injectables/SurveyService.html":{},"components/TextDataTypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["undopad",{"_index":1146,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["unique",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["unique.component.html",{"_index":2356,"title":{},"body":{"components/UniqueComponent.html":{}}}],["unique.component.scss",{"_index":2355,"title":{},"body":{"components/UniqueComponent.html":{}}}],["unique/unique.component",{"_index":2284,"title":{},"body":{"components/TypeComponent.html":{}}}],["uniquecomponent",{"_index":298,"title":{"components/UniqueComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["unknown",{"_index":418,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/StorageService.html":{}}}],["uno",{"_index":549,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TypeaheadComponent.html":{}}}],["unsyncedsurvey.dateend",{"_index":2161,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurvey.description",{"_index":2163,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurvey.name",{"_index":2160,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurvey.questions[0].answers[0].value",{"_index":2162,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurvey.uuid",{"_index":2159,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurveys",{"_index":2150,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurveys.length",{"_index":2152,"title":{},"body":{"components/SurveysPage.html":{}}}],["up",{"_index":701,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["update",{"_index":2319,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["updated_at",{"_index":444,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["updateddate",{"_index":437,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["updatedsurveys",{"_index":2110,"title":{},"body":{"injectables/SurveyService.html":{}}}],["updatemodifydate",{"_index":930,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{}}}],["updatemodifydate(draft",{"_index":1054,"title":{},"body":{"injectables/DraftService.html":{}}}],["updateproducers",{"_index":1662,"title":{},"body":{"injectables/ProducerService.html":{}}}],["updateprogress",{"_index":1935,"title":{},"body":{"injectables/QuestionService.html":{}}}],["updateprogress(currentquestion",{"_index":1959,"title":{},"body":{"injectables/QuestionService.html":{}}}],["uploadsurvey",{"_index":2578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadsurveys",{"_index":1307,"title":{},"body":{"components/HomePage.html":{},"injectables/SurveyService.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":149,"title":{},"body":{"injectables/ApiService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"miscellaneous/variables.html":{}}}],["url('../../../assets/imgs/header",{"_index":1349,"title":{},"body":{"components/HomePage.html":{}}}],["user",{"_index":432,"title":{"interfaces/User.html":{}},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["user.name",{"_index":1344,"title":{},"body":{"components/HomePage.html":{}}}],["user.type",{"_index":1346,"title":{},"body":{"components/HomePage.html":{}}}],["user_id",{"_index":44,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["user_key",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["user_storage_key",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_type_restriction",{"_index":63,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["userbuilder",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["userbuilder(authresponse.user",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["userbuilder(user",{"_index":2538,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userresponse",{"_index":439,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["usertyperestriction",{"_index":58,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["usuario",{"_index":1343,"title":{},"body":{"components/HomePage.html":{}}}],["utils/builder",{"_index":383,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["uuid",{"_index":26,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"components/SurveysPage.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":966,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["v4",{"_index":965,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["validation",{"_index":1911,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validationerrors",{"_index":1878,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validatorfn",{"_index":1865,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validators",{"_index":1369,"title":{},"body":{"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/QuestionControlService.html":{},"components/UniqueComponent.html":{}}}],["validators.email",{"_index":1366,"title":{},"body":{"components/LoginPage.html":{}}}],["validators.maxlength(10",{"_index":1892,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validators.minlength(10",{"_index":1891,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validators.minlength(6",{"_index":1367,"title":{},"body":{"components/LoginPage.html":{}}}],["validators.required",{"_index":1365,"title":{},"body":{"components/LoginPage.html":{},"injectables/QuestionControlService.html":{}}}],["valor",{"_index":1438,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["value",{"_index":13,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":126,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["variable",{"_index":2456,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2554,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":897,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["version",{"_index":1347,"title":{},"body":{"components/HomePage.html":{},"properties.html":{}}}],["vertically",{"_index":696,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["view",{"_index":2321,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["viewchild",{"_index":574,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{}}}],["viewchild('canvas",{"_index":1158,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["viewchild('modal",{"_index":569,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/HomePage.html":{}}}],["viewsurvey",{"_index":809,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["void",{"_index":115,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["vuelve",{"_index":858,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["válidos",{"_index":1381,"title":{},"body":{"components/LoginPage.html":{}}}],["white",{"_index":1354,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["width",{"_index":624,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["window.addeventlistener('resize",{"_index":1162,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["workingselectedvalue",{"_index":2297,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["works",{"_index":1181,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["x",{"_index":711,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["xx",{"_index":1133,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["y",{"_index":857,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/SurveysPage.html":{},"components/UniqueComponent.html":{}}}],["ya",{"_index":1000,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["year",{"_index":756,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["years",{"_index":734,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["yes",{"_index":166,"title":{},"body":{"injectables/ApiService.html":{}}}],["zona",{"_index":351,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["zone",{"_index":307,"title":{},"body":{"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Producer.html":{},"interfaces/User.html":{}}}],["zone.js",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Answer.html":{"url":"interfaces/Answer.html","title":"interface - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnswerPivot.html":{"url":"interfaces/AnswerPivot.html","title":"interface - AnswerPivot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnswerPivot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            answerId\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answerId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnswerRelation.html":{"url":"interfaces/AnswerRelation.html","title":"interface - AnswerRelation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnswerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            answerPivot\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answerPivot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answerPivot:         AnswerPivot\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnswerPivot\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnswerRelationService.html":{"url":"injectables/AnswerRelationService.html","title":"injectable - AnswerRelationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnswerRelationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                areSelected\n                            \n                            \n                                    Private\n                                checkAndRelation\n                            \n                            \n                                    Public\n                                checkAnswerRelation\n                            \n                            \n                                    Private\n                                checkOrRelation\n                            \n                            \n                                    Public\n                                disableQuestion\n                            \n                            \n                                    Public\n                                enableQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        areSelected\n                        \n                    \n                \n            \n            \n                \n                        \n                    areSelected(relation: FormDetail.AnswerRelation, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                        FormDetail.AnswerRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkAndRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAndRelation(answerRelation: FormDetail.AnswerRelation[], formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answerRelation\n                                            \n                                                        FormDetail.AnswerRelation[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        checkAnswerRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAnswerRelation(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkOrRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkOrRelation(answerRelation: FormDetail.AnswerRelation[], formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answerRelation\n                                            \n                                                        FormDetail.AnswerRelation[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        disableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        enableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnswerRelationService {\n  constructor() {}\n\n  public checkAnswerRelation(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): boolean {\n    const answerRelation: FormDetail.AnswerRelation[] = question.answersRelation;\n    var answerRelationType: string = answerRelation[0]?.answerPivot.type;\n    if (answerRelationType === 'and') {\n      return this.checkAndRelation(answerRelation, formGroup);\n    } else if (answerRelationType === 'or') {\n      return this.checkOrRelation(answerRelation, formGroup);\n    } else {\n      return true;\n    }\n  }\n\n  private checkAndRelation(answerRelation: FormDetail.AnswerRelation[], formGroup: FormGroup): boolean {\n    const everyAnswerIsSelected: boolean = answerRelation.every(\n      (relation: FormDetail.AnswerRelation) => {\n        return this.areSelected(relation, formGroup);\n      }\n    );\n    return everyAnswerIsSelected;\n  }\n\n  private checkOrRelation(answerRelation: FormDetail.AnswerRelation[], formGroup: FormGroup): boolean {\n    const someAnswerIsSelected: boolean = answerRelation.some(\n      (relation: FormDetail.AnswerRelation) => {\n        return this.areSelected(relation, formGroup);\n      }\n    );\n\n    return someAnswerIsSelected;\n  }\n\n  private areSelected(relation: FormDetail.AnswerRelation, formGroup: FormGroup): boolean {\n    const questionId: string = relation.questionId;\n    const answerId: number = relation.answerPivot.answerId;\n    const value: boolean = formGroup\n      .get(questionId)!\n      .get(answerId.toString())!.value;\n\n    return value;\n  }\n\n  public disableQuestion(question: FormDetail.Question, formGroup: FormGroup): void {\n    const questionId: string = question.id.toString();\n    formGroup.get(questionId)?.reset();\n    formGroup.get(questionId)?.disable();\n  }\n\n  public enableQuestion(question: FormDetail.Question, formGroup: FormGroup): void {\n    const questionId: string = question.id.toString();\n    formGroup.get(questionId)?.enable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                    Async\n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/api.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(endpoint: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:23\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:19\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(endpoint: string, resource?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                resource\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.url\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api/api.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CapacitorHttp, HttpResponse } from '@capacitor/core';\nimport { environment } from 'environment';\nimport { Preferences } from '@capacitor/preferences';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private readonly url = environment.url;\n\n  constructor(\n    private httpClient: HttpClient,\n  ) {}\n\n  public getAll (endpoint: string): Observable {\n    return this.httpClient.get(`/api/${endpoint}/`);\n  }\n\n  public get (endpoint: string, id: string): Observable {\n    return this.httpClient.get(`/api/${endpoint}/${id}`);\n  }\n\n  /* public post (endpoint: string, resource?: { email: string; password: string; }): Observable {\n    return this.httpClient.post(`/api/${endpoint}/`, resource);\n  } */\n\n  public async post (endpoint: string, resource?: any): Promise {\n    const result = await Preferences.get({ key: 'TOKEN_KEY' });\n    const token = result.value\n    const options = {\n      url: `${this.url}/api/${endpoint}`,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      data: JSON.stringify(resource)\n    }\n\n    return CapacitorHttp.post(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                environmentInjector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(surveyService: SurveyService, draftService: DraftService, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeApp\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        environmentInjector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EnvironmentInjector)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EnvironmentInjector, inject } from '@angular/core';\nimport { IonicModule, Platform } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { SurveyService } from '@services/survey/survey.service';\nimport { DraftService } from '@services/draft/draft.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule],\n})\nexport class AppComponent {\n  public environmentInjector = inject(EnvironmentInjector);\n\n  constructor(\n    private surveyService: SurveyService,\n    private draftService: DraftService,\n    private platform: Platform\n  ) {\n    this.initializeApp();\n  }\n\n  private initializeApp() {\n    this.platform.ready().then(() => {\n      this.surveyService.addNetworkChangeListener();\n      this.surveyService.getLocalSurveys();\n      this.draftService.getLocalDrafts();\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Association.html":{"url":"interfaces/Association.html","title":"interface - Association","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Association\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Beneficiary.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            farming\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            identification\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nit\n                                        \n                                \n                                \n                                        \n                                            zone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        farming\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        farming:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identification\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identification:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Beneficiary {\n\n  export interface Producer {\n    cedula: string;\n    firstname: string;\n    middlename: string;\n    lastname: string;\n    secondLastname: string;\n    id: string;\n    specialized: boolean;\n    technicalAssistance: boolean;\n    demonstrationPlot: boolean;\n    greenhouse: boolean;\n    supplies: boolean;\n    associationId: number;\n    transplantDate: string;\n    recommendedActions: SelectedQuestions\n  }\n\n  export const ProducerBaseParams = {\n    cedula: '',\n    firstname: '',\n    middlename: '',\n    lastname: '',\n    secondLastname: '',\n    id: '',\n    specialized: false,\n    technicalAssistance: false,\n    demonstrationPlot: false,\n    greenhouse: false,\n    supplies: false,\n    associationId: 0,\n    transplantDate: '',\n    recommendedActions: {}\n  };\n\n  export type ProducerResponse = {\n    cedula: string;\n    primer_nombre: string;\n    segundo_nombre: string;\n    primer_apellido: string;\n    segundo_apellido: string;\n    identification: string;\n    has_especializada: number;\n    at_p5: number;          // asistencia técnica\n    pd_p5: number;          // parcela demostrativa\n    cm_p5: number;          // casa malla (invernadero espacial)\n    insumo_p5: number;      // insumos\n    association_id: number; // id de la asociacion\n    transplantDate: string;\n    selectedQuestionIds: SelectedQuestions\n  }\n\n  export type SelectedQuestions = { [questionId: string] : boolean };\n\n  export interface Association {\n    id: number;\n    nit: number;\n    name: string;\n    identification: string;\n    zone: string;\n    farming: string;\n  }\n\n  export type AssociationResponse = {\n    id: number;\n    nit: number;\n    name: string;\n    identification: string;\n    zona: string;\n    farming: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssociationService.html":{"url":"injectables/AssociationService.html","title":"injectable - AssociationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AssociationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/association/association.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                associations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAssociationById\n                            \n                            \n                                    Public\n                                getAssociations\n                            \n                            \n                                    Private\n                                getLocalAssociations\n                            \n                            \n                                    Private\n                                setLocalAssociations\n                            \n                            \n                                    Private\n                                syncAssociations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/association/association.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAssociationById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssociationById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Beneficiary.Association | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAssociations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssociations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Beneficiary.Association[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLocalAssociations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalAssociations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLocalAssociations\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLocalAssociations(associations: Beneficiary.Association[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                associations\n                                            \n                                                            Beneficiary.Association[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncAssociations\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncAssociations(forceRefresh: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                forceRefresh\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Beneficiary.Association[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/association/association.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApiService } from '../api/api.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { StorageService } from '../storage/storage.service';\nimport { Network } from '@capacitor/network';\nimport { Observable, from, map, switchMap, tap } from 'rxjs';\nimport { HttpResponse } from '@capacitor/core';\nimport { associationBuilder } from '@utils/builder';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AssociationService {\n\n  associations: Beneficiary.Association[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private storageService: StorageService\n  ) {\n    this.syncAssociations(true).subscribe((associations: Beneficiary.Association[]) => {\n      this.associations = associations;\n    });\n  }\n\n  public getAssociations(): Beneficiary.Association[] {\n    console.log(this.associations);\n    return this.associations;\n  }\n\n  private syncAssociations(forceRefresh: boolean = false): Observable {\n    return from(Network.getStatus()).pipe(\n      switchMap((status) => {\n        console.log('status')\n        console.log(status.connected)\n        if (!status.connected || !forceRefresh) {\n          return from(this.getLocalAssociations());\n        } else {\n          console.log('syncAssociations')\n          return from(this.apiService.post(ENDPOINT)).pipe(\n            map((response: HttpResponse) => {\n              const associationResponse: Beneficiary.AssociationResponse[] = JSON.parse(\n                response.data\n              );\n              console.log('associationResponse');\n              console.log(associationResponse);\n              const associations: Beneficiary.Association[] = associationResponse.map(\n                (association) => associationBuilder(association)\n              );\n              return associations;\n            }),\n            tap((associations: Beneficiary.Association[]) => {\n              this.setLocalAssociations(associations);\n            })\n          );\n        }\n      })\n    );\n  }\n\n  private setLocalAssociations(associations: Beneficiary.Association[]): void {\n    this.storageService.set('associations', associations);\n  }\n\n  private getLocalAssociations(): Promise {\n    return this.storageService.get(ASSOCIATIONS_STORAGE_KEY)\n  }\n\n  public getAssociationById(id: number): Beneficiary.Association | undefined {\n    return this.associations.find((association) => association.id === id);\n  }\n}\n\nconst ASSOCIATIONS_STORAGE_KEY = 'associations';\nconst ENDPOINT = ASSOCIATIONS_STORAGE_KEY;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/guards/auth/auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/auth/auth.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/guards/auth/auth.guard.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/guards/auth/auth.guard.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard {\n  constructor(public authService: AuthService, public router: Router) {}\n\n  async canActivate() {\n\n    const Logged = await this.authService.isLogged();\n\n    if (Logged) {\n      this.router.navigate(['/home']);\n    }\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthManagement.html":{"url":"interfaces/AuthManagement.html","title":"interface - AuthManagement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthManagement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Auth.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            logout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logout:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Authentication {\n  export interface User {\n    id: number;\n    name: string;\n    email: string;\n    emailVerifiedAt: string;\n    idCard: string;\n    role: string;\n    type: string;\n    zone: string;\n    creationDate: string;\n    updatedDate: string;\n  }\n\n  export type AuthResponse = {\n    token: string;\n    user: UserResponse;\n  };\n\n  export type UserResponse = {\n    id: number;\n    name: string;\n    email: string;\n    email_verified_at: string;\n    cedula: string;\n    roles: string;\n    types: string;\n    zone: string;\n    created_at: string;\n    updated_at: string;\n  };\n\n  export type AuthParams = {\n    email: string;\n    password: string;\n  };\n\n  export interface AuthManagement {\n    login: (credentials: AuthParams) => Promise;\n    logout: () => void;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                decodeToken\n                            \n                            \n                                    Public\n                                    Async\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                getUser\n                            \n                            \n                                    Public\n                                    Async\n                                isLogged\n                            \n                            \n                                    Private\n                                isTokenExpired\n                            \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                removeToken\n                            \n                            \n                                    Private\n                                removeUser\n                            \n                            \n                                    Private\n                                setToken\n                            \n                            \n                                    Private\n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, apiService: ApiService, jwtHelperService: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelperService\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        decodeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decodeToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        isLogged\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLogged()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isTokenExpired\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTokenExpired(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(authParams: Authentication.AuthParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authParams\n                                            \n                                                            Authentication.AuthParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    setToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUser(user: Authentication.User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Authentication.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport jwt_decode from 'jwt-decode';\nimport { ApiService } from '../api/api.service';\nimport { HttpResponse } from '@capacitor/core';\nimport { Preferences } from '@capacitor/preferences';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Authentication } from '@models/Auth.namespace';\nimport { userBuilder } from '@utils/builder';\nimport { Observable, from, map } from 'rxjs';\n\nconst TOKEN_STORAGE_KEY = 'TOKEN_KEY';\nconst USER_STORAGE_KEY = 'USER_KEY';\nconst ENDPOINT = 'auth/login';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService implements Authentication.AuthManagement {\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private jwtHelperService: JwtHelperService\n  ) {}\n\n  public async getToken(): Promise {\n    const token = await Preferences.get({ key: TOKEN_STORAGE_KEY });\n    return token.value || null;\n  }\n\n  public async getUser(): Promise {\n    const { value } = await Preferences.get({ key: USER_STORAGE_KEY })\n    return JSON.parse(value!) as Authentication.User;\n  }\n\n  private setUser(user: Authentication.User) {\n    this.removeUser();\n    const options = { key: USER_STORAGE_KEY, value: JSON.stringify(user) };\n    Preferences.set(options);\n  }\n\n  private removeUser() {\n    Preferences.remove({ key: USER_STORAGE_KEY });\n  }\n\n  private setToken(token: string) {\n    this.removeToken();\n    const options = { key: TOKEN_STORAGE_KEY, value: token };\n    Preferences.set(options);\n  }\n\n  public removeToken() {\n    Preferences.remove({ key: TOKEN_STORAGE_KEY });\n  }\n\n  public async decodeToken(token: string): Promise {\n    if (token) {\n      return jwt_decode(token);\n    }\n    return false;\n  }\n\n  public async login(\n    authParams: Authentication.AuthParams\n  ): Promise {\n    const response: HttpResponse = await this.apiService.post(\n      ENDPOINT,\n      authParams\n    );\n    console.log(response);\n    if (response.status !== 200) {\n      throw new Error(response.data.error);\n    }\n    const authResponse: Authentication.AuthResponse =\n      response.data as Authentication.AuthResponse;\n    this.setToken(authResponse.token);\n    const user: Authentication.User = userBuilder(authResponse.user);\n    this.setUser(user);\n    this.router.navigate(['/home']);\n    return user;\n  }\n\n  public logout(): void {\n    this.removeToken();\n    this.router.navigate(['/login']);\n  }\n\n  public async isLogged(): Promise {\n    const token = (await this.getToken()) as string;\n    const decodedToken = await this.decodeToken(token);\n    return decodedToken && !this.isTokenExpired(token);\n  }\n\n  private isTokenExpired(token: string): boolean {\n    return this.jwtHelperService.isTokenExpired(token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AutocompleteComponent.html":{"url":"components/AutocompleteComponent.html","title":"component - AutocompleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AutocompleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/autocomplete/autocomplete.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-autocomplete\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                TypeaheadComponent\n                \n            \n\n            \n                styleUrls\n                ./autocomplete.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./autocomplete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    \n                                modal\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assignBeneficiary\n                            \n                            \n                                    Private\n                                getAnswerId\n                            \n                            \n                                getAnswers\n                            \n                            \n                                    Private\n                                getData\n                            \n                            \n                                    Private\n                                getQuestionValue\n                            \n                            \n                                    Private\n                                getSelectedValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                    Private\n                                setCheckedValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                open\n                            \n                            \n                                question\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(producersService: ProducerService, alertController: AlertController, detailedFormService: DetailedFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        producersService\n                                                  \n                                                        \n                                                                        ProducerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Selecciona uno'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        assignBeneficiary\n                        \n                    \n                \n            \n            \n                \n                        \n                    assignBeneficiary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAnswerId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnswerId(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAnswers\n                        \n                    \n                \n            \n            \n                \ngetAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getQuestionValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQuestionValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSelectedValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSelectedValue(answersFormGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionChanged\n                        \n                    \n                \n            \n            \n                \nselectionChanged(selection: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setCheckedValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCheckedValue(answersFormGroup: FormGroup, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonModal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n  booleanAttribute,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n} from '@angular/forms';\nimport { AlertController, IonModal, IonicModule } from '@ionic/angular';\nimport { TypeaheadComponent } from '@components/typeahead/typeahead.component';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { AssociationService } from '@services/association/association.service';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { ProducerService } from '@services/producer/producer.service';\n\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule, TypeaheadComponent],\n})\nexport class AutocompleteComponent implements OnInit {\n  @ViewChild('modal', { static: true }) modal!: IonModal;\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ transform: booleanAttribute }) open!: boolean;\n  @Input() title = 'Selecciona uno';\n  @Input({ required: true }) disabled!: boolean;\n\n  selection!: string;\n\n  public data: string[] = [];\n\n  constructor(\n    private producersService: ProducerService,\n    private alertController: AlertController,\n    private detailedFormService: DetailedFormService\n  ) {}\n\n  ngOnInit() {\n    this.selection = this.getQuestionValue();\n  }\n\n  openModal(): void {\n    this.data = this.getData();\n    this.modal.present();\n  }\n\n  private getQuestionValue(): string {\n    const answers: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    let value: string = '';\n    if (this.open) {\n      const formControl: FormControl = this.formGroup.get(\n        `${this.question.id}`\n      ) as FormControl;\n      value = formControl.value;\n    } else {\n      value = this.getSelectedValue(answers);\n    }\n    return value;\n  }\n\n  private getSelectedValue(answersFormGroup: FormGroup): string {\n    let selectedValue: string = '';\n    for (const key in answersFormGroup.controls) {\n      if (answersFormGroup.controls[key].value) {\n        selectedValue = this.question.answers.find(\n          (answer) => answer.id.toString() === key\n        )?.value as string;\n      }\n    }\n    return selectedValue;\n  }\n\n  private getData(): string[] {\n    let result: string[] = [];\n    if (this.open) {\n      const producers: Beneficiary.Producer[] = this.producersService.getProducers();\n      result = producers.map((producer) => producer.id);\n    } else {\n      const answers = this.getAnswers();\n      result = answers.map((answer) => answer.value);\n    }\n    return result;\n  }\n\n  getAnswers() {\n    return this.question.answers;\n  }\n\n  selectionChanged(selection: string) {\n\n    if (this.open) {\n      const formControl: FormControl = this.formGroup.get(\n        `${this.question.id}`\n      ) as FormControl;\n      if (!this.assignBeneficiary(selection)) {\n        return;\n      }\n      formControl.setValue(selection);\n    } else {\n      const formGroup: FormGroup = this.formGroup.get(\n        `${this.question.id}`\n      ) as FormGroup;\n      const answerId: string = this.getAnswerId(selection);\n      this.setCheckedValue(formGroup, answerId);\n    }\n    this.selection = selection;\n    this.modal.dismiss();\n  }\n\n  private setCheckedValue(answersFormGroup: FormGroup, id: string): void {\n    for (const key in answersFormGroup.controls) {\n      if (key === id) {\n        answersFormGroup.controls[key].setValue(true);\n      } else {\n        answersFormGroup.controls[key].setValue(false);\n      }\n    }\n  }\n\n  private assignBeneficiary(id: string): boolean {\n    const producers: Beneficiary.Producer[] = this.producersService.getProducers();\n    const beneficiary: Beneficiary.Producer = producers.find(\n      (producer) => producer.id === id\n    )!;\n\n    return this.detailedFormService.setBeneficiary(beneficiary);\n  }\n\n  private getAnswerId(value: string): string {\n    const answer = this.getAnswers().find((answer) => answer.value === value);\n    return answer ? answer.id.toString() : '';\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n    {{ selection }}\n  \n\n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./autocomplete.component.scss\n                \n                ion-item::part(native) {\n  border-color: lightgray;\n  border-width: 2px;\n  border-radius: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}    {{ selection }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AutocompleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataquestHeaderComponent.html":{"url":"components/DataquestHeaderComponent.html","title":"component - DataquestHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DataquestHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/dataquest-header/dataquest-header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dataquest-header\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./dataquest-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dataquest-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                back\n                            \n                            \n                                    Private\n                                    Async\n                                confirmExit\n                            \n                            \n                                getProgress\n                            \n                            \n                                isDraft\n                            \n                            \n                                isForm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressBar\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, alertController: AlertController, location: Location, detailedFormService: DetailedFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressBar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        back\n                        \n                    \n                \n            \n            \n                \nback()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        confirmExit\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmExit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProgress\n                        \n                    \n                \n            \n            \n                \ngetProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isForm\n                        \n                    \n                \n            \n            \n                \nisForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        progress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, booleanAttribute } from '@angular/core';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { CommonModule, Location } from '@angular/common';\nimport { QuestionService } from '@services/detailed-form/question/question.service';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\n\n@Component({\n  selector: 'app-dataquest-header',\n  templateUrl: './dataquest-header.component.html',\n  styleUrls: ['./dataquest-header.component.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule],\n})\nexport class DataquestHeaderComponent implements OnInit {\n  @Input({ transform: booleanAttribute }) progressBar: boolean = false;\n\n  progress: number;\n\n  constructor(\n    private questionService: QuestionService,\n    private alertController: AlertController,\n    private location: Location,\n    private detailedFormService: DetailedFormService,\n  ) {\n    this.progress = this.getProgress();\n  }\n\n  ngOnInit() {}\n\n  getProgress(): number {\n    return this.questionService.getProgress();\n  }\n\n  back() {\n    if (this.detailedFormService.isQuestionsPage())\n      this.confirmExit();\n    else\n      this.location.back();\n  }\n\n  private async confirmExit() {\n    var message: string = ''\n    if (this.isForm())\n      message = 'Si sale, su progreso se guardará como borrador. ¿Desea salir?';\n    else if (this.isDraft())\n      message = 'Si sale, se guardará el borrador. ¿Desea salir?';\n\n    const alert = await this.alertController.create({\n      header: '¿Desea salir?',\n      message: message,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n        },\n        {\n          text: 'Salir',\n          role: 'confirm',\n          cssClass: 'danger',\n          handler: () => {\n            this.location.back();\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  isForm(): boolean {\n    return this.detailedFormService.isForm();\n  }\n\n  isDraft(): boolean {\n    return this.detailedFormService.isDraft();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./dataquest-header.component.scss\n                \n                .img-container {\n  width: 90%;\n  display: flex;\n  justify-content: center; /* Center horizontally */\n  align-items: center; /* Center vertically */\n  height: 100%; /* Ensure the container takes up the full height of the toolbar */\n}\n\nion-img {\n  max-width: 100%; /* Ensure the image doesn't exceed the container's width */\n  max-height: 100%; /* Ensure the image doesn't exceed the container's height */\n}\n\nion-icon {\n  font-size: x-large;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataquestHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateDataTypeComponent.html":{"url":"components/DateDataTypeComponent.html","title":"component - DateDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/date-data-type/date-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-date-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./date-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMaxDate\n                            \n                            \n                                getMinDate\n                            \n                            \n                                    Private\n                                getNewYear\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preloadTransplantDate\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detailedFormService: DetailedFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMaxDate\n                        \n                    \n                \n            \n            \n                \ngetMaxDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinDate\n                        \n                    \n                \n            \n            \n                \ngetMinDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNewYear\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNewYear(years: number, sum: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                years\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sum\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        preloadTransplantDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadTransplantDate(transplantDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transplantDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ReactiveFormsModule, FormGroup, FormControl } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\n\n@Component({\n  selector: 'app-date-data-type',\n  templateUrl: './date-data-type.component.html',\n  styleUrls: ['./date-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule, ReactiveFormsModule],\n})\nexport class DateDataTypeComponent {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(private detailedFormService: DetailedFormService) {}\n\n  ngOnInit() {\n    const transplantDate: string = this.detailedFormService.getForm().beneficiary.transplantDate;\n    if (this.question.id === '170' && transplantDate) {\n      this.disabled = true;\n      this.preloadTransplantDate(transplantDate);\n    }\n  }\n\n  private preloadTransplantDate(transplantDate: string) {\n    const formControl: FormControl = this.formGroup.get(`${this.question.id}`) as FormControl;\n    formControl.setValue(transplantDate);\n  }\n\n  getValue(): string {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n    console.log('formControl: ', formControl)\n    const stringDate: string = this.formGroup.get(`${this.question.id}`)?.value;\n    console.log('stringDate: ', stringDate);\n    if (!stringDate) {\n      const today: Date = new Date();\n      return today.toISOString();\n    }\n    const [day, month, year] = stringDate.split('/');\n    const parsedDate: Date = new Date(\n      Number(year),\n      Number(month) - 1,\n      Number(day)\n    );\n    console.log('date: ', parsedDate.toISOString());\n    return parsedDate.toISOString();\n  }\n\n  setValue(event: Event): void {\n    const questionFormControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n    const dateTimeElement = event.target as HTMLInputElement;\n    const value: string = dateTimeElement.value;\n    const date: Date = new Date(value);\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n    };\n    const stringDate: string = date.toLocaleDateString('es-ES', options);\n    questionFormControl.setValue(stringDate);\n  }\n\n  getMaxDate(): string | undefined {\n    const maxDate: string | undefined = this.question.max\n      ? this.getNewYear(Number(this.question.max), true)\n      : undefined;\n    return maxDate;\n  }\n\n  getMinDate(): string | undefined {\n    const minDate: string | undefined = this.question.min\n      ? this.getNewYear(Number(this.question.min), false)\n      : undefined;\n    return minDate;\n  }\n\n  private getNewYear(years: number, sum: boolean): string {\n    console.log(years, sum);\n    const date: Date = new Date();\n    const newYear: number = sum\n      ? date.getFullYear() + years\n      : date.getFullYear() - years;\n    date.setFullYear(newYear);\n    const formattedDate: string = date.toISOString();\n    return formattedDate;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./date-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailPage.html":{"url":"components/DetailPage.html","title":"component - DetailPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/detail/detail.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detail\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                                FormsModule\n                \n            \n\n            \n                styleUrls\n                ./detail.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./detail.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/detail/detail.page.ts:16\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/detail/detail.page.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DetailedFormComponent\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detail/detail.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { DetailedFormComponent } from '@components/detailed-form/detailed-form.component';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.page.html',\n  styleUrls: ['./detail.page.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule, FormsModule]\n})\nexport class DetailPage implements OnInit {\n\n  component = DetailedFormComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./detail.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailedFormComponent.html":{"url":"components/DetailedFormComponent.html","title":"component - DetailedFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailedFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/detailed-form/detailed-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detailed-form\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                QuestionComponent\n                                DataquestHeaderComponent\n                \n            \n\n            \n                styleUrls\n                ./detailed-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./detailed-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getForm\n                            \n                            \n                                    Private\n                                    Async\n                                getLocation\n                            \n                            \n                                getTotalQuestions\n                            \n                            \n                                getTransformedDownladedDate\n                            \n                            \n                                isDraft\n                            \n                            \n                                isForm\n                            \n                            \n                                isSurvey\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                resumeDraft\n                            \n                            \n                                startForm\n                            \n                            \n                                viewSurvey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detailedFormService: DetailedFormService, formService: FormService, alertController: AlertController, navController: NavController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/detailed-form/detailed-form.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navController\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getForm\n                        \n                    \n                \n            \n            \n                \ngetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getLocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalQuestions\n                        \n                    \n                \n            \n            \n                \ngetTotalQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransformedDownladedDate\n                        \n                    \n                \n            \n            \n                \ngetTransformedDownladedDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isForm\n                        \n                    \n                \n            \n            \n                \nisForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSurvey\n                        \n                    \n                \n            \n            \n                \nisSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resumeDraft\n                        \n                    \n                \n            \n            \n                \nresumeDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startForm\n                        \n                    \n                \n            \n            \n                \nstartForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewSurvey\n                        \n                    \n                \n            \n            \n                \nviewSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Default value : QuestionComponent\n                    \n                \n                    \n                        \n                                Defined in src/app/components/detailed-form/detailed-form.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { AlertController, IonicModule, NavController } from '@ionic/angular';\nimport { FormService } from '@services/form/form.service';\nimport { Geolocation, Position } from '@capacitor/geolocation';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { QuestionComponent } from '@components/question/question.component';\nimport { DataquestHeaderComponent } from '@components/header/dataquest-header/dataquest-header.component';\n\n@Component({\n  selector: 'app-detailed-form',\n  templateUrl: './detailed-form.component.html',\n  styleUrls: ['./detailed-form.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    IonicModule,\n    QuestionComponent,\n    DataquestHeaderComponent,\n  ],\n})\nexport class DetailedFormComponent {\n  component = QuestionComponent;\n\n  constructor(\n    private detailedFormService: DetailedFormService,\n    private formService: FormService,\n    private alertController: AlertController,\n    private navController: NavController\n  ) {}\n\n  ngOnDestroy() {\n    this.detailedFormService.setQuestionsPage(false);\n  }\n\n  getForm(): FormDetail.Form {\n    return this.detailedFormService.getForm();\n  }\n\n  isForm(): boolean {\n    return this.detailedFormService.isForm();\n  }\n\n  isDraft(): boolean {\n    return this.detailedFormService.isDraft();\n  }\n\n  isSurvey(): boolean {\n    return this.detailedFormService.isSurvey();\n  }\n\n  startForm(): void {\n    this.getLocation();\n    this.detailedFormService.startDraft();\n    this.detailedFormService.setQuestionsPage(true);\n  }\n\n  viewSurvey(): void {\n    this.detailedFormService.setQuestionsPage(true);\n  }\n\n  resumeDraft(): void {\n    this.detailedFormService.setQuestionsPage(true);\n  }\n\n  private async getLocation(): Promise {\n    try {\n      const permissions = await Geolocation.checkPermissions();\n\n      if (permissions.location !== 'granted') {\n        const permissionAlert = await this.alertController.create({\n          header: 'Problema con los permisos',\n          message:\n            'No se pudo obtener los permisos de ubicación del dispositivo. Por favor, habilita los permisos de ubicación en los ajustes del dispositivo y vuelve a intentarlo.',\n          buttons: ['OK'],\n        });\n\n        const permissionResult = await Geolocation.requestPermissions();\n\n        if (permissionResult.location !== 'granted') {\n          permissionAlert.present();\n          return;\n        }\n      }\n      const locationAlert = await this.alertController.create({\n        header: 'Problema con la ubicación',\n        message:\n          'No se pudo obtener la ubicación del dispositivo. Por favor, habilita la ubicación en los ajustes del dispositivo y vuelve a intentarlo.',\n        buttons: ['OK'],\n      });\n\n      const position = await Geolocation.getCurrentPosition();\n\n      if (position) {\n        console.log(position.coords);\n        this.getForm().position =\n          position.coords.latitude + ',' + position.coords.longitude;\n        this.getForm().altitud = position.coords.altitude ?? 0;\n        console.log(\n          'Position: ',\n          position,\n          ', Altitude: ',\n          this.getForm().altitud\n        );\n      } else {\n        locationAlert.present();\n      }\n    } catch (error) {\n      const locationAlert = await this.alertController.create({\n        header: 'Servicios de ubicación deshabilitados',\n        message:\n          'No se pudo obtener la ubicación del dispositivo. Por favor, habilita la ubicación en los ajustes del dispositivo y vuelve a intentarlo.',\n        buttons: ['OK'],\n      });\n      locationAlert.present();\n      this.navController.pop();\n    }\n  }\n\n  getTotalQuestions(): number {\n    return this.detailedFormService.getTotalQuestions();\n  }\n\n  getTransformedDownladedDate() {\n    const date = new Date(this.getForm().fechaDescarga);\n\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    };\n    return date.toLocaleDateString('es-ES', options);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Encuesta descargada el {{getTransformedDownladedDate()}}\n      {{getForm().name}}\n      Proyecto iniciado el {{getForm().dateInit}} | Finaliza el {{getForm().dateEnd}}\n      Total preguntas: {{getTotalQuestions()}}\n    \n\n    \n      {{getForm().description}}\n    \n    \n      Comenzar formulario\n      Ver encuesta\n      Reanudar borrador\n    \n  \n\n\n    \n\n    \n                \n                    ./detailed-form.component.scss\n                \n                #container {\n  text-align: center;\n\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n\n  color: #8c8c8c;\n\n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Encuesta descargada el {{getTransformedDownladedDate()}}      {{getForm().name}}      Proyecto iniciado el {{getForm().dateInit}} | Finaliza el {{getForm().dateEnd}}      Total preguntas: {{getTotalQuestions()}}              {{getForm().description}}              Comenzar formulario      Ver encuesta      Reanudar borrador      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailedFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DetailedFormService.html":{"url":"injectables/DetailedFormService.html","title":"injectable - DetailedFormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DetailedFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/detailed-form.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                draft\n                            \n                            \n                                    Private\n                                form\n                            \n                            \n                                    Private\n                                questionsPage\n                            \n                            \n                                    Private\n                                selectedForm\n                            \n                            \n                                    Private\n                                survey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                existsProducerWithSpecializedForm\n                            \n                            \n                                    Public\n                                getForm\n                            \n                            \n                                    Public\n                                getLocation\n                            \n                            \n                                    Public\n                                getTotalQuestions\n                            \n                            \n                                    Public\n                                isDraft\n                            \n                            \n                                    Public\n                                isForm\n                            \n                            \n                                    Public\n                                isQuestionsPage\n                            \n                            \n                                    Public\n                                isSurvey\n                            \n                            \n                                    Public\n                                saveSurvey\n                            \n                            \n                                    Public\n                                setBeneficiary\n                            \n                            \n                                    Public\n                                setForm\n                            \n                            \n                                    Public\n                                setQuestions\n                            \n                            \n                                    Public\n                                setQuestionsPage\n                            \n                            \n                                    Private\n                                    Async\n                                showAlreadySpecializedBeneficiaryAlert\n                            \n                            \n                                    Private\n                                    Async\n                                showNoSpecializedBeneficiaryAlert\n                            \n                            \n                                    Public\n                                startDraft\n                            \n                            \n                                    Public\n                                updateModifyDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService, draftService: DraftService, surveyService: SurveyService, questionService: QuestionService, alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        existsProducerWithSpecializedForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    existsProducerWithSpecializedForm(producerToSearch: Beneficiary.Producer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                producerToSearch\n                                            \n                                                            Beneficiary.Producer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    getForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getTotalQuestions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:165\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    isDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    isForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isQuestionsPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    isQuestionsPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isSurvey\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveSurvey\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setBeneficiary\n                        \n                    \n                \n            \n            \n                \n                        \n                    setBeneficiary(selectedBeneficiary: Beneficiary.Producer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedBeneficiary\n                                            \n                                                            Beneficiary.Producer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    setForm(form: FormDetail.Form, formType: boolean, draftType: boolean, surveyType: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formType\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                draftType\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                surveyType\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setQuestions\n                        \n                    \n                \n            \n            \n                \n                        \n                    setQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setQuestionsPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setQuestionsPage(questionPage: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                questionPage\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        showAlreadySpecializedBeneficiaryAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    showAlreadySpecializedBeneficiaryAlert()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        showNoSpecializedBeneficiaryAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    showNoSpecializedBeneficiaryAlert()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateModifyDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateModifyDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        draft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        questionsPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        survey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { FormService } from '../form/form.service';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { v4 as uuidv4 } from 'uuid';\nimport { QuestionService } from './question/question.service';\nimport { DraftService } from '../draft/draft.service';\nimport { SurveyService } from '../survey/survey.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { AlertController } from '@ionic/angular';\nimport _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DetailedFormService {\n  private selectedForm!: FormDetail.Form;\n  private form!: boolean;\n  private draft!: boolean;\n  private survey!: boolean;\n  private questionsPage!: boolean;\n\n  constructor(\n    private formService: FormService,\n    private draftService: DraftService,\n    private surveyService: SurveyService,\n    private questionService: QuestionService,\n    private alertController: AlertController\n  ) {}\n\n  public getForm(): FormDetail.Form {\n    return this.selectedForm;\n  }\n\n  public isForm(): boolean {\n    return this.form;\n  }\n\n  public isDraft(): boolean {\n    return this.draft;\n  }\n\n  public isSurvey(): boolean {\n    return this.survey;\n  }\n\n  public setForm(\n    form: FormDetail.Form,\n    formType: boolean,\n    draftType: boolean,\n    surveyType: boolean\n  ): void {\n    this.selectedForm = form;\n    this.form = formType;\n    this.draft = draftType;\n    this.survey = surveyType;\n    if (this.isDraft() || this.isSurvey()) {\n      this.setQuestions();\n    }\n  }\n\n  public setQuestionsPage(questionPage: boolean): void {\n    this.questionsPage = questionPage;\n  }\n\n  public isQuestionsPage(): boolean {\n    return this.questionsPage;\n  }\n\n  public setBeneficiary(selectedBeneficiary: Beneficiary.Producer): boolean {\n    const previousBeneficiary: Beneficiary.Producer =\n      this.selectedForm.beneficiary;\n    const isSpecializedForm: boolean = this.selectedForm.id === 1;\n    if (isSpecializedForm && previousBeneficiary) {\n      previousBeneficiary.specialized = false;\n    }\n    if (this.selectedForm.beneficiary === selectedBeneficiary) {\n      return true;\n    }\n\n    const canSet =\n      (isSpecializedForm &&\n        !this.existsProducerWithSpecializedForm(selectedBeneficiary)) ||\n      (isSpecializedForm && !selectedBeneficiary.specialized) ||\n      (!isSpecializedForm && selectedBeneficiary.specialized);\n\n    if (canSet) {\n      if (this.selectedForm.id === 1) {\n        selectedBeneficiary.specialized = true;\n      }\n      this.selectedForm.beneficiary = selectedBeneficiary;\n      return true;\n    } else if (this.selectedForm.id === 1) {\n      this.showAlreadySpecializedBeneficiaryAlert();\n      return false;\n    } else {\n      this.showNoSpecializedBeneficiaryAlert();\n      return false;\n    }\n  }\n\n  private existsProducerWithSpecializedForm(\n    producerToSearch: Beneficiary.Producer\n  ): boolean {\n    var exists = false;\n\n    const drafts: FormDetail.Form[] = this.draftService.getDrafts();\n    const surveys: FormDetail.Form[] = this.surveyService.getSurveys();\n\n    drafts.some((draft) => {\n      if (draft.beneficiary.id === producerToSearch.id) {\n        exists = true;\n        return true;\n      }\n\n      return false;\n    });\n\n    surveys.some((survey) => {\n      if (survey.beneficiary.id === producerToSearch.id) {\n        exists = true;\n        return true;\n      }\n\n      return false;\n    });\n\n    return exists;\n  }\n\n  private async showAlreadySpecializedBeneficiaryAlert(): Promise {\n    const alert = await this.alertController.create({\n      header: 'Beneficiario ya tiene formulario especializado',\n      message: 'Elimina el formulario respectivo o escoge otro beneficiario',\n      buttons: ['OK'],\n    });\n    await alert.present();\n  }\n\n  private async showNoSpecializedBeneficiaryAlert(): Promise {\n    const alert = await this.alertController.create({\n      header: 'Sin formulario especializado',\n      message:\n        'Debes realizar un formulario especializado primero a este beneficiario',\n      buttons: ['OK'],\n    });\n    await alert.present();\n  }\n\n  public setQuestions(): void {\n    this.questionService.setQuestions(this.selectedForm.questions);\n  }\n\n  public getLocation(): void {\n    Geolocation.getCurrentPosition()\n      .then((position) => {\n        this.selectedForm.position =\n          position.coords.latitude + ',' + position.coords.longitude;\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n\n  public getTotalQuestions(): number {\n    return this.selectedForm.questions.length;\n  }\n\n  public startDraft(): void {\n    const copy: FormDetail.Form = _.cloneDeep(this.selectedForm);\n    copy.uuid = uuidv4();\n    this.draftService.pushDraft(copy);\n    this.selectedForm = copy;\n    this.setQuestions();\n    this.draftService.saveDrafts();\n  }\n\n  public saveSurvey(): void {\n    const removedDraft: FormDetail.Form = this.draftService.removeDraft(\n      this.selectedForm\n    );\n    this.surveyService.pushSurvey(removedDraft);\n    this.draftService.saveDrafts();\n  }\n\n  public updateModifyDate(): void {\n    if (this.isDraft()) {\n      this.draftService.updateModifyDate(this.selectedForm);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DraftService.html":{"url":"injectables/DraftService.html","title":"injectable - DraftService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DraftService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/draft/draft.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drafts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeSpecialized\n                            \n                            \n                                    Public\n                                deleteDraft\n                            \n                            \n                                    Public\n                                generateUUID\n                            \n                            \n                                    Public\n                                getDrafts\n                            \n                            \n                                    Public\n                                getLocalDrafts\n                            \n                            \n                                    Public\n                                pushDraft\n                            \n                            \n                                    Public\n                                removeDraft\n                            \n                            \n                                    Private\n                                removeOldDrafts\n                            \n                            \n                                    Public\n                                saveDrafts\n                            \n                            \n                                    Public\n                                updateModifyDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, producersService: ProducerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/draft/draft.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        producersService\n                                                  \n                                                        \n                                                                        ProducerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeSpecialized\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeSpecialized(producer: Beneficiary.Producer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                producer\n                                            \n                                                            Beneficiary.Producer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDraft(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        generateUUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUUID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getDrafts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLocalDrafts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pushDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    pushDraft(draft: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                draft\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeDraft(draft: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                draft\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormDetail.Form\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeOldDrafts\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOldDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveDrafts\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateModifyDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateModifyDate(draft: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                draft\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drafts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/draft/draft.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { StorageService } from '../storage/storage.service';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { ProducerService } from '@services/producer/producer.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DraftService {\n  private drafts: FormDetail.Form[] = [];\n\n  constructor(\n    private storageService: StorageService,\n    private producersService: ProducerService\n  ) {\n    this.getLocalDrafts();\n  }\n\n  public pushDraft(draft: FormDetail.Form): void {\n    const currentDate: Date = new Date();\n    const formattedDate: string = currentDate.toISOString();\n    draft.fechaInicial = formattedDate;\n    draft.fechaUltimoCambio = formattedDate;\n    this.drafts.push(draft);\n  }\n\n  public deleteDraft(index: number) {\n    const removedDraft: FormDetail.Form = this.drafts.splice(index, 1).pop()!;\n    const producer: Beneficiary.Producer = removedDraft.beneficiary;\n    if (removedDraft.id === 1 && producer.specialized)\n      this.changeSpecialized(producer);\n\n    this.saveDrafts();\n  }\n\n  private changeSpecialized(producer: Beneficiary.Producer): void {\n    const producers: Beneficiary.Producer[] =\n      this.producersService.getProducers();\n    const beneficiary: Beneficiary.Producer = producers.find(\n      (p) => p.id === producer.id\n    )!;\n    beneficiary.specialized = false;\n  }\n\n  public removeDraft(draft: FormDetail.Form): FormDetail.Form {\n    const index = this.drafts.findIndex((d) => d.uuid === draft.uuid);\n    if (index > -1) {\n      return this.drafts.splice(index, 1)[0];\n    }\n    return draft;\n  }\n\n  public getLocalDrafts(): void {\n    this.storageService.get('drafts').then((drafts) => {\n      if (drafts) {\n        this.drafts = drafts;\n        this.removeOldDrafts();\n      }\n    });\n  }\n\n  public getDrafts(): FormDetail.Form[] {\n    return this.drafts;\n  }\n\n  private removeOldDrafts(): void {\n    const dateThreshold = new Date();\n    dateThreshold.setDate(dateThreshold.getDate() - 7);\n    this.drafts = this.drafts.filter((draft) => {\n      const date = new Date(draft.fechaUltimoCambio);\n      return date >= dateThreshold;\n    });\n  }\n\n  public saveDrafts(): void {\n    this.storageService.set('drafts', this.drafts);\n  }\n\n  public generateUUID(): string {\n    return uuidv4();\n  }\n\n  public updateModifyDate(draft: FormDetail.Form): void {\n    const index = this.drafts.findIndex((d) => d.id === draft.id);\n    if (index > -1) {\n      const currentDate: Date = new Date();\n      const formattedDate: string = currentDate.toISOString();\n      this.drafts[index].fechaUltimoCambio = formattedDate;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DraftsPage.html":{"url":"components/DraftsPage.html","title":"component - DraftsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DraftsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/drafts/drafts.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drafts\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                drafts.page.scss\n            \n\n\n\n            \n                templateUrl\n                drafts.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteDraft\n                            \n                            \n                                getDrafts\n                            \n                            \n                                    Async\n                                goToDetail\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, detailedFormService: DetailedFormService, router: Router, draftService: DraftService, alertController: AlertController, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/drafts/drafts.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDraft(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/drafts/drafts.page.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDrafts\n                        \n                    \n                \n            \n            \n                \ngetDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/drafts/drafts.page.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        goToDetail\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToDetail(formToSend: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/drafts/drafts.page.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formToSend\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/drafts/drafts.page.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AlertController, IonicModule, Platform, ToastController } from '@ionic/angular';\nimport { DraftService } from '@services/draft/draft.service';\nimport { Router } from '@angular/router';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-drafts',\n  templateUrl: 'drafts.page.html',\n  styleUrls: ['drafts.page.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule],\n})\nexport class DraftsPage {\n  constructor(\n    private platform: Platform,\n    private detailedFormService: DetailedFormService,\n    private router: Router,\n    private draftService: DraftService,\n    private alertController: AlertController,\n    private toastController: ToastController\n  ) {}\n\n  ionViewWillEnter() {\n    this.draftService.getLocalDrafts();\n  }\n\n  getDrafts() {\n    return this.draftService.getDrafts();\n  }\n\n  async deleteDraft(index: number) {\n    const deletionAlert = await this.alertController.create({\n      header: '¿Estás seguro?',\n      message: 'Esta acción no se puede deshacer',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n        },\n        {\n          text: 'Eliminar',\n          handler: async () => {\n            this.draftService.deleteDraft(index);\n            const deletedToast = await this.toastController.create({\n              message: 'Borrador eliminado exitosamente',\n              duration: 2000,\n            });\n            await deletedToast.present();\n          },\n        },\n      ],\n    });\n    await deletionAlert.present();\n  }\n\n  async goToDetail(formToSend: FormDetail.Form) {\n    if (this.platform.is('mobile')) {\n      this.detailedFormService.setForm(formToSend, false, true, false);\n      this.router.navigate(['detail']);\n    } else {\n      const alert = await this.alertController.create({\n        header: 'Dispositivo no compatible',\n        message:\n          'Para acceder al formulario, ingresa desde un dispositivo móvil',\n        buttons: ['OK'],\n      });\n      await alert.present();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      # {{ draft.uuid }}\n      {{ draft.name }}\n      Finaliza el {{ draft.dateEnd }}\n      {{\n        draft.questions[0].answers[0].value\n      }}\n    \n    \n      {{ draft.description }}\n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    drafts.page.scss\n                \n                #uuid {\n  font-size: x-small;\n}\n\nion-icon {\n  font-size: xx-large;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            # {{ draft.uuid }}      {{ draft.name }}      Finaliza el {{ draft.dateEnd }}      {{        draft.questions[0].answers[0].value      }}              {{ draft.description }}                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DraftsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawingPadDataTypeComponent.html":{"url":"components/DrawingPadDataTypeComponent.html","title":"component - DrawingPadDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawingPadDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drawing-pad-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./drawing-pad-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drawing-pad-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvas\n                            \n                            \n                                signatureImg\n                            \n                            \n                                    Private\n                                signaturePad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearPad\n                            \n                            \n                                moved\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                resizeCanvas\n                            \n                            \n                                savePad\n                            \n                            \n                                setSignature\n                            \n                            \n                                startDrawing\n                            \n                            \n                                undoPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:23\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearPad\n                        \n                    \n                \n            \n            \n                \nclearPad()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moved\n                        \n                    \n                \n            \n            \n                \nmoved(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resizeCanvas\n                        \n                    \n                \n            \n            \n                \nresizeCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        savePad\n                        \n                    \n                \n            \n            \n                \nsavePad()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSignature\n                        \n                    \n                \n            \n            \n                \nsetSignature()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDrawing\n                        \n                    \n                \n            \n            \n                \nstartDrawing(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undoPad\n                        \n                    \n                \n            \n            \n                \nundoPad()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signatureImg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        signaturePad\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SignaturePad\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport SignaturePad from 'signature_pad';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-drawing-pad-data-type',\n  templateUrl: './drawing-pad-data-type.component.html',\n  styleUrls: ['./drawing-pad-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule],\n})\nexport class DrawingPadDataTypeComponent {\n  private signaturePad!: SignaturePad;\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  @ViewChild('canvas')\n  canvas!: ElementRef;\n\n  signatureImg!: string;\n\n  constructor() {}\n\n  ngAfterViewInit() {\n    this.signaturePad = new SignaturePad(this.canvas.nativeElement);\n    window.addEventListener('resize', () => this.resizeCanvas());\n    this.resizeCanvas();\n    this.disabled ? this.signaturePad.off() : this.signaturePad.on();\n  }\n\n  resizeCanvas() {\n    this.canvas.nativeElement.style.width = '100%';\n    this.canvas.nativeElement.style.height = '100%';\n    var width = this.canvas.nativeElement.offsetWidth;\n    var height = this.canvas.nativeElement.offsetHeight;\n    var ratio = Math.max(window.devicePixelRatio || 1, 1);\n    this.canvas.nativeElement.width = width * ratio;\n    this.canvas.nativeElement.height = height * ratio;\n    this.canvas.nativeElement.getContext('2d').scale(ratio, ratio);\n    this.setSignature();\n  }\n\n  setSignature() {\n    this.signaturePad.clear();\n    let signature = this.formGroup.get(`${this.question.id}`)?.value;\n    if (signature) {\n      this.signaturePad.fromDataURL(signature)\n      this.signatureImg = signature;\n    }\n  }\n\n  startDrawing(event: Event) {\n    console.log(event);\n    // works in device not in browser\n  }\n\n  moved(event: Event) {\n    // works in device not in browser\n  }\n\n  clearPad() {\n    this.signaturePad.clear();\n  }\n\n  savePad() {\n    const base64Data = this.signaturePad.toDataURL('image/png', 0.5);\n    this.signatureImg = base64Data;\n    this.formGroup.get(`${this.question.id}`)?.setValue(base64Data);\n  }\n\n  undoPad() {\n    const data = this.signaturePad.toData();\n    if (data) {\n      data.pop();\n      this.signaturePad.fromData(data);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Limpiar\n      Guardar\n    \n    \n      Deshacer\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./drawing-pad-data-type.component.scss\n                \n                canvas {\n  border: 2px solid lightgray;\n  border-radius: 20px;\n  background-color: var(--ion-color-success);\n}\n\nimg {\n  border: 2px solid lightgray;\n  border-radius: 20px;\n  width: 100%;\n  height: 100%;\n}\n\nion-button[slot='fixed'] {\n  right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Limpiar      Guardar              Deshacer      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawingPadDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailDataTypeComponent.html":{"url":"components/EmailDataTypeComponent.html","title":"component - EmailDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/email-data-type/email-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./email-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./email-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-email-data-type',\n  templateUrl: './email-data-type.component.html',\n  styleUrls: ['./email-data-type.component.scss'],\n  standalone: true,\n  imports: [ IonicModule, ReactiveFormsModule ],\n})\nexport class EmailDataTypeComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  getValue(): string {\n    return this.formGroup.get(`${this.question.id}`)?.value;\n  }\n\n  setValue(event: any) {\n    this.formGroup.get(`${this.question.id}`)?.setValue(event.target.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./email-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Form.html":{"url":"interfaces/Form.html","title":"interface - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            altitud\n                                        \n                                \n                                \n                                        \n                                            beneficiary\n                                        \n                                \n                                \n                                        \n                                            dateEnd\n                                        \n                                \n                                \n                                        \n                                            dateInit\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            fechaCarga\n                                        \n                                \n                                \n                                        \n                                            fechaDescarga\n                                        \n                                \n                                \n                                        \n                                            fechaInicial\n                                        \n                                \n                                \n                                        \n                                            fechaUltimoCambio\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            questions\n                                        \n                                \n                                \n                                        \n                                            sync\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        altitud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        altitud:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beneficiary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beneficiary:         Beneficiary.Producer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Beneficiary.Producer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateEnd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateEnd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateInit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateInit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaCarga\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaCarga:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaDescarga\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaDescarga:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaInicial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaInicial:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaUltimoCambio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaUltimoCambio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questions:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sync\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sync:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormListComponent.html":{"url":"components/FormListComponent.html","title":"component - FormListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form-list/form-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-list\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./form-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRefresh\n                            \n                            \n                                    Async\n                                navigate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                requestData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                draft\n                            \n                            \n                                form\n                            \n                            \n                                forms\n                            \n                            \n                                survey\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formsService: FormService, draftService: DraftService, surveyService: SurveyService, detailedFormService: DetailedFormService, router: Router, platform: Platform, alertController: AlertController, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/form-list/form-list.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formsService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        draft\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-list/form-list.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-list/form-list.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forms\n                    \n                \n                \n                    \n                        Type :         FormDetail.Form[]\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-list/form-list.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        survey\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-list/form-list.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRefresh\n                        \n                    \n                \n            \n            \n                \nhandleRefresh(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/form-list/form-list.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        navigate\n                        \n                    \n                \n            \n            \n                \n                        \n                    navigate(formToSend: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/form-list/form-list.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formToSend\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/form-list/form-list.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requestData\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/form-list/form-list.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, booleanAttribute } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Platform, AlertController, IonicModule, ToastController } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { DraftService } from '@services/draft/draft.service';\nimport { FormService } from '@services/form/form.service';\nimport { SurveyService } from '@services/survey/survey.service';\n\n@Component({\n  selector: 'app-form-list',\n  templateUrl: './form-list.component.html',\n  styleUrls: ['./form-list.component.scss'],\n  standalone: true,\n  imports: [ CommonModule, IonicModule ],\n})\nexport class FormListComponent {\n\n  @Input({ required: true }) forms!: FormDetail.Form[];\n  @Input({ transform: booleanAttribute }) form: boolean = false;\n  @Input({ transform: booleanAttribute }) draft: boolean = false;\n  @Input({ transform: booleanAttribute }) survey: boolean = false;\n\n  constructor(\n    private formsService: FormService,\n    private draftService: DraftService,\n    private surveyService: SurveyService,\n    private detailedFormService: DetailedFormService,\n    private router: Router,\n    private platform: Platform,\n    private alertController: AlertController,\n    private toastController: ToastController\n  ) {}\n\n  ngOnInit() {\n    this.requestData();\n  }\n\n  async navigate(formToSend: FormDetail.Form) {\n    if (this.platform.is('mobile')) {\n      this.detailedFormService.setForm(formToSend, this.form, this.draft, this.survey);\n      this.router.navigate(['detail']);\n    } else {\n      const alert = await this.alertController.create({\n        header: 'Dispositivo no compatible',\n        message:\n          'Para acceder al formulario, ingresa desde un dispositivo móvil',\n        buttons: ['OK'],\n      });\n      await alert.present();\n    }\n  }\n\n  handleRefresh(event: any) {\n    setTimeout(() => {\n      this.requestData()\n      event.target.complete();\n    }, 2000);\n  }\n\n  private requestData() {\n    if (this.form) {\n      this.formsService.getForms().subscribe((forms) => {\n        this.forms = forms;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n    \n      # {{ form.uuid }}\n      {{ form.name }}\n      Finaliza el {{ form.dateEnd }}\n      {{\n        form.questions[0].answers[0].value\n      }}\n    \n    \n      {{ form.description }}\n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./form-list.component.scss\n                \n                #uuid {\n  font-size: x-small;\n}\n\nion-icon {\n  float: right;\n  font-size: xx-large;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        # {{ form.uuid }}      {{ form.name }}      Finaliza el {{ form.dateEnd }}      {{        form.questions[0].answers[0].value      }}              {{ form.description }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/form/form.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing the forms.\nLocal and remote forms are handled here\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForms\n                            \n                            \n                                    Private\n                                getLocalForms\n                            \n                            \n                                    Private\n                                getQuestionChildren\n                            \n                            \n                                    Private\n                                setLocalForms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/form/form.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getForms\n                        \n                    \n                \n            \n            \n                \n                        \n                    getForms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/form/form.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLocalForms\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalForms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/form/form.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getQuestionChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQuestionChildren(question: FormDetail.Question, form: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/form/form.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                form\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLocalForms\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLocalForms(forms: FormDetail.Form[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/form/form.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                forms\n                                            \n                                                            FormDetail.Form[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApiService } from '@services/api/api.service';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { HttpResponse } from '@capacitor/core';\nimport { StorageService } from '../storage/storage.service';\nimport { Network } from '@capacitor/network';\nimport { Observable, from } from 'rxjs';\nimport { tap, map, switchMap } from 'rxjs/operators';\nimport { formBuilder } from '@utils/builder';\n\n/**\n * Service for managing the forms.\n * Local and remote forms are handled here\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormService {\n  constructor(\n    private apiService: ApiService,\n    private storageService: StorageService\n  ) {}\n\n  public getForms(): Observable {\n    return from(Network.getStatus()).pipe(\n      switchMap((status) => {\n        if (!status.connected) {\n          return this.getLocalForms();\n        } else {\n          return from(this.apiService.post(ENDPOINT)).pipe(\n            map((response: HttpResponse) => {\n              const formsResponse: FormDetail.FormResponse[] = JSON.parse(\n                response.data\n              );\n              const currentDate: Date = new Date();\n              var forms: FormDetail.Form[] = formsResponse.map(\n                (form: FormDetail.FormResponse) => {\n                  const builtForm: FormDetail.Form = formBuilder(form);\n                  builtForm.questions.forEach((question) => {\n                    if (question.type === 'Tabla') {\n                      let children: FormDetail.Question[][] =\n                        this.getQuestionChildren(question, builtForm);\n                      question.questionChildren = children;\n                    }\n                  });\n                  builtForm.questions = builtForm.questions.filter(\n                    (question) => question.questionParentId === null || question.questionParentId === undefined\n                  );\n                  builtForm.fechaDescarga = currentDate.toISOString(); // Convert Date to string\n\n                  return builtForm;\n                }\n              );\n              forms = forms.filter((form) => {\n                const initialDate: Date = new Date(form.dateInit);\n                const finalDate: Date = new Date(form.dateEnd);\n                return currentDate >= initialDate && currentDate  {\n              this.setLocalForms(forms);\n            })\n          );\n        }\n      })\n    );\n  }\n\n  private getQuestionChildren(\n    question: FormDetail.Question,\n    form: FormDetail.Form\n  ): FormDetail.Question[][] {\n    let children: FormDetail.Question[][] = [];\n    let base: FormDetail.Question[] = [];\n\n    // Iterate through each question of the form\n    form.questions.forEach((q: FormDetail.Question) => {\n      // If the question is a child of the current question\n      if (q.questionParentId === question.id) {\n        // Add the question to the base array\n        base.push(q);\n      }\n    });\n\n    // Add the base array to the children array\n    children.push(base);\n\n    return children;\n  }\n\n  private getLocalForms(): Promise {\n    return this.storageService.get(FORMS_STORAGE_KEY);\n  }\n\n  private setLocalForms(forms: FormDetail.Form[]): void {\n    this.storageService.set(FORMS_STORAGE_KEY, forms);\n  }\n}\n\nconst FORMS_STORAGE_KEY = 'forms';\nconst ENDPOINT = 'form-detail';\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormsPage.html":{"url":"components/FormsPage.html","title":"component - FormsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/forms/forms.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forms\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                FormListComponent\n                \n            \n\n            \n                styleUrls\n                forms.page.scss\n            \n\n\n\n            \n                templateUrl\n                forms.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadForms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/forms/forms.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadForms\n                        \n                    \n                \n            \n            \n                \nloadForms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forms/forms.page.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        forms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forms/forms.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { FormService } from '@services/form/form.service';\nimport { FormListComponent } from '@components/form-list/form-list.component';\nimport { FormDetail } from '@models/FormDetail.namespace';\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: 'forms.page.html',\n  styleUrls: ['forms.page.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule, FormListComponent],\n})\nexport class FormsPage {\n  forms!: FormDetail.Form[];\n\n  constructor(private formService: FormService) {}\n\n  loadForms() {\n    this.formService.getForms().subscribe((forms) => {\n      this.forms = forms;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    forms.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                            \n                                    \n                                modal\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppVersion\n                            \n                            \n                                    Private\n                                loadProducers\n                            \n                            \n                                loadUser\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                uploadSurveys\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(surveyService: SurveyService, alertController: AlertController, authService: AuthService, producerService: ProducerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        producerService\n                                                  \n                                                        \n                                                                        ProducerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppVersion\n                        \n                    \n                \n            \n            \n                \ngetAppVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadProducers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUser\n                        \n                    \n                \n            \n            \n                \nloadUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLIonModalElement\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Authentication.User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { Authentication } from '@models/Auth.namespace';\nimport { AuthService } from '@services/auth/auth.service';\nimport { SurveyService } from '@services/survey/survey.service';\nimport { App } from '@capacitor/app';\nimport { ProducerService } from '@services/producer/producer.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n  standalone: true,\n  imports: [IonicModule],\n})\nexport class HomePage {\n\n  @ViewChild('modal') modal!: HTMLIonModalElement;\n\n  user!: Authentication.User;\n  appVersion!: string;\n\n  constructor(\n    private surveyService: SurveyService,\n    private alertController: AlertController,\n    private authService: AuthService,\n    private producerService: ProducerService,\n  ) {}\n\n  ngOnInit() {\n    this.loadProducers();\n    this.loadUser();\n    App.getInfo().then((info) => {\n      this.appVersion = info.version;\n    });\n  }\n\n  async uploadSurveys() {\n\n    const logoutAlert = await this.alertController.create({\n      header: 'Sincronizar',\n      message: 'Este proceso puede tardar. ¿Estás seguro que deseas sincronizar?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n        },\n        {\n          text: 'Sincronizar',\n          handler: () => {\n            this.surveyService.syncSurveys();\n          },\n        },\n      ],\n    })\n\n    await logoutAlert.present();\n  }\n\n  async logout() {\n\n    const logoutAlert = await this.alertController.create({\n      header: 'Cerrar Sesión',\n      message: '¿Estás seguro que deseas cerrar sesión?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n        },\n        {\n          text: 'Cerrar Sesión',\n          cssClass: 'logout',\n          handler: () => {\n            this.authService.logout();\n            this.modal.dismiss();\n          },\n        },\n      ],\n    })\n\n    await logoutAlert.present();\n  }\n\n  loadUser(): void {\n    this.authService.getUser().then((user) => {\n      this.user = user;\n    });\n  }\n\n  private loadProducers(): void {\n    this.producerService.updateProducers();\n  }\n\n  getAppVersion(): string {\n    return this.appVersion;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n        Formularios\n      \n\n      \n        \n        Borradores\n      \n\n      \n        \n        Encuestas\n      \n    \n  \n\n\n\n  \n    \n      \n        Información General\n      \n    \n    \n      \n        Usuario\n        {{ user.name }}\n      \n      \n        Cargo\n        {{ user.type }}\n      \n      \n        App Version\n        {{ getAppVersion() }}\n      \n      Cerrar Sesión\n    \n  \n\n\n    \n\n    \n                \n                    home.page.scss\n                \n                ion-img {\n  width: 60%;\n}\n\n#home-header {\n  ion-toolbar {\n    --background: url('../../../assets/imgs/header-inner.jpg');\n    display: flex;\n    align-content: center;\n    height: 100px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n}\n\n.header-icon {\n  color: white;\n}\n\nion-modal {\n  .modal-content {\n    --height: 10px;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Formularios                            Borradores                            Encuestas                                Información General                            Usuario        {{ user.name }}                    Cargo        {{ user.type }}                    App Version        {{ getAppVersion() }}            Cerrar Sesión      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                                FormsModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, alertController: AlertController, loadingController: LoadingController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.page.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormsModule,\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { IonicModule } from '@ionic/angular';\nimport { AuthService } from '@services/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule, FormsModule, ReactiveFormsModule],\n})\nexport class LoginPage implements OnInit {\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private alertController: AlertController,\n    private loadingController: LoadingController\n  ) {}\n\n  form: FormGroup = this.fb.group({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n  });\n\n  ngOnInit() {}\n\n  async login() {\n    const loading = await this.loadingController.create({\n      message: 'Cargando...',\n    });\n    await loading.present();\n\n    if (this.form.valid) {\n      try {\n        this.authService.login(this.form.value);\n        await this.loadingController.dismiss();\n      } catch (error: any) {\n        await this.loadingController.dismiss();\n        const alert = await this.alertController.create({\n          header: 'Error',\n          message: error.message,\n          buttons: ['OK'],\n        });\n        await alert.present();\n      }\n    } else {\n      await this.loadingController.dismiss();\n      const alert = await this.alertController.create({\n        header: 'Error',\n        message: 'Por favor, ingrese un email y una contraseña válidos',\n        buttons: ['OK'],\n      });\n      await alert.present();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n          \n        \n        \n          \n          \n        \n        \n          \n            Iniciar Sesión\n            \n          \n        \n      \n      \n        \n          \n          \n          Desarrollado por Blaucast®\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .container {\n  display: grid;\n  place-items: center;\n  height: 100vh;\n  background-color: #999999;\n}\n\n.login-button {\n  margin-top: 2%;\n  width: 100%;\n}\n\n.bottom-info {\n  margin-top: 10%;\n  font-size: 11px;\n  color: #999999;\n}\n\n.center {\n  text-align: center;\n}\n\n.login-input {\n  border-radius: 4%;\n}\n\nion-card {\n  min-width: 200px;\n  max-width: 500px;\n  background-color: white;\n}\n\nion-item {\n  --background: white;\n}\n\nion-input {\n  --color: #999999;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                      Iniciar Sesión                                                                                Desarrollado por Blaucast®                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoneyDataTypeComponent.html":{"url":"components/MoneyDataTypeComponent.html","title":"component - MoneyDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoneyDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/money-data-type/money-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-money-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            MaskitoModule\n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./money-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./money-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                maskPredicate\n                            \n                            \n                                    Readonly\n                                moneyMask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHelperText\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Async\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, currencyPipe: CurrencyPipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currencyPipe\n                                                  \n                                                        \n                                                                    CurrencyPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHelperText\n                        \n                    \n                \n            \n            \n                \ngetHelperText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        maskPredicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MaskitoElementPredicateAsync\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        moneyMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MaskitoOptions\n\n                    \n                \n                \n                    \n                        Default value : maskitoNumberOptionsGenerator({\n    decimalZeroPadding: true,\n    prefix: '$',\n    thousandSeparator: ',',\n    decimalSeparator: '.',\n    precision: 2,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CurrencyPipe } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { maskitoNumberOptionsGenerator, maskitoParseNumber } from '@maskito/kit';\nimport { MaskitoModule } from '@maskito/angular';\nimport { MaskitoElementPredicateAsync, MaskitoOptions } from '@maskito/core';\n\n@Component({\n  selector: 'app-money-data-type',\n  templateUrl: './money-data-type.component.html',\n  styleUrls: ['./money-data-type.component.scss'],\n  standalone: true,\n  imports: [MaskitoModule, IonicModule, ReactiveFormsModule],\n})\nexport class MoneyDataTypeComponent {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  readonly maskPredicate: MaskitoElementPredicateAsync = async (el) =>\n    (el as HTMLIonInputElement).getInputElement();\n\n  readonly moneyMask: MaskitoOptions = maskitoNumberOptionsGenerator({\n    decimalZeroPadding: true,\n    prefix: '$',\n    thousandSeparator: ',',\n    decimalSeparator: '.',\n    precision: 2,\n  });\n\n  constructor(\n    private alertController: AlertController,\n    private currencyPipe: CurrencyPipe\n  ) {}\n\n  ngOnChanges() {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    if (this.question.min)\n      formControl.addValidators(Validators.min(this.question.min));\n    if (this.question.max)\n      formControl.addValidators(Validators.max(this.question.max));\n  }\n\n  getValue(): string {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    const currency: string = this.currencyPipe.transform(\n      formControl.value,\n      'COP',\n      '$',\n    )!;\n\n    return currency;\n  }\n\n  async setValue(event: Event): Promise {\n    const element: HTMLIonInputElement = event.target as HTMLIonInputElement;\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    formControl.setValue(maskitoParseNumber(element.value as string));\n\n    if (formControl.getError('min')) {\n      const minAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor mínimo',\n        message: `El valor mínimo es ${this.question.min}`,\n        buttons: ['OK'],\n      });\n\n      await minAlert.present();\n    } else if (formControl.getError('max')) {\n      const maxAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor máximo',\n        message: `El valor máximo es ${this.question.max}`,\n        buttons: ['OK'],\n      });\n\n      await maxAlert.present();\n    }\n  }\n\n  getHelperText(): string {\n    let message: string = 'Ingrese un valor';\n    const minCurrency: string = this.currencyPipe.transform(\n      this.question.min,\n      'COP',\n      '$',\n      '1.2-2'\n    )!;\n    const maxCurrency: string = this.currencyPipe.transform(\n      this.question.max,\n      'COP',\n      '$',\n      '1.2-2'\n    )!;\n    if (this.question.min && this.question.max)\n      message += ` entre ${minCurrency} y ${maxCurrency}`;\n    else if (this.question.min) message += ` mayor a ${minCurrency}`;\n    else if (this.question.max) message += ` menor a ${maxCurrency}`;\n    return message;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./money-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoneyDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MonthDataTypeComponent.html":{"url":"components/MonthDataTypeComponent.html","title":"component - MonthDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MonthDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/month-data-type/month-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-month-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./month-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./month-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-month-data-type',\n  templateUrl: './month-data-type.component.html',\n  styleUrls: ['./month-data-type.component.scss'],\n  standalone: true,\n  imports: [ IonicModule, ReactiveFormsModule ],\n})\nexport class MonthDataTypeComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  onChange(event: any) {\n    this.formGroup.controls[this.question.id].setValue(event.detail.value)\n  }\n\n  getValue(): string {\n    const control: FormControl = this.formGroup.controls[this.question.id] as FormControl\n\n    const date: Date = control.value ? new Date(control.value) : new Date()\n    return date.toISOString()\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./month-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MonthDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultipleComponent.html":{"url":"components/MultipleComponent.html","title":"component - MultipleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MultipleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/multiple/multiple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-multiple\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./multiple.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./multiple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                other\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeInputState\n                            \n                            \n                                checkAnswer\n                            \n                            \n                                getAnswers\n                            \n                            \n                                getTextValue\n                            \n                            \n                                isChecked\n                            \n                            \n                                    Private\n                                isLastAnswer\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setCheckedValue\n                            \n                            \n                                setTextValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/multiple/multiple.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/multiple/multiple.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/multiple/multiple.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/multiple/multiple.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeInputState\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeInputState(answerGroup: FormGroup, id: string, value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answerGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswer\n                        \n                    \n                \n            \n            \n                \ncheckAnswer(event: Event, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAnswers\n                        \n                    \n                \n            \n            \n                \ngetAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Answer[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTextValue\n                        \n                    \n                \n            \n            \n                \ngetTextValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChecked\n                        \n                    \n                \n            \n            \n                \nisChecked(answer: FormDetail.Answer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answer\n                                            \n                                                        FormDetail.Answer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLastAnswer\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLastAnswer(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCheckedValue\n                        \n                    \n                \n            \n            \n                \nsetCheckedValue(formGroup: FormGroup, value: boolean, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTextValue\n                        \n                    \n                \n            \n            \n                \nsetTextValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        other\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/multiple/multiple.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-multiple',\n  templateUrl: './multiple.component.html',\n  styleUrls: ['./multiple.component.scss'],\n  standalone: true,\n  imports: [ CommonModule, IonicModule, ReactiveFormsModule ]\n})\nexport class MultipleComponent implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  other: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  getAnswers(): FormDetail.Answer[] {\n    return this.question.answers;\n  }\n\n  isChecked(answer: FormDetail.Answer): boolean {\n    const formGroup: FormGroup = this.formGroup.get(`${this.question.id}`) as FormGroup;\n\n    const formControl: AbstractControl | null = formGroup.get(answer.id.toString());\n\n    if (formControl) {\n      const value: boolean = formControl.value;\n      this.changeInputState(formGroup, answer.id.toString(), value);\n      return value;\n    }\n\n    return false;\n  }\n\n  checkAnswer(event: Event, id: number): void {\n    const formGroup: FormGroup = this.formGroup.get(`${this.question.id}`) as FormGroup;\n\n    const element: HTMLInputElement = event.target as HTMLInputElement;\n    const value: boolean = element.checked;\n\n    this.setCheckedValue(formGroup, value, id);\n  }\n\n  setCheckedValue(formGroup: FormGroup, value: boolean, id: number): void {\n    const formControl: AbstractControl | null = formGroup.get(id.toString());\n\n    if (formControl) {\n      this.changeInputState(formGroup, id.toString(), value);\n      formControl.setValue(value);\n    }\n  }\n\n  getTextValue(): string {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherValue: string = answerGroup.get('other')?.value;\n    return otherValue;\n  }\n\n  setTextValue(event: any): void {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherValue: string = event.detail.value;\n    answerGroup.get('other')?.setValue(otherValue);\n  }\n\n  private changeInputState(answerGroup: FormGroup, id: string, value: boolean): void {\n\n    if (this.isLastAnswer(id) && value) {\n      this.other = true;\n      answerGroup.get('other')?.enable();\n    } else if (this.isLastAnswer(id) && !value) {\n      this.other = false;\n      answerGroup.get('other')?.disable();\n    }\n  }\n\n  private isLastAnswer(id: string): boolean {\n    const answers: FormDetail.Answer[] = this.getAnswers();\n    const lastAnswer: FormDetail.Answer = answers[answers.length - 1];\n    return Number(id) === lastAnswer.id;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ answer.value }}\n      \n    \n  \n\n\n\n  \n    \n      \n        {{ isLast ? answer.value.split(\":\")[0] : answer.value }}\n      \n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./multiple.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ answer.value }}                                {{ isLast ? answer.value.split(\":\")[0] : answer.value }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MultipleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NumberDataTypeComponent.html":{"url":"components/NumberDataTypeComponent.html","title":"component - NumberDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NumberDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/number-data-type/number-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-number-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./number-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./number-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlaceholder\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Async\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaceholder\n                        \n                    \n                \n            \n            \n                \ngetPlaceholder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-number-data-type',\n  templateUrl: './number-data-type.component.html',\n  styleUrls: ['./number-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule, ReactiveFormsModule],\n})\nexport class NumberDataTypeComponent {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(private alertController: AlertController) {}\n\n  ngOnChanges() {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    if (this.question.min)\n      formControl.addValidators(Validators.min(this.question.min));\n    if (this.question.max)\n      formControl.addValidators(Validators.max(this.question.max));\n  }\n\n  getValue(): string {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    return formControl.value;\n  }\n\n  async setValue(event: Event): Promise {\n    const element: HTMLInputElement = event.target as HTMLInputElement;\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    formControl.setValue(element.value);\n\n    if (formControl.getError('min')) {\n      const minAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor mínimo',\n        message: `El valor mínimo es ${this.question.min}`,\n        buttons: ['OK'],\n      });\n\n      await minAlert.present();\n    } else if (formControl.getError('max')) {\n      const maxAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor máximo',\n        message: `El valor máximo es ${this.question.max}`,\n        buttons: ['OK'],\n      });\n\n      await maxAlert.present();\n    }\n  }\n\n  getPlaceholder(): string {\n    let message: string = 'Ingrese un valor';\n    if (this.question.min && this.question.max)\n      message += ` entre ${this.question.min} y ${this.question.max}`;\n    else if (this.question.min) message += ` mayor a ${this.question.min}`;\n    else if (this.question.max) message += ` menor a ${this.question.max}`;\n    return message;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./number-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NumberDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OfflineManagerService.html":{"url":"injectables/OfflineManagerService.html","title":"injectable - OfflineManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OfflineManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/offline-manager/offline-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkForEvents\n                            \n                            \n                                    Private\n                                sendRequests\n                            \n                            \n                                    Public\n                                    Async\n                                storeRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, apiService: ApiService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/offline-manager/offline-manager.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        checkForEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkForEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/offline-manager/offline-manager.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sendRequests\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendRequests(operations: StoredRequest[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/offline-manager/offline-manager.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                operations\n                                            \n                                                            StoredRequest[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeRequest(url: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/offline-manager/offline-manager.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@capacitor/core';\nimport { ToastController } from '@ionic/angular';\nimport { ApiService } from '@services/api/api.service';\nimport { StorageService } from '@services/storage/storage.service';\nimport { Observable, from, of, forkJoin } from 'rxjs';\nimport { switchMap, finalize } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OfflineManagerService {\n  constructor(\n    private storageService: StorageService,\n    private apiService: ApiService,\n    private toastController: ToastController\n  ) {}\n\n  public checkForEvents(): Observable {\n    return from(this.storageService.get(STORAGE_REQ_KEY)).pipe(\n      switchMap((storedOperations: StoredRequest[]) => {\n        let storedObj: StoredRequest[] = storedOperations;\n        if (storedObj && storedObj.length > 0) {\n          return this.sendRequests(storedObj).pipe(\n            finalize(() => {\n              let toast = this.toastController.create({\n                message: `Local data succesfully synced to API!`,\n                duration: 3000,\n                position: 'bottom',\n              });\n              toast.then((toast) => toast.present());\n              this.storageService.remove(STORAGE_REQ_KEY);\n            })\n          );\n        } else {\n          console.log('no local events to sync');\n          return of(false);\n        }\n      })\n    );\n  }\n\n  public async storeRequest(url: string, data: any): Promise {\n    let toast = this.toastController.create({\n      message: `Your data is stored locally because you seem to be offline.`,\n      duration: 3000,\n      position: 'bottom',\n    });\n    toast.then((toast) => toast.present());\n\n    const action: StoredRequest = {\n      url: url,\n      data: data,\n      time: new Date().getTime(),\n      id: uuidv4(),\n    };\n\n    return this.storageService.get(STORAGE_REQ_KEY).then((storedOperations) => {\n      let storedObj: StoredRequest[] = JSON.parse(storedOperations);\n      if (storedObj) {\n        storedObj.push(action);\n      } else {\n        storedObj = [action];\n      }\n      return this.storageService.set(\n        STORAGE_REQ_KEY,\n        JSON.stringify(storedObj)\n      );\n    });\n  }\n\n  private sendRequests(\n    operations: StoredRequest[]\n  ): Observable {\n    let obs = [];\n    for (let op of operations) {\n      console.log('Make one request: ', op);\n      let oneObs = this.apiService.post(op.url, op.data);\n      obs.push(oneObs);\n    }\n    return forkJoin(obs);\n  }\n}\n\nconst STORAGE_REQ_KEY: string = 'storedreq';\n\ninterface StoredRequest {\n  url: string;\n  data: any;\n  time: number;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenComponent.html":{"url":"components/OpenComponent.html","title":"component - OpenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/open.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-open\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                AutocompleteComponent\n                                PhotoDataTypeComponent\n                                DrawingPadDataTypeComponent\n                                TextAreaDataTypeComponent\n                                NumberDataTypeComponent\n                                TextDataTypeComponent\n                                DateDataTypeComponent\n                                PercentageDataTypeComponent\n                                MonthDataTypeComponent\n                                EmailDataTypeComponent\n                                MoneyDataTypeComponent\n                                PhoneDataTypeComponent\n                \n            \n\n            \n                styleUrls\n                ./open.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./open.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDataType\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/open.component.ts:46\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/open.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/open.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/open.component.ts:44\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDataType\n                        \n                    \n                \n            \n            \n                \ngetDataType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/open.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/open.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { QuestionService } from '@services/detailed-form/question/question.service';\nimport { AutocompleteComponent } from '../autocomplete/autocomplete.component';\nimport { CommonModule } from '@angular/common';\nimport { PhotoDataTypeComponent } from './photo-data-type/photo-data-type.component';\nimport { DrawingPadDataTypeComponent } from './drawing-pad-data-type/drawing-pad-data-type.component';\nimport { TextAreaDataTypeComponent } from './text-area-data-type/text-area-data-type.component';\nimport { NumberDataTypeComponent } from './number-data-type/number-data-type.component';\nimport { TextDataTypeComponent } from './text-data-type/text-data-type.component';\nimport { DateDataTypeComponent } from './date-data-type/date-data-type.component';\nimport { PercentageDataTypeComponent } from './percentage-data-type/percentage-data-type.component';\nimport { MonthDataTypeComponent } from './month-data-type/month-data-type.component';\nimport { EmailDataTypeComponent } from './email-data-type/email-data-type.component';\nimport { MoneyDataTypeComponent } from './money-data-type/money-data-type.component';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { FormGroup } from '@angular/forms';\nimport { PhoneDataTypeComponent } from './phone-data-type/phone-data-type.component';\n\n@Component({\n  selector: 'app-open',\n  templateUrl: './open.component.html',\n  styleUrls: ['./open.component.scss'],\n  imports: [\n    CommonModule,\n    IonicModule,\n    AutocompleteComponent,\n    PhotoDataTypeComponent,\n    DrawingPadDataTypeComponent,\n    TextAreaDataTypeComponent,\n    NumberDataTypeComponent,\n    TextDataTypeComponent,\n    DateDataTypeComponent,\n    PercentageDataTypeComponent,\n    MonthDataTypeComponent,\n    EmailDataTypeComponent,\n    MoneyDataTypeComponent,\n    PhoneDataTypeComponent\n  ],\n  standalone: true,\n})\nexport class OpenComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  getDataType(): string {\n    return this.question.dataType;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./open.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OpenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PercentageDataTypeComponent.html":{"url":"components/PercentageDataTypeComponent.html","title":"component - PercentageDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PercentageDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-percentage-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./percentage-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./percentage-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlaceholder\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Async\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaceholder\n                        \n                    \n                \n            \n            \n                \ngetPlaceholder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-percentage-data-type',\n  templateUrl: './percentage-data-type.component.html',\n  styleUrls: ['./percentage-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule, ReactiveFormsModule],\n})\nexport class PercentageDataTypeComponent {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(private alertController: AlertController) {}\n\n  ngOnChanges() {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    if (this.question.min)\n      formControl.addValidators(Validators.min(this.question.min));\n    if (this.question.max)\n      formControl.addValidators(Validators.max(this.question.max));\n  }\n\n  getValue(): string {\n    return this.formGroup.get(`${this.question.id}`)?.value;\n  }\n\n  async setValue(event: Event) {\n    const element: HTMLInputElement = event.target as HTMLInputElement;\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    formControl.setValue(element.value);\n\n    if (formControl.getError('min')) {\n      const minAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor mínimo',\n        message: `El valor mínimo es ${this.question.min}`,\n        buttons: ['OK'],\n      });\n\n      await minAlert.present();\n    } else if (formControl.getError('max')) {\n      const maxAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor máximo',\n        message: `El valor máximo es ${this.question.max}`,\n        buttons: ['OK'],\n      });\n\n      await maxAlert.present();\n    }\n  }\n\n  getPlaceholder(): string {\n    let message: string = 'Ingrese un valor';\n    if (this.question.min && this.question.max)\n      message += ` entre ${this.question.min} y ${this.question.max}`;\n    else if (this.question.min) message += ` mayor a ${this.question.min}`;\n    else if (this.question.max) message += ` menor a ${this.question.max}`;\n    return message;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./percentage-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PercentageDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneDataTypeComponent.html":{"url":"components/PhoneDataTypeComponent.html","title":"component - PhoneDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhoneDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-phone-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./phone-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabledRemoveButton\n                            \n                            \n                                phones\n                            \n                            \n                                phonesObserver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPhone\n                            \n                            \n                                    Private\n                                checkPhoneListLength\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removePhone\n                            \n                            \n                                    Async\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPhone\n                        \n                    \n                \n            \n            \n                \naddPhone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkPhoneListLength\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkPhoneListLength(phones: FormDetail.Answer[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phones\n                                            \n                                                        FormDetail.Answer[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(order: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePhone\n                        \n                    \n                \n            \n            \n                \nremovePhone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValue(event: any, order: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                order\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabledRemoveButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormDetail.Answer[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phonesObserver\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-phone-data-type',\n  templateUrl: './phone-data-type.component.html',\n  styleUrls: ['./phone-data-type.component.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule],\n})\nexport class PhoneDataTypeComponent implements OnInit {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n  disabledRemoveButton: boolean = false;\n\n  phones!: FormDetail.Answer[];\n  phonesObserver!: BehaviorSubject;\n\n  constructor(private alertController: AlertController) {}\n\n  ngOnInit() {\n    this.phones = this.question.answers;\n    this.phonesObserver = new BehaviorSubject(this.phones);\n    this.phonesObserver.subscribe((phones) => {\n      this.checkPhoneListLength(phones);\n    });\n  }\n\n  getValue(order: number): string {\n    const formGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const formControl: FormControl = formGroup.get(`${order}`) as FormControl;\n    return formControl.value;\n  }\n\n  async setValue(event: any, order: number) {\n    if (event.target.value.length \n    \n\n    \n        \n  \n  \n\n\n\n  \n    Agregar\n  \n  \n    Eliminar\n  \n\n\n\n  \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n -->\n\n    \n\n    \n                \n                    ./phone-data-type.component.scss\n                \n                div {\n  display: flex;\n  justify-content: flex-end;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Agregar        Eliminar                                           -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhoneDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhotoDataTypeComponent.html":{"url":"components/PhotoDataTypeComponent.html","title":"component - PhotoDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhotoDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-photo-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./photo-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./photo-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPhoto\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                takePhoto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(photoService: PhotoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photoService\n                                                  \n                                                        \n                                                                        PhotoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPhoto\n                        \n                    \n                \n            \n            \n                \ngetPhoto()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        takePhoto\n                        \n                    \n                \n            \n            \n                \ntakePhoto()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { PhotoService } from '@services/detailed-form/question/photo/photo.service';\n\n@Component({\n  selector: 'app-photo-data-type',\n  templateUrl: './photo-data-type.component.html',\n  styleUrls: ['./photo-data-type.component.scss'],\n  standalone: true,\n  imports: [ IonicModule ],\n})\nexport class PhotoDataTypeComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor(private photoService: PhotoService) { }\n\n  ngOnInit() { }\n\n  takePhoto() {\n    this.photoService.takePhoto().then((photo) => {\n      this.formGroup.get(`${this.question.id}`)?.setValue(photo);\n    })\n  }\n\n  getPhoto(): any {\n    let photoBase64 = this.formGroup.get(`${this.question.id}`)?.value;\n    let photo = `data:image/jpeg;base64,${photoBase64}`;\n    return photo;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./photo-data-type.component.scss\n                \n                ion-content {\n  height: 70vh;\n}\n\nion-img::part(image) {\n  border-radius: 5%;\n}\n\nion-img {\n  width: 100%;\n  height: 85%;\n  background-color: lightgray;\n  border-radius: 5%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhotoDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PhotoService.html":{"url":"injectables/PhotoService.html","title":"injectable - PhotoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PhotoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/question/photo/photo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                takePhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/question/photo/photo.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        takePhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    takePhoto()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/photo/photo.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Camera, CameraResultType, CameraSource, Photo } from '@capacitor/camera';\nimport { Filesystem, Directory } from '@capacitor/filesystem';\nimport { Preferences } from '@capacitor/preferences';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n\n  constructor() { }\n\n  public async takePhoto(): Promise {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Base64,\n      source: CameraSource.Camera,\n      quality: 50\n    });\n\n    const photo = capturedPhoto.base64String!;\n\n    return photo;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Producer.html":{"url":"interfaces/Producer.html","title":"interface - Producer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Producer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Beneficiary.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            associationId\n                                        \n                                \n                                \n                                        \n                                            cedula\n                                        \n                                \n                                \n                                        \n                                            demonstrationPlot\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            greenhouse\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            middlename\n                                        \n                                \n                                \n                                        \n                                            recommendedActions\n                                        \n                                \n                                \n                                        \n                                            secondLastname\n                                        \n                                \n                                \n                                        \n                                            specialized\n                                        \n                                \n                                \n                                        \n                                            supplies\n                                        \n                                \n                                \n                                        \n                                            technicalAssistance\n                                        \n                                \n                                \n                                        \n                                            transplantDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        associationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        associationId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cedula\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cedula:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        demonstrationPlot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        demonstrationPlot:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        greenhouse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        greenhouse:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middlename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        middlename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recommendedActions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recommendedActions:         SelectedQuestions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectedQuestions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondLastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondLastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        specialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        specialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supplies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        supplies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technicalAssistance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technicalAssistance:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transplantDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transplantDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Beneficiary {\n\n  export interface Producer {\n    cedula: string;\n    firstname: string;\n    middlename: string;\n    lastname: string;\n    secondLastname: string;\n    id: string;\n    specialized: boolean;\n    technicalAssistance: boolean;\n    demonstrationPlot: boolean;\n    greenhouse: boolean;\n    supplies: boolean;\n    associationId: number;\n    transplantDate: string;\n    recommendedActions: SelectedQuestions\n  }\n\n  export const ProducerBaseParams = {\n    cedula: '',\n    firstname: '',\n    middlename: '',\n    lastname: '',\n    secondLastname: '',\n    id: '',\n    specialized: false,\n    technicalAssistance: false,\n    demonstrationPlot: false,\n    greenhouse: false,\n    supplies: false,\n    associationId: 0,\n    transplantDate: '',\n    recommendedActions: {}\n  };\n\n  export type ProducerResponse = {\n    cedula: string;\n    primer_nombre: string;\n    segundo_nombre: string;\n    primer_apellido: string;\n    segundo_apellido: string;\n    identification: string;\n    has_especializada: number;\n    at_p5: number;          // asistencia técnica\n    pd_p5: number;          // parcela demostrativa\n    cm_p5: number;          // casa malla (invernadero espacial)\n    insumo_p5: number;      // insumos\n    association_id: number; // id de la asociacion\n    transplantDate: string;\n    selectedQuestionIds: SelectedQuestions\n  }\n\n  export type SelectedQuestions = { [questionId: string] : boolean };\n\n  export interface Association {\n    id: number;\n    nit: number;\n    name: string;\n    identification: string;\n    zone: string;\n    farming: string;\n  }\n\n  export type AssociationResponse = {\n    id: number;\n    nit: number;\n    name: string;\n    identification: string;\n    zona: string;\n    farming: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProducerService.html":{"url":"injectables/ProducerService.html","title":"injectable - ProducerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProducerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/producer/producer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                producers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLocalProducers\n                            \n                            \n                                    Public\n                                getProducers\n                            \n                            \n                                    Private\n                                setLocalProducers\n                            \n                            \n                                    Private\n                                syncProducers\n                            \n                            \n                                    Public\n                                updateProducers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/producer/producer.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLocalProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalProducers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProducers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Beneficiary.Producer[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLocalProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLocalProducers(producers: Beneficiary.Producer[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                producers\n                                            \n                                                            Beneficiary.Producer[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncProducers(forceRefresh: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                forceRefresh\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProducers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        producers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Beneficiary.Producer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/producer/producer.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApiService } from '../api/api.service';\nimport { StorageService } from '../storage/storage.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { Network } from '@capacitor/network';\nimport { Observable, from } from 'rxjs';\nimport { tap, map, switchMap } from 'rxjs/operators';\nimport { HttpResponse } from '@capacitor/core';\nimport { producerBuilder } from '@utils/builder';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProducerService {\n\n  producers: Beneficiary.Producer[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private storageService: StorageService,\n  ) { }\n\n  public getProducers(): Beneficiary.Producer[] {\n    return this.producers;\n  }\n\n  public updateProducers(): void {\n    this.syncProducers(true).subscribe((producers) => {\n      this.producers = producers;\n    });\n  }\n\n  private syncProducers(\n    forceRefresh: boolean = false\n  ): Observable {\n    return from(Network.getStatus()).pipe(\n      switchMap((status) => {\n        if (!status.connected || !forceRefresh) {\n          return this.getLocalProducers();\n        } else {\n          return from(this.apiService.post(ENDPOINT)).pipe(\n            map((response: HttpResponse) => {\n              const producerResponse: Beneficiary.ProducerResponse[] =\n                JSON.parse(response.data);\n              const producers: Beneficiary.Producer[] = producerResponse.map(\n                (producer) => producerBuilder(producer)\n              );\n              return producers;\n            }),\n            tap((producers: Beneficiary.Producer[]) => {\n              this.setLocalProducers(producers);\n            })\n          );\n        }\n      })\n    );\n  }\n\n  private getLocalProducers(): Promise {\n    return this.storageService.get(PRODUCERS_STORAGE_KEY);\n  }\n\n  private setLocalProducers(producers: Beneficiary.Producer[]): void {\n    this.storageService.set(ENDPOINT, producers);\n  }\n}\n\nconst PRODUCERS_STORAGE_KEY = 'producers';\nconst ENDPOINT = PRODUCERS_STORAGE_KEY;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Question.html":{"url":"interfaces/Question.html","title":"interface - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            answerLength\n                                        \n                                \n                                \n                                        \n                                            answers\n                                        \n                                \n                                \n                                        \n                                            answersRelation\n                                        \n                                \n                                \n                                        \n                                            dataType\n                                        \n                                \n                                \n                                        \n                                            extendable\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            questionCategory\n                                        \n                                \n                                \n                                        \n                                            questionCategoryId\n                                        \n                                \n                                \n                                        \n                                            questionChildren\n                                        \n                                \n                                \n                                        \n                                            questionParentId\n                                        \n                                \n                                \n                                        \n                                            required\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            userTypeRestriction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answerLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answerLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        answers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answers:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        answersRelation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answersRelation:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extendable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extendable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionCategory:         QuestionCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionCategoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionCategoryId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionChildren\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionChildren:         Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionParentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionParentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userTypeRestriction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userTypeRestriction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionCategory.html":{"url":"interfaces/QuestionCategory.html","title":"interface - QuestionCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuestionCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionComponent.html":{"url":"components/QuestionComponent.html","title":"component - QuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/question.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                TypeComponent\n                                TableComponent\n                                DataquestHeaderComponent\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./question.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertShown\n                            \n                            \n                                    Private\n                                backButtonSubscription\n                            \n                            \n                                currentQuestion\n                            \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                confirmExit\n                            \n                            \n                                getCategory\n                            \n                            \n                                getType\n                            \n                            \n                                isDraft\n                            \n                            \n                                isFirstQuestion\n                            \n                            \n                                isForm\n                            \n                            \n                                isLastQuestion\n                            \n                            \n                                    Private\n                                isQuestionValid\n                            \n                            \n                                isSurvey\n                            \n                            \n                                    Private\n                                isValid\n                            \n                            \n                                    Async\n                                nextQuestion\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Async\n                                presentAlert\n                            \n                            \n                                previousQuestion\n                            \n                            \n                                    Private\n                                saveOpenResponse\n                            \n                            \n                                    Private\n                                saveResponse\n                            \n                            \n                                    Private\n                                saveSelection\n                            \n                            \n                                    Private\n                                saveTableResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(draftService: DraftService, detailedFormService: DetailedFormService, questionService: QuestionService, navCtrl: NavController, alertController: AlertController, loadingController: LoadingController, platform: Platform, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/question.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        confirmExit\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmExit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:183\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getType\n                        \n                    \n                \n            \n            \n                \ngetType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:187\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:304\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFirstQuestion\n                        \n                    \n                \n            \n            \n                \nisFirstQuestion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:210\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isForm\n                        \n                    \n                \n            \n            \n                \nisForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:300\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLastQuestion\n                        \n                    \n                \n            \n            \n                \nisLastQuestion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:199\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isQuestionValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isQuestionValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:191\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSurvey\n                        \n                    \n                \n            \n            \n                \nisSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:308\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        nextQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextQuestion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentAlert(isTable: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isTable\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousQuestion\n                        \n                    \n                \n            \n            \n                \npreviousQuestion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveOpenResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveOpenResponse(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:281\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveResponse(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveSelection\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSelection(question: FormDetail.Question, answersFormGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:253\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveTableResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveTableResponse(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:236\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alertShown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        backButtonSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  AlertController,\n  IonicModule,\n  LoadingController,\n  NavController,\n} from '@ionic/angular';\nimport { QuestionService } from '@services/detailed-form/question/question.service';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DataquestHeaderComponent } from '../header/dataquest-header/dataquest-header.component';\nimport { CommonModule, Location } from '@angular/common';\nimport { TableComponent } from './type/table/table.component';\nimport { TypeComponent } from './type/type.component';\nimport { FormArray, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { DraftService } from '@services/draft/draft.service';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { Platform } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss'],\n  imports: [\n    CommonModule,\n    IonicModule,\n    TypeComponent,\n    TableComponent,\n    DataquestHeaderComponent,\n    ReactiveFormsModule,\n  ],\n  standalone: true,\n})\nexport class QuestionComponent {\n  currentQuestion!: FormDetail.Question;\n  formGroup!: FormGroup;\n  disabled: boolean = false;\n  alertShown: boolean = false;\n  private backButtonSubscription!: Subscription;\n\n  constructor(\n    private draftService: DraftService,\n    private detailedFormService: DetailedFormService,\n    private questionService: QuestionService,\n    private navCtrl: NavController,\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    private platform: Platform,\n    private location: Location\n  ) {}\n\n  ngOnInit() {\n    this.formGroup = this.questionService.getFormGroup();\n    this.currentQuestion = this.questionService.getFirst();\n    if (this.isSurvey()) {\n      this.disabled = true;\n    }\n    this.backButtonSubscription = this.platform.backButton.subscribeWithPriority(10, () => {\n      this.confirmExit();\n    });\n  }\n\n  ngOnDestroy() {\n    this.backButtonSubscription.unsubscribe();\n  }\n\n  private async confirmExit() {\n    var message: string = ''\n    if (this.isForm())\n      message = 'Si sale, su progreso se guardará como borrador. ¿Desea salir?';\n    else if (this.isDraft())\n      message = 'Si sale, se guardará el borrador. ¿Desea salir?';\n\n    const alert = await this.alertController.create({\n      header: '¿Desea salir?',\n      message: message,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n        },\n        {\n          text: 'Salir',\n          role: 'confirm',\n          cssClass: 'danger',\n          handler: () => {\n            this.location.back();\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async nextQuestion() {\n    const loading = await this.loadingController.create({\n      message: 'Cargando...',\n    });\n    await loading.present();\n    if (this.isQuestionValid()) {\n      this.saveResponse(this.currentQuestion, this.formGroup);\n      this.draftService.saveDrafts();\n      const nextQuestion = this.questionService.toggleNextQuestionFrom(\n        this.currentQuestion,\n        this.formGroup\n      );\n      if (nextQuestion) {\n        this.currentQuestion = nextQuestion;\n        if (\n          this.currentQuestion.questionCategory.name ===\n            'Capital social individual' &&\n          !this.alertShown\n        ) {\n          this.alertShown = true;\n          this.alertController\n            .create({\n              header: 'Atención',\n              subHeader: 'Capital social individual',\n              message:\n                'A continuación, pasamos a las preguntas que corresponden al componente del capital social individual del índice de desarrollo socio-organizacional.',\n              buttons: ['OK'],\n            })\n            .then((alert) => alert.present());\n        }\n      }\n    } else {\n      const type: string = this.currentQuestion.type;\n      const isTable: boolean = type === 'Tabla';\n      this.presentAlert(isTable);\n    }\n    await loading.dismiss();\n  }\n\n  // private getLastAnsweredQuestion(): FormDetail.Question {\n  //   let lastAnsweredQuestion: FormDetail.Question =\n  //     this.questionService.getFirst();\n  //   const formGroup: FormGroup = this.formGroup;\n  //   while (formGroup.controls[lastAnsweredQuestion.id.toString()].valid) {\n  //     lastAnsweredQuestion = this.questionService.getNextValidQuestionFrom(\n  //       lastAnsweredQuestion,\n  //       this.formGroup\n  //     )!;\n  //   }\n  //   return lastAnsweredQuestion;\n  // }\n\n  previousQuestion(): void {\n    const previousQuestion = this.questionService.getPreviousValidQuestionFrom(\n      this.currentQuestion,\n      this.formGroup\n    );\n    if (previousQuestion) {\n      this.currentQuestion = previousQuestion;\n    }\n  }\n\n  async presentAlert(isTable: boolean) {\n    const tableMessage: string =\n      'Por favor, responda todas las preguntas de las secciones para continuar.';\n    const genericMessage: string =\n      'Por favor, responda la pregunta para continuar.';\n    const alert = await this.alertController.create({\n      header: 'Pregunta requerida',\n      message: isTable ? tableMessage : genericMessage,\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  onSubmit() {\n    if (this.isValid()) {\n      this.saveResponse(this.currentQuestion, this.formGroup);\n      this.detailedFormService.saveSurvey();\n      this.navCtrl.pop();\n    } else {\n      this.presentAlert(false);\n    }\n  }\n\n  getCategory(): string {\n    return this.currentQuestion?.questionCategory.name;\n  }\n\n  getType(): string {\n    return this.currentQuestion?.type;\n  }\n\n  private isQuestionValid() {\n    return this.formGroup.controls[this.currentQuestion.id].valid;\n  }\n\n  private isValid() {\n    return this.formGroup.valid;\n  }\n\n  isLastQuestion(): boolean {\n    let question: FormDetail.Question = this.currentQuestion;\n    const nextQuestion: FormDetail.Question | null =\n      this.questionService.toggleNextQuestionFrom(question, this.formGroup);\n    if (!nextQuestion) {\n      return true;\n    }\n\n    return this.formGroup.controls[nextQuestion.id]!.disabled;\n  }\n\n  isFirstQuestion(): boolean {\n    let question: FormDetail.Question = this.currentQuestion;\n    let firstQuestion: FormDetail.Question = this.questionService.getFirst();\n    return question?.id === firstQuestion.id;\n  }\n\n  private saveResponse(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): void {\n    switch (question.type) {\n      case 'Abierta':\n        this.saveOpenResponse(question, formGroup);\n        break;\n      case 'Tabla':\n        this.saveTableResponse(question, formGroup);\n        break;\n      default:\n        const questionFormGroup: FormGroup = formGroup.controls[\n          question.id\n        ] as FormGroup;\n        this.saveSelection(question, questionFormGroup);\n    }\n    this.detailedFormService.updateModifyDate();\n  }\n\n  private saveTableResponse(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ) {\n    let questionFormArray: FormArray = formGroup.controls[\n      question.id\n    ] as FormArray;\n    this.currentQuestion.questionChildren.forEach((section, index) => {\n      let sectionFormGroup: FormGroup = questionFormArray.at(\n        index\n      ) as FormGroup;\n      section.forEach((child) => {\n        this.saveResponse(child, sectionFormGroup);\n      });\n    });\n  }\n\n  private saveSelection(\n    question: FormDetail.Question,\n    answersFormGroup: FormGroup\n  ) {\n    question.answers.forEach((answer) => {\n      const value: boolean =\n        answersFormGroup.controls[answer.id.toString()].value;\n      answer.checked = value;\n    });\n    if (\n      question.type === 'Múltiple respuesta con otro' ||\n      question.type === 'Única respuesta con otro'\n    ) {\n      const textAnswered: string = answersFormGroup.controls['other'].value;\n      const fullSavedString: string =\n        question.answers[question.answers.length - 1].value;\n      const savedStringArray: string[] = fullSavedString.split(':');\n\n      if (savedStringArray.length === 2) {\n        savedStringArray[1] = textAnswered;\n      } else {\n        savedStringArray.push(textAnswered);\n      }\n      question.answers[question.answers.length - 1].value =\n        savedStringArray.join(':');\n    }\n  }\n\n  private saveOpenResponse(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ) {\n    if (question.dataType === 'tel') {\n      let answersGroup: FormGroup = formGroup.controls[\n        question.id\n      ] as FormGroup;\n      question.answers.forEach((answer) => {\n        const value: string = answersGroup.controls[answer.order].value;\n        answer.value = value;\n      });\n    } else {\n      let formResponse = formGroup.controls[question.id].value;\n      let answer = question.answers[0];\n      answer.value = formResponse;\n    }\n  }\n\n  isForm(): boolean {\n    return this.detailedFormService.isForm();\n  }\n\n  isDraft(): boolean {\n    return this.detailedFormService.isDraft();\n  }\n\n  isSurvey(): boolean {\n    return this.detailedFormService.isSurvey();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n\n  \n    \n      \n        Anterior\n      \n    \n    \n      \n        Guardar\n      \n    \n    \n      \n        Siguiente\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./question.component.scss\n                \n                ion-icon {\n  font-size: 2.5em;\n  color: gray;\n  margin: 0 0.5em;\n  cursor: pointer;\n  transition: 0.3s;\n  &:hover {\n    color: #f4f4f4;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Anterior                            Guardar                            Siguiente            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionControlService.html":{"url":"injectables/QuestionControlService.html","title":"injectable - QuestionControlService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuestionControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/control/question-control.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assignFormControls\n                            \n                            \n                                    Private\n                                atLeastOneChecked\n                            \n                            \n                                    Private\n                                generateFormArray\n                            \n                            \n                                    Private\n                                generateFormControl\n                            \n                            \n                                    Private\n                                generateFormGroup\n                            \n                            \n                                    Private\n                                getFormControl\n                            \n                            \n                                    Private\n                                requiredChildrenResponse\n                            \n                            \n                                    Private\n                                requiredTableResponse\n                            \n                            \n                                    Public\n                                toFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/control/question-control.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        assignFormControls\n                        \n                    \n                \n            \n            \n                \n                        \n                    assignFormControls(question: FormDetail.Question, required: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                required\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormControl | FormArray | FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        atLeastOneChecked\n                        \n                    \n                \n            \n            \n                \n                        \n                    atLeastOneChecked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFormArray\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFormArray(question: FormDetail.Question, required: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                required\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormArray\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFormControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFormControl(question: FormDetail.Question, required: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                required\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormControl | FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFormGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFormGroup(question: FormDetail.Question, required: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                required\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getFormControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFormControl(question: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormControl | FormGroup | FormArray\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requiredChildrenResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    requiredChildrenResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requiredTableResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    requiredTableResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toFormGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    toFormGroup(questions: FormDetail.Question[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                questions\n                                            \n                                                        FormDetail.Question[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionControlService {\n  constructor() {}\n\n  public toFormGroup(questions: FormDetail.Question[]): FormGroup {\n    const group: { [key: string]: FormControl | FormGroup | FormArray } = {};\n    questions.forEach((question) => {\n      group[question.id] = this.getFormControl(question);\n    });\n\n    return new FormGroup(group);\n  }\n\n  private getFormControl(\n    question: FormDetail.Question\n  ): FormControl | FormGroup | FormArray {\n    if (question.required === 1) {\n      return this.assignFormControls(question, true);\n    } else {\n      return this.assignFormControls(question, false);\n    }\n  }\n\n  private assignFormControls(\n    question: FormDetail.Question,\n    required: boolean\n  ): FormControl | FormArray | FormGroup {\n    switch (question.type) {\n      case 'Abierta':\n        return this.generateFormControl(question, required);\n      case 'Tabla':\n        return this.generateFormArray(question, required);\n      default:\n        return this.generateFormGroup(question, required);\n    }\n  }\n\n  private generateFormControl(\n    question: FormDetail.Question,\n    required: boolean\n  ): FormControl | FormGroup {\n    if (question.dataType === 'tel') {\n      const group: { [key: string]: FormControl } = {};\n      question.answers.forEach((answer) => {\n        group[answer.order] = new FormControl(answer.value, [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(10),\n        ]);\n      });\n      const formGroup: FormGroup = new FormGroup(\n        group,\n        required ? this.requiredChildrenResponse() : null\n      );\n      return formGroup;\n    }\n    return new FormControl(\n      question.answers[0].value || '',\n      required ? Validators.required : null\n    );\n  }\n\n  private generateFormGroup(question: FormDetail.Question, required: boolean): any {\n    const group: { [key: string]: FormControl } = {};\n    question.answers.forEach((answer) => {\n      group[answer.id] = new FormControl(answer.checked);\n    });\n\n    const formGroup: FormGroup = new FormGroup(\n      group,\n      required ? this.atLeastOneChecked() : null\n    );\n\n    if (\n      question.type === 'Múltiple respuesta con otro' ||\n      question.type === 'Única respuesta con otro'\n    ) {\n      let value: string =\n        question.answers[question.answers.length - 1].value.split(':')[1] || '';\n      formGroup.addControl(\n        'other',\n        new FormControl(value, Validators.required)\n      );\n    }\n    return formGroup;\n  }\n\n  private generateFormArray(question: FormDetail.Question, required: boolean): FormArray {\n    const array: FormGroup[] = [];\n    question.questionChildren.forEach((section) => {\n      const group: { [key: string]: FormControl | FormGroup | FormArray } = {};\n      section.forEach((child) => {\n        group[child.id] = this.getFormControl(child);\n      });\n\n      const formGroup: FormGroup = new FormGroup(\n        group,\n        required ? this.requiredChildrenResponse() : null\n      );\n\n      array.push(formGroup);\n    });\n\n    const formArray: FormArray = new FormArray(\n      array,\n      required ? this.requiredTableResponse() : null\n    );\n\n    return formArray;\n  }\n\n  private atLeastOneChecked(): ValidatorFn {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n      if (formGroup instanceof FormGroup) {\n        const checkboxValues = Object.values(formGroup.value);\n\n        if (checkboxValues.includes(true)) {\n          return null; // At least one checkbox is checked, validation passes\n        }\n      }\n      return { atLeastOneChecked: true }; // No checkboxes are checked, validation fails\n    };\n  }\n\n  private requiredChildrenResponse(): ValidatorFn {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n      if (formGroup instanceof FormGroup) {\n        const invalidControls = Object.keys(formGroup.controls).filter(\n          (key) => formGroup.controls[key].invalid\n        );\n\n        if (invalidControls.length > 0) {\n          return { requiredChildrenResponse: true };\n        }\n      }\n      return null;\n    };\n  }\n\n  private requiredTableResponse(): ValidatorFn {\n    return (formArray: AbstractControl): ValidationErrors | null => {\n      if (formArray instanceof FormArray) {\n        for (const formGroup of formArray.controls) {\n          if (formGroup instanceof FormGroup && !formGroup.valid) {\n            return { requiredTableResponse: true };\n          }\n        }\n      }\n      return null;\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/question/question.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filteredQuestions\n                            \n                            \n                                    Private\n                                originalQuestions\n                            \n                            \n                                    Private\n                                progress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                disableQuestion\n                            \n                            \n                                    Private\n                                enableQuestion\n                            \n                            \n                                getCurrentIndex\n                            \n                            \n                                getFilteredLength\n                            \n                            \n                                getFirst\n                            \n                            \n                                getFormGroup\n                            \n                            \n                                getLast\n                            \n                            \n                                    Private\n                                getNextQuestion\n                            \n                            \n                                getOriginalLength\n                            \n                            \n                                getOriginalQuestions\n                            \n                            \n                                    Private\n                                getPreviousQuestion\n                            \n                            \n                                getPreviousValidQuestionFrom\n                            \n                            \n                                getProgress\n                            \n                            \n                                setQuestions\n                            \n                            \n                                toggleNextQuestionFrom\n                            \n                            \n                                updateProgress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(questionControlService: QuestionControlService, answerRelationService: AnswerRelationService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/question/question.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionControlService\n                                                  \n                                                        \n                                                                        QuestionControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerRelationService\n                                                  \n                                                        \n                                                                        AnswerRelationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        disableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentIndex\n                        \n                    \n                \n            \n            \n                \ngetCurrentIndex(current: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredLength\n                        \n                    \n                \n            \n            \n                \ngetFilteredLength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirst\n                        \n                    \n                \n            \n            \n                \ngetFirst()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Question\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormGroup\n                        \n                    \n                \n            \n            \n                \ngetFormGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormGroup\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLast\n                        \n                    \n                \n            \n            \n                \ngetLast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Question\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNextQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNextQuestion(current: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOriginalLength\n                        \n                    \n                \n            \n            \n                \ngetOriginalLength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOriginalQuestions\n                        \n                    \n                \n            \n            \n                \ngetOriginalQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Question[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getPreviousQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPreviousQuestion(current: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPreviousValidQuestionFrom\n                        \n                    \n                \n            \n            \n                \ngetPreviousValidQuestionFrom(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProgress\n                        \n                    \n                \n            \n            \n                \ngetProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setQuestions\n                        \n                    \n                \n            \n            \n                \nsetQuestions(questions: FormDetail.Question[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                questions\n                                            \n                                                        FormDetail.Question[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleNextQuestionFrom\n                        \n                    \n                \n            \n            \n                \ntoggleNextQuestionFrom(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProgress\n                        \n                    \n                \n            \n            \n                \nupdateProgress(currentQuestion: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentQuestion\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filteredQuestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormDetail.Question[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/question/question.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        originalQuestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormDetail.Question[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/question/question.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        progress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/question/question.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { FormGroup } from '@angular/forms';\nimport { QuestionControlService } from '../control/question-control.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { AnswerRelationService } from './answer-relation/answer-relation.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionService {\n  private filteredQuestions!: FormDetail.Question[];\n  private originalQuestions!: FormDetail.Question[];\n  private progress: number = 0;\n\n  constructor(\n    private questionControlService: QuestionControlService,\n    private answerRelationService: AnswerRelationService,\n    private authService: AuthService,\n  ) {}\n\n  /*   getFilteredQuestions(): FormDetail.Question[] {\n    let filteredQuestions: FormDetail.Question[] = this.originalQuestions.filter(\n      (question) => question.questionParentId === null\n    );\n    return filteredQuestions;\n  } */\n\n  getOriginalQuestions(): FormDetail.Question[] {\n    return this.originalQuestions;\n  }\n\n  setQuestions(questions: FormDetail.Question[]): void {\n    this.originalQuestions = questions;\n    this.filteredQuestions = this.originalQuestions.filter(\n      (question) => question.questionParentId === null || question.questionParentId === undefined\n    );\n    this.filteredQuestions = this.filteredQuestions.filter(\n      async (question) =>\n        question.userTypeRestriction ===\n          (await this.authService.getUser()).type ||\n        question.userTypeRestriction === null\n    );\n    console.log(this.filteredQuestions);\n  }\n\n  getOriginalLength(): number {\n    return this.originalQuestions.length;\n  }\n\n  getFilteredLength(): number {\n    return this.filteredQuestions.length;\n  }\n\n  getFirst(): FormDetail.Question {\n    let firstQuestion: FormDetail.Question = this.filteredQuestions[0];\n    return firstQuestion;\n  }\n\n  getLast(): FormDetail.Question {\n    let lastIndex: number = this.filteredQuestions.length - 1;\n    let lastQuestion: FormDetail.Question = this.filteredQuestions[lastIndex];\n    return lastQuestion;\n  }\n\n  private getNextQuestion(current: FormDetail.Question): FormDetail.Question | null {\n    if (current !== this.getLast()) {\n      let next: FormDetail.Question =\n        this.filteredQuestions[this.getCurrentIndex(current) + 1];\n      return next;\n    }\n    return null;\n  }\n\n  toggleNextQuestionFrom(question: FormDetail.Question, formGroup: FormGroup): FormDetail.Question | null {\n    const nextQuestion: FormDetail.Question | null =\n      this.getNextQuestion(question);\n    if (!nextQuestion) {\n      return null;\n    }\n    const checkedAnswersRelation: boolean =\n      this.answerRelationService.checkAnswerRelation(nextQuestion, formGroup);\n\n    if (checkedAnswersRelation) {\n      this.enableQuestion(nextQuestion, formGroup);\n      this.updateProgress(nextQuestion);\n      return nextQuestion;\n    } else {\n      this.disableQuestion(nextQuestion, formGroup);\n      return this.toggleNextQuestionFrom(nextQuestion, formGroup);\n    }\n  }\n\n  getCurrentIndex(current: FormDetail.Question): number {\n    let currentIndex: number = this.filteredQuestions.indexOf(current);\n    return currentIndex;\n  }\n\n  private getPreviousQuestion(current: FormDetail.Question): FormDetail.Question | null {\n    if (current !== this.getFirst()) {\n      let previous: FormDetail.Question =\n        this.filteredQuestions[this.getCurrentIndex(current) - 1];\n      return previous;\n    }\n    return null;\n  }\n\n  getPreviousValidQuestionFrom(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): FormDetail.Question | null {\n    const previousQuestion: FormDetail.Question | null =\n      this.getPreviousQuestion(question);\n    if (!previousQuestion) {\n      return null;\n    }\n    const id: string = previousQuestion.id.toString();\n    const disabled: boolean = formGroup.get(id)!.disabled;\n\n    if (disabled) {\n      return this.getPreviousValidQuestionFrom(previousQuestion, formGroup);\n    } else {\n      this.updateProgress(previousQuestion);\n      return previousQuestion;\n    }\n  }\n\n  getProgress(): number {\n    return this.progress;\n  }\n\n  updateProgress(currentQuestion: FormDetail.Question): void {\n    let currentPosition: number = this.getCurrentIndex(currentQuestion) + 1;\n    let length: number = this.getFilteredLength();\n    let currentProgress: number = currentPosition / length;\n    this.progress = currentProgress;\n  }\n\n  getFormGroup(): FormGroup {\n    return this.questionControlService.toFormGroup(this.filteredQuestions);\n  }\n\n  private enableQuestion(question: FormDetail.Question, formGroup: FormGroup): void {\n    this.answerRelationService.enableQuestion(question, formGroup);\n  }\n\n  private disableQuestion(question: FormDetail.Question, formGroup: FormGroup): void {\n    this.answerRelationService.disableQuestion(question, formGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SecureInnerPagesGuard.html":{"url":"injectables/SecureInnerPagesGuard.html","title":"injectable - SecureInnerPagesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SecureInnerPagesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/guards/secure-inner-pages/secure-inner-pages.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/secure-inner-pages/secure-inner-pages.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/secure-inner-pages/secure-inner-pages.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SecureInnerPagesGuard {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate() {\n\n    const logged = this.authService.isLogged();\n\n    if (!logged) {\n      this.authService.logout();\n      this.router.navigate(['/login']);\n    }\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/storage/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                keys\n                            \n                            \n                                    Async\n                                length\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                set\n                            \n                            \n                                showStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/storage/storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        keys\n                        \n                    \n                \n            \n            \n                \n                        \n                    keys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        length\n                        \n                    \n                \n            \n            \n                \n                        \n                    length()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showStorage\n                        \n                    \n                \n            \n            \n                \nshowStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/storage/storage.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage-angular';\nimport CordovaSQLiteDriver from 'localforage-cordovasqlitedriver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  private _storage: Storage | null = null;\n\n  constructor(private storage: Storage) {\n    this.init();\n  }\n\n  async init() {\n    await this.storage.defineDriver(CordovaSQLiteDriver);\n    const storage = await this.storage.create();\n    this._storage = storage;\n    this.length().then((length) => {\n      console.log('Storage length:', length);\n    });\n    this.keys().then((keys) => {\n      console.log('Storage keys:', keys);\n    });\n    this.showStorage();\n  }\n\n  async set(key: string, value: any) {\n    await this._storage?.set(key, value);\n  }\n\n  async get(key: string) {\n    return await this._storage?.get(key);\n  }\n\n  async remove(key: string){\n    return await this._storage?.remove(key);\n  }\n\n  async length() {\n    return await this._storage?.length();\n  }\n\n  async keys() {\n    return await this._storage?.keys();\n  }\n\n  showStorage() {\n    this._storage?.forEach((value, key, index) => {\n      console.log('Key:', key);\n      console.log('Index:', index);\n      console.log('Value:', value);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoredRequest.html":{"url":"interfaces/StoredRequest.html","title":"interface - StoredRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoredRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/offline-manager/offline-manager.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@capacitor/core';\nimport { ToastController } from '@ionic/angular';\nimport { ApiService } from '@services/api/api.service';\nimport { StorageService } from '@services/storage/storage.service';\nimport { Observable, from, of, forkJoin } from 'rxjs';\nimport { switchMap, finalize } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OfflineManagerService {\n  constructor(\n    private storageService: StorageService,\n    private apiService: ApiService,\n    private toastController: ToastController\n  ) {}\n\n  public checkForEvents(): Observable {\n    return from(this.storageService.get(STORAGE_REQ_KEY)).pipe(\n      switchMap((storedOperations: StoredRequest[]) => {\n        let storedObj: StoredRequest[] = storedOperations;\n        if (storedObj && storedObj.length > 0) {\n          return this.sendRequests(storedObj).pipe(\n            finalize(() => {\n              let toast = this.toastController.create({\n                message: `Local data succesfully synced to API!`,\n                duration: 3000,\n                position: 'bottom',\n              });\n              toast.then((toast) => toast.present());\n              this.storageService.remove(STORAGE_REQ_KEY);\n            })\n          );\n        } else {\n          console.log('no local events to sync');\n          return of(false);\n        }\n      })\n    );\n  }\n\n  public async storeRequest(url: string, data: any): Promise {\n    let toast = this.toastController.create({\n      message: `Your data is stored locally because you seem to be offline.`,\n      duration: 3000,\n      position: 'bottom',\n    });\n    toast.then((toast) => toast.present());\n\n    const action: StoredRequest = {\n      url: url,\n      data: data,\n      time: new Date().getTime(),\n      id: uuidv4(),\n    };\n\n    return this.storageService.get(STORAGE_REQ_KEY).then((storedOperations) => {\n      let storedObj: StoredRequest[] = JSON.parse(storedOperations);\n      if (storedObj) {\n        storedObj.push(action);\n      } else {\n        storedObj = [action];\n      }\n      return this.storageService.set(\n        STORAGE_REQ_KEY,\n        JSON.stringify(storedObj)\n      );\n    });\n  }\n\n  private sendRequests(\n    operations: StoredRequest[]\n  ): Observable {\n    let obs = [];\n    for (let op of operations) {\n      console.log('Make one request: ', op);\n      let oneObs = this.apiService.post(op.url, op.data);\n      obs.push(oneObs);\n    }\n    return forkJoin(obs);\n  }\n}\n\nconst STORAGE_REQ_KEY: string = 'storedreq';\n\ninterface StoredRequest {\n  url: string;\n  data: any;\n  time: number;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SurveyService.html":{"url":"injectables/SurveyService.html","title":"injectable - SurveyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SurveyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/survey/survey.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                online\n                            \n                            \n                                    Private\n                                surveys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addNetworkChangeListener\n                            \n                            \n                                    Private\n                                changeSyncStatus\n                            \n                            \n                                    Public\n                                getLocalSurveys\n                            \n                            \n                                    Private\n                                getNetworkStatus\n                            \n                            \n                                    Public\n                                getSurveys\n                            \n                            \n                                    Private\n                                    Async\n                                presentAlert\n                            \n                            \n                                    Public\n                                pushSurvey\n                            \n                            \n                                    Public\n                                removeAllListeners\n                            \n                            \n                                    Public\n                                saveSurveys\n                            \n                            \n                                    Public\n                                syncSurveys\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, alertController: AlertController, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/survey/survey.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addNetworkChangeListener\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNetworkChangeListener()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeSyncStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeSyncStatus(survey: FormDetail.Form, status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                survey\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLocalSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNetworkStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNetworkStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        presentAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentAlert()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pushSurvey\n                        \n                    \n                \n            \n            \n                \n                        \n                    pushSurvey(survey: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                survey\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeAllListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeAllListeners()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        syncSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        online\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/survey/survey.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        surveys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/survey/survey.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { StorageService } from '../storage/storage.service';\nimport { ApiService } from '../api/api.service';\nimport { Network } from '@capacitor/network';\nimport { AlertController } from '@ionic/angular';\nimport { Observable, catchError, forkJoin, from, mergeMap, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SurveyService {\n  private online: boolean = false;\n  private surveys: FormDetail.Form[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private alertController: AlertController,\n    private storageService: StorageService\n  ) { }\n\n  public pushSurvey(survey: FormDetail.Form): void {\n    const copy = JSON.parse(JSON.stringify(survey));\n    this.surveys.push(copy);\n    this.saveSurveys();\n  }\n\n  public addNetworkChangeListener(): void {\n    Network.addListener('networkStatusChange', (status) => {\n      console.log('Network status changed', status);\n      this.online = status.connected;\n      console.log('Online status is:', this.online);\n    });\n  }\n\n  private getNetworkStatus(): void {\n    Network.getStatus().then((status) => {\n      console.log('Network status:', status.connected);\n      this.online = status.connected;\n      console.log('Online status is:', this.online);\n    });\n  }\n\n  public removeAllListeners(): void {\n    Network.removeAllListeners();\n  }\n\n  public getLocalSurveys(): void {\n    this.storageService.get(SURVEYS_STORAGE_KEY).then((surveys) => {\n      this.surveys = surveys || [];\n    });\n  }\n\n  public getSurveys(): FormDetail.Form[] {\n    return this.surveys;\n  }\n\n  public saveSurveys(): void {\n    this.storageService.set(SURVEYS_STORAGE_KEY, this.surveys);\n  }\n\n  public syncSurveys(): void {\n    if (this.online) {\n      const surveysToSync: FormDetail.Form[] = this.surveys.filter((survey) => !survey.sync);\n      const syncRequests: Observable[] = surveysToSync.map((survey) => {\n        return from(this.apiService.post(ENDPOINT, survey)).pipe(\n          mergeMap((response) => {\n            console.log(response)\n            return of(response.status === 200 ? survey : undefined);\n          }),\n          catchError((error) => {\n            console.error(error)\n            return of(undefined)\n          })\n        );\n      });\n\n      forkJoin(syncRequests).subscribe((syncResults: (FormDetail.Form | undefined)[]) => {\n        const updatedSurveys: FormDetail.Form[] = this.surveys.map((survey) => {\n          const syncedSurvey = syncResults.find((syncResult) => syncResult?.id === survey.id);\n          if (syncedSurvey) {\n            survey.sync = true;\n          }\n\n          return survey;\n        });\n        console.log(updatedSurveys)\n        this.surveys = updatedSurveys;\n        this.saveSurveys();\n      });\n    } else {\n      this.presentAlert();\n    }\n  }\n\n  private async presentAlert(): Promise {\n    const alert = await this.alertController.create({\n      header: 'No hay conexión a internet',\n      message: 'Por favor, conéctese a internet para sincronizar las encuestas',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  private changeSyncStatus(survey: FormDetail.Form, status: boolean): void {\n    const index = this.surveys.indexOf(survey);\n    this.surveys[index].sync = status; //TODO save into storage\n  }\n}\n\nconst SURVEYS_STORAGE_KEY = 'uploadSurveys';\nconst ENDPOINT = SURVEYS_STORAGE_KEY;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SurveysPage.html":{"url":"components/SurveysPage.html","title":"component - SurveysPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SurveysPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/surveys/surveys.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-surveys\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                surveys.page.scss\n            \n\n\n\n            \n                templateUrl\n                surveys.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSurveys\n                            \n                            \n                                getSyncedRatio\n                            \n                            \n                                getSyncedSurveys\n                            \n                            \n                                getUnsyncedRatio\n                            \n                            \n                                getUnsyncedSurveys\n                            \n                            \n                                goToDetail\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(surveyService: SurveyService, detailedFormService: DetailedFormService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/surveys/surveys.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSyncedRatio\n                        \n                    \n                \n            \n            \n                \ngetSyncedRatio()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSyncedSurveys\n                        \n                    \n                \n            \n            \n                \ngetSyncedSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUnsyncedRatio\n                        \n                    \n                \n            \n            \n                \ngetUnsyncedRatio()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUnsyncedSurveys\n                        \n                    \n                \n            \n            \n                \ngetUnsyncedSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToDetail\n                        \n                    \n                \n            \n            \n                \ngoToDetail(survey: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                survey\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { FormListComponent } from '@components/form-list/form-list.component';\nimport { SurveyService } from '@services/survey/survey.service';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-surveys',\n  templateUrl: 'surveys.page.html',\n  styleUrls: ['surveys.page.scss'],\n  standalone: true,\n  imports: [ IonicModule, CommonModule ],\n})\nexport class SurveysPage {\n\n  constructor(\n    private surveyService: SurveyService,\n    private detailedFormService: DetailedFormService,\n    private router: Router\n  ) {}\n\n  ionViewWillEnter() {\n    this.surveyService.getLocalSurveys();\n  }\n\n  private getSurveys(): FormDetail.Form[] {\n    return this.surveyService.getSurveys();\n  }\n\n  getSyncedSurveys(): FormDetail.Form[] {\n    const surveys: FormDetail.Form[] = this.getSurveys();\n    return surveys.filter((survey) => survey.sync);\n  }\n\n  getUnsyncedSurveys(): FormDetail.Form[] {\n    const surveys: FormDetail.Form[] = this.getSurveys();\n    return surveys.filter((survey) => !survey.sync);\n  }\n\n  goToDetail(survey: FormDetail.Form): void {\n    this.detailedFormService.setForm(survey, false, false, true);\n    this.router.navigate(['detail']);\n  }\n\n  getSyncedRatio(): string {\n    const surveys: FormDetail.Form[] = this.getSurveys();\n    const syncedSurveys: FormDetail.Form[] = this.getSyncedSurveys();\n    return `${syncedSurveys.length} / ${surveys.length}`;\n  }\n\n  getUnsyncedRatio(): string {\n    const surveys: FormDetail.Form[] = this.getSurveys();\n    const unsyncedSurveys: FormDetail.Form[] = this.getUnsyncedSurveys();\n    return `${unsyncedSurveys.length} / ${surveys.length}`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Sincronizadas {{ getSyncedRatio() }}\n        \n      \n    \n    \n      \n      \n        # {{ syncedSurvey.uuid }}\n        {{ syncedSurvey.name }}\n        Finaliza el {{ syncedSurvey.dateEnd }}\n        {{ syncedSurvey.questions[0].answers[0].value }}\n      \n       {{ syncedSurvey.description }} \n      \n        \n      \n    \n  \n  \n    \n      \n        \n          Sin sincronizar {{ getUnsyncedRatio() }}\n        \n      \n    \n    \n      \n      \n        # {{ unsyncedSurvey.uuid }}\n        {{ unsyncedSurvey.name }}\n        Finaliza el {{ unsyncedSurvey.dateEnd }}\n        {{ unsyncedSurvey.questions[0].answers[0].value }}\n      \n       {{ unsyncedSurvey.description }} \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    surveys.page.scss\n                \n                #uuid {\n  font-size: x-small;\n}\n\nion-icon {\n  float: right;\n  font-size: xx-large;\n}\n\nion-accordion::part(content) {\n  min-height: fit-content;\n  max-height: 67vh;\n  overflow-y: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Sincronizadas {{ getSyncedRatio() }}                                          # {{ syncedSurvey.uuid }}        {{ syncedSurvey.name }}        Finaliza el {{ syncedSurvey.dateEnd }}        {{ syncedSurvey.questions[0].answers[0].value }}             {{ syncedSurvey.description }}                                                         Sin sincronizar {{ getUnsyncedRatio() }}                                          # {{ unsyncedSurvey.uuid }}        {{ unsyncedSurvey.name }}        Finaliza el {{ unsyncedSurvey.dateEnd }}        {{ unsyncedSurvey.questions[0].answers[0].value }}             {{ unsyncedSurvey.description }}                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SurveysPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/table/table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                TypeComponent\n                            RxFor\n                \n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSection\n                            \n                            \n                                    Private\n                                changeQuestionId\n                            \n                            \n                                    Private\n                                disableQuestion\n                            \n                            \n                                    Private\n                                enableQuestion\n                            \n                            \n                                getCategory\n                            \n                            \n                                getChildQuestion\n                            \n                            \n                                getFormGroup\n                            \n                            \n                                getOrder\n                            \n                            \n                                getQuestionChildren\n                            \n                            \n                                getText\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preloadSelectedAnswers\n                            \n                            \n                                removeSection\n                            \n                            \n                                showQuestion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(answerRelationService: AnswerRelationService, questionControlService: QuestionControlService, detailedFormService: DetailedFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/table/table.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerRelationService\n                                                  \n                                                        \n                                                                        AnswerRelationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionControlService\n                                                  \n                                                        \n                                                                        QuestionControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/table/table.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/table/table.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/table/table.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSection\n                        \n                    \n                \n            \n            \n                \naddSection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeQuestionId\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeQuestionId(base: FormDetail.Question[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                base\n                                            \n                                                        FormDetail.Question[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        disableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChildQuestion\n                        \n                    \n                \n            \n            \n                \ngetChildQuestion(sectionIndex: number, childIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sectionIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                childIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormGroup\n                        \n                    \n                \n            \n            \n                \ngetFormGroup(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrder\n                        \n                    \n                \n            \n            \n                \ngetOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQuestionChildren\n                        \n                    \n                \n            \n            \n                \ngetQuestionChildren()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     [][]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getText\n                        \n                    \n                \n            \n            \n                \ngetText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        preloadSelectedAnswers\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadSelectedAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSection\n                        \n                    \n                \n            \n            \n                \nremoveSection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showQuestion\n                        \n                    \n                \n            \n            \n                \nshowQuestion(childIndex: number, sectionIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                childIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sectionIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { TypeComponent } from '../type.component';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { AnswerRelationService } from '@services/detailed-form/question/answer-relation/answer-relation.service';\nimport { QuestionControlService } from '@services/detailed-form/control/question-control.service';\nimport { RxFor } from '@rx-angular/template/for';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule, TypeComponent, RxFor],\n})\nexport class TableComponent {\n  @Input({ required: true }) question!: any;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(\n    private answerRelationService: AnswerRelationService,\n    private questionControlService: QuestionControlService,\n    private detailedFormService: DetailedFormService\n  ) {}\n\n  ngOnInit() {\n    if (this.question.order === 5) {\n      this.disabled = true;\n      this.preloadSelectedAnswers();\n    }\n  }\n\n  private preloadSelectedAnswers() {\n    const selectedAnswers: Beneficiary.SelectedQuestions =\n      this.detailedFormService.getForm().beneficiary.recommendedActions;\n    const formArray: FormArray = this.formGroup.controls[\n      this.question.id\n    ] as FormArray;\n    const sectionFormGroup: FormGroup = formArray.at(0) as FormGroup;\n    console.log('selectedAnswers', selectedAnswers);\n    Object.keys(sectionFormGroup.controls).forEach((key) => {\n      const answersFormGroup: FormGroup = sectionFormGroup.get(\n        key\n      ) as FormGroup;\n      const answersControls: string[] = Object.keys(answersFormGroup.controls);\n      const answerFormGroupKey: string = selectedAnswers[key]\n        ? answersControls[0]\n        : answersControls[1];\n      answersFormGroup.get(answerFormGroupKey)?.setValue(true);\n      console.log('selectedAnswer', selectedAnswers[key]);\n    });\n  }\n\n  addSection() {\n    const formArray: FormArray = this.formGroup.controls[\n      this.question.id\n    ] as FormArray;\n    let baseArrayCopy: FormDetail.Question[] = JSON.parse(\n      JSON.stringify(this.question.questionChildren[0])\n    );\n    this.changeQuestionId(baseArrayCopy);\n    const newFormGroup: FormGroup =\n      this.questionControlService.toFormGroup(baseArrayCopy);\n    newFormGroup.reset();\n    formArray.push(newFormGroup);\n    this.question.questionChildren.push(baseArrayCopy);\n  }\n\n  private changeQuestionId(base: FormDetail.Question[]) {\n    base.forEach((question) => {\n      const newId: string = `${this.question.questionChildren.length}-${question.id}`;\n      base.forEach((q) => {\n        q.answersRelation.forEach((ar) => {\n          if (ar.questionId === question.id) {\n            ar.questionId = newId;\n          }\n        });\n      });\n      question.id = newId;\n    });\n  }\n\n  removeSection() {\n    if (this.question.questionChildren.length > 1) {\n      const formArray: FormArray = this.formGroup.controls[\n        this.question.id\n      ] as FormArray;\n      formArray.removeAt(formArray.length - 1);\n      this.question.questionChildren.pop();\n    }\n  }\n\n  getQuestionChildren(): FormDetail.Question[][] {\n    return this.question.questionChildren;\n  }\n\n  getText(): string {\n    return this.question.text;\n  }\n\n  getOrder(): number {\n    return this.question.order;\n  }\n\n  getCategory(): string {\n    return this.question.questionCategory.name;\n  }\n\n  getFormGroup(index: number): FormGroup {\n    const formArray: FormArray = this.formGroup.controls[\n      this.question.id\n    ] as FormArray;\n    return formArray.at(index) as FormGroup;\n  }\n\n  getChildQuestion(\n    sectionIndex: number,\n    childIndex: number\n  ): FormDetail.Question {\n    const questionChildren: FormDetail.Question[][] =\n      this.question.questionChildren;\n    return questionChildren[sectionIndex][childIndex];\n  }\n\n  showQuestion(childIndex: number, sectionIndex: number) {\n    const childQuestion: FormDetail.Question = this.getChildQuestion(\n      sectionIndex,\n      childIndex\n    );\n    const sectionFormGroup: FormGroup = this.getFormGroup(sectionIndex);\n    let checkedAnswersRelation: boolean = false;\n    if (childQuestion) {\n      checkedAnswersRelation = this.answerRelationService.checkAnswerRelation(\n        childQuestion,\n        sectionFormGroup\n      );\n\n      checkedAnswersRelation\n        ? this.enableQuestion(childQuestion, sectionFormGroup)\n        : this.disableQuestion(childQuestion, sectionFormGroup);\n    }\n\n    return checkedAnswersRelation;\n  }\n\n  /*   showQuestion(id: number, i: number): boolean {\n    const questionId: string = id.toString();\n    const enabled: boolean = this.getFormGroup(i).get(questionId)!.enabled;\n    console.log('enabled: ', enabled)\n    return enabled\n  } */\n\n  private enableQuestion(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): void {\n    this.answerRelationService.enableQuestion(question, formGroup);\n  }\n\n  private disableQuestion(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): void {\n    this.answerRelationService.disableQuestion(question, formGroup);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ getCategory() }}\n      \n        {{ getOrder() }}. {{ getText() }}\n      \n    \n    \n      \n        \n          \n            Sección {{ sectionIndex + 1 }}\n          \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      \n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ getCategory() }}              {{ getOrder() }}. {{ getText() }}                                                  Sección {{ sectionIndex + 1 }}                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextAreaDataTypeComponent.html":{"url":"components/TextAreaDataTypeComponent.html","title":"component - TextAreaDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextAreaDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-area-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./text-area-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-area-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-text-area-data-type',\n  templateUrl: './text-area-data-type.component.html',\n  styleUrls: ['./text-area-data-type.component.scss'],\n  standalone : true,\n  imports: [ IonicModule, ReactiveFormsModule ],\n})\nexport class TextAreaDataTypeComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  getValue(): string {\n    return this.formGroup.get(`${this.question.id}`)?.value;\n  }\n\n  setValue(event: any) {\n    this.formGroup.get(`${this.question.id}`)?.setValue(event.target.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./text-area-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextAreaDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextDataTypeComponent.html":{"url":"components/TextDataTypeComponent.html","title":"component - TextDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/text-data-type/text-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./text-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAssociation\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preloadValue\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detailedFormService: DetailedFormService, associationService: AssociationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAssociation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssociation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Beneficiary.Association | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        preloadValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { AssociationService } from '@services/association/association.service';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\n\n@Component({\n  selector: 'app-text-data-type',\n  templateUrl: './text-data-type.component.html',\n  styleUrls: ['./text-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule, ReactiveFormsModule],\n})\nexport class TextDataTypeComponent implements OnInit {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(\n    private detailedFormService: DetailedFormService,\n    private associationService: AssociationService\n  ) {}\n\n  ngOnInit() {}\n\n  getValue(): string {\n    this.preloadValue();\n    return this.formGroup.get(`${this.question.id}`)?.value;\n  }\n\n  setValue(event: any) {\n    this.formGroup.get(`${this.question.id}`)?.setValue(event.target.value);\n  }\n\n  private preloadValue(): void {\n    const isAssociationQuestion: boolean =\n      this.question.text === 'Asociación a la que pertenece';\n\n    const association: Beneficiary.Association | undefined = this.getAssociation();\n\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n    if (isAssociationQuestion) {\n      if (association) {\n        formControl.setValue(association.name);\n        this.disabled = true;\n      }\n    }\n  }\n\n  private getAssociation(): Beneficiary.Association | undefined {\n    const associationId: number =\n      this.detailedFormService.getForm().beneficiary.associationId;\n\n    const association: Beneficiary.Association | undefined =\n      this.associationService.getAssociationById(associationId);\n\n    return association;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./text-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeComponent.html":{"url":"components/TypeComponent.html","title":"component - TypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                AutocompleteComponent\n                                OpenComponent\n                                MultipleComponent\n                                UniqueComponent\n                \n            \n\n            \n                styleUrls\n                ./type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCategory\n                            \n                            \n                                getDataType\n                            \n                            \n                                getOrder\n                            \n                            \n                                getText\n                            \n                            \n                                getType\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/type.component.ts:29\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/type.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/type.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/type.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataType\n                        \n                    \n                \n            \n            \n                \ngetDataType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrder\n                        \n                    \n                \n            \n            \n                \ngetOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getText\n                        \n                    \n                \n            \n            \n                \ngetText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getType\n                        \n                    \n                \n            \n            \n                \ngetType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { OpenComponent } from './open/open.component';\nimport { MultipleComponent } from './multiple/multiple.component';\nimport { UniqueComponent } from './unique/unique.component';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-type',\n  templateUrl: './type.component.html',\n  styleUrls: ['./type.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    IonicModule,\n    AutocompleteComponent,\n    OpenComponent,\n    MultipleComponent,\n    UniqueComponent\n  ]\n})\nexport class TypeComponent implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getCategory(): string {\n    return this.question?.questionCategory.name;\n  }\n\n  getType(): string {\n    return this.question?.type;\n  }\n\n  getDataType(): string { // TODO move this method to open component\n    return this.question?.dataType;\n  }\n\n  getText(): string {\n    return this.question?.text;\n  }\n\n  getOrder(): number {\n    return this.question?.order;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ getCategory() }}\n    \n      {{ getOrder() }}. {{ getText() }}\n    \n  \n\n  \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ getCategory() }}          {{ getOrder() }}. {{ getText() }}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeaheadComponent.html":{"url":"components/TypeaheadComponent.html","title":"component - TypeaheadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TypeaheadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/typeahead/typeahead.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-typeahead\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                            RxFor\n                \n            \n\n            \n                styleUrls\n                ./typeahead.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./typeahead.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredItems\n                            \n                            \n                                workingSelectedValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelChanges\n                            \n                            \n                                confirmChanges\n                            \n                            \n                                filterList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchbarInput\n                            \n                            \n                                select\n                            \n                            \n                                trackItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                selectedItem\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionCancel\n                            \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/typeahead/typeahead.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedItem\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Selecciona uno'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionCancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelChanges\n                        \n                    \n                \n            \n            \n                \ncancelChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmChanges\n                        \n                    \n                \n            \n            \n                \nconfirmChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterList\n                        \n                    \n                \n            \n            \n                \nfilterList(searchQuery: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Update the rendered view with\nthe provided search query. If no\nquery is provided, all data\nwill be rendered.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchQuery\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchbarInput\n                        \n                    \n                \n            \n            \n                \nsearchbarInput(ev: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n            \n                \nselect(item: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackItems\n                        \n                    \n                \n            \n            \n                \ntrackItems(index: number, item: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                item\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/typeahead/typeahead.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workingSelectedValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/typeahead/typeahead.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IonicModule, Platform } from '@ionic/angular';\nimport { RxFor } from \"@rx-angular/template/for\";\n\n@Component({\n  selector: 'app-typeahead',\n  templateUrl: './typeahead.component.html',\n  styleUrls: ['./typeahead.component.scss'],\n  standalone: true,\n  imports: [ CommonModule, IonicModule, RxFor],\n})\nexport class TypeaheadComponent {\n  @Input() items: string[] = [];\n  @Input() selectedItem: string = '';\n  @Input() title = 'Selecciona uno';\n\n  @Output() selectionCancel = new EventEmitter();\n  @Output() selectionChange = new EventEmitter();\n\n  filteredItems: string[] = [];\n  workingSelectedValue: string = '';\n\n  constructor(private platform: Platform) {}\n\n  ngOnInit() {\n    this.filteredItems = [...this.items];\n  }\n\n  select(item: string) {\n    this.workingSelectedValue = item;\n    this.confirmChanges();\n  }\n\n  trackItems(index: number, item: string) {\n    return item;\n  }\n\n  cancelChanges() {\n    this.selectionCancel.emit();\n  }\n\n  confirmChanges() {\n    this.selectionChange.emit(this.workingSelectedValue);\n  }\n\n  searchbarInput(ev: any) {\n    this.filterList(ev.target.value);\n  }\n\n  /**\n   * Update the rendered view with\n   * the provided search query. If no\n   * query is provided, all data\n   * will be rendered.\n   */\n  filterList(searchQuery: string | undefined) {\n    /**\n     * If no search query is defined,\n     * return all options.\n     */\n    if (searchQuery === undefined) {\n      this.filteredItems = [...this.items];\n    } else {\n      /**\n       * Otherwise, normalize the search\n       * query and check to see which items\n       * contain the search query as a substring.\n       */\n      const normalizedQuery = searchQuery.toLowerCase();\n      this.filteredItems = this.items.filter((item) => {\n        return item.toLowerCase().includes(normalizedQuery);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Cancelar\n    \n    {{ title }}\n    \n      Hecho\n    \n  \n  \n    \n  \n\n\n\n  \n    \n      {{ item }}\n    \n  \n\n\n    \n\n    \n                \n                    ./typeahead.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Cancelar        {{ title }}          Hecho                          {{ item }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TypeaheadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UniqueComponent.html":{"url":"components/UniqueComponent.html","title":"component - UniqueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UniqueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/unique/unique.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-unique\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                ReactiveFormsModule\n                                AutocompleteComponent\n                \n            \n\n            \n                styleUrls\n                ./unique.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./unique.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                farming\n                            \n                            \n                                other\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeInputState\n                            \n                            \n                                getAnswers\n                            \n                            \n                                    Private\n                                getCheckedAnswerId\n                            \n                            \n                                getOtherErrorMessage\n                            \n                            \n                                getOtherPlaceholder\n                            \n                            \n                                getOtherValue\n                            \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                isLastAnswer\n                            \n                            \n                                isOtherInvalid\n                            \n                            \n                                    Private\n                                loadOtherControl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preloadFarmingValue\n                            \n                            \n                                    Private\n                                searchAnswerIdByFarming\n                            \n                            \n                                    Private\n                                setCheckedValue\n                            \n                            \n                                setOtherValue\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detailedFormService: DetailedFormService, questionService: QuestionService, assoaciationService: AssociationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/unique/unique.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assoaciationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/unique/unique.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/unique/unique.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/unique/unique.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeInputState\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeInputState(answerGroup: FormGroup, id: string, value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answerGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAnswers\n                        \n                    \n                \n            \n            \n                \ngetAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Answer[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCheckedAnswerId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCheckedAnswerId(answersFormGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetOtherErrorMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherPlaceholder\n                        \n                    \n                \n            \n            \n                \ngetOtherPlaceholder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:183\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherValue\n                        \n                    \n                \n            \n            \n                \ngetOtherValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLastAnswer\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLastAnswer(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOtherInvalid\n                        \n                    \n                \n            \n            \n                \nisOtherInvalid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadOtherControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadOtherControl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        preloadFarmingValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadFarmingValue(answersFormGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        searchAnswerIdByFarming\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAnswerIdByFarming()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setCheckedValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCheckedValue(answersFormGroup: FormGroup, id: string, value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOtherValue\n                        \n                    \n                \n            \n            \n                \nsetOtherValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        farming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/unique/unique.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        other\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/unique/unique.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { InputChangeEventDetail, InputCustomEvent, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { AutocompleteComponent } from '../autocomplete/autocomplete.component';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { AssociationService } from '@services/association/association.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { QuestionService } from '@services/detailed-form/question/question.service';\n\n@Component({\n  selector: 'app-unique',\n  templateUrl: './unique.component.html',\n  styleUrls: ['./unique.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    AutocompleteComponent,\n  ],\n})\nexport class UniqueComponent implements OnInit {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  other: boolean = false;\n  farming: boolean = false;\n\n  constructor(\n    private detailedFormService: DetailedFormService,\n    private questionService: QuestionService,\n    private assoaciationService: AssociationService\n  ) {}\n\n  ngOnInit() {}\n\n  getAnswers(): FormDetail.Answer[] {\n    return this.question.answers;\n  }\n\n  setValue(event: any): void {\n    const formGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n\n    const id: string = event.detail.value;\n\n    this.setCheckedValue(formGroup, id, true);\n    this.questionService.toggleNextQuestionFrom(this.question, this.formGroup);\n  }\n\n  getValue(): string {\n    const answersFormGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n\n    this.preloadFarmingValue(answersFormGroup);\n\n    const { answerId, answerValue } = this.getCheckedAnswerId(answersFormGroup);\n    if (answerId !== 'other')\n      this.changeInputState(answersFormGroup, answerId, answerValue);\n\n    return answerId;\n  }\n\n  private getCheckedAnswerId(answersFormGroup: FormGroup): {\n    answerId: string;\n    answerValue: boolean;\n  } {\n    let answerId: string = '';\n    let answerValue: boolean = false;\n\n    for (const key in answersFormGroup.controls) {\n      const value = answersFormGroup.controls[key].value;\n      if (value && key !== 'other') {\n        answerId = key;\n        answerValue = value;\n      }\n    }\n\n    return { answerId, answerValue };\n  }\n\n  private setCheckedValue(\n    answersFormGroup: FormGroup,\n    id: string,\n    value: boolean\n  ): void {\n    for (const key in answersFormGroup.controls) {\n      if (key === id && key !== 'other') {\n        this.changeInputState(answersFormGroup, id, value);\n        answersFormGroup.controls[key].setValue(value);\n      } else if (key !== 'other') {\n        answersFormGroup.controls[key].setValue(!value);\n      }\n    }\n  }\n\n  private preloadFarmingValue(answersFormGroup: FormGroup): void {\n    const isFarmingQuestion: boolean =\n      this.question.text === 'Cultivo Priorizado';\n        if (isFarmingQuestion) {\n      const answerIdToCheck: string = this.searchAnswerIdByFarming();\n      this.setCheckedValue(answersFormGroup, answerIdToCheck, true);\n      this.farming = true;\n    } else {\n      this.farming = false;\n    }\n  }\n\n  private searchAnswerIdByFarming(): string {\n    const associationId: number =\n      this.detailedFormService.getForm().beneficiary.associationId;\n\n    const association: Beneficiary.Association | undefined =\n      this.assoaciationService.getAssociationById(associationId);\n\n    const associationFarming: string =\n      association!.farming;\n\n    const answer: FormDetail.Answer = this.question.answers.find(\n      (answer) => answer.value.toLowerCase() === associationFarming.toLowerCase()\n    )!;\n\n    return answer.id.toString();\n  }\n\n  getOtherValue(): string {\n    this.loadOtherControl();\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherValue: string = answerGroup.get('other')?.value;\n    return otherValue;\n  }\n\n  setOtherValue(event: Event): void {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherControl: FormControl = answerGroup.get('other') as FormControl;\n    const eventTarget: HTMLIonInputElement = event.target as HTMLIonInputElement;\n    const otherValue: string | number = eventTarget.value!;\n    otherControl.setValue(otherValue);\n  }\n\n  isOtherInvalid(): boolean {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherControl: FormControl = answerGroup.get('other') as FormControl;\n    const invalid: boolean = otherControl?.invalid;\n    return invalid\n  }\n\n/*   isOtherTouched(): boolean {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherControl: FormControl = answerGroup.get('other') as FormControl;\n    return otherControl?.touched;\n  } */\n\n  getOtherErrorMessage(): string {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherControl: FormControl = answerGroup.get('other') as FormControl;\n    const errors: any = otherControl?.errors;\n    if (errors?.required) {\n      return 'Este campo es requerido';\n    } else if (errors?.min) {\n      return `El valor mínimo es ${this.question.min}`;\n    } else if (errors?.max) {\n      return `El valor máximo es ${this.question.max}`;\n    }\n    return '';\n  }\n\n  getOtherPlaceholder(): string {\n    let message: string = 'Ingrese un valor';\n    if (this.question.min && this.question.max)\n      message += ` entre ${this.question.min} y ${this.question.max}`;\n    else if (this.question.min) message += ` mayor a ${this.question.min}`;\n    else if (this.question.max) message += ` menor a ${this.question.max}`;\n    return message;\n  }\n\n  private loadOtherControl(): void {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherFormControl: FormControl = answerGroup.get(\n      'other'\n    ) as FormControl;\n    if (this.question.min)\n      otherFormControl.addValidators(Validators.min(this.question.min));\n    if (this.question.max)\n      otherFormControl.addValidators(Validators.max(this.question.max));\n  }\n\n  private changeInputState(\n    answerGroup: FormGroup,\n    id: string,\n    value: boolean\n  ): void {\n    if (this.isLastAnswer(id) && value) {\n      this.other = true;\n      answerGroup.get('other')?.enable();\n    } else {\n      this.other = false;\n      answerGroup.get('other')?.disable();\n    }\n  }\n\n  private isLastAnswer(id: string): boolean {\n    const answers: FormDetail.Answer[] = this.getAnswers();\n    const lastAnswer: FormDetail.Answer = answers[answers.length - 1];\n    return Number(id) === lastAnswer.id;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ answer.value }}\n      \n    \n  \n\n\n\n  \n    \n      \n        \n          {{ isLast ? answer.value.split(\":\")[0] : answer.value }}\n        \n      \n    \n  \n  \n    \n    \n  \n  \n    \n      \n        Valor\n        ({{ getOtherErrorMessage() }})\n      \n    \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./unique.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ answer.value }}                                          {{ isLast ? answer.value.split(\":\")[0] : answer.value }}                                                    Valor        ({{ getOtherErrorMessage() }})                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UniqueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Auth.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            creationDate\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            emailVerifiedAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            idCard\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedDate\n                                        \n                                \n                                \n                                        \n                                            zone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creationDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailVerifiedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailVerifiedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idCard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idCard:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Authentication {\n  export interface User {\n    id: number;\n    name: string;\n    email: string;\n    emailVerifiedAt: string;\n    idCard: string;\n    role: string;\n    type: string;\n    zone: string;\n    creationDate: string;\n    updatedDate: string;\n  }\n\n  export type AuthResponse = {\n    token: string;\n    user: UserResponse;\n  };\n\n  export type UserResponse = {\n    id: number;\n    name: string;\n    email: string;\n    email_verified_at: string;\n    cedula: string;\n    roles: string;\n    types: string;\n    zone: string;\n    created_at: string;\n    updated_at: string;\n  };\n\n  export type AuthParams = {\n    email: string;\n    password: string;\n  };\n\n  export interface AuthManagement {\n    login: (credentials: AuthParams) => Promise;\n    logout: () => void;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/detailed-form/detailed-form.component.ts\n            \n            component\n            DetailedFormComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/form-list/form-list.component.ts\n            \n            component\n            FormListComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/header/dataquest-header/dataquest-header.component.ts\n            \n            component\n            DataquestHeaderComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/question/question.component.ts\n            \n            component\n            QuestionComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/components/question/type/autocomplete/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/question/type/multiple/multiple.component.ts\n            \n            component\n            MultipleComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/date-data-type/date-data-type.component.ts\n            \n            component\n            DateDataTypeComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts\n            \n            component\n            DrawingPadDataTypeComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/email-data-type/email-data-type.component.ts\n            \n            component\n            EmailDataTypeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/money-data-type/money-data-type.component.ts\n            \n            component\n            MoneyDataTypeComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/month-data-type/month-data-type.component.ts\n            \n            component\n            MonthDataTypeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/number-data-type/number-data-type.component.ts\n            \n            component\n            NumberDataTypeComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/open.component.ts\n            \n            component\n            OpenComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts\n            \n            component\n            PercentageDataTypeComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts\n            \n            component\n            PhoneDataTypeComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts\n            \n            component\n            PhotoDataTypeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts\n            \n            component\n            TextAreaDataTypeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/text-data-type/text-data-type.component.ts\n            \n            component\n            TextDataTypeComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/question/type/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/question/type/type.component.ts\n            \n            component\n            TypeComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/question/type/unique/unique.component.ts\n            \n            component\n            UniqueComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/typeahead/typeahead.component.ts\n            \n            component\n            TypeaheadComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/guards/auth/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/guards/details/details.guard.ts\n            \n            variable\n            DetailsGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/secure-inner-pages/secure-inner-pages.guard.ts\n            \n            injectable\n            SecureInnerPagesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/Auth.namespace.ts\n            \n            interface\n            AuthManagement\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/Auth.namespace.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/Beneficiary.namespace.ts\n            \n            interface\n            Association\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/Beneficiary.namespace.ts\n            \n            interface\n            Producer\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/Beneficiary.namespace.ts\n            \n            variable\n            ProducerBaseParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            Answer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            AnswerPivot\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            AnswerRelation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            Form\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            Question\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            QuestionCategory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/detail/detail.page.ts\n            \n            component\n            DetailPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/drafts/drafts.page.ts\n            \n            component\n            DraftsPage\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/forms/forms.page.ts\n            \n            component\n            FormsPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/surveys/surveys.page.ts\n            \n            component\n            SurveysPage\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/association/association.service.ts\n            \n            injectable\n            AssociationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/association/association.service.ts\n            \n            variable\n            ASSOCIATIONS_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/association/association.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            TOKEN_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            USER_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/control/question-control.service.ts\n            \n            injectable\n            QuestionControlService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/detailed-form.service.ts\n            \n            injectable\n            DetailedFormService\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts\n            \n            injectable\n            AnswerRelationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/question/photo/photo.service.ts\n            \n            injectable\n            PhotoService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/question/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/draft/draft.service.ts\n            \n            injectable\n            DraftService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/form/form.service.ts\n            \n            injectable\n            FormService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/services/form/form.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/form/form.service.ts\n            \n            variable\n            FORMS_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/offline-manager/offline-manager.service.ts\n            \n            injectable\n            OfflineManagerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/offline-manager/offline-manager.service.ts\n            \n            interface\n            StoredRequest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/offline-manager/offline-manager.service.ts\n            \n            variable\n            STORAGE_REQ_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/producer/producer.service.ts\n            \n            injectable\n            ProducerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/producer/producer.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/producer/producer.service.ts\n            \n            variable\n            PRODUCERS_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/survey/survey.service.ts\n            \n            injectable\n            SurveyService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/services/survey/survey.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/survey/survey.service.ts\n            \n            variable\n            SURVEYS_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            answerBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            answerPivotBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            answerRelationBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            associationBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            formBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            producerBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            questionBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            questionCategoryBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            userBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.mobile.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            tokenGetter\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.0\n        \n            @angular/common : ^16.0.0\n        \n            @angular/compiler : ^16.0.0\n        \n            @angular/core : ^16.0.0\n        \n            @angular/forms : ^16.0.0\n        \n            @angular/platform-browser : ^16.0.0\n        \n            @angular/platform-browser-dynamic : ^16.0.0\n        \n            @angular/router : ^16.2.12\n        \n            @auth0/angular-jwt : ^5.1.2\n        \n            @capacitor/android : 5.5.1\n        \n            @capacitor/app : 5.0.6\n        \n            @capacitor/camera : ^5.0.7\n        \n            @capacitor/core : 5.5.1\n        \n            @capacitor/filesystem : ^5.1.3\n        \n            @capacitor/geolocation : ^5.0.6\n        \n            @capacitor/haptics : 5.0.6\n        \n            @capacitor/ios : 5.5.1\n        \n            @capacitor/keyboard : 5.0.6\n        \n            @capacitor/network : ^5.0.6\n        \n            @capacitor/preferences : ^5.0.6\n        \n            @capacitor/splash-screen : ^5.0.6\n        \n            @capacitor/status-bar : 5.0.6\n        \n            @ionic/angular : ^7.5.5\n        \n            @ionic/storage-angular : ^4.0.0\n        \n            @maskito/angular : ^1.8.1\n        \n            @maskito/core : ^1.8.1\n        \n            @maskito/kit : ^1.8.1\n        \n            @rx-angular/template : ^16.1.1\n        \n            cordova-sqlite-storage : ^6.1.0\n        \n            date-fns : ^2.30.0\n        \n            ionicons : ^7.0.0\n        \n            json-server : ^0.17.3\n        \n            jwt-decode : ^3.1.2\n        \n            localforage-cordovasqlitedriver : ^1.8.0\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            signature_pad : ^4.1.6\n        \n            tslib : ^2.3.0\n        \n            uuid : ^9.0.1\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            answerBuilder   (src/.../builder.ts)\n                        \n                        \n                            answerPivotBuilder   (src/.../builder.ts)\n                        \n                        \n                            answerRelationBuilder   (src/.../builder.ts)\n                        \n                        \n                            associationBuilder   (src/.../builder.ts)\n                        \n                        \n                            formBuilder   (src/.../builder.ts)\n                        \n                        \n                            producerBuilder   (src/.../builder.ts)\n                        \n                        \n                            questionBuilder   (src/.../builder.ts)\n                        \n                        \n                            questionCategoryBuilder   (src/.../builder.ts)\n                        \n                        \n                            tokenGetter   (src/.../main.ts)\n                        \n                        \n                            userBuilder   (src/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        answerBuilder\n                        \n                    \n                \n            \n            \n                \nanswerBuilder(answer)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answer\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Answer\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answerPivotBuilder\n                        \n                    \n                \n            \n            \n                \nanswerPivotBuilder(pivot)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pivot\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormDetail.AnswerPivot\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answerRelationBuilder\n                        \n                    \n                \n            \n            \n                \nanswerRelationBuilder(relation)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.AnswerRelation\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associationBuilder\n                        \n                    \n                \n            \n            \n                \nassociationBuilder(association)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                association\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Beneficiary.Association\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formBuilder\n                        \n                    \n                \n            \n            \n                \nformBuilder(form)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormDetail.Form\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        producerBuilder\n                        \n                    \n                \n            \n            \n                \nproducerBuilder(producer)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                producer\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Beneficiary.Producer\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionBuilder\n                        \n                    \n                \n            \n            \n                \nquestionBuilder(question)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionCategoryBuilder\n                        \n                    \n                \n            \n            \n                \nquestionCategoryBuilder(category)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.QuestionCategory\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userBuilder\n                        \n                    \n                \n            \n            \n                \nuserBuilder(user)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Authentication.User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tokenGetter\n                        \n                    \n                \n            \n            \n                \ntokenGetter()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.1.2\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnswerPivotResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            AnswerRelationResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            AnswerResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            AssociationResponse   (src/.../Beneficiary.namespace.ts)\n                        \n                        \n                            AuthParams   (src/.../Auth.namespace.ts)\n                        \n                        \n                            AuthResponse   (src/.../Auth.namespace.ts)\n                        \n                        \n                            FormResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            Pivot   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            ProducerResponse   (src/.../Beneficiary.namespace.ts)\n                        \n                        \n                            QuestionCategoryResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            QuestionResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            SelectedQuestions   (src/.../Beneficiary.namespace.ts)\n                        \n                        \n                            UserResponse   (src/.../Auth.namespace.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/FormDetail.namespace.ts\n    \n    \n        \n            \n                \n                    \n                    AnswerPivotResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AnswerRelationResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AnswerResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FormResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pivot\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QuestionCategoryResponse\n                \n            \n            \n                \n                            QuestionCategory\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QuestionResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/models/Beneficiary.namespace.ts\n    \n    \n        \n            \n                \n                    \n                    AssociationResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ProducerResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectedQuestions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/models/Auth.namespace.ts\n    \n    \n        \n            \n                \n                    \n                    AuthParams\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ASSOCIATIONS_STORAGE_KEY   (src/.../association.service.ts)\n                        \n                        \n                            DetailsGuard   (src/.../details.guard.ts)\n                        \n                        \n                            ENDPOINT   (src/.../association.service.ts)\n                        \n                        \n                            ENDPOINT   (src/.../auth.service.ts)\n                        \n                        \n                            ENDPOINT   (src/.../form.service.ts)\n                        \n                        \n                            ENDPOINT   (src/.../producer.service.ts)\n                        \n                        \n                            ENDPOINT   (src/.../survey.service.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.mobile.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            FORMS_STORAGE_KEY   (src/.../form.service.ts)\n                        \n                        \n                            ProducerBaseParams   (src/.../Beneficiary.namespace.ts)\n                        \n                        \n                            PRODUCERS_STORAGE_KEY   (src/.../producer.service.ts)\n                        \n                        \n                            STORAGE_REQ_KEY   (src/.../offline-manager.service.ts)\n                        \n                        \n                            SURVEYS_STORAGE_KEY   (src/.../survey.service.ts)\n                        \n                        \n                            TOKEN_STORAGE_KEY   (src/.../auth.service.ts)\n                        \n                        \n                            USER_STORAGE_KEY   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/association/association.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ASSOCIATIONS_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'associations'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ASSOCIATIONS_STORAGE_KEY\n                    \n                \n\n\n        \n    \n\n    src/app/guards/details/details.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DetailsGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n\n  const detailedFormService = inject(DetailedFormService);\n  const router = inject(Router);\n\n  if (!detailedFormService.getForm()) {\n    router.navigate(['/home/forms']);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/services/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth/login'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'TOKEN_KEY'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USER_KEY'\n                    \n                \n\n\n        \n    \n\n    src/app/services/form/form.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'form-detail'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FORMS_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'forms'\n                    \n                \n\n\n        \n    \n\n    src/app/services/producer/producer.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : PRODUCERS_STORAGE_KEY\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRODUCERS_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'producers'\n                    \n                \n\n\n        \n    \n\n    src/app/services/survey/survey.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SURVEYS_STORAGE_KEY\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SURVEYS_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'uploadSurveys'\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  url: 'https://pif5.blaucast.com',\n  authEndpoint: 'auth/login',\n  formsEndpoint: 'form-detail',\n  producersEndpoint: 'producers',\n  associationsEndpoint: 'associations',\n  syncEndpoint: 'uploadSurvey',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.mobile.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  url: 'http://192.168.1.18:3000',\n  appVersion: \"1.0.0\",\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  url: 'https://programaintegraldefruticultura.com.co',\n  authEndpoint: 'auth/login',\n  formsEndpoint: 'form-detail',\n  producersEndpoint: 'producers',\n  associationsEndpoint: 'associations',\n  syncEndpoint: 'uploadSurvey',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  url: 'http://192.168.1.18:3000',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/models/Beneficiary.namespace.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProducerBaseParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    cedula: '',\n    firstname: '',\n    middlename: '',\n    lastname: '',\n    secondLastname: '',\n    id: '',\n    specialized: false,\n    technicalAssistance: false,\n    demonstrationPlot: false,\n    greenhouse: false,\n    supplies: false,\n    associationId: 0,\n    transplantDate: '',\n    recommendedActions: {}\n  }\n                    \n                \n\n\n        \n    \n\n    src/app/services/offline-manager/offline-manager.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STORAGE_REQ_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'storedreq'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
