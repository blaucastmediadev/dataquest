var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Answer.html",[0,1.021,1,1.554]],["body/interfaces/Answer.html",[0,1.924,1,2.321,2,1.943,3,0.157,4,0.157,5,0.137,6,2.26,7,0.08,8,0.84,9,3.932,10,2.526,11,4.268,12,3.371,13,1.292,14,0.985,15,0.318,16,0.016,17,0.739,18,0.784,19,0.239,20,2.125,21,2.699,22,0.282,23,2.144,24,0.671,25,2.699,26,2.389,27,2.144,28,1.621,29,2.144,30,2.389,31,0.527,32,1.771,33,0.23,34,2.699,35,2.699,36,2.699,37,2.699,38,2.26,39,2.144,40,2.534,41,3.538,42,3.538,43,2.962,44,4.024,45,2.962,46,2.039,47,2.389,48,2.699,49,3.707,50,2.699,51,2.699,52,0.873,53,0.963,54,1.465,55,3.538,56,2.699,57,2.699,58,3.538,59,2.962,60,2.699,61,3.507,62,2.699,63,2.534,64,2.699,65,3.131,66,2.962,67,2.534,68,2.699,69,2.699,70,2.534,71,2.699,72,2.699,73,2.699,74,3.321,75,2.534,76,3.947,77,2.26,78,3.493,79,2.534,80,3.321,81,2.26,82,2.699,83,0.011,84,0.011]],["title/interfaces/AnswerPivot.html",[0,1.021,78,2.096]],["body/interfaces/AnswerPivot.html",[0,1.932,1,1.797,2,1.971,3,0.159,4,0.159,5,0.139,6,2.294,7,0.082,8,0.848,9,2.571,10,2.475,11,3.954,12,3.384,13,1.061,14,0.9,15,0.32,16,0.016,17,0.738,18,0.784,19,0.242,20,2.146,21,2.739,22,0.282,23,2.176,24,0.681,25,2.739,26,2.424,27,2.176,28,1.645,29,2.176,30,2.424,31,0.534,32,1.797,33,0.231,34,2.739,35,2.739,36,2.739,37,2.739,38,2.294,39,2.176,40,2.571,41,3.572,42,3.572,43,2.991,44,4.038,45,2.991,46,2.069,47,2.424,48,2.739,49,3.728,50,2.739,51,2.739,52,0.886,53,0.973,54,1.479,55,3.572,56,2.739,57,2.739,58,3.572,59,2.991,60,2.739,61,3.527,62,2.739,63,2.571,64,2.739,65,3.161,66,2.991,67,2.571,68,2.739,69,2.739,70,2.571,71,2.739,72,2.739,73,2.739,74,3.353,75,2.571,76,3.975,77,2.294,78,3.728,79,2.571,80,3.353,81,3.527,82,2.739,83,0.011,84,0.011]],["title/interfaces/AnswerRelation.html",[0,1.021,77,1.983]],["body/interfaces/AnswerRelation.html",[0,1.932,1,1.797,2,1.971,3,0.159,4,0.159,5,0.139,6,2.294,7,0.082,8,0.848,9,2.571,10,2.531,11,3.954,12,3.384,13,1.061,14,0.9,15,0.317,16,0.016,17,0.738,18,0.783,19,0.242,20,2.146,21,2.739,22,0.282,23,2.176,24,0.681,25,2.739,26,2.424,27,2.176,28,1.645,29,2.176,30,2.424,31,0.534,32,1.797,33,0.231,34,2.739,35,2.739,36,2.739,37,2.739,38,2.294,39,2.176,40,2.571,41,3.572,42,3.572,43,2.991,44,4.038,45,2.991,46,2.069,47,2.424,48,2.739,49,3.728,50,2.739,51,2.739,52,0.886,53,0.973,54,1.479,55,3.572,56,2.739,57,2.739,58,3.572,59,2.991,60,2.739,61,3.527,62,2.739,63,2.571,64,2.739,65,3.161,66,2.991,67,2.571,68,2.739,69,2.739,70,2.571,71,2.739,72,2.739,73,2.739,74,3.353,75,2.571,76,3.975,77,2.991,78,4.095,79,2.571,80,3.353,81,2.294,82,2.739,83,0.011,84,0.011]],["title/injectables/AnswerRelationService.html",[85,0.562,86,2.538]],["body/injectables/AnswerRelationService.html",[3,0.151,4,0.151,5,0.132,7,0.077,12,2.924,13,1.024,14,1.068,15,0.289,16,0.016,17,0.382,18,0.646,19,0.343,22,0.151,24,0.645,33,0.257,52,1.334,77,3.241,81,2.172,83,0.011,84,0.011,85,0.818,86,3.693,87,1.372,88,4.573,89,5.786,90,5.294,91,3.656,92,0.54,93,1.317,94,5.612,95,5.612,96,2.664,97,6.303,98,5.612,99,4.361,100,4.361,101,0.571,102,0.664,103,4.225,104,5.612,105,6.689,106,2.346,107,4.225,108,0.774,109,0.732,110,5.455,111,0.651,112,5.612,113,4.225,114,4.225,115,2.079,116,4.225,117,5.612,118,4.225,119,4.361,120,4.225,121,0.934,122,4.361,123,4.225,124,0.337,125,1.119,126,0.839,127,1.372,128,1.317,129,0.359,130,0.847,131,4.225,132,0.706,133,6.303,134,4.225,135,0.892,136,4.225,137,4.225,138,0.616,139,5.612,140,4.225,141,5.612,142,5.612,143,4.225,144,4.225,145,4.225,146,4.225,147,4.225,148,5.612,149,4.225,150,4.225,151,4.225]],["title/injectables/ApiService.html",[85,0.562,152,1.881]],["body/injectables/ApiService.html",[3,0.168,4,0.168,5,0.147,7,0.086,8,0.879,10,2.158,13,0.859,15,0.303,16,0.016,18,0.764,19,0.402,22,0.168,33,0.25,83,0.012,84,0.012,85,0.879,87,1.53,92,0.579,93,1.223,96,2.741,101,0.545,102,0.655,108,0.797,109,0.713,111,0.601,124,0.375,127,1.53,128,1.468,129,0.401,130,0.755,135,0.839,152,2.939,153,4.076,154,5.75,155,5.44,156,6.643,157,1.689,158,6.061,159,4.71,160,7.402,161,6.024,162,4.71,163,4.71,164,6.024,165,4.621,166,4.023,167,4.71,168,4.71,169,4.71,170,7.237,171,4.71,172,4.076,173,1.878,174,1.247,175,6.024,176,4.71,177,2.185,178,4.71,179,2.714,180,2.421,181,4.282,182,3.659,183,3.348,184,4.71,185,4.71,186,0.897,187,3.348,188,4.71,189,3.099,190,1.409,191,4.076,192,2.559,193,4.076,194,4.282,195,4.71,196,2.892,197,4.71,198,4.71,199,2.892,200,4.71,201,4.71,202,4.71,203,0.823,204,4.71,205,4.71]],["title/components/AppComponent.html",[206,0.104,207,0.766]],["body/components/AppComponent.html",[3,0.165,4,0.165,5,0.144,7,0.085,8,0.868,13,0.843,16,0.016,17,0.418,19,0.358,22,0.165,31,0.554,33,0.213,53,0.995,83,0.012,84,0.012,96,2.327,101,0.596,102,0.539,124,0.368,128,1.855,129,0.393,132,1.162,138,0.868,174,1.224,186,0.88,203,1.36,206,0.177,207,1.381,208,1.233,209,0.998,210,0.998,211,0.998,212,0.998,213,4,214,0.998,215,1.759,216,1.687,217,1.285,218,1.285,219,1.422,220,2.23,221,1.285,222,6.584,223,1.285,224,5.952,225,6.953,226,5.952,227,5.952,228,4.622,229,0.807,230,1.441,231,0.998,232,1.285,233,1.285,234,0.998,235,0.998,236,0.998,237,0.918,238,0.998,239,0.918,240,0.998,241,0.998,242,0.918,243,0.88,244,1.691,245,0.918,246,0.998,247,0.998,248,0.918,249,0.998,250,0.918,251,0.998,252,0.918,253,0.998,254,0.957,255,0.918,256,0.918,257,0.998,258,0.918,259,0.998,260,0.88,261,0.998,262,0.918,263,0.998,264,0.918,265,0.998,266,0.918,267,0.998,268,0.918,269,0.998,270,0.918,271,0.918,272,0.998,273,0.918,274,0.998,275,0.918,276,0.998,277,0.918,278,0.957,279,0.918,280,0.998,281,0.918,282,0.998,283,0.918,284,0.998,285,0.918,286,0.957,287,0.918,288,0.918,289,0.998,290,0.918,291,0.918,292,0.998,293,0.998,294,0.998]],["title/interfaces/Association.html",[0,1.021,295,2.096]],["body/interfaces/Association.html",[0,1.594,2,2.079,3,0.168,4,0.168,5,0.147,7,0.086,8,0.878,10,2.475,12,2.182,14,1.046,15,0.31,16,0.016,17,0.722,18,0.784,20,1.735,22,0.269,23,2.295,27,2.937,29,3.414,33,0.258,83,0.012,84,0.012,130,0.535,295,3.272,296,3.344,297,5.621,298,6.405,299,6.262,300,4.975,301,2.556,302,4.369,303,5.211,304,5.211,305,5.211,306,5.211,307,5.211,308,5.211,309,5.211,310,5.211,311,4.279,312,5.159,313,5.211,314,5.159,315,5.211,316,4.072,317,4.072,318,3.655,319,2.125,320,2.079,321,3.344,322,4.072,323,4.072,324,4.072,325,4.072,326,4.072,327,4.072,328,4.072,329,3.655,330,3.655,331,4.072,332,4.072,333,4.072,334,4.072,335,4.072,336,4.072,337,4.072,338,4.072,339,4.072,340,4.072,341,4.072,342,2.889,343,2.889,344,4.072,345,4.072,346,3.344,347,4.072]],["title/injectables/AssociationService.html",[85,0.562,348,2.368]],["body/injectables/AssociationService.html",[3,0.157,4,0.157,5,0.138,7,0.081,8,0.841,10,1.873,13,1.052,14,0.894,15,0.285,16,0.016,17,0.582,19,0.408,20,1.623,22,0.157,33,0.244,83,0.011,84,0.011,85,0.841,87,1.43,92,0.554,93,1.35,96,2.568,101,0.522,102,0.671,108,0.735,109,0.695,111,0.641,121,0.802,124,0.351,127,1.43,128,1.372,129,0.374,130,0.776,135,0.887,152,3.546,165,2.702,166,3.495,173,1.797,174,1.527,177,2.041,179,3.323,180,2.263,295,2.391,319,1.656,346,3.128,348,3.54,349,3.809,350,7.599,351,5.766,352,6.824,353,6.824,354,5.766,355,5.766,356,3.128,357,3.436,358,5.766,359,5.766,360,4.4,361,5.527,362,2.431,363,4.4,364,4.4,365,5.766,366,4.4,367,5.766,368,4.4,369,4.99,370,3.128,371,2.391,372,2.896,373,3.128,374,2.896,375,3.128,376,2.896,377,3.419,378,3.419,379,3.128,380,4.4,381,5.766,382,4.4,383,3.419,384,3.419,385,4.4,386,4.4,387,3.128,388,4.4,389,4.4,390,3.419,391,3.419,392,4.4,393,3.419,394,3.419,395,4.4,396,4.4,397,4.4,398,3.809,399,4.4,400,4.4,401,4.4,402,4.4,403,4.4,404,4.4,405,4.99]],["title/injectables/AuthGuard.html",[85,0.562,406,2.997]],["body/injectables/AuthGuard.html",[3,0.197,4,0.197,5,0.173,7,0.101,8,0.971,15,0.287,16,0.016,19,0.388,22,0.197,33,0.197,83,0.013,84,0.013,85,0.971,87,1.796,92,0.64,96,2.679,101,0.501,102,0.671,108,0.596,109,0.563,111,0.501,124,0.441,127,1.796,128,1.724,129,0.47,130,0.629,135,0.662,138,0.806,157,1.816,190,1.654,406,5.171,407,4.786,408,4.298,409,4.883,410,6.414,411,4.786,412,5.529,413,5.529,414,4.296,415,6.656,416,3.187,417,3.93,418,5.529,419,5.761,420,4.786,421,4.786]],["title/interfaces/AuthManagement.html",[0,1.021,422,2.742]],["body/interfaces/AuthManagement.html",[0,1.746,2,2.406,3,0.194,4,0.194,5,0.17,7,0.1,8,0.961,10,2.142,15,0.309,16,0.016,17,0.597,18,0.784,22,0.274,23,2.656,33,0.235,83,0.013,84,0.013,121,0.757,173,1.697,186,1.351,187,3.87,194,3.87,300,4.687,302,3.582,422,4.687,423,3.87,424,5.24,425,5.24,426,6.38,427,3.582,428,3.583,429,4.712,430,4.712,431,3.138,432,4.712,433,4.712,434,3.87,435,5.123,436,4.712,437,4.712,438,4.712,439,4.712,440,4.712,441,4.687,442,4.712]],["title/injectables/AuthService.html",[85,0.562,408,2.096]],["body/injectables/AuthService.html",[3,0.134,4,0.134,5,0.117,7,0.068,13,1.081,14,0.719,15,0.279,16,0.016,18,0.715,19,0.408,22,0.134,33,0.248,83,0.01,84,0.01,85,0.754,87,1.216,92,0.497,93,1.356,96,2.79,101,0.468,102,0.686,108,0.747,109,0.706,111,0.68,121,0.964,124,0.298,127,1.216,128,1.166,129,0.318,130,0.862,135,0.851,152,3.466,157,1.964,165,3.174,166,2.033,173,2.319,177,1.736,179,2.98,180,1.924,182,2.907,183,2.66,190,2.006,191,4.474,192,3.768,193,3.239,194,5.051,196,3.174,319,1.075,357,3.296,370,2.66,375,2.66,379,2.66,394,2.907,408,2.809,409,4.257,416,2.157,421,3.239,424,4.21,425,4.541,427,2.462,428,3.219,434,2.66,441,4.21,443,3.239,444,5.169,445,6.388,446,6.388,447,6.388,448,5.169,449,6.388,450,6.388,451,5.169,452,5.169,453,3.742,454,7.106,455,3.742,456,5.169,457,3.742,458,3.742,459,3.742,460,3.742,461,5.169,462,3.742,463,3.742,464,5.923,465,3.742,466,3.742,467,3.742,468,3.742,469,5.169,470,3.742,471,5.169,472,4.765,473,3.742,474,3.742,475,4.474,476,3.239,477,3.239,478,2.907,479,2.907,480,2.907,481,5.529,482,5.529,483,3.742,484,3.742,485,1.442,486,3.742,487,3.742,488,2.157,489,3.742,490,3.742,491,3.742,492,5.169,493,5.169,494,5.169,495,3.742,496,3.742,497,3.742,498,3.239,499,3.742,500,3.239,501,3.239,502,1.442,503,3.742,504,5.169,505,3.742,506,3.742,507,3.742,508,3.742,509,3.239,510,3.742,511,5.169,512,3.742,513,3.742,514,3.742]],["title/components/AutocompleteComponent.html",[206,0.104,237,0.766]],["body/components/AutocompleteComponent.html",[1,2.029,3,0.1,4,0.1,5,0.088,7,0.051,8,0.613,10,1.945,13,1.25,14,0.874,15,0.295,16,0.016,17,0.254,18,0.754,19,0.379,20,1.857,22,0.1,24,0.429,31,0.336,33,0.239,46,2.336,52,1,53,0.702,54,1.598,59,2.16,81,2.16,83,0.008,84,0.008,92,0.404,93,1.334,96,1.779,101,0.38,102,0.685,106,2.15,108,0.677,109,0.64,111,0.632,115,1.158,121,0.874,124,0.224,125,0.743,126,0.557,129,0.239,130,0.825,132,0.935,135,0.803,138,1.017,174,1.112,186,0.534,189,3.679,192,3.038,203,1.279,206,0.135,207,0.557,208,0.87,209,0.606,210,0.606,211,0.606,212,0.606,214,0.606,215,1.696,216,1.627,217,0.907,218,0.907,219,1.087,220,1.706,221,0.907,223,0.907,229,0.49,230,0.874,231,0.606,232,0.907,233,0.907,234,0.606,235,0.606,236,0.606,237,1.111,238,0.606,239,0.557,240,0.606,241,0.606,242,0.557,243,0.534,244,1.549,245,0.557,246,0.606,247,0.606,248,0.557,249,0.606,250,0.557,251,0.606,252,0.557,253,0.606,254,0.581,255,0.557,256,0.557,257,0.606,258,0.557,259,0.606,260,0.534,261,0.606,262,0.557,263,0.606,264,0.557,265,0.606,266,0.557,267,0.606,268,0.557,269,0.606,270,0.557,271,0.557,272,0.606,273,0.557,274,0.606,275,0.557,276,0.606,277,0.557,278,0.581,279,0.557,280,0.606,281,0.557,282,0.606,283,0.557,284,0.606,285,0.557,286,0.581,287,0.557,288,1.111,289,0.606,290,0.557,291,0.557,292,0.606,293,0.606,294,0.606,301,1.524,302,3.314,319,0.806,320,1.24,348,1.723,362,1.183,371,1.524,485,1.619,515,2.428,516,1.857,517,4.201,518,5.036,519,4.201,520,4.359,521,6.516,522,4.201,523,4.201,524,4.344,525,5.591,526,5.591,527,4.201,528,1.743,529,5.591,530,4.201,531,3.264,532,1.309,533,1.636,534,3.913,535,5.183,536,2.805,537,3.433,538,2.625,539,2.511,540,4.201,541,3.636,542,2.805,543,2.805,544,2.805,545,2.805,546,3.636,547,3.636,548,2.805,549,4.201,550,2.805,551,4.201,552,2.805,553,2.805,554,2.805,555,2.805,556,4.201,557,2.805,558,2.986,559,2.805,560,2.805,561,4.201,562,2.805,563,3.636,564,2.805,565,5.036,566,2.18,567,3.636,568,4.201,569,2.805,570,2.805,571,1.88,572,2.18,573,3.264,574,1.723,575,2.747,576,2.805,577,2.805,578,2.18,579,1.183,580,1.081,581,1.24,582,2.18,583,1.994,584,4.201,585,2.805,586,2.805,587,2.805,588,2.805,589,2.875,590,2.594,591,5.036,592,1.846,593,2.805,594,5.036,595,3.636,596,2.428,597,2.428,598,3.264,599,3.264,600,3.636,601,2.805,602,2.428,603,2.18,604,2.805,605,2.986,606,1.994,607,2.805,608,2.805,609,2.805,610,2.18,611,2.428,612,2.805,613,2.805,614,2.805,615,2.805,616,2.428,617,2.805,618,2.805,619,2.805,620,1.368,621,2.805,622,3.579,623,1.617,624,2.18,625,1.723,626,2.428,627,1.994,628,2.18]],["title/components/DataquestHeaderComponent.html",[206,0.104,239,0.766]],["body/components/DataquestHeaderComponent.html",[3,0.122,4,0.122,5,0.107,7,0.063,8,0.709,13,0.626,14,0.938,15,0.227,16,0.016,17,0.588,18,0.33,19,0.353,22,0.122,31,0.411,33,0.202,53,1.028,66,2.5,83,0.01,84,0.01,92,0.468,93,1.211,101,0.44,102,0.653,108,0.369,109,0.349,111,0.61,121,0.676,124,0.273,129,0.292,130,0.39,132,1.085,135,0.677,138,0.709,157,1.437,174,0.908,186,0.653,190,1.455,199,2.106,203,1.291,206,0.152,207,0.681,208,1.007,209,0.74,210,0.74,211,0.74,212,0.74,214,0.74,215,1.725,216,1.655,217,1.05,218,1.05,219,1.22,220,1.914,221,1.05,223,1.05,229,0.599,230,1.069,231,0.74,232,1.05,233,1.05,234,0.74,235,0.74,236,0.74,237,0.681,238,0.74,239,1.221,240,1.53,241,0.74,242,0.681,243,0.653,244,1.612,245,0.681,246,0.74,247,0.74,248,0.681,249,0.74,250,0.681,251,0.74,252,0.681,253,0.74,254,0.71,255,0.681,256,0.681,257,0.74,258,0.681,259,0.74,260,0.653,261,0.74,262,0.681,263,0.74,264,0.681,265,0.74,266,0.681,267,0.74,268,0.681,269,0.74,270,0.681,271,0.681,272,0.74,273,0.681,274,0.74,275,0.681,276,0.74,277,0.681,278,0.71,279,0.681,280,0.74,281,0.681,282,0.74,283,0.681,284,0.74,285,0.681,286,0.71,287,0.681,288,0.681,289,0.74,290,0.681,291,0.681,292,0.74,293,0.74,294,0.74,319,1.397,431,2.803,485,1.874,516,2.084,528,1.917,532,1.516,538,2.794,539,2.672,571,1.455,573,3.778,579,2.051,580,1.321,581,1.515,583,2.438,620,2.372,625,3.47,629,6.325,630,5.195,631,2.968,632,2.497,633,5.651,634,4.863,635,4.891,636,6.149,637,5.322,638,5.322,639,4.371,640,4.371,641,5.651,642,3.429,643,3.664,644,4.929,645,4.863,646,3.429,647,3.429,648,3.429,649,3.429,650,3.429,651,3.429,652,3.429,653,2.438,654,2.968,655,3.429,656,3.429,657,3.429,658,2.968,659,4.209,660,2.395,661,2.968,662,4.209,663,4.209,664,2.968,665,2.968,666,3.457,667,3.778,668,2.968,669,3.457,670,4.891,671,5.322,672,2.664,673,1.591,674,1.863,675,1.515,676,1.515,677,2.256,678,2.438,679,3.778,680,2.968,681,2.968,682,2.968,683,2.256,684,1.863,685,2.664,686,2.664,687,3.457,688,3.778,689,3.429,690,2.438,691,2.664,692,2.968,693,4.371,694,3.429,695,2.438,696,2.664,697,3.429,698,3.544,699,3.718,700,5.651,701,3.429,702,3.429,703,3.429,704,2.968,705,4.863,706,4.863,707,4.863,708,4.863,709,1.863,710,1.976,711,1.976,712,2.438,713,2.438]],["title/components/DateDataTypeComponent.html",[206,0.104,242,0.766]],["body/components/DateDataTypeComponent.html",[3,0.113,4,0.113,5,0.099,7,0.058,13,0.576,14,0.874,15,0.284,16,0.016,17,0.569,18,0.736,19,0.342,22,0.113,24,0.482,28,1.164,31,0.378,33,0.234,52,1.071,53,0.766,54,1.667,83,0.009,84,0.009,92,0.44,93,1.145,101,0.286,102,0.658,106,1.883,108,0.637,109,0.603,111,0.612,115,1.263,121,0.823,124,0.251,125,0.835,126,0.627,129,0.268,130,0.87,132,0.989,135,0.753,138,1.046,186,0.601,196,2.813,203,1.405,206,0.145,207,0.627,208,0.949,209,0.681,210,0.681,211,0.681,212,0.681,214,0.681,215,1.714,216,1.644,217,0.989,218,0.989,219,1.165,221,0.989,223,0.989,229,0.551,231,0.681,232,0.989,233,0.989,234,0.681,235,0.681,236,0.681,237,0.627,238,0.681,239,0.627,240,0.681,241,0.681,242,1.176,243,1.451,244,1.587,245,0.627,246,0.681,247,0.681,248,0.627,249,0.681,250,0.627,251,0.681,252,0.627,253,0.681,254,0.654,255,0.627,256,0.627,257,0.681,258,0.627,259,0.681,260,0.601,261,0.681,262,0.627,263,0.681,264,0.627,265,0.681,266,0.627,267,1.165,268,0.627,269,0.681,270,0.627,271,0.627,272,0.681,273,0.627,274,0.681,275,0.627,276,0.681,277,0.627,278,0.654,279,0.627,280,0.681,281,0.627,282,0.681,283,0.627,284,0.681,285,0.627,286,0.654,287,0.627,288,0.627,289,0.681,290,0.627,291,0.627,292,0.681,293,0.681,294,0.681,312,4.191,319,0.906,362,2.922,502,2.28,528,1.845,532,1.428,533,1.752,539,2.526,571,1.771,575,3.025,579,1.33,580,1.216,581,1.394,589,2.355,590,2.502,714,6.36,715,5.71,716,1.394,717,2.383,718,2.383,719,2.024,720,5.918,721,5.918,722,4.581,723,2.887,724,4.581,725,2.355,726,2.243,727,2.64,728,1.819,729,1.937,730,2.731,731,3.155,732,4.581,733,6.285,734,3.155,735,5.393,736,2.243,737,1.819,738,4.581,739,3.155,740,2.355,741,2.496,742,2.731,743,1.622,744,3.155,745,3.155,746,2.076,747,3.155,748,2.731,749,3.155,750,3.155,751,5.918,752,1.937,753,3.155,754,3.155,755,3.155,756,3.965,757,3.965,758,3.155,759,3.155,760,3.155,761,3.155,762,3.155,763,3.155,764,4.581,765,2.731,766,3.155,767,1.937,768,2.243,769,3.155,770,3.155,771,2.731,772,4.668,773,2.731,774,1.819,775,3.155,776,4.581,777,2.076,778,3.155,779,4.581,780,2.076,781,3.155,782,3.155,783,3.155,784,4.581,785,3.155,786,3.965,787,2.731]],["title/components/DetailPage.html",[206,0.104,248,0.766]],["body/components/DetailPage.html",[3,0.16,4,0.16,5,0.14,7,0.082,8,0.852,13,0.819,16,0.016,17,0.406,19,0.387,22,0.16,31,0.538,33,0.209,53,0.977,83,0.012,84,0.012,92,0.562,101,0.588,102,0.588,111,0.406,121,0.624,124,0.358,125,1.189,129,0.382,132,1.15,138,0.852,174,1.189,186,0.855,203,1.354,206,0.196,207,0.892,208,1.21,209,0.969,210,0.969,211,0.969,212,0.969,214,0.969,215,1.756,216,1.684,217,1.261,218,1.261,219,1.402,220,2.199,221,1.261,223,1.261,229,0.784,230,1.399,231,0.969,232,1.261,233,1.261,234,0.969,235,0.969,236,0.969,237,0.892,238,0.969,239,0.892,240,0.969,241,0.969,242,0.892,243,0.855,244,1.684,245,1.366,246,0.969,247,0.969,248,1.366,249,0.969,250,0.892,251,0.969,252,0.892,253,0.969,254,0.93,255,0.892,256,0.892,257,0.969,258,0.892,259,0.969,260,0.855,261,0.969,262,0.892,263,0.969,264,0.892,265,0.969,266,0.892,267,0.969,268,0.892,269,0.969,270,0.892,271,0.892,272,0.969,273,0.892,274,0.969,275,0.892,276,0.969,277,0.892,278,0.93,279,0.892,280,0.969,281,0.892,282,0.969,283,0.892,284,0.969,285,0.892,286,0.93,287,0.892,288,0.892,289,0.969,290,0.892,291,0.892,292,0.969,293,0.969,294,0.969,485,2.251,516,2.395,528,2.144,580,1.73,788,3.886,789,5.056,790,5.62,791,6.493,792,5.841,793,5.841,794,4.489,795,4.489,796,4.489]],["title/components/DetailedFormComponent.html",[206,0.104,245,0.766]],["body/components/DetailedFormComponent.html",[3,0.171,4,0.092,5,0.081,7,0.047,8,0.576,13,0.472,14,0.848,15,0.193,16,0.016,17,0.434,18,0.461,19,0.364,22,0.092,24,0.395,31,0.575,33,0.206,39,3.649,40,1.492,53,0.967,83,0.008,84,0.008,92,0.38,93,1.307,101,0.358,102,0.664,108,0.517,109,0.488,111,0.653,121,0.967,124,0.206,126,0.514,129,0.22,130,0.762,132,0.897,135,0.73,138,0.699,157,1.703,173,1.802,174,0.685,186,0.493,190,2.079,196,2.427,203,1.214,206,0.164,207,0.514,208,0.819,209,0.559,210,0.559,211,0.559,212,0.559,214,0.559,215,1.684,216,1.615,217,0.854,218,0.854,219,1.035,220,1.624,221,0.854,223,0.854,229,0.452,230,0.807,231,0.559,232,0.854,233,0.854,234,0.559,235,0.559,236,0.559,237,0.514,238,0.559,239,1.066,240,0.559,241,0.559,242,0.514,243,0.753,244,1.522,245,1.066,246,1.411,247,0.559,248,0.514,249,0.559,250,0.514,251,0.559,252,0.514,253,0.559,254,0.536,255,0.514,256,0.514,257,0.559,258,0.514,259,0.559,260,0.493,261,0.559,262,0.514,263,0.559,264,0.514,265,0.559,266,0.514,267,0.854,268,0.514,269,0.559,270,0.514,271,0.514,272,0.559,273,0.514,274,0.559,275,0.514,276,0.559,277,0.514,278,0.536,279,1.211,280,0.559,281,0.514,282,0.559,283,0.514,284,0.559,285,0.514,286,0.536,287,0.514,288,0.514,289,0.559,290,0.514,291,0.514,292,0.559,293,0.559,294,0.559,320,2.693,342,1.59,343,2.427,362,1.092,431,1.492,502,0.997,538,2.554,539,2.348,579,1.092,580,2.866,581,1.144,583,1.84,623,1.492,628,2.011,630,1.84,632,2.119,639,3.815,640,3.815,644,2.81,660,2.248,666,1.84,669,2.81,673,2.827,674,2.606,675,2.119,676,2.372,683,1.703,684,2.606,685,2.011,686,2.011,688,4.17,693,1.84,695,1.84,698,2.278,709,1.407,710,2.278,711,2.278,726,1.84,756,2.241,757,2.241,771,2.241,772,3.422,773,2.241,774,1.492,797,6.396,798,2.241,799,4.796,800,3.953,801,4.646,802,5.004,803,5.275,804,6.094,805,4.17,806,4.646,807,4.796,808,3.953,809,5.368,810,4.646,811,5.368,812,5.368,813,4.507,814,3.893,815,3.953,816,2.589,817,1.747,818,2.589,819,2.589,820,2.589,821,2.589,822,2.589,823,2.589,824,2.589,825,3.953,826,2.589,827,3.953,828,2.589,829,2.589,830,2.589,831,2.589,832,2.589,833,2.589,834,2.589,835,2.241,836,2.589,837,1.84,838,2.589,839,2.011,840,2.241,841,2.589,842,3.953,843,4.796,844,2.589,845,2.241,846,2.241,847,3.953,848,4.796,849,4.796,850,4.796,851,5.368,852,2.589,853,3.953,854,2.589,855,5.368,856,2.589,857,2.589,858,1.84,859,1.703,860,1.703,861,2.589,862,1.84,863,2.241,864,2.589,865,2.589,866,2.589,867,2.241,868,2.589,869,2.589,870,1.84,871,2.589,872,2.589,873,2.241,874,2.589,875,2.241,876,2.339,877,1.703,878,2.241,879,4.151,880,2.241,881,2.589,882,3.726,883,1.84,884,2.011,885,2.241,886,2.241,887,2.589,888,5.368,889,2.241,890,2.241,891,2.589,892,2.589,893,2.241,894,2.589,895,3.422,896,2.241,897,2.241,898,2.589,899,3.422,900,2.589,901,2.589,902,4.796,903,2.589,904,1.703,905,2.601,906,2.241,907,2.589,908,2.589,909,2.589,910,2.81,911,2.81,912,3.953,913,4.796,914,2.589,915,3.953,916,3.953,917,3.422,918,3.071,919,2.589,920,2.589,921,1.492,922,2.589,923,2.589,924,2.589,925,2.589,926,2.589,927,2.589,928,5.368,929,3.953,930,3.953,931,3.953,932,3.953,933,3.953,934,2.81,935,3.953,936,3.953,937,3.422,938,3.953,939,3.953,940,2.81,941,3.953,942,3.953,943,2.589,944,2.241,945,1.703,946,2.241,947,3.953,948,2.589,949,2.589,950,3.953,951,2.589,952,2.241,953,2.589,954,2.589,955,2.589,956,2.011,957,2.589,958,2.589]],["title/injectables/DetailedFormService.html",[85,0.562,539,1.486]],["body/injectables/DetailedFormService.html",[3,0.091,4,0.091,5,0.08,7,0.047,8,0.57,14,1.105,15,0.286,16,0.016,17,0.354,19,0.376,20,0.941,22,0.091,24,0.39,26,2.895,27,1.245,28,1.442,29,1.245,31,0.726,32,1.028,33,0.232,46,3.394,70,1.47,83,0.008,84,0.008,85,0.57,87,0.829,88,4.746,92,0.376,93,1.383,96,2.802,101,0.354,102,0.698,108,0.701,109,0.663,111,0.683,121,1,124,0.203,126,0.507,127,0.829,128,0.795,129,0.217,130,0.857,132,0.427,135,0.899,138,0.838,157,1.696,173,1.889,174,0.676,190,1.813,229,0.446,319,1.812,329,1.982,330,1.982,342,1.567,362,2.813,371,1.386,501,2.208,538,2.541,539,1.506,580,2.978,632,2.1,639,3.787,640,3.787,643,3.428,660,1.753,672,1.982,673,1.183,674,2.583,675,2.1,676,2.1,684,2.583,774,1.47,801,4.611,802,4.611,803,4.611,805,4.139,810,4.611,817,3.06,837,1.813,846,2.208,873,2.208,875,2.208,876,2.318,889,2.208,940,3.787,959,2.208,960,3.693,961,4.752,962,4.752,963,3.127,964,3.909,965,4.752,966,4.752,967,6.059,968,5.327,969,5.327,970,3.909,971,4.752,972,4.611,973,3.909,974,5.327,975,5.327,976,5.327,977,4.611,978,2.208,979,3.721,980,3.428,981,3.635,982,3.909,983,3.909,984,2.551,985,6.507,986,2.551,987,2.551,988,2.551,989,2.551,990,2.551,991,2.551,992,3.909,993,2.551,994,2.551,995,2.551,996,2.551,997,2.551,998,2.551,999,2.551,1000,2.551,1001,3.909,1002,2.551,1003,2.551,1004,5.327,1005,5.327,1006,2.551,1007,2.551,1008,3.909,1009,2.551,1010,3.909,1011,2.551,1012,2.551,1013,2.551,1014,2.551,1015,2.551,1016,2.551,1017,2.551,1018,2.551,1019,2.551,1020,2.551,1021,2.208,1022,1.813,1023,2.779,1024,2.551,1025,2.551,1026,2.551,1027,2.551,1028,2.208,1029,5.327,1030,3.384,1031,3.384,1032,3.384,1033,3.909,1034,3.909,1035,3.909,1036,4.752,1037,3.909,1038,4.752,1039,2.551,1040,2.551,1041,3.909,1042,2.551,1043,1.982,1044,2.551,1045,3.037,1046,2.551,1047,2.551,1048,2.551,1049,6.059,1050,4.752,1051,2.551,1052,4.752,1053,2.551,1054,2.551,1055,2.551,1056,5.744,1057,2.551,1058,3.909,1059,3.037,1060,4.113,1061,1.982,1062,2.208,1063,1.813,1064,2.208,1065,3.909,1066,2.551,1067,2.551,1068,3.909,1069,2.208,1070,3.909,1071,2.551,1072,2.551,1073,2.551,1074,2.551,1075,2.551,1076,4.752,1077,2.551,1078,2.551,1079,2.551,1080,2.208,1081,2.551,1082,2.551,1083,1.386,1084,2.551,1085,1.982,1086,2.551,1087,2.551,1088,2.551,1089,2.551,1090,2.551,1091,3.037,1092,2.551,1093,2.551,1094,2.551,1095,2.208,1096,2.551,1097,2.208,1098,3.384,1099,2.551,1100,2.551,1101,3.384,1102,2.551,1103,3.037,1104,2.208,1105,2.551,1106,2.551]],["title/injectables/DraftService.html",[85,0.562,980,2.096]],["body/injectables/DraftService.html",[3,0.113,4,0.113,5,0.099,7,0.115,8,0.668,10,1.026,13,0.836,15,0.293,16,0.016,17,0.489,18,0.679,19,0.384,20,1.691,22,0.113,24,0.482,28,1.99,31,0.378,32,2.174,33,0.252,46,3.042,83,0.009,84,0.009,85,0.668,87,1.026,92,0.441,93,1.379,96,2.784,101,0.415,102,0.696,108,0.761,109,0.72,111,0.686,121,1.065,124,0.252,126,0.627,127,1.026,128,0.984,129,0.269,130,0.866,132,0.528,135,0.786,157,1.667,173,1.845,174,1.214,181,3.258,243,1.288,301,2.491,319,0.907,320,2.384,357,3.042,371,1.716,372,2.078,502,2.281,537,3.635,541,4.67,582,2.453,599,2.453,600,2.733,602,2.733,616,2.733,786,5.442,817,3.456,952,2.733,960,5.095,977,3.967,980,2.491,1022,2.244,1023,2.244,1061,5.385,1069,2.733,1095,2.733,1107,2.733,1108,5.124,1109,4.583,1110,5.92,1111,3.967,1112,5.396,1113,5.124,1114,5.92,1115,5.92,1116,5.92,1117,4.583,1118,4.583,1119,5.92,1120,4.583,1121,4.583,1122,4.583,1123,5.92,1124,2.733,1125,4.155,1126,4.583,1127,4.583,1128,3.157,1129,3.157,1130,3.967,1131,3.157,1132,3.157,1133,3.157,1134,3.157,1135,3.157,1136,3.157,1137,4.583,1138,3.157,1139,4.583,1140,3.157,1141,3.157,1142,4.583,1143,3.157,1144,4.583,1145,3.157,1146,3.157,1147,3.157,1148,3.157,1149,3.157,1150,3.157,1151,3.157,1152,2.453,1153,2.733,1154,2.453,1155,3.967,1156,3.967,1157,4.583,1158,3.157,1159,3.157,1160,3.157,1161,4.583,1162,3.157,1163,3.157,1164,3.157,1165,3.157,1166,3.157,1167,4.583,1168,3.157,1169,3.157,1170,4.583,1171,3.157,1172,3.157,1173,3.157,1174,3.157,1175,3.967,1176,3.157,1177,3.157,1178,4.67,1179,3.157,1180,3.157,1181,3.157,1182,3.157,1183,3.157,1184,6.558,1185,3.157,1186,4.583,1187,2.733,1188,3.157,1189,3.157,1190,3.157,1191,3.157,1192,3.157,1193,2.733,1194,4.583,1195,3.157,1196,3.157,1197,3.157,1198,3.157,1199,4.583,1200,3.157,1201,3.258,1202,2.733,1203,2.733,1204,3.157,1205,3.157,1206,3.157,1207,5.396,1208,3.157,1209,3.157,1210,2.733,1211,3.157,1212,3.157,1213,2.733,1214,2.733,1215,3.157,1216,3.157,1217,3.157]],["title/components/DraftsPage.html",[206,0.104,250,0.766]],["body/components/DraftsPage.html",[3,0.129,4,0.129,5,0.113,7,0.092,15,0.234,16,0.016,17,0.569,19,0.382,22,0.129,24,0.551,31,0.432,32,1.452,33,0.236,53,1.051,83,0.01,84,0.01,92,0.484,93,1.197,101,0.456,102,0.599,108,0.625,109,0.591,111,0.569,121,0.501,124,0.287,126,0.716,129,0.307,130,0.66,132,1.051,135,0.432,138,0.847,157,1.788,186,0.686,190,2.05,203,1.304,206,0.156,207,0.716,208,1.043,209,0.778,210,0.778,211,0.778,212,0.778,214,0.778,215,1.731,216,1.661,217,1.088,218,1.088,219,1.254,220,1.967,221,1.088,223,1.088,229,0.63,230,1.124,231,0.778,232,1.088,233,1.088,234,0.778,235,0.778,236,0.778,237,0.716,238,0.778,239,0.716,240,0.778,241,0.778,242,0.716,243,0.686,244,1.626,245,0.716,246,0.778,247,0.778,248,0.716,249,0.778,250,1.249,251,0.778,252,0.716,253,0.778,254,0.747,255,0.716,256,0.716,257,0.778,258,0.716,259,0.778,260,0.686,261,0.778,262,0.716,263,0.778,264,0.716,265,0.778,266,0.716,267,0.778,268,0.716,269,0.778,270,0.716,271,0.716,272,0.778,273,0.716,274,0.778,275,0.716,276,0.778,277,0.716,278,0.747,279,0.716,280,0.778,281,0.716,282,0.778,283,0.716,284,0.778,285,0.716,286,0.747,287,0.716,288,0.716,289,0.778,290,0.716,291,0.716,292,0.778,293,0.778,294,0.778,319,1.447,409,4.319,416,2.078,431,2.078,538,2.833,539,2.71,579,1.52,580,1.389,581,1.593,620,1.758,632,2.226,660,2.142,666,2.562,669,2.562,673,2.336,674,1.959,675,2.226,676,2.226,677,2.372,678,2.562,683,2.372,684,1.959,709,1.959,710,2.903,711,2.903,712,2.562,713,2.562,814,4.319,817,2.566,859,2.372,860,2.372,876,1.758,918,3.914,934,3.58,940,2.562,980,3.822,1061,3.914,1062,3.12,1083,1.959,1111,4.36,1113,5.441,1130,4.36,1175,4.36,1218,3.12,1219,5.806,1220,5.037,1221,4.36,1222,5.441,1223,3.12,1224,4.509,1225,3.605,1226,3.605,1227,3.605,1228,5.037,1229,3.605,1230,3.12,1231,3.605,1232,2.562,1233,3.605,1234,3.12,1235,3.12,1236,3.605,1237,3.605,1238,3.12,1239,3.12,1240,3.12,1241,3.605,1242,3.605,1243,3.605,1244,3.605,1245,2.801,1246,3.605,1247,3.605,1248,3.12,1249,3.12,1250,2.801,1251,3.12,1252,2.562,1253,3.12,1254,2.801,1255,3.12,1256,3.12,1257,3.12,1258,5.037,1259,5.037,1260,5.037,1261,5.037,1262,2.801,1263,2.801]],["title/components/DrawingPadDataTypeComponent.html",[206,0.104,252,0.766]],["body/components/DrawingPadDataTypeComponent.html",[3,0.112,4,0.112,5,0.098,7,0.057,8,0.666,14,0.635,15,0.288,16,0.016,17,0.284,18,0.439,19,0.341,22,0.112,24,0.48,28,1.684,31,0.376,33,0.211,52,1.069,53,0.763,54,1.664,83,0.009,84,0.009,92,0.439,93,0.94,101,0.487,102,0.681,106,1.88,108,0.492,109,0.465,111,0.627,115,1.259,121,0.963,124,0.25,125,0.832,126,0.624,129,0.267,130,0.519,132,1.157,138,1.009,186,0.598,203,1.415,206,0.145,207,0.624,208,0.946,209,0.678,210,0.678,211,0.678,212,0.678,214,0.678,215,1.713,216,1.643,217,0.986,218,0.986,219,1.162,221,0.986,223,0.986,229,0.549,231,0.678,232,0.986,233,0.986,234,0.678,235,0.678,236,0.678,237,0.624,238,0.678,239,0.624,240,0.678,241,0.678,242,0.624,243,0.598,244,1.585,245,0.624,246,0.678,247,0.678,248,0.624,249,0.678,250,0.624,251,0.678,252,1.173,253,1.494,254,1.662,255,0.624,256,0.624,257,0.678,258,0.624,259,0.678,260,0.598,261,0.678,262,0.624,263,0.678,264,0.624,265,0.678,266,0.624,267,0.678,268,0.624,269,0.678,270,0.624,271,0.624,272,0.678,273,0.624,274,0.678,275,0.624,276,0.678,277,0.624,278,0.651,279,0.624,280,0.678,281,0.624,282,0.678,283,0.624,284,0.678,285,0.624,286,0.651,287,0.624,288,0.624,289,0.678,290,0.624,291,0.624,292,0.678,293,0.678,294,0.678,502,1.21,532,1.423,533,1.748,566,2.441,571,1.767,572,2.441,620,2.227,622,4.198,623,2.632,624,3.548,625,3.303,626,3.952,627,3.246,628,4.18,667,3.548,687,2.233,698,3.101,699,3.886,716,1.388,718,2.377,719,2.018,727,1.81,728,1.81,729,1.929,736,2.233,737,1.81,741,2.918,742,2.719,746,2.067,752,1.929,945,2.067,1239,3.952,1264,6.554,1265,5.883,1266,5.906,1267,5.38,1268,6.546,1269,5.906,1270,4.566,1271,5.906,1272,5.906,1273,5.906,1274,5.906,1275,4.566,1276,5.906,1277,3.005,1278,2.233,1279,2.719,1280,4.566,1281,3.141,1282,2.067,1283,2.719,1284,2.719,1285,4.566,1286,3.141,1287,5.38,1288,4.566,1289,2.719,1290,3.141,1291,3.141,1292,3.141,1293,4.566,1294,3.141,1295,3.141,1296,3.141,1297,3.141,1298,3.141,1299,3.141,1300,5.906,1301,3.141,1302,3.141,1303,3.141,1304,3.141,1305,3.141,1306,4.566,1307,5.38,1308,3.141,1309,4.566,1310,3.141,1311,4.566,1312,3.548,1313,3.952,1314,4.566,1315,3.141,1316,3.141,1317,3.141,1318,3.141,1319,3.141,1320,3.141,1321,4.566,1322,4.566,1323,2.233,1324,3.141,1325,3.141]],["title/components/EmailDataTypeComponent.html",[206,0.104,255,0.766]],["body/components/EmailDataTypeComponent.html",[3,0.144,4,0.144,5,0.126,7,0.074,14,0.755,15,0.285,16,0.016,17,0.364,18,0.522,19,0.358,22,0.144,24,0.614,31,0.482,33,0.219,52,1.221,53,0.908,54,1.801,83,0.011,84,0.011,92,0.522,101,0.556,102,0.656,106,2.035,108,0.433,109,0.409,111,0.556,115,1.497,121,0.755,124,0.32,125,1.064,126,0.798,129,0.342,132,1.1,135,0.482,138,1.074,186,1.402,203,1.415,206,0.165,207,0.798,208,1.124,209,0.868,210,0.868,211,0.868,212,0.868,214,0.868,215,1.744,216,1.673,217,1.172,218,1.172,219,1.327,221,1.172,223,1.172,229,0.702,231,0.868,232,1.172,233,1.172,234,0.868,235,0.868,236,0.868,237,0.798,238,0.868,239,0.798,240,0.868,241,0.868,242,0.798,243,0.765,244,1.656,245,0.798,246,0.868,247,0.868,248,0.798,249,0.868,250,0.798,251,0.868,252,0.798,253,0.868,254,0.833,255,1.308,256,0.798,257,0.868,258,0.798,259,0.868,260,0.765,261,0.868,262,0.798,263,0.868,264,0.798,265,0.868,266,0.798,267,0.868,268,0.798,269,0.868,270,0.798,271,0.798,272,0.868,273,0.798,274,0.868,275,0.798,276,0.868,277,0.798,278,0.833,279,0.798,280,0.868,281,0.798,282,0.868,283,0.798,284,0.868,285,0.798,286,0.833,287,0.798,288,0.798,289,0.868,290,0.798,291,0.798,292,0.868,293,0.868,294,0.868,485,2.092,516,2.267,528,2.052,532,1.692,533,1.997,571,1.969,716,1.776,717,2.716,718,2.716,719,2.399,723,3.211,725,2.791,727,3.129,728,2.317,729,2.468,737,2.317,740,2.791,741,1.695,752,2.468,1277,2.645,1282,2.645,1326,6.374,1327,5.722,1328,3.123]],["title/injectables/FilesystemService.html",[85,0.562,1125,2.368]],["body/injectables/FilesystemService.html",[3,0.113,4,0.113,5,0.224,7,0.058,13,0.987,14,0.913,15,0.273,16,0.016,18,0.761,19,0.25,22,0.113,33,0.242,83,0.009,84,0.009,85,0.67,87,1.03,92,0.442,93,1.147,96,2.74,101,0.49,102,0.65,108,0.73,109,0.69,111,0.64,124,0.253,127,1.03,128,0.988,129,0.27,130,0.827,135,0.908,138,0.67,157,2.004,173,2.388,174,1.432,189,3.903,190,2.2,203,1.1,319,1.808,362,2.28,877,4.653,879,3.978,882,4.201,884,4.608,904,4.653,905,5.041,906,2.743,963,2.085,1060,3.978,1063,3.267,1091,4.201,1103,4.608,1125,2.822,1201,5.576,1329,2.743,1330,4.596,1331,5.931,1332,4.596,1333,5.407,1334,5.407,1335,4.596,1336,5.931,1337,5.407,1338,3.169,1339,4.596,1340,3.169,1341,3.169,1342,3.169,1343,5.45,1344,5.931,1345,5.931,1346,6.806,1347,6.296,1348,3.169,1349,7.182,1350,4.596,1351,3.169,1352,3.169,1353,3.169,1354,3.169,1355,3.169,1356,4.596,1357,3.169,1358,3.169,1359,3.169,1360,5.931,1361,3.169,1362,2.743,1363,5.407,1364,5.407,1365,3.978,1366,5.863,1367,5.407,1368,2.462,1369,4.596,1370,3.169,1371,5.407,1372,6.121,1373,3.169,1374,3.169,1375,3.169,1376,4.596,1377,2.743,1378,5.495,1379,3.169,1380,5.407,1381,3.169,1382,5.407,1383,5.407,1384,3.169,1385,3.169,1386,3.169,1387,2.743,1388,4.596,1389,3.169,1390,3.169,1391,3.169,1392,3.169,1393,3.169,1394,3.169,1395,3.571,1396,3.169,1397,4.596,1398,5.931,1399,3.169,1400,3.169,1401,3.169,1402,3.978,1403,2.462,1404,4.596,1405,4.596,1406,3.169,1407,3.169,1408,3.169,1409,3.169,1410,3.169,1411,3.169,1412,3.169,1413,4.596,1414,4.596,1415,4.596]],["title/interfaces/Form.html",[0,1.021,31,0.462]],["body/interfaces/Form.html",[0,1.886,1,1.651,2,1.811,3,0.146,4,0.146,5,0.128,6,2.107,7,0.075,8,0.802,9,2.362,10,2.499,11,3.824,12,2.879,13,1.003,14,0.962,15,0.323,16,0.016,17,0.736,18,0.788,19,0.223,20,2.552,21,2.516,22,0.279,23,1.999,24,0.626,25,2.516,26,2.227,27,1.999,28,1.511,29,1.999,30,2.227,31,0.659,32,2.672,33,0.254,34,4.073,35,4.073,36,4.073,37,4.073,38,3.411,39,3.236,40,3.824,41,4.249,42,4.249,43,3.558,44,4.072,45,3.558,46,2.879,47,2.227,48,2.516,49,3.605,50,2.516,51,2.516,52,0.814,53,0.919,54,1.398,55,3.377,56,2.516,57,2.516,58,3.377,59,2.827,60,2.516,61,3.411,62,2.516,63,2.362,64,2.516,65,2.988,66,2.827,67,2.362,68,2.516,69,2.516,70,2.362,71,2.516,72,2.516,73,2.516,74,3.17,75,2.362,76,3.811,77,2.107,78,3.373,79,2.362,80,3.17,81,2.107,82,2.516,83,0.011,84,0.011]],["title/components/FormListComponent.html",[206,0.104,256,0.766]],["body/components/FormListComponent.html",[3,0.119,4,0.119,5,0.104,7,0.061,13,1.015,14,0.929,15,0.277,16,0.016,17,0.302,19,0.389,22,0.119,24,0.509,31,0.881,32,1.342,33,0.229,53,0.797,54,1.211,83,0.009,84,0.009,92,0.458,93,1.284,101,0.431,102,0.648,108,0.599,109,0.566,111,0.549,121,0.773,124,0.265,126,0.662,129,0.283,130,0.379,132,1.015,138,0.885,157,1.414,174,1.473,186,0.634,190,1.425,203,1.284,206,0.149,207,0.662,208,0.987,209,0.719,210,0.719,211,0.719,212,0.719,214,0.719,215,1.721,216,1.651,217,1.029,218,1.029,219,1.201,220,1.884,221,1.029,223,1.029,229,0.582,230,1.039,231,0.719,232,1.029,233,1.029,234,0.719,235,0.719,236,0.719,237,0.662,238,0.719,239,0.662,240,0.719,241,0.719,242,0.662,243,0.634,244,1.603,245,0.662,246,0.719,247,0.719,248,0.662,249,0.719,250,0.662,251,0.719,252,0.662,253,0.719,254,0.69,255,0.662,256,1.206,257,0.719,258,0.662,259,0.719,260,0.634,261,0.719,262,0.662,263,0.719,264,0.662,265,0.719,266,0.662,267,0.719,268,0.662,269,0.719,270,0.662,271,0.662,272,0.719,273,0.662,274,0.719,275,0.662,276,0.719,277,0.662,278,0.69,279,0.662,280,0.719,281,0.662,282,0.719,283,0.662,284,0.719,285,0.662,286,0.69,287,0.662,288,0.662,289,0.719,290,0.662,291,0.662,292,0.719,293,0.719,294,0.719,319,1.918,409,4.222,416,1.92,528,1.892,532,1.485,538,2.77,539,2.649,571,1.921,573,4.716,579,1.405,580,1.284,581,1.472,583,3.953,620,1.625,632,1.472,660,1.229,673,2.21,674,1.811,675,1.472,676,1.472,684,1.811,709,1.811,710,2.746,711,2.746,712,2.368,713,2.368,741,1.405,814,4.222,817,2.838,863,4.124,876,1.625,918,3.702,934,3.387,940,2.368,945,2.192,960,4.321,963,3.66,979,3.727,980,3.737,981,3.963,1030,4.124,1031,2.884,1032,2.884,1083,1.811,1224,4.525,1230,2.884,1232,2.368,1245,2.589,1248,2.884,1249,2.884,1250,2.589,1251,2.884,1252,2.368,1253,2.884,1254,2.589,1255,2.884,1256,2.884,1257,2.884,1262,2.589,1263,2.589,1416,6.286,1417,5.162,1418,2.884,1419,4.124,1420,5.561,1421,4.764,1422,4.764,1423,6.069,1424,4.716,1425,3.332,1426,4.764,1427,4.764,1428,3.332,1429,3.332,1430,3.332,1431,4.764,1432,3.332,1433,4.764,1434,3.332,1435,3.332,1436,3.332,1437,2.884,1438,2.589,1439,4.764,1440,2.884,1441,3.332,1442,3.332,1443,2.884,1444,4.764,1445,4.764,1446,4.764,1447,4.764,1448,4.764,1449,2.884]],["title/injectables/FormService.html",[85,0.562,979,2.368]],["body/injectables/FormService.html",[3,0.119,4,0.119,5,0.104,7,0.061,15,0.277,16,0.016,18,0.32,19,0.389,22,0.119,24,0.508,31,0.889,33,0.198,43,3.613,44,3.734,45,3.117,52,1.474,83,0.009,84,0.009,85,0.694,87,1.08,92,0.457,93,1.283,96,1.963,101,0.549,102,0.581,108,0.598,109,0.566,111,0.622,115,1.938,121,0.661,124,0.265,126,0.66,127,1.08,128,1.036,129,0.283,130,0.781,132,0.556,135,0.823,152,3.352,158,4.117,165,2.921,166,3.734,173,1.89,177,1.542,179,2.741,180,1.709,192,1.806,243,1.308,356,2.363,357,3.26,362,1.402,372,2.187,373,3.948,374,2.187,375,2.363,376,2.187,377,2.583,379,2.363,383,2.583,384,2.583,387,2.363,390,2.583,391,2.583,393,2.583,394,2.583,488,1.916,502,2.14,574,2.041,789,2.877,817,3.28,883,3.381,979,2.921,1155,4.807,1156,2.877,1312,4.711,1395,3.696,1424,6.192,1450,2.877,1451,5.247,1452,4.117,1453,5.396,1454,4.756,1455,4.756,1456,6.063,1457,6.063,1458,6.063,1459,4.807,1460,4.756,1461,3.324,1462,3.696,1463,4.756,1464,4.756,1465,4.756,1466,5.185,1467,4.756,1468,5.321,1469,3.324,1470,6.083,1471,6.063,1472,4.756,1473,3.381,1474,4.117,1475,4.756,1476,4.756,1477,4.756,1478,4.756,1479,4.315,1480,4.756,1481,4.31,1482,4.756,1483,6.063,1484,4.756,1485,3.324,1486,4.117,1487,3.324,1488,3.324,1489,7.154,1490,4.756,1491,4.315,1492,4.756,1493,4.756,1494,4.756,1495,4.756,1496,3.324,1497,4.756,1498,3.381,1499,2.583,1500,2.363,1501,5.552,1502,3.324,1503,3.324,1504,4.756,1505,3.324,1506,5.554,1507,2.877,1508,3.324,1509,2.583,1510,3.324,1511,3.324,1512,3.324,1513,3.324,1514,4.117,1515,3.324,1516,3.324,1517,3.324,1518,4.756,1519,3.324,1520,3.324,1521,3.324,1522,3.324,1523,4.807,1524,3.324,1525,3.324,1526,3.324,1527,3.324,1528,3.324,1529,3.324,1530,2.583,1531,4.756,1532,3.324,1533,3.324,1534,3.324,1535,3.324,1536,2.877,1537,3.324,1538,2.877,1539,3.324]],["title/components/FormsPage.html",[206,0.104,258,0.766]],["body/components/FormsPage.html",[3,0.158,4,0.158,5,0.138,7,0.081,8,0.843,15,0.233,16,0.016,17,0.4,19,0.396,22,0.158,24,0.675,31,0.529,33,0.23,53,0.967,83,0.011,84,0.011,92,0.556,101,0.4,102,0.583,108,0.476,109,0.45,111,0.4,121,0.615,124,0.352,126,0.878,129,0.376,132,1.143,138,0.843,186,0.841,203,1.351,206,0.173,207,0.878,208,1.198,209,0.954,210,0.954,211,0.954,212,0.954,214,0.954,215,1.754,216,1.683,217,1.248,218,1.248,219,1.391,220,2.183,221,1.248,223,1.248,229,0.772,230,1.377,231,0.954,232,1.248,233,1.248,234,0.954,235,0.954,236,0.954,237,0.878,238,0.954,239,0.878,240,0.954,241,0.954,242,0.878,243,0.841,244,1.68,245,0.878,246,0.954,247,0.954,248,0.878,249,0.954,250,0.878,251,0.954,252,0.878,253,0.954,254,0.915,255,0.878,256,1.358,257,0.954,258,1.358,259,0.954,260,0.841,261,0.954,262,0.878,263,0.954,264,0.878,265,0.954,266,0.878,267,0.954,268,0.878,269,0.954,270,0.878,271,0.878,272,0.954,273,0.878,274,0.954,275,0.878,276,0.954,277,0.878,278,0.915,279,0.878,280,0.954,281,0.878,282,0.954,283,0.878,284,0.954,285,0.878,286,0.915,287,0.878,288,0.878,289,0.954,290,0.878,291,0.878,292,0.954,293,0.954,294,0.954,743,2.272,817,2.555,978,3.825,979,4.468,1417,3.141,1424,5.654,1437,3.825,1443,3.825,1540,3.825,1541,6.444,1542,5.781,1543,6.835,1544,5.781,1545,4.419,1546,3.825,1547,3.825,1548,4.419]],["title/components/HomePage.html",[206,0.104,260,0.734]],["body/components/HomePage.html",[3,0.116,4,0.116,5,0.102,7,0.06,8,0.683,15,0.242,16,0.016,17,0.294,18,0.577,19,0.38,22,0.116,31,0.39,33,0.196,53,1.108,83,0.009,84,0.009,92,0.45,93,1.291,101,0.424,102,0.669,108,0.35,109,0.331,111,0.633,121,0.95,124,0.259,129,0.277,130,0.532,132,1.003,135,0.39,138,0.683,157,1.684,186,0.619,190,1.796,199,2.875,203,1.278,206,0.147,207,0.646,208,0.97,209,0.702,210,0.702,211,0.702,212,0.702,214,0.702,215,1.718,216,1.655,217,1.011,218,1.011,219,1.185,221,1.011,223,1.011,229,0.568,231,0.702,232,1.011,233,1.011,234,0.702,235,0.702,236,0.702,237,0.646,238,0.702,239,0.646,240,0.702,241,0.702,242,0.646,243,0.619,244,1.596,245,0.646,246,0.702,247,0.702,248,0.646,249,0.702,250,0.646,251,0.702,252,0.646,253,0.702,254,0.674,255,0.646,256,0.646,257,0.702,258,0.646,259,0.702,260,1.143,261,0.702,262,0.646,263,0.702,264,0.646,265,0.702,266,0.646,267,0.702,268,0.646,269,0.702,270,0.646,271,0.646,272,0.702,273,0.646,274,0.702,275,0.646,276,0.702,277,0.646,278,0.674,279,0.646,280,0.702,281,0.646,282,0.702,283,0.646,284,0.702,285,0.646,286,0.674,287,0.646,288,0.646,289,0.702,290,0.646,291,0.646,292,0.702,293,0.702,294,0.702,408,3.71,417,2.312,425,4.522,427,2.14,428,3.262,431,2.699,472,3.328,478,2.527,520,5.506,528,1.871,537,4.192,538,2.75,566,2.527,567,4.053,572,2.527,582,2.527,611,2.815,620,2.677,623,1.875,625,1.997,632,2.653,660,1.727,675,2.069,676,2.069,677,3.081,678,3.328,679,2.527,683,3.081,687,2.312,690,2.312,691,2.527,693,2.312,695,2.312,698,2.699,704,2.815,709,1.767,944,2.815,945,2.14,980,3.71,981,3.818,1085,2.527,1202,4.053,1224,4.492,1232,2.312,1234,4.053,1235,4.053,1238,2.815,1323,2.312,1438,2.527,1549,2.815,1550,5.487,1551,5.487,1552,4.682,1553,5.487,1554,6.625,1555,6.002,1556,6.002,1557,6.002,1558,6.002,1559,6.002,1560,2.815,1561,4.682,1562,3.252,1563,3.252,1564,3.252,1565,3.252,1566,3.252,1567,3.252,1568,3.252,1569,3.252,1570,4.682,1571,3.252,1572,3.252,1573,2.815,1574,3.252,1575,4.682,1576,3.252,1577,3.252,1578,3.252,1579,3.252,1580,3.252,1581,3.252,1582,3.252,1583,3.252,1584,3.252,1585,4.682,1586,4.263,1587,3.252,1588,3.252,1589,3.638,1590,4.682,1591,3.252,1592,4.682,1593,6.361,1594,5.506,1595,2.815,1596,3.252,1597,3.252,1598,3.252,1599,4.682,1600,4.053,1601,4.682,1602,4.682,1603,4.682,1604,4.682,1605,4.682,1606,4.053,1607,4.053,1608,3.252,1609,3.252,1610,3.252,1611,3.252,1612,4.682,1613,5.487,1614,2.815]],["title/injectables/LocationService.html",[85,0.562,813,2.742]],["body/injectables/LocationService.html",[3,0.183,4,0.183,5,0.16,7,0.094,13,0.933,16,0.016,19,0.375,22,0.183,33,0.183,39,3.519,83,0.013,84,0.013,85,0.925,87,1.661,92,0.61,102,0.575,108,0.551,109,0.521,111,0.575,124,0.407,127,1.661,128,1.594,129,0.435,130,0.784,135,0.889,138,0.746,157,1.922,173,1.978,174,1.354,189,3.365,190,2.219,196,3.14,216,1.314,319,1.823,362,2.156,414,3.974,644,4.511,813,4.511,837,3.635,845,6.244,877,3.365,880,4.427,882,4.93,884,4.93,885,4.427,886,4.427,890,4.427,895,4.427,896,4.427,899,4.427,904,3.365,905,4.176,1021,4.427,1366,5.492,1378,3.974,1402,5.492,1403,3.974,1615,4.427,1616,6.346,1617,5.114,1618,6.346,1619,5.114,1620,5.114,1621,5.114,1622,3.974,1623,4.427,1624,5.492,1625,5.114,1626,5.114,1627,6.346,1628,5.114,1629,5.114,1630,3.635,1631,5.114,1632,5.114,1633,5.114,1634,5.114,1635,4.427,1636,5.114,1637,5.114,1638,5.114,1639,5.114,1640,5.114,1641,5.114]],["title/components/LoginPage.html",[206,0.104,262,0.766]],["body/components/LoginPage.html",[3,0.18,4,0.128,5,0.112,7,0.066,8,0.734,13,0.657,15,0.202,16,0.016,17,0.326,19,0.372,22,0.128,31,0.753,33,0.207,53,0.97,65,1.956,66,1.85,83,0.01,84,0.01,92,0.484,93,1.097,101,0.455,102,0.569,106,1.666,108,0.388,109,0.367,111,0.455,121,0.5,124,0.287,125,0.953,129,0.306,130,0.659,132,1.05,138,0.734,157,1.475,174,0.953,186,1.196,187,3.576,190,2.18,203,1.303,206,0.156,207,0.715,208,1.042,209,0.777,210,0.777,211,0.777,212,0.777,214,0.777,215,1.731,216,1.66,217,1.086,218,1.086,219,1.252,220,1.965,221,1.086,223,1.086,229,0.879,230,1.122,231,0.777,232,1.086,233,1.086,234,0.777,235,0.777,236,0.777,237,0.715,238,0.777,239,0.715,240,0.777,241,0.777,242,0.715,243,0.685,244,1.625,245,0.715,246,0.777,247,0.777,248,0.715,249,0.777,250,0.715,251,0.777,252,0.715,253,0.777,254,0.745,255,0.715,256,0.715,257,0.777,258,0.715,259,0.777,260,0.685,261,0.777,262,1.248,263,0.777,264,0.715,265,0.777,266,0.715,267,0.777,268,0.715,269,0.777,270,0.715,271,0.715,272,0.777,273,0.715,274,0.777,275,0.715,276,0.777,277,0.715,278,0.745,279,0.715,280,0.777,281,0.715,282,0.777,283,0.715,284,0.777,285,0.715,286,0.745,287,0.715,288,0.715,289,0.777,290,0.715,291,0.715,292,0.777,293,0.777,294,0.777,408,3.82,417,2.558,424,5.098,485,1.938,502,2.42,516,2.14,528,1.958,538,2.832,571,1.505,574,3.857,575,2.787,620,2.83,622,2.558,623,3.62,625,3.562,627,2.558,632,2.223,660,2.14,674,2.734,675,2.223,676,2.223,684,2.734,688,2.796,690,2.558,693,4.123,695,2.558,696,2.796,698,2.074,699,2.368,710,2.074,711,2.074,717,2.563,790,5.021,862,2.558,876,2.454,877,2.368,904,2.368,905,3.817,910,4.123,911,2.558,921,2.074,946,4.355,956,3.909,1083,1.956,1323,4.123,1594,4.355,1614,4.355,1642,3.115,1643,5.801,1644,5.031,1645,3.598,1646,5.462,1647,3.598,1648,5.031,1649,3.598,1650,3.598,1651,5.031,1652,5.437,1653,5.031,1654,5.031,1655,3.598,1656,2.074,1657,2.796,1658,2.796,1659,3.115,1660,2.796,1661,3.598,1662,3.598,1663,5.801,1664,3.598,1665,2.368,1666,3.598,1667,3.598,1668,3.598,1669,5.031,1670,5.031,1671,5.031,1672,3.598,1673,3.598,1674,3.598,1675,5.801,1676,3.598,1677,2.796,1678,3.598,1679,3.598,1680,3.598,1681,3.598,1682,3.598,1683,3.598,1684,3.115]],["title/components/MoneyDataTypeComponent.html",[206,0.104,264,0.766]],["body/components/MoneyDataTypeComponent.html",[3,0.114,4,0.114,5,0.099,7,0.058,8,0.672,13,0.84,14,0.641,15,0.285,16,0.016,17,0.288,18,0.68,19,0.377,22,0.114,24,0.486,31,0.381,33,0.212,52,1.076,53,0.77,54,1.671,83,0.009,84,0.009,92,0.443,93,0.805,101,0.417,102,0.651,106,1.888,108,0.496,109,0.469,111,0.538,115,1.27,121,0.442,124,0.253,125,0.842,126,0.631,129,0.27,130,0.805,132,0.993,135,0.552,138,1.048,154,5.689,157,1.51,173,1.436,174,1.22,186,0.605,190,1.777,203,1.403,206,0.145,207,0.631,208,0.954,209,0.686,210,0.686,211,0.686,212,0.686,214,0.686,215,1.715,216,1.645,217,0.994,218,0.994,219,1.169,221,0.994,223,0.994,229,0.555,230,0.991,231,0.686,232,0.994,233,1.169,234,0.686,235,0.686,236,0.686,237,0.631,238,0.686,239,0.631,240,0.686,241,0.686,242,0.631,243,0.605,244,1.589,245,0.631,246,0.686,247,0.686,248,0.631,249,0.686,250,0.631,251,0.686,252,0.631,253,0.686,254,0.658,255,0.631,256,0.631,257,0.686,258,0.631,259,0.686,260,0.605,261,0.686,262,0.631,263,0.686,264,1.18,265,1.499,266,0.631,267,0.686,268,0.631,269,0.686,270,0.631,271,0.631,272,0.686,273,0.631,274,0.686,275,0.631,276,0.686,277,0.631,278,0.658,279,0.631,280,0.686,281,0.631,282,0.686,283,0.631,284,0.686,285,0.631,286,0.658,287,0.631,288,0.631,289,0.686,290,0.631,291,0.631,292,0.686,293,0.686,294,0.686,532,1.436,533,1.76,538,2.648,571,1.777,575,3.031,589,2.785,590,2.513,592,2.092,632,2.035,660,2.501,673,2.755,675,2.035,676,2.035,716,1.405,717,2.394,718,2.394,719,2.035,723,2.897,725,2.368,740,2.368,741,2.504,767,1.952,774,2.655,777,4.148,780,4.148,876,2.247,893,3.987,921,1.832,1083,1.727,1277,2.092,1282,2.092,1283,2.751,1656,1.832,1665,2.092,1677,4.615,1685,6.301,1686,5.656,1687,5.416,1688,5.416,1689,5.416,1690,5.939,1691,4.615,1692,2.26,1693,6.78,1694,2.751,1695,2.751,1696,3.179,1697,3.179,1698,2.751,1699,3.179,1700,5.416,1701,5.416,1702,5.416,1703,4.606,1704,4.606,1705,4.606,1706,4.606,1707,2.751,1708,3.179,1709,2.751,1710,2.751,1711,2.751,1712,3.179,1713,2.47,1714,2.47,1715,4.606,1716,5.416,1717,5.416,1718,3.987,1719,3.179,1720,2.47,1721,2.47,1722,3.579,1723,4.481,1724,3.274,1725,2.47,1726,2.47,1727,2.47,1728,3.274,1729,2.47,1730,5.416,1731,4.606,1732,5.416,1733,2.26,1734,2.26,1735,2.26]],["title/components/MonthDataTypeComponent.html",[206,0.104,266,0.766]],["body/components/MonthDataTypeComponent.html",[3,0.141,4,0.141,5,0.123,7,0.072,14,0.746,15,0.284,16,0.016,17,0.358,18,0.516,19,0.355,22,0.141,24,0.604,31,0.473,33,0.218,52,1.21,53,0.897,54,1.792,83,0.011,84,0.011,92,0.516,101,0.552,102,0.653,106,2.024,108,0.426,109,0.403,111,0.552,115,1.48,121,0.746,124,0.315,125,1.046,126,0.785,129,0.336,130,0.61,132,1.093,135,0.473,138,1.07,186,0.753,203,1.414,206,0.164,207,0.785,208,1.112,209,0.853,210,0.853,211,0.853,212,0.853,214,0.853,215,1.742,216,1.671,217,1.159,218,1.159,219,1.316,221,1.159,223,1.159,229,0.69,231,0.853,232,1.159,233,1.159,234,0.853,235,0.853,236,0.853,237,0.785,238,0.853,239,0.785,240,0.853,241,0.853,242,0.785,243,1.245,244,1.651,245,0.785,246,0.853,247,0.853,248,0.785,249,0.853,250,0.785,251,0.853,252,0.785,253,0.853,254,0.819,255,0.785,256,0.785,257,0.853,258,0.785,259,0.853,260,0.753,261,0.853,262,0.785,263,0.853,264,0.785,265,0.853,266,1.298,267,1.584,268,0.785,269,0.853,270,0.785,271,0.785,272,0.853,273,0.785,274,0.853,275,0.785,276,0.853,277,0.785,278,0.819,279,0.785,280,0.853,281,0.785,282,0.853,283,0.785,284,0.853,285,0.785,286,0.819,287,0.785,288,0.785,289,0.853,290,0.785,291,0.785,292,0.853,293,0.853,294,0.853,485,2.068,502,2.068,516,2.248,528,2.037,532,1.673,533,1.98,571,1.955,575,2.569,716,1.746,717,2.693,718,2.693,719,2.372,723,3.188,727,3.093,728,2.278,729,2.427,737,2.278,741,1.666,787,3.421,1277,2.6,1282,2.6,1736,6.35,1737,5.7,1738,5.366,1739,5.366,1740,3.952,1741,3.952,1742,3.952,1743,3.952,1744,3.952]],["title/components/MultipleComponent.html",[206,0.104,268,0.766]],["body/components/MultipleComponent.html",[1,1.285,3,0.114,4,0.114,5,0.1,7,0.058,8,0.674,10,2.367,13,1.376,14,1.056,15,0.29,16,0.016,17,0.615,18,0.692,19,0.343,22,0.114,24,0.487,28,1.177,31,0.382,33,0.248,52,1.078,53,0.772,54,1.674,59,1.641,83,0.009,84,0.009,92,0.444,93,1.15,101,0.491,102,0.678,106,2.243,108,0.709,109,0.67,111,0.641,115,1.274,121,0.985,124,0.254,125,0.845,126,0.634,129,0.271,130,0.845,132,0.995,135,0.756,138,1.033,174,0.845,186,0.608,203,1.273,206,0.146,207,0.634,208,0.957,209,0.689,210,0.689,211,0.689,212,0.689,214,0.689,215,1.715,216,1.645,217,0.997,218,0.997,219,1.172,220,1.839,221,0.997,223,0.997,229,0.557,230,0.995,231,0.689,232,0.997,233,1.172,234,0.689,235,0.689,236,0.689,237,0.634,238,0.689,239,0.634,240,0.689,241,0.689,242,0.634,243,0.608,244,1.59,245,0.634,246,0.689,247,0.689,248,0.634,249,0.689,250,0.634,251,0.689,252,0.634,253,0.689,254,0.661,255,0.634,256,0.634,257,0.689,258,0.634,259,0.689,260,0.608,261,0.689,262,0.634,263,0.689,264,0.634,265,0.689,266,0.634,267,0.689,268,1.182,269,0.689,270,0.634,271,0.634,272,0.689,273,0.634,274,0.689,275,0.634,276,0.689,277,0.634,278,0.661,279,0.634,280,0.689,281,0.634,282,0.689,283,0.634,284,0.689,285,0.634,286,0.661,287,0.634,288,0.634,289,0.689,290,0.634,291,0.634,292,0.689,293,0.689,294,0.689,319,1.709,485,1.78,488,2.662,516,2.002,524,4.623,528,1.855,531,3.589,532,1.44,533,1.763,571,1.78,575,2.509,589,2.375,590,2.142,592,2.1,598,2.479,603,2.479,605,4.229,606,2.268,610,2.479,717,2.399,741,2.662,748,3.998,767,1.959,768,3.283,1745,2.762,1746,4.619,1747,5.428,1748,4.619,1749,3.998,1750,4.619,1751,5.95,1752,4.619,1753,3.998,1754,4.619,1755,4.619,1756,3.191,1757,3.191,1758,3.191,1759,3.998,1760,3.191,1761,4.698,1762,4.619,1763,3.191,1764,3.191,1765,4.825,1766,3.191,1767,4.619,1768,3.191,1769,3.998,1770,3.191,1771,3.191,1772,4.619,1773,3.191,1774,4.619,1775,3.191,1776,4.698,1777,3.191,1778,4.619,1779,3.191,1780,3.191,1781,2.762,1782,3.191,1783,4.698,1784,2.762,1785,2.762,1786,3.191,1787,3.998,1788,3.998,1789,2.762,1790,2.762,1791,2.762,1792,2.762,1793,2.762,1794,2.762,1795,3.998,1796,3.998]],["title/components/NumberDataTypeComponent.html",[206,0.104,270,0.766]],["body/components/NumberDataTypeComponent.html",[3,0.127,4,0.127,5,0.111,7,0.065,14,0.693,15,0.282,16,0.016,17,0.647,18,0.632,19,0.339,22,0.127,24,0.542,31,0.425,33,0.223,52,1.143,53,0.833,54,1.733,83,0.01,84,0.01,92,0.479,101,0.321,102,0.647,106,1.958,108,0.536,109,0.507,111,0.565,115,1.373,121,0.493,124,0.283,125,0.939,126,0.705,129,0.302,130,0.775,132,1.044,135,0.597,138,1.042,157,1.464,173,1.553,186,0.675,190,1.867,203,1.407,206,0.155,207,0.705,208,1.032,209,0.766,210,0.766,211,0.766,212,0.766,214,0.766,215,1.729,216,1.659,217,1.075,218,1.075,219,1.243,221,1.075,223,1.075,229,0.62,231,0.766,232,1.075,233,1.243,234,0.766,235,0.766,236,0.766,237,0.705,238,0.766,239,0.705,240,0.766,241,0.766,242,0.705,243,0.675,244,1.621,245,0.705,246,0.766,247,0.766,248,0.705,249,0.766,250,0.705,251,0.766,252,0.705,253,0.766,254,0.735,255,0.705,256,0.705,257,0.766,258,0.705,259,0.766,260,0.675,261,0.766,262,0.705,263,0.766,264,0.705,265,0.766,266,0.705,267,0.766,268,0.705,269,0.766,270,1.24,271,0.705,272,0.766,273,0.705,274,0.766,275,0.705,276,0.766,277,0.705,278,0.735,279,0.705,280,0.766,281,0.705,282,0.766,283,0.705,284,0.766,285,0.705,286,0.735,287,0.705,288,0.705,289,0.766,290,0.705,291,0.705,292,0.766,293,0.766,294,0.766,516,1.308,532,1.553,533,1.87,538,2.746,571,1.867,575,3.103,589,2.959,590,2.67,592,2.334,632,2.201,660,2.583,673,2.31,675,2.201,676,2.201,716,1.568,717,2.544,718,2.544,719,2.201,723,3.045,725,2.561,730,3.07,737,2.871,740,2.561,741,2.632,743,1.824,767,2.178,768,3.54,774,2.871,777,4.486,780,4.486,876,2.43,921,2.044,1083,1.928,1656,2.044,1665,2.334,1691,4.85,1692,2.521,1694,3.07,1695,3.07,1713,2.756,1714,2.756,1720,2.756,1721,2.756,1722,3.87,1723,4.674,1724,3.54,1725,2.756,1726,2.756,1727,2.756,1728,3.54,1729,2.756,1733,2.521,1734,2.521,1735,2.521,1797,6.287,1798,5.644,1799,5.403,1800,2.756,1801,2.521,1802,3.547,1803,3.07]],["title/injectables/OfflineManagerService.html",[85,0.562,1804,2.742]],["body/injectables/OfflineManagerService.html",[0,1.143,3,0.154,4,0.154,5,0.135,7,0.079,10,1.849,15,0.256,16,0.016,17,0.391,18,0.695,19,0.407,22,0.154,32,1.738,33,0.227,38,2.219,39,2.777,83,0.011,84,0.011,85,0.83,87,1.402,92,0.547,93,1.263,96,2.555,101,0.515,102,0.613,108,0.686,109,0.649,111,0.577,124,0.344,127,1.402,128,1.345,129,0.367,130,0.647,135,0.866,152,3.596,155,5.262,157,1.619,166,3.825,173,1.774,177,2.002,179,2.487,180,2.219,203,1.307,229,0.754,320,1.907,357,3.353,376,2.839,480,3.353,502,1.663,660,2.099,814,4.526,858,4.046,859,3.745,860,3.745,862,4.046,870,4.046,883,3.067,1022,3.067,1023,4.046,1124,3.735,1453,4.046,1473,3.067,1481,3.067,1498,3.067,1499,3.353,1500,3.067,1630,4.046,1804,4.046,1805,5.469,1806,5.469,1807,3.353,1808,5.861,1809,5.513,1810,5.692,1811,4.315,1812,4.315,1813,4.315,1814,5.318,1815,4.315,1816,5.513,1817,4.926,1818,4.315,1819,3.353,1820,4.926,1821,3.735,1822,3.735,1823,6.093,1824,3.735,1825,3.735,1826,3.735,1827,3.735,1828,3.353,1829,3.735,1830,4.926,1831,3.735,1832,3.735,1833,3.735,1834,3.735,1835,3.735,1836,4.926,1837,4.926,1838,3.735,1839,3.735,1840,3.735,1841,3.735,1842,3.735,1843,4.422,1844,3.735,1845,3.735,1846,4.926,1847,3.735,1848,3.353,1849,3.735,1850,3.735,1851,3.735,1852,3.735,1853,3.735,1854,3.735]],["title/components/OpenComponent.html",[206,0.104,271,0.766]],["body/components/OpenComponent.html",[3,0.134,4,0.134,5,0.117,7,0.069,14,0.719,15,0.238,16,0.016,17,0.468,18,0.497,19,0.425,22,0.134,24,0.572,31,0.449,33,0.185,52,1.177,53,1.068,54,1.763,83,0.01,84,0.01,92,0.497,101,0.536,102,0.628,106,1.992,111,0.468,115,1.426,121,0.521,124,0.298,125,0.992,126,0.744,129,0.319,132,1.068,135,0.449,138,1.056,186,0.985,203,1.408,206,0.159,207,0.744,208,1.071,209,0.809,210,0.809,211,0.809,212,0.809,214,0.809,215,1.736,216,1.665,217,1.117,218,1.117,219,1.279,220,2.007,221,1.117,223,1.117,229,0.654,230,1.167,231,0.809,232,1.117,233,1.117,234,0.809,235,0.809,236,0.809,237,1.269,238,0.809,239,0.744,240,0.809,241,0.809,242,1.269,243,0.985,244,1.637,245,0.744,246,0.809,247,0.809,248,0.744,249,0.809,250,0.744,251,0.809,252,1.269,253,1.117,254,1.227,255,1.269,256,0.744,257,0.809,258,0.744,259,0.809,260,0.713,261,0.809,262,0.744,263,0.809,264,1.269,265,1.117,266,1.269,267,1.117,268,0.744,269,0.809,270,1.269,271,1.269,272,0.809,273,1.269,274,1.117,275,1.269,276,1.117,277,1.269,278,1.071,279,0.744,280,0.809,281,0.744,282,0.809,283,0.744,284,0.809,285,1.269,286,1.227,287,1.269,288,0.744,289,0.809,290,0.744,291,0.744,292,0.809,293,0.809,294,0.809,485,1.993,516,2.186,528,1.992,532,1.612,533,1.925,534,4.019,571,1.912,579,1.579,643,2.035,653,2.662,715,2.91,1265,2.91,1327,2.91,1686,2.91,1737,2.91,1798,2.91,1855,3.242,1856,5.925,1857,5.173,1858,5.531,1859,5.173,1860,3.745,1861,3.745,1862,3.745,1863,3.745,1864,2.91,1865,2.91,1866,6.506,1867,3.677,1868,2.91,1869,2.91,1870,3.745]],["title/components/PercentageDataTypeComponent.html",[206,0.104,273,0.766]],["body/components/PercentageDataTypeComponent.html",[3,0.128,4,0.128,5,0.112,7,0.065,14,0.697,15,0.282,16,0.016,17,0.324,18,0.634,19,0.341,22,0.128,24,0.546,31,0.429,33,0.224,52,1.149,53,0.838,54,1.738,83,0.01,84,0.01,92,0.482,101,0.324,102,0.648,106,1.963,108,0.54,109,0.51,111,0.567,115,1.382,121,0.498,124,0.285,125,0.947,126,0.711,129,0.304,130,0.75,132,1.047,135,0.6,138,1.044,157,1.47,186,0.681,190,1.874,203,1.408,206,0.155,207,0.711,208,1.038,209,0.772,210,0.772,211,0.772,212,0.772,214,0.772,215,1.73,216,1.66,217,1.082,218,1.082,219,1.248,221,1.082,223,1.082,229,0.625,231,0.772,232,1.082,233,1.248,234,0.772,235,0.772,236,0.772,237,0.711,238,0.772,239,0.711,240,0.772,241,0.772,242,0.711,243,0.681,244,1.624,245,0.711,246,0.772,247,0.772,248,0.711,249,0.772,250,0.711,251,0.772,252,0.711,253,0.772,254,0.741,255,0.711,256,0.711,257,0.772,258,0.711,259,0.772,260,0.681,261,0.772,262,0.711,263,0.772,264,0.711,265,0.772,266,0.711,267,0.772,268,0.711,269,0.772,270,0.711,271,0.711,272,0.772,273,1.245,274,1.546,275,0.711,276,0.772,277,0.711,278,0.741,279,0.711,280,0.772,281,0.711,282,0.772,283,0.711,284,0.772,285,0.711,286,0.741,287,0.711,288,0.711,289,0.772,290,0.711,291,0.711,292,0.772,293,0.772,294,0.772,516,1.319,532,1.562,533,1.878,538,2.754,571,1.874,575,2.959,589,2.576,590,2.324,632,2.214,660,2.589,673,2.324,675,2.214,676,2.214,716,1.581,717,2.555,718,2.555,719,2.214,723,3.056,725,2.576,728,2.888,729,2.197,740,2.576,741,2.642,743,1.839,752,2.197,767,2.197,768,3.561,774,2.888,777,4.498,780,4.498,876,2.444,921,2.062,1083,1.944,1656,2.062,1665,2.354,1691,4.868,1692,2.543,1713,2.779,1714,2.779,1720,2.779,1721,2.779,1722,3.893,1723,4.688,1724,3.561,1725,2.779,1726,2.779,1727,2.779,1728,3.561,1729,2.779,1733,2.543,1734,2.543,1735,2.543,1799,5.423,1800,2.779,1803,3.096,1868,5.654,1871,6.299,1872,3.577,1873,3.577,1874,3.577,1875,3.577]],["title/components/PhoneDataTypeComponent.html",[206,0.104,275,0.766]],["body/components/PhoneDataTypeComponent.html",[3,0.124,4,0.124,5,0.108,7,0.063,8,0.715,11,3.561,13,0.632,14,0.859,15,0.301,16,0.016,17,0.63,18,0.471,19,0.368,22,0.124,24,0.529,31,0.415,33,0.242,52,1.129,53,0.819,54,1.72,83,0.01,84,0.01,92,0.471,93,0.856,101,0.314,102,0.683,106,2.075,108,0.665,109,0.629,111,0.613,115,1.351,121,0.859,124,0.276,125,0.918,126,0.688,129,0.295,130,0.557,132,1.033,135,0.415,138,1.036,157,1.445,174,0.918,177,1.608,186,0.66,199,2.128,203,1.417,206,0.153,207,0.688,208,1.015,209,0.748,210,0.748,211,0.748,212,0.748,214,0.748,215,1.726,216,1.656,217,1.058,218,1.058,219,1.227,220,1.925,221,1.058,223,1.058,229,0.605,230,1.08,231,0.748,232,1.058,233,1.058,234,0.748,235,0.748,236,0.748,237,0.688,238,0.748,239,0.688,240,0.748,241,0.748,242,0.688,243,0.66,244,1.615,245,0.688,246,0.748,247,0.748,248,0.688,249,0.748,250,0.688,251,0.748,252,0.688,253,0.748,254,0.718,255,0.688,256,0.688,257,0.748,258,0.688,259,0.748,260,0.66,261,0.748,262,0.688,263,0.748,264,0.688,265,0.748,266,0.688,267,0.748,268,0.688,269,0.748,270,0.688,271,0.688,272,0.748,273,0.688,274,0.748,275,1.227,276,1.534,277,0.688,278,0.718,279,0.688,280,0.748,281,0.688,282,0.748,283,0.688,284,0.748,285,0.688,286,0.718,287,0.688,288,0.688,289,0.748,290,0.688,291,0.688,292,0.748,293,0.748,294,0.748,319,1.407,485,1.888,502,1.335,516,2.096,528,1.926,532,1.527,533,1.846,538,2.726,571,1.848,575,2.605,589,1.782,590,1.608,592,2.28,606,2.463,690,2.463,691,3.807,692,3,716,1.532,718,2.512,719,2.165,723,2.39,725,2.519,727,1.998,728,1.998,736,2.463,737,1.998,740,2.519,741,1.461,743,1.782,867,3,1240,4.241,1278,2.463,1656,1.998,1692,2.463,1765,4.391,1801,2.463,1869,5.899,1876,6.572,1877,5.684,1878,6.178,1879,5.684,1880,5.684,1881,4.9,1882,5.684,1883,4.241,1884,3.466,1885,3.466,1886,3.466,1887,4.9,1888,3,1889,3.466,1890,3.466,1891,5.684,1892,3.466,1893,3.466,1894,3.466,1895,3.466,1896,3.466,1897,3.466,1898,3.466,1899,4.9,1900,3.466]],["title/components/PhotoDataTypeComponent.html",[206,0.104,277,0.766]],["body/components/PhotoDataTypeComponent.html",[3,0.11,4,0.11,5,0.096,7,0.056,8,0.657,12,1.43,14,0.627,15,0.283,16,0.016,17,0.279,18,0.721,19,0.374,22,0.11,24,0.471,30,2.448,31,0.54,33,0.222,52,1.057,53,0.753,54,1.654,83,0.009,84,0.009,92,0.433,93,1.333,101,0.408,102,0.662,106,1.868,108,0.573,109,0.542,111,0.608,115,1.242,124,0.246,125,0.817,126,0.613,129,0.262,130,0.858,132,0.979,135,0.638,138,1.004,157,1.86,173,1.825,180,1.586,186,0.587,190,1.593,199,1.894,203,1.406,206,0.143,207,0.613,208,0.933,209,0.666,210,0.666,211,0.666,212,0.666,214,0.666,215,1.71,216,1.641,217,0.973,218,0.973,219,1.149,221,0.973,223,0.973,229,0.539,231,0.666,232,0.973,233,0.973,234,0.666,235,0.666,236,0.666,237,0.613,238,0.666,239,0.613,240,0.666,241,0.666,242,0.613,243,0.587,244,1.58,245,0.613,246,0.666,247,0.666,248,0.613,249,0.666,250,0.613,251,0.666,252,0.613,253,0.666,254,0.639,255,0.613,256,0.613,257,0.666,258,0.613,259,0.666,260,0.587,261,0.666,262,0.613,263,0.666,264,0.613,265,0.666,266,0.613,267,0.666,268,0.613,269,0.666,270,0.613,271,0.613,272,0.666,273,0.613,274,0.666,275,0.613,276,0.666,277,1.163,278,1.564,279,0.613,280,0.666,281,0.613,282,0.666,283,0.613,284,0.666,285,0.613,286,0.639,287,0.613,288,0.613,289,0.666,290,0.613,291,0.613,292,0.666,293,0.666,294,0.666,343,1.894,485,1.736,516,1.963,528,1.825,532,1.404,533,1.729,539,2.588,571,1.752,575,2.743,579,1.9,580,1.188,581,1.363,590,2.09,620,2.597,622,3.202,623,1.777,624,2.396,625,1.894,627,3.202,660,1.963,687,2.192,698,2.597,699,2.029,709,1.676,716,1.363,718,2.352,719,1.991,736,2.192,765,3.899,814,4.125,817,1.991,839,2.396,858,2.192,859,2.029,860,2.029,870,2.192,877,2.029,904,2.029,905,3.503,1097,2.669,1098,4.607,1101,2.669,1104,2.669,1245,2.396,1278,2.192,1279,2.669,1284,2.669,1323,2.192,1343,3.899,1378,2.396,1395,2.396,1622,2.396,1707,2.669,1800,2.396,1801,2.192,1865,5.739,1883,3.899,1901,6.393,1902,4.607,1903,5.855,1904,5.068,1905,5.855,1906,4.505,1907,3.899,1908,5.068,1909,3.084,1910,4.623,1911,3.084,1912,3.084,1913,4.505,1914,4.505,1915,3.084,1916,3.084,1917,2.396,1918,3.084,1919,2.669,1920,4.505,1921,3.084,1922,3.084,1923,3.084,1924,3.084,1925,5.39,1926,3.084,1927,3.899,1928,4.607,1929,3.084,1930,3.084,1931,3.084,1932,3.084,1933,3.084,1934,3.084,1935,3.084,1936,3.084,1937,3.084,1938,4.505,1939,3.084,1940,3.084,1941,3.084,1942,3.084,1943,3.084,1944,2.669,1945,3.084,1946,3.084,1947,3.084,1948,3.084,1949,3.084]],["title/injectables/PhotoService.html",[85,0.562,1910,2.742]],["body/injectables/PhotoService.html",[3,0.165,4,0.213,5,0.217,7,0.085,15,0.28,16,0.016,18,0.765,19,0.4,22,0.165,24,0.707,33,0.248,83,0.012,84,0.012,85,0.869,87,1.503,88,4.524,92,0.573,96,2.768,101,0.419,102,0.652,108,0.749,109,0.709,111,0.63,124,0.369,126,0.919,127,1.503,128,1.442,129,0.394,130,0.791,135,0.833,138,0.675,157,1.991,173,2.367,182,3.595,183,3.289,189,3.045,190,2.081,278,1.234,362,2.778,743,2.379,1125,4.524,1154,3.595,1201,4.234,1214,4.005,1346,4.005,1362,4.005,1365,5.156,1368,3.595,1387,4.005,1907,5.702,1908,6.021,1910,4.234,1917,3.595,1925,5.156,1950,4.005,1951,6.588,1952,5.957,1953,4.627,1954,4.627,1955,4.627,1956,6.956,1957,4.627,1958,6.588,1959,5.957,1960,4.627,1961,4.627,1962,4.627,1963,6.956,1964,4.627,1965,4.627,1966,4.627,1967,4.627,1968,4.627,1969,5.957,1970,4.627,1971,5.957,1972,4.627,1973,4.627,1974,4.627,1975,4.627,1976,4.627,1977,4.627,1978,4.627,1979,4.627,1980,4.627,1981,4.627]],["title/interfaces/Producer.html",[0,1.021,301,2.096]],["body/interfaces/Producer.html",[0,1.526,2,1.943,3,0.157,4,0.157,5,0.137,7,0.08,8,0.84,10,2.44,12,2.039,14,1.11,15,0.32,16,0.016,17,0.711,18,0.784,20,1.621,22,0.264,23,2.144,27,3.455,29,3.612,33,0.206,83,0.011,84,0.011,130,0.5,295,2.389,296,3.125,297,4.477,298,5.563,299,4.987,300,3.125,301,3.131,302,4.782,303,6.129,304,6.129,305,6.129,306,6.129,307,6.129,308,6.129,309,6.129,310,6.129,311,5.034,312,5.646,313,6.129,314,5.502,315,4.987,316,3.805,317,3.805,318,3.416,319,2.087,320,1.943,321,3.125,322,3.805,323,3.805,324,3.805,325,3.805,326,3.805,327,3.805,328,3.805,329,3.416,330,3.416,331,3.805,332,3.805,333,3.805,334,3.805,335,3.805,336,3.805,337,3.805,338,3.805,339,3.805,340,3.805,341,3.805,342,2.699,343,2.699,344,3.805,345,3.805,346,3.125,347,3.805]],["title/injectables/ProducerService.html",[85,0.562,537,2.368]],["body/injectables/ProducerService.html",[3,0.161,4,0.161,5,0.141,7,0.082,8,0.854,13,1.068,14,0.904,15,0.277,16,0.016,19,0.415,20,1.661,22,0.161,33,0.232,46,3.54,83,0.012,84,0.012,85,0.854,87,1.463,92,0.563,93,1.355,96,2.585,101,0.53,102,0.674,108,0.7,109,0.662,111,0.646,121,0.958,124,0.359,127,1.463,128,1.404,129,0.383,130,0.783,135,0.876,152,3.568,165,2.765,166,3.534,173,1.825,174,1.55,177,2.089,179,3.374,180,2.316,301,2.447,319,1.681,321,3.201,356,3.201,357,3.455,369,5.629,370,3.201,371,2.447,372,2.963,373,3.201,374,2.963,375,3.201,376,2.963,377,3.499,379,3.201,383,3.499,384,3.499,387,3.201,390,3.499,391,3.499,537,3.594,599,5.93,1500,3.201,1982,3.898,1983,6.885,1984,6.885,1985,5.853,1986,6.503,1987,6.885,1988,5.853,1989,4.504,1990,4.504,1991,5.853,1992,4.504,1993,4.504,1994,4.504,1995,4.504,1996,3.499,1997,5.853,1998,4.504,1999,4.504,2000,4.504,2001,4.504,2002,4.504,2003,3.898,2004,4.504,2005,4.504,2006,4.504,2007,4.504,2008,5.066]],["title/interfaces/Question.html",[0,1.021,52,0.766]],["body/interfaces/Question.html",[0,1.877,1,1.622,2,1.78,3,0.144,4,0.144,5,0.126,6,2.071,7,0.074,8,0.793,9,2.321,10,2.492,11,4.176,12,2.854,13,0.992,14,0.957,15,0.325,16,0.016,17,0.739,18,0.784,19,0.219,20,2.005,21,2.473,22,0.278,23,1.965,24,0.615,25,2.473,26,2.189,27,1.965,28,1.485,29,1.965,30,2.189,31,0.483,32,1.622,33,0.22,34,2.473,35,2.473,36,2.473,37,2.473,38,2.071,39,1.965,40,2.321,41,3.338,42,3.338,43,2.795,44,4.195,45,2.795,46,1.868,47,2.189,48,2.473,49,3.58,50,2.473,51,2.473,52,1.08,53,1.15,54,1.749,55,4.224,56,4.045,57,4.045,58,4.224,59,3.537,60,4.045,61,3.839,62,4.045,63,3.797,64,4.045,65,3.738,66,3.537,67,2.321,68,2.473,69,2.473,70,2.321,71,2.473,72,2.473,73,2.473,74,3.133,75,2.321,76,3.778,77,2.071,78,3.344,79,2.321,80,3.133,81,2.071,82,2.473,83,0.011,84,0.011,109,0.671]],["title/interfaces/QuestionCategory.html",[0,1.021,61,1.983]],["body/interfaces/QuestionCategory.html",[0,1.936,1,1.81,2,1.986,3,0.16,4,0.16,5,0.14,6,2.311,7,0.082,8,0.852,9,2.59,10,2.534,11,3.965,12,3.013,13,1.066,14,0.904,15,0.316,16,0.016,17,0.739,18,0.784,19,0.244,20,2.156,21,2.76,22,0.282,23,2.192,24,0.686,25,2.76,26,2.442,27,2.192,28,1.658,29,2.192,30,2.442,31,0.538,32,1.81,33,0.261,34,2.76,35,2.76,36,2.76,37,2.76,38,2.311,39,2.192,40,2.59,41,3.589,42,3.589,43,3.005,44,4.045,45,3.005,46,2.085,47,2.442,48,2.76,49,3.739,50,2.76,51,2.76,52,0.893,53,0.977,54,1.486,55,3.589,56,2.76,57,2.76,58,3.589,59,3.005,60,2.76,61,3.667,62,2.76,63,2.59,64,2.76,65,3.177,66,3.005,67,2.59,68,2.76,69,2.76,70,2.59,71,2.76,72,2.76,73,2.76,74,3.369,75,2.59,76,3.989,77,2.311,78,3.53,79,2.59,80,3.369,81,2.311,82,2.76,83,0.012,84,0.012]],["title/components/QuestionComponent.html",[206,0.104,279,0.766]],["body/components/QuestionComponent.html",[1,0.875,3,0.078,4,0.078,5,0.068,7,0.078,8,0.503,13,1.034,14,1.011,15,0.28,16,0.016,17,0.197,18,0.649,19,0.373,22,0.078,24,0.332,31,0.26,33,0.22,47,1.873,52,1.342,53,0.816,83,0.007,84,0.007,92,0.331,93,1.344,101,0.312,102,0.684,106,2.229,108,0.61,109,0.577,111,0.662,115,2.017,121,0.905,124,0.173,125,0.575,126,0.431,129,0.185,130,0.814,132,0.89,135,0.795,138,0.776,157,1.614,174,1.135,177,1.007,186,0.413,190,1.777,203,1.16,206,0.115,207,0.431,208,0.714,209,0.469,210,0.469,211,0.469,212,0.469,214,0.469,215,1.653,216,1.586,217,0.744,218,0.744,219,0.925,220,1.452,221,0.744,223,0.744,229,0.602,230,0.677,231,0.469,232,0.744,233,0.744,234,0.469,235,0.469,236,0.469,237,0.431,238,0.469,239,0.97,240,0.469,241,0.469,242,0.431,243,0.413,244,1.458,245,0.431,246,0.469,247,0.469,248,0.431,249,0.469,250,0.431,251,0.469,252,0.431,253,0.469,254,0.45,255,0.431,256,0.431,257,0.469,258,0.431,259,0.469,260,0.413,261,0.469,262,0.431,263,0.469,264,0.431,265,0.469,266,0.431,267,0.469,268,0.431,269,0.469,270,0.431,271,0.431,272,0.469,273,0.431,274,0.469,275,0.431,276,0.469,277,0.431,278,0.45,279,0.97,280,0.469,281,0.431,282,0.469,283,0.97,284,0.469,285,0.431,286,0.45,287,0.431,288,0.431,289,0.469,290,0.97,291,0.431,292,0.469,293,0.469,294,0.469,319,1.402,320,0.959,342,2.116,343,1.333,431,1.987,488,1.251,528,1.521,533,1.393,538,2.393,539,2.289,558,3.047,579,1.453,580,0.837,581,0.959,605,2.45,620,1.059,623,1.987,630,2.45,632,1.894,637,4.225,639,3.469,640,3.469,643,3.228,644,4.222,653,1.543,658,1.879,659,1.879,660,2.273,661,2.983,662,2.983,663,2.983,664,1.879,665,1.879,666,2.45,667,3.792,668,1.879,669,2.45,670,3.71,671,4.225,672,2.678,673,1.007,674,1.873,675,1.523,676,1.894,677,1.429,678,1.543,679,2.678,680,1.879,681,1.879,682,1.879,683,1.429,684,2.329,685,1.687,686,1.687,709,1.18,710,1.251,711,1.251,717,1.894,746,1.429,805,3.792,806,4.225,817,1.523,835,1.879,839,1.687,840,1.879,876,1.681,910,2.45,911,2.45,917,2.983,937,2.983,956,1.687,980,3.079,1043,1.687,1045,2.678,1059,2.678,1224,3.909,1232,1.543,1252,2.45,1254,1.687,1491,2.678,1509,3.33,1530,3.33,1589,1.687,1646,4.615,1657,1.687,1658,1.687,1659,1.879,1660,1.687,1677,1.687,1902,3.71,1919,1.879,2009,1.879,2010,4.286,2011,3.447,2012,4.286,2013,4.286,2014,3.71,2015,3.792,2016,4.225,2017,4.881,2018,4.881,2019,4.881,2020,4.881,2021,5.495,2022,4.881,2023,2.983,2024,5.141,2025,4.286,2026,4.286,2027,4.286,2028,4.286,2029,2.171,2030,4.286,2031,4.881,2032,3.447,2033,2.171,2034,2.171,2035,2.171,2036,2.171,2037,2.171,2038,2.171,2039,2.171,2040,2.171,2041,2.171,2042,2.171,2043,2.171,2044,2.171,2045,2.171,2046,2.171,2047,3.447,2048,2.171,2049,4.286,2050,2.171,2051,2.171,2052,2.171,2053,2.171,2054,2.171,2055,2.171,2056,2.171,2057,2.171,2058,2.171,2059,2.171,2060,4.286,2061,2.171,2062,2.171,2063,2.171,2064,2.171,2065,2.171,2066,2.171,2067,3.33,2068,5.495,2069,2.171,2070,5.94,2071,4.286,2072,3.447,2073,2.171,2074,2.171,2075,2.171,2076,4.286,2077,2.171,2078,2.171,2079,2.171,2080,4.286,2081,4.286,2082,4.286,2083,3.447,2084,2.171,2085,2.171,2086,2.171,2087,2.171,2088,2.171,2089,2.171,2090,3.71,2091,2.171,2092,2.171,2093,2.171,2094,2.171,2095,2.171,2096,2.171,2097,2.171,2098,2.171,2099,2.171,2100,1.879,2101,2.171,2102,4.881,2103,2.171,2104,2.171,2105,2.171,2106,3.447,2107,3.447,2108,2.171,2109,2.171,2110,3.447,2111,3.447,2112,3.447,2113,2.171,2114,2.171,2115,2.171,2116,2.171,2117,2.171,2118,2.171,2119,2.171,2120,2.171,2121,2.171,2122,2.171,2123,2.171,2124,1.879,2125,2.171,2126,2.171,2127,1.879,2128,2.171,2129,3.447,2130,2.171,2131,3.447,2132,4.286,2133,2.171,2134,2.171,2135,2.171,2136,2.171,2137,2.171,2138,2.983,2139,2.171,2140,1.879,2141,2.171,2142,2.983,2143,2.171,2144,2.171,2145,1.879,2146,2.983,2147,2.983,2148,1.879,2149,3.447,2150,2.171,2151,2.171,2152,2.983,2153,3.447,2154,2.171,2155,2.171,2156,2.171,2157,2.171,2158,2.171,2159,2.171,2160,1.879,2161,1.879,2162,2.171,2163,2.171,2164,2.171,2165,2.171,2166,2.983,2167,3.447,2168,2.171,2169,2.171,2170,2.171,2171,2.171,2172,2.171,2173,2.171,2174,2.171,2175,2.171,2176,2.171]],["title/injectables/QuestionControlService.html",[85,0.562,2177,2.538]],["body/injectables/QuestionControlService.html",[3,0.116,4,0.116,5,0.101,7,0.059,9,2.696,13,0.592,14,1.028,15,0.266,16,0.016,18,0.611,19,0.298,22,0.116,24,0.496,28,1.198,33,0.236,43,1.67,44,2.542,52,1.387,54,1.97,83,0.009,84,0.009,85,0.682,87,1.055,88,4.49,92,0.45,93,1.37,96,1.937,101,0.496,102,0.654,106,2.288,108,0.713,109,0.674,111,0.644,115,2.12,124,0.259,125,0.86,126,0.645,127,1.055,128,1.012,129,0.276,130,0.84,135,0.925,138,0.875,174,0.86,192,3.455,319,0.933,320,1.435,488,4.214,502,2.741,574,1.994,575,3.116,1043,2.523,1045,3.634,1059,3.634,1491,2.523,1509,4.259,1652,4.745,1656,1.872,1776,5.192,1848,2.523,1904,4.745,2067,5.913,2127,2.811,2140,2.811,2142,4.048,2145,2.811,2146,4.048,2147,4.048,2148,2.811,2152,2.811,2160,2.811,2161,2.811,2177,3.078,2178,5.681,2179,2.811,2180,5.482,2181,6.357,2182,4.677,2183,5.482,2184,4.677,2185,6.357,2186,6.357,2187,4.677,2188,3.247,2189,3.247,2190,3.247,2191,3.247,2192,6.824,2193,4.677,2194,3.247,2195,3.247,2196,3.247,2197,4.677,2198,3.247,2199,3.247,2200,3.247,2201,3.247,2202,3.247,2203,4.677,2204,3.247,2205,5.998,2206,6.824,2207,3.247,2208,3.247,2209,3.247,2210,3.247,2211,3.247,2212,4.677,2213,3.247,2214,3.247,2215,3.247,2216,3.247,2217,3.247,2218,3.247,2219,3.247,2220,4.677,2221,3.247,2222,3.247,2223,3.247,2224,3.247,2225,3.247,2226,3.247,2227,3.247,2228,3.247,2229,3.247,2230,3.247,2231,3.247,2232,3.247,2233,5.998,2234,3.247,2235,3.247,2236,3.247,2237,3.247,2238,4.677,2239,3.247,2240,3.247,2241,3.247,2242,3.247,2243,3.247,2244,3.247,2245,3.247,2246,3.247,2247,3.247]],["title/injectables/QuestionService.html",[85,0.562,643,2.096]],["body/injectables/QuestionService.html",[1,1.257,3,0.111,4,0.111,5,0.097,7,0.057,8,0.663,10,1.014,13,0.569,14,0.632,15,0.298,16,0.016,17,0.681,18,0.3,19,0.366,22,0.111,24,0.477,28,2.172,33,0.256,43,2.336,52,1.422,83,0.009,84,0.009,85,0.663,86,4.436,87,1.014,88,4.752,90,2.218,92,0.437,93,1.365,99,4.164,100,4.164,101,0.411,102,0.698,106,2.288,108,0.771,109,0.729,111,0.685,115,2.234,119,2.424,121,0.908,122,2.424,124,0.249,125,0.826,126,0.62,127,1.014,128,0.973,129,0.265,130,0.742,132,0.522,135,0.92,157,1.363,173,1.416,174,0.826,190,0.933,320,2.008,408,3.664,427,2.053,428,1.696,472,2.218,478,2.424,488,4.36,533,1.476,635,4.639,638,5.096,643,2.469,654,3.933,972,3.933,1479,5.238,1514,2.701,1606,2.701,2014,2.701,2021,4.639,2024,4.639,2124,3.933,2177,4.297,2248,2.701,2249,6.257,2250,5.359,2251,4.544,2252,5.887,2253,5.887,2254,5.096,2255,5.887,2256,5.359,2257,5.887,2258,5.887,2259,5.359,2260,5.359,2261,5.359,2262,4.544,2263,3.12,2264,4.544,2265,3.12,2266,3.12,2267,4.544,2268,3.12,2269,3.12,2270,3.12,2271,3.12,2272,3.12,2273,3.12,2274,3.12,2275,3.12,2276,3.12,2277,3.12,2278,3.12,2279,3.12,2280,3.12,2281,3.12,2282,4.544,2283,3.12,2284,3.12,2285,3.12,2286,4.544,2287,3.12,2288,3.12,2289,3.12,2290,3.12,2291,2.701,2292,3.12,2293,2.701,2294,3.12,2295,4.544,2296,4.544,2297,5.359,2298,3.12,2299,3.12,2300,4.544,2301,3.12,2302,4.544,2303,3.12,2304,3.12,2305,4.544,2306,3.12,2307,3.12,2308,4.544,2309,4.544,2310,3.12,2311,3.933,2312,3.12,2313,3.12,2314,3.12,2315,3.12,2316,3.12,2317,4.544,2318,3.12,2319,3.12,2320,4.544,2321,3.12,2322,3.12,2323,3.12,2324,3.12,2325,3.12,2326,4.544,2327,3.12,2328,3.531,2329,3.12,2330,4.544,2331,3.12,2332,2.701,2333,2.701]],["title/injectables/SecureInnerPagesGuard.html",[85,0.562,2334,2.997]],["body/injectables/SecureInnerPagesGuard.html",[3,0.2,4,0.2,5,0.175,7,0.103,14,0.78,15,0.226,16,0.016,19,0.391,22,0.2,33,0.2,83,0.013,84,0.013,85,0.979,87,1.823,92,0.645,93,0.98,101,0.508,102,0.608,108,0.604,109,0.571,111,0.508,124,0.447,127,1.823,128,1.749,129,0.477,130,0.638,135,0.672,138,0.818,408,4.199,409,4.797,410,6.445,411,4.856,416,3.233,417,3.988,419,5.811,420,4.856,509,4.856,743,2.884,1595,4.856,2334,5.216,2335,6.219,2336,6.688,2337,6.219,2338,4.856,2339,5.61,2340,5.61]],["title/injectables/StorageService.html",[85,0.562,357,1.789]],["body/injectables/StorageService.html",[3,0.165,4,0.165,5,0.144,7,0.12,8,0.867,13,1.343,15,0.289,16,0.016,18,0.737,19,0.358,22,0.165,33,0.248,83,0.012,84,0.012,85,0.867,87,1.5,92,0.572,93,1.286,101,0.418,102,0.7,108,0.749,109,0.708,111,0.687,121,0.642,124,0.368,127,1.5,128,1.439,129,0.393,130,0.525,135,0.862,157,2.046,174,1.223,190,2.271,192,3.909,357,2.759,414,5.588,488,4.006,743,2.374,897,5.148,1468,5.496,2328,5.4,2341,3.996,2342,6.581,2343,6.95,2344,6.95,2345,6.95,2346,5.948,2347,6.95,2348,4.617,2349,5.948,2350,4.617,2351,5.948,2352,4.617,2353,4.617,2354,4.617,2355,4.617,2356,5.948,2357,4.617,2358,5.948,2359,4.617,2360,4.617,2361,3.996,2362,3.996,2363,5.148,2364,3.996,2365,4.617,2366,4.617,2367,4.617,2368,4.617,2369,4.617,2370,4.617,2371,4.617,2372,4.617,2373,4.617,2374,4.617,2375,4.617,2376,4.617,2377,4.617,2378,4.617]],["title/interfaces/StoredRequest.html",[0,1.021,1814,2.742]],["body/interfaces/StoredRequest.html",[0,1.207,2,2.014,3,0.163,4,0.163,5,0.142,7,0.083,8,0.86,10,2.327,15,0.278,16,0.016,17,0.592,18,0.728,19,0.411,22,0.163,32,1.836,38,2.343,39,2.877,83,0.012,84,0.012,85,0.86,93,1.208,96,2.084,101,0.413,124,0.363,127,1.48,128,1.421,129,0.388,130,0.671,135,0.879,152,3.19,155,5.702,157,1.159,166,3.554,173,1.421,177,2.114,179,2.627,180,2.343,203,1.336,229,0.796,320,2.014,357,3.034,376,2.999,480,3.541,502,1.756,660,2.176,814,4.016,858,4.193,859,3.881,860,3.881,862,4.193,870,4.193,883,3.239,1022,3.239,1023,4.193,1453,4.193,1473,3.239,1481,3.239,1498,3.239,1499,3.541,1500,3.239,1630,4.193,1804,3.239,1805,3.541,1806,3.541,1807,3.541,1808,3.944,1809,3.944,1814,5.309,1816,5.105,1817,3.944,1819,3.541,1820,5.105,1821,3.944,1822,3.944,1823,6.2,1824,3.944,1825,3.944,1826,3.944,1827,3.944,1828,3.541,1829,3.944,1830,5.105,1831,3.944,1832,3.944,1833,3.944,1834,3.944,1835,3.944,1836,5.105,1837,6.2,1838,3.944,1839,3.944,1840,3.944,1841,3.944,1842,3.944,1843,4.583,1844,3.944,1845,3.944,1846,5.105,1847,3.944,1848,3.541,1849,3.944,1850,3.944,1851,3.944,1852,3.944,1853,3.944,1854,3.944]],["title/injectables/SurveyService.html",[85,0.562,981,2.223]],["body/injectables/SurveyService.html",[3,0.086,4,0.086,5,0.144,7,0.069,8,0.547,13,0.944,14,0.779,15,0.27,16,0.016,17,0.507,18,0.645,19,0.365,22,0.086,24,0.369,31,0.29,33,0.212,38,3.376,45,2.662,83,0.007,84,0.007,85,0.547,87,0.785,92,0.36,93,1.378,96,2.668,101,0.339,102,0.677,108,0.639,109,0.604,111,0.677,121,1.023,124,0.193,126,0.48,127,0.785,128,0.753,129,0.206,130,0.816,132,0.404,135,0.741,138,0.352,152,2.892,157,1.808,166,2.038,172,3.245,173,2.191,174,1.371,177,1.121,181,2.665,190,1.676,206,0.139,229,0.422,319,1.077,320,2.734,342,1.484,356,1.718,357,2.869,362,1.581,370,1.718,372,1.59,373,4.397,374,1.59,387,3.266,498,2.092,500,2.092,502,1.445,538,2.492,632,1.068,660,1.383,674,2.813,675,1.068,676,1.068,684,1.313,817,3.322,876,1.179,910,1.718,911,1.718,963,5.108,981,2.161,1063,5.428,1091,1.878,1103,5.213,1108,4.481,1125,3.798,1152,1.878,1153,2.092,1154,1.878,1178,2.092,1187,2.092,1193,2.092,1201,3.266,1203,2.092,1210,3.245,1213,2.092,1252,1.718,1312,2.913,1372,4.481,1377,3.245,1403,5.891,1419,5.807,1440,2.092,1451,3.245,1452,3.245,1453,2.665,1466,4.022,1468,4.215,1470,5.132,1473,1.718,1474,5.132,1479,4.022,1481,4.215,1486,4.481,1498,4.215,1501,4.481,1536,3.245,1586,1.878,1600,3.976,1630,1.718,1646,4.806,1657,4.806,1658,1.878,1660,1.878,1819,1.878,1828,4.022,2023,4.481,2090,2.092,2100,2.092,2328,2.913,2379,2.092,2380,4.594,2381,5.177,2382,3.75,2383,3.75,2384,5.177,2385,5.177,2386,5.177,2387,4.481,2388,5.177,2389,5.177,2390,3.75,2391,5.177,2392,4.594,2393,3.75,2394,5.177,2395,4.594,2396,3.75,2397,2.417,2398,3.75,2399,5.929,2400,3.75,2401,3.245,2402,3.75,2403,2.417,2404,3.75,2405,3.245,2406,3.75,2407,3.75,2408,4.594,2409,3.75,2410,3.75,2411,2.417,2412,5.177,2413,2.417,2414,2.417,2415,2.417,2416,5.177,2417,2.417,2418,2.417,2419,2.417,2420,3.75,2421,2.417,2422,4.594,2423,5.177,2424,3.75,2425,3.75,2426,2.417,2427,3.75,2428,6.186,2429,3.75,2430,2.417,2431,3.75,2432,3.75,2433,2.417,2434,2.417,2435,5.177,2436,2.417,2437,2.417,2438,2.417,2439,2.417,2440,2.417,2441,2.417,2442,2.417,2443,2.417,2444,2.417,2445,2.417,2446,2.417,2447,2.417,2448,2.417,2449,2.417,2450,2.417,2451,2.417,2452,2.417,2453,3.75,2454,5.603,2455,3.75,2456,2.417,2457,2.417,2458,2.417,2459,2.417,2460,2.417,2461,4.594,2462,2.417,2463,2.417,2464,2.417,2465,3.75,2466,2.417,2467,4.594,2468,2.417,2469,2.417,2470,3.245,2471,2.417,2472,2.417,2473,2.417,2474,2.417,2475,2.417,2476,2.417,2477,2.417,2478,2.417,2479,2.417,2480,2.417,2481,2.417,2482,2.417,2483,2.417,2484,3.75,2485,2.417,2486,3.75,2487,2.417,2488,2.417,2489,2.417,2490,2.417,2491,2.417,2492,2.417,2493,2.417,2494,2.417,2495,2.417,2496,2.417,2497,2.417,2498,2.417,2499,2.092,2500,2.417,2501,2.417,2502,2.417,2503,4.594,2504,2.417,2505,2.417,2506,2.417,2507,2.417,2508,2.417,2509,2.417,2510,2.417,2511,2.417,2512,2.417,2513,2.417]],["title/components/SurveysPage.html",[206,0.104,281,0.766]],["body/components/SurveysPage.html",[3,0.123,4,0.123,5,0.108,7,0.063,15,0.197,16,0.016,17,0.312,18,0.593,19,0.386,22,0.123,24,0.527,31,0.414,32,1.39,33,0.22,53,0.817,65,1.876,66,1.775,83,0.01,84,0.01,92,0.47,93,1.181,101,0.442,102,0.643,108,0.526,109,0.498,111,0.629,121,0.789,124,0.275,126,0.686,129,0.294,130,0.768,132,1.031,135,0.78,138,0.827,186,0.657,199,2.119,203,1.293,206,0.152,207,0.686,208,1.012,209,0.745,210,0.745,211,0.745,212,0.745,214,0.745,215,1.726,216,1.655,217,1.055,218,1.055,219,1.224,220,1.921,221,1.055,223,1.055,229,0.603,230,1.076,231,0.745,232,1.055,233,1.055,234,0.745,235,0.745,236,0.745,237,0.686,238,0.745,239,0.686,240,0.745,241,0.745,242,0.686,243,0.657,244,1.614,245,0.686,246,0.745,247,0.745,248,0.686,249,0.745,250,0.686,251,0.745,252,0.686,253,0.745,254,0.715,255,0.686,256,0.97,257,0.745,258,0.686,259,0.745,260,0.657,261,0.745,262,0.686,263,0.745,264,0.686,265,0.745,266,0.686,267,0.745,268,0.686,269,0.745,270,0.686,271,0.686,272,0.745,273,0.686,274,0.745,275,0.686,276,0.745,277,0.686,278,0.715,279,0.686,280,0.745,281,1.225,282,0.745,283,0.686,284,0.745,285,0.686,286,0.715,287,0.686,288,0.686,289,0.745,290,0.686,291,0.686,292,0.745,293,0.745,294,0.745,319,1.403,409,4.266,416,1.989,539,2.677,579,1.455,580,1.33,581,1.525,620,2.383,673,2.861,698,2.816,709,1.876,710,2.816,711,2.816,712,2.453,713,2.453,817,3.374,921,1.989,934,4.383,945,2.271,963,2.271,981,3.895,1063,4.803,1064,2.987,1080,4.229,1221,4.229,1222,5.337,1250,2.682,1262,2.682,1263,2.682,1417,2.453,1438,2.682,1449,2.987,1546,2.987,1547,2.987,1560,2.987,1586,3.796,2387,5.337,2470,4.229,2514,2.987,2515,5.671,2516,4.886,2517,6.757,2518,6.167,2519,6.757,2520,6.167,2521,3.451,2522,3.451,2523,3.451,2524,3.451,2525,3.451,2526,3.451,2527,4.886,2528,3.451,2529,3.451,2530,6.167,2531,4.886,2532,3.451,2533,3.451,2534,3.451,2535,3.451,2536,4.886,2537,3.451,2538,3.451,2539,3.451,2540,4.886,2541,4.886,2542,4.886,2543,4.886,2544,4.886,2545,4.886,2546,4.886,2547,4.886,2548,4.886,2549,4.886,2550,4.886,2551,3.451,2552,3.451,2553,3.451,2554,3.451,2555,3.451]],["title/components/TableComponent.html",[206,0.104,283,0.766]],["body/components/TableComponent.html",[3,0.098,4,0.098,5,0.086,7,0.076,12,1.276,14,0.868,15,0.279,16,0.016,17,0.687,18,0.64,19,0.383,20,1.015,22,0.098,24,0.42,28,2.042,31,0.33,33,0.243,52,1.286,53,0.692,54,1.586,63,1.585,83,0.008,84,0.008,86,4.105,89,2.137,90,1.955,92,0.398,93,1.285,99,3.867,100,3.867,101,0.375,102,0.68,106,2.243,108,0.697,109,0.659,111,0.661,115,2.029,119,2.137,121,0.948,122,2.137,124,0.219,125,0.728,126,0.546,129,0.234,130,0.848,132,0.926,135,0.798,138,0.994,186,0.524,192,1.495,203,1.232,206,0.134,207,0.546,208,0.857,209,0.594,210,0.594,211,0.594,212,0.594,214,0.594,215,1.693,216,1.624,217,0.894,218,0.894,219,1.074,220,1.686,221,0.894,223,0.894,229,0.481,230,0.857,231,0.594,232,0.894,233,0.894,234,0.594,235,0.594,236,0.594,237,0.546,238,0.594,239,0.546,240,0.594,241,0.594,242,0.546,243,0.524,244,1.543,245,0.546,246,0.594,247,0.594,248,0.546,249,0.594,250,0.546,251,0.594,252,0.546,253,0.594,254,0.57,255,0.546,256,0.546,257,0.594,258,0.546,259,0.594,260,0.524,261,0.594,262,0.546,263,0.594,264,0.546,265,0.594,266,0.546,267,0.594,268,0.546,269,0.594,270,0.546,271,0.546,272,0.594,273,0.546,274,0.594,275,0.546,276,0.594,277,0.546,278,0.57,279,0.546,280,0.594,281,0.546,282,0.594,283,1.1,284,0.594,285,0.546,286,0.57,287,0.546,288,0.546,289,0.594,290,1.1,291,0.546,292,0.594,293,0.594,294,0.594,319,0.79,371,1.495,393,2.137,528,1.726,532,1.29,533,1.617,539,2.494,558,1.955,571,1.656,579,2.098,580,1.06,581,1.215,590,2.568,746,1.81,1459,4.792,1523,2.381,1530,3.867,1635,4.307,1781,2.381,1866,2.381,2015,4.847,2067,5.614,2138,5.139,2166,2.381,2177,4.259,2178,2.137,2254,3.582,2291,2.381,2293,2.381,2311,4.792,2332,2.381,2333,2.381,2556,2.381,2557,3.582,2558,4.307,2559,4.976,2560,4.139,2561,5.536,2562,4.139,2563,4.976,2564,5.4,2565,5.4,2566,5.536,2567,5.536,2568,4.139,2569,2.75,2570,4.139,2571,2.75,2572,2.75,2573,2.75,2574,4.139,2575,2.75,2576,2.75,2577,2.75,2578,2.75,2579,2.75,2580,5.937,2581,2.75,2582,6.661,2583,4.139,2584,2.75,2585,2.75,2586,2.75,2587,2.75,2588,2.75,2589,2.75,2590,2.75,2591,4.139,2592,2.75,2593,2.137,2594,2.381,2595,3.216,2596,3.582,2597,2.75,2598,4.139,2599,2.75,2600,2.75,2601,5.536,2602,2.75,2603,2.75,2604,2.75,2605,2.75,2606,2.75,2607,2.75,2608,2.75,2609,4.139,2610,2.75,2611,2.75,2612,2.75,2613,2.75,2614,2.75,2615,2.75,2616,2.75,2617,2.75,2618,2.75,2619,2.75,2620,2.75,2621,2.75,2622,2.75,2623,4.976,2624,4.139,2625,2.75,2626,2.75,2627,4.139,2628,2.75,2629,2.75,2630,4.139,2631,2.75,2632,2.75,2633,2.75,2634,2.75,2635,4.976,2636,2.75,2637,2.75,2638,2.75,2639,2.75,2640,2.75,2641,2.75,2642,2.75,2643,2.75,2644,2.75,2645,2.75,2646,2.75,2647,4.139]],["title/components/TextAreaDataTypeComponent.html",[206,0.104,285,0.766]],["body/components/TextAreaDataTypeComponent.html",[3,0.14,4,0.14,5,0.123,7,0.072,14,0.744,15,0.283,16,0.016,17,0.356,18,0.514,19,0.354,22,0.14,24,0.6,31,0.471,33,0.217,52,1.207,53,1.242,54,1.789,83,0.011,84,0.011,92,0.514,101,0.55,102,0.652,106,2.021,108,0.423,109,0.4,111,0.55,115,1.474,121,0.744,124,0.313,125,1.041,126,0.781,129,0.334,132,1.09,135,0.471,138,1.068,186,0.748,203,1.413,206,0.163,207,0.781,208,1.107,209,0.848,210,0.848,211,0.848,212,0.848,214,0.848,215,1.741,216,1.671,217,1.154,218,1.154,219,1.312,221,1.154,223,1.154,229,0.687,231,0.848,232,1.154,233,1.154,234,0.848,235,0.848,236,0.848,237,0.781,238,0.848,239,0.781,240,0.848,241,0.848,242,0.781,243,0.748,244,1.65,245,0.781,246,0.848,247,0.848,248,0.781,249,0.848,250,0.781,251,0.848,252,0.781,253,0.848,254,0.814,255,0.781,256,0.781,257,0.848,258,0.781,259,0.848,260,0.748,261,0.848,262,0.781,263,0.848,264,0.781,265,0.848,266,0.781,267,0.848,268,0.781,269,0.848,270,0.781,271,0.781,272,0.848,273,0.781,274,0.848,275,0.781,276,0.848,277,0.781,278,0.814,279,0.781,280,0.848,281,0.781,282,0.848,283,0.781,284,0.848,285,1.295,286,1.654,287,0.781,288,0.781,289,0.848,290,0.781,291,0.781,292,0.848,293,0.848,294,0.848,485,2.06,516,2.241,528,2.033,532,1.666,533,1.974,571,1.951,716,1.737,717,2.685,718,2.685,719,2.363,723,3.181,725,2.749,727,3.081,728,2.265,729,2.413,737,2.265,740,2.749,741,1.657,752,2.413,1277,2.586,1282,2.586,1328,3.053,1867,5.208,2648,5.692]],["title/components/TextDataTypeComponent.html",[206,0.104,287,0.766]],["body/components/TextDataTypeComponent.html",[3,0.128,4,0.128,5,0.112,7,0.066,14,0.806,15,0.283,16,0.016,17,0.455,18,0.483,19,0.382,20,1.324,22,0.128,24,0.548,31,0.43,33,0.224,52,1.151,53,1.218,54,1.74,83,0.01,84,0.01,92,0.483,93,1.252,101,0.455,102,0.659,106,1.965,108,0.541,109,0.512,111,0.598,115,1.385,121,0.873,124,0.286,125,0.95,126,0.713,129,0.305,130,0.751,132,1.049,135,0.602,138,1.062,186,0.683,203,1.411,206,0.156,207,0.713,208,1.04,209,0.775,210,0.775,211,0.775,212,0.775,214,0.775,215,1.73,216,1.66,217,1.084,218,1.084,219,1.251,221,1.084,223,1.084,229,0.627,231,0.775,232,1.084,233,1.084,234,0.775,235,0.775,236,0.775,237,0.713,238,0.775,239,0.713,240,0.775,241,0.775,242,0.713,243,0.683,244,1.625,245,0.713,246,0.775,247,0.775,248,0.713,249,0.775,250,0.713,251,0.775,252,0.713,253,0.775,254,0.743,255,0.713,256,0.713,257,0.775,258,0.713,259,0.775,260,0.683,261,0.775,262,0.713,263,0.775,264,0.713,265,0.775,266,0.713,267,0.775,268,0.713,269,0.775,270,0.713,271,0.713,272,0.775,273,0.713,274,0.775,275,0.713,276,0.775,277,0.713,278,0.743,279,0.713,280,0.775,281,0.713,282,0.775,283,0.713,284,0.775,285,0.713,286,0.743,287,1.246,288,0.713,289,0.775,290,0.713,291,0.713,292,0.775,293,0.775,294,0.775,295,3.41,311,2.551,343,2.204,348,4.314,361,4.46,362,2.646,371,1.951,485,1.935,516,2.137,528,1.956,532,1.565,533,1.882,539,2.637,571,1.877,575,2.646,578,2.789,579,1.513,580,1.383,581,1.586,589,1.845,590,1.665,716,1.586,717,2.56,718,2.56,719,2.219,723,3.061,725,2.582,726,2.551,727,2.069,740,2.582,741,1.513,746,2.362,752,2.204,1278,2.551,1328,2.789,1589,2.789,1698,3.107,1801,3.57,1867,5.245,1888,3.107,2595,2.789,2648,5.733,2649,6.274,2650,6.274,2651,3.589,2652,3.589,2653,3.589,2654,3.589,2655,5.022,2656,3.589,2657,3.589,2658,3.589,2659,3.589,2660,3.107,2661,3.589]],["title/components/TypeComponent.html",[206,0.104,290,0.766]],["body/components/TypeComponent.html",[3,0.137,4,0.137,5,0.12,7,0.07,14,0.732,15,0.272,16,0.016,17,0.544,18,0.701,19,0.402,22,0.137,24,0.587,31,0.46,33,0.188,52,1.193,53,0.88,54,1.777,83,0.01,84,0.01,92,0.506,101,0.544,102,0.677,106,2.007,111,0.633,115,1.451,121,0.534,124,0.306,125,1.017,126,0.763,129,0.327,132,1.08,135,0.811,138,1.063,186,0.731,203,1.319,206,0.173,207,0.763,208,1.09,209,0.829,210,0.829,211,0.829,212,0.829,214,0.829,215,1.739,216,1.668,217,1.136,218,1.136,219,1.296,220,2.034,221,1.136,223,1.136,229,0.671,230,1.197,231,0.829,232,1.136,233,1.136,234,0.829,235,0.829,236,0.829,237,1.283,238,0.829,239,0.763,240,0.829,241,0.829,242,0.763,243,0.731,244,1.644,245,0.763,246,0.829,247,0.829,248,0.763,249,0.829,250,0.763,251,0.829,252,0.763,253,0.829,254,0.796,255,0.763,256,0.763,257,0.829,258,0.763,259,0.829,260,0.731,261,0.829,262,0.763,263,0.829,264,0.763,265,0.829,266,0.763,267,0.829,268,1.283,269,0.829,270,0.763,271,1.283,272,0.829,273,0.763,274,0.829,275,0.763,276,0.829,277,0.763,278,0.796,279,0.763,280,0.829,281,0.763,282,0.829,283,0.763,284,0.829,285,0.763,286,0.796,287,0.763,288,0.763,289,0.829,290,1.283,291,1.283,292,0.829,293,0.829,294,0.829,485,2.028,516,2.215,528,2.013,532,1.64,533,1.951,534,2.984,571,1.932,718,2.653,719,2.326,1858,5.59,1864,2.984,2015,5.43,2016,5.59,2405,3.324,2499,3.324,2564,6.049,2565,6.049,2662,3.324,2663,5.263,2664,3.841,2665,3.841,2666,3.841,2667,3.841,2668,3.841,2669,3.841,2670,3.841,2671,3.841,2672,3.841,2673,3.841,2674,3.841,2675,3.841,2676,3.841,2677,3.841,2678,3.841,2679,3.841,2680,3.841]],["title/components/TypeaheadComponent.html",[206,0.104,288,0.766]],["body/components/TypeaheadComponent.html",[3,0.12,4,0.12,5,0.105,7,0.088,8,0.701,13,1.177,15,0.299,16,0.016,17,0.552,18,0.745,19,0.332,22,0.12,31,0.404,33,0.246,53,0.803,83,0.009,84,0.009,92,0.462,101,0.305,102,0.693,108,0.695,109,0.657,111,0.625,121,0.933,124,0.269,129,0.287,130,0.383,132,1.02,135,0.671,138,0.701,174,1.708,186,0.642,196,2.07,203,1.311,206,0.15,207,0.67,208,0.995,209,0.728,210,0.728,211,0.728,212,0.728,214,0.728,215,1.722,216,1.652,217,1.037,218,1.037,219,1.209,220,1.896,221,1.037,223,1.037,229,0.589,230,1.051,231,0.728,232,1.037,233,1.037,234,0.728,235,0.728,236,0.728,237,0.67,238,0.728,239,0.67,240,0.728,241,0.728,242,0.67,243,0.642,244,1.607,245,0.67,246,0.728,247,0.728,248,0.67,249,0.728,250,0.67,251,0.728,252,0.67,253,0.728,254,0.698,255,0.67,256,0.67,257,0.728,258,0.67,259,0.728,260,0.642,261,0.728,262,0.67,263,0.728,264,0.67,265,0.728,266,0.67,267,0.728,268,0.67,269,0.728,270,0.67,271,0.67,272,0.728,273,0.67,274,0.728,275,0.67,276,0.728,277,0.67,278,0.698,279,0.67,280,0.728,281,0.67,282,0.728,283,0.67,284,0.728,285,0.67,286,0.698,287,0.67,288,1.212,289,0.728,290,0.67,291,0.67,292,0.728,293,0.728,294,0.728,362,2.573,502,1.851,528,1.902,532,1.498,535,5.583,546,4.159,547,4.159,571,1.826,677,3.162,696,4.741,743,1.734,878,2.918,1223,2.918,1224,4.412,1684,6.106,2401,4.159,2558,4.846,2593,2.62,2594,2.918,2681,2.918,2682,4.805,2683,5.598,2684,4.805,2685,5.598,2686,5.598,2687,6.102,2688,6.102,2689,4.805,2690,4.805,2691,4.805,2692,4.805,2693,5.598,2694,4.805,2695,5.598,2696,5.598,2697,4.805,2698,3.372,2699,3.372,2700,3.372,2701,6.45,2702,3.372,2703,3.372,2704,3.372,2705,3.372,2706,4.805,2707,3.372,2708,6.102,2709,4.805,2710,6.102,2711,6.45,2712,6.9,2713,4.805,2714,3.372,2715,4.805,2716,3.372,2717,3.372,2718,4.805,2719,3.372,2720,4.805,2721,3.372,2722,3.372,2723,5.598,2724,5.598,2725,4.805,2726,3.372,2727,3.372,2728,3.372,2729,3.372,2730,3.372,2731,3.372,2732,3.372,2733,3.372,2734,3.372,2735,3.372,2736,3.372,2737,3.372,2738,3.372,2739,3.372,2740,4.805]],["title/components/UniqueComponent.html",[206,0.104,291,0.766]],["body/components/UniqueComponent.html",[1,1.503,3,0.086,4,0.086,5,0.075,7,0.044,8,0.544,10,2.216,13,1.281,14,1.04,15,0.286,16,0.016,17,0.414,18,0.736,19,0.364,20,0.886,22,0.086,24,0.367,28,0.886,31,0.288,33,0.239,52,0.909,53,0.624,54,1.504,59,1.235,81,3.281,83,0.007,84,0.007,92,0.359,93,1.323,101,0.338,102,0.68,106,2.242,108,0.687,109,0.65,111,0.655,115,1.029,121,0.976,124,0.191,125,0.636,126,0.477,129,0.204,130,0.88,132,0.863,135,0.841,138,1.01,174,0.988,186,0.457,192,3.354,203,1.192,206,0.123,207,0.477,208,0.773,209,0.519,210,0.519,211,0.519,212,0.519,214,0.519,215,1.671,216,1.603,217,0.806,218,0.806,219,0.988,220,1.55,221,0.806,223,0.806,229,0.42,230,0.749,231,0.519,232,0.806,233,0.806,234,0.519,235,0.519,236,0.519,237,1.025,238,0.519,239,0.477,240,0.519,241,0.519,242,0.477,243,0.457,244,1.496,245,0.477,246,0.519,247,0.519,248,0.477,249,0.519,250,0.477,251,0.519,252,0.477,253,0.519,254,0.498,255,0.477,256,0.477,257,0.519,258,0.477,259,0.519,260,0.457,261,0.519,262,0.477,263,0.519,264,0.477,265,0.519,266,0.477,267,0.519,268,0.477,269,0.519,270,0.477,271,0.477,272,0.519,273,0.477,274,0.519,275,0.477,276,0.519,277,0.477,278,0.498,279,0.477,280,0.519,281,0.477,282,0.519,283,0.477,284,0.519,285,0.477,286,0.498,287,0.477,288,0.477,289,0.519,290,0.477,291,1.025,292,0.988,293,0.519,294,0.519,295,1.305,297,3.555,311,1.707,319,1.773,348,3.168,361,1.707,362,1.013,371,1.305,485,1.438,516,1.688,524,4.009,528,1.608,531,3.555,532,1.163,533,1.487,539,2.279,558,3.971,563,2.079,571,1.544,575,2.876,578,1.866,579,1.573,580,0.925,581,1.061,589,3.281,590,2.96,595,3.23,596,2.079,597,2.079,598,1.866,603,1.866,605,3.668,606,1.707,610,1.866,643,3.354,653,1.707,660,2.061,673,1.731,717,2.022,723,2.517,725,1.919,726,1.707,740,1.919,741,2.356,767,1.475,774,2.637,777,3.891,780,3.891,921,1.384,1083,1.305,1085,1.866,1656,1.384,1665,1.58,1718,3.23,1723,3.971,1724,1.707,1728,1.707,1733,1.707,1734,1.707,1735,1.707,1749,3.96,1753,3.23,1759,2.079,1761,5.523,1765,3.971,1769,3.23,1783,3.96,1784,2.079,1785,2.079,1787,2.079,1788,3.23,1789,2.079,1790,2.079,1791,2.079,1792,2.079,1793,2.079,1794,2.079,1795,3.23,1796,3.23,1864,1.866,2068,2.079,2595,1.866,2660,2.079,2741,2.079,2742,4.576,2743,3.731,2744,3.731,2745,5.914,2746,5.159,2747,5.159,2748,5.159,2749,5.159,2750,3.731,2751,5.159,2752,3.731,2753,4.576,2754,3.731,2755,2.402,2756,2.402,2757,2.402,2758,2.402,2759,2.402,2760,3.731,2761,2.402,2762,2.079,2763,2.402,2764,2.402,2765,2.402,2766,2.402,2767,2.402,2768,2.402,2769,2.402,2770,2.402,2771,3.731,2772,2.402,2773,2.402,2774,2.402,2775,3.731,2776,2.402,2777,2.402,2778,2.402,2779,2.402,2780,2.402,2781,2.402,2782,2.402,2783,5.914,2784,2.402,2785,3.731,2786,2.402,2787,2.402,2788,3.731,2789,2.402,2790,2.402,2791,3.731,2792,2.402,2793,2.402,2794,3.731,2795,2.402,2796,2.402,2797,2.402,2798,2.402,2799,2.402,2800,2.402,2801,5.159,2802,5.159,2803,2.402,2804,2.402,2805,2.402,2806,3.731,2807,2.402,2808,2.402,2809,2.402,2810,2.402,2811,2.402,2812,2.402,2813,2.402,2814,2.402,2815,2.402,2816,2.402,2817,2.402,2818,2.402,2819,2.402,2820,2.402]],["title/interfaces/User.html",[0,1.021,428,2.096]],["body/interfaces/User.html",[0,1.673,2,2.244,3,0.181,4,0.181,5,0.159,7,0.093,8,0.921,10,2.405,15,0.324,16,0.016,17,0.651,18,0.79,22,0.269,23,2.477,33,0.264,83,0.012,84,0.012,121,0.706,173,1.583,186,1.437,187,3.609,194,3.609,300,5.261,302,3.341,422,3.609,423,3.609,424,3.609,425,3.609,427,3.341,428,3.737,429,6.228,430,6.228,431,4.148,432,6.228,433,6.228,434,3.609,435,4.908,436,4.395,437,4.395,438,4.395,439,4.395,440,4.395,441,4.49,442,4.395]],["title/coverage.html",[2821,4.568]],["body/coverage.html",[0,1.928,1,1.282,5,0.099,6,3.381,15,0.128,16,0.016,31,0.381,52,0.632,61,1.636,77,1.636,78,1.729,83,0.009,84,0.009,85,1.118,86,2.093,88,3.872,89,2.472,90,2.261,91,2.753,152,1.552,153,2.753,165,3.872,181,4.223,203,1.38,206,0.213,207,0.632,213,2.753,237,0.632,239,0.632,242,0.632,245,0.632,248,0.632,250,0.632,252,0.632,254,0.955,255,0.632,256,0.632,258,0.632,260,0.606,262,0.632,264,0.632,266,0.632,268,0.632,270,0.632,271,0.632,273,0.632,275,0.632,277,0.632,279,0.632,281,0.632,283,0.632,285,0.632,286,0.955,287,0.632,288,0.632,290,0.632,291,0.632,295,1.729,296,3.852,301,1.729,318,2.472,320,3.625,348,1.953,349,4.69,357,1.476,378,2.472,405,2.753,406,2.472,407,2.753,408,1.729,422,2.261,423,3.276,426,6.222,428,1.729,443,5.142,479,2.472,481,2.753,482,2.753,502,1.226,515,2.753,537,1.953,539,1.226,574,1.953,580,1.776,629,2.753,630,2.261,631,2.753,643,1.729,699,4.462,714,2.753,715,2.472,716,3.309,788,2.753,797,2.753,798,2.753,813,2.261,959,2.753,979,1.953,980,1.729,981,1.834,1107,4.69,1125,1.953,1152,2.472,1218,2.753,1264,2.753,1265,2.472,1326,2.753,1327,2.472,1329,2.753,1416,2.753,1417,2.261,1418,2.753,1450,4.69,1538,2.753,1540,2.753,1549,2.753,1615,2.753,1642,2.753,1685,2.753,1686,2.472,1736,2.753,1737,2.472,1745,2.753,1797,2.753,1798,2.472,1804,2.261,1805,4.21,1806,4.21,1807,4.21,1814,2.261,1843,2.472,1855,2.753,1865,4.616,1867,3.276,1868,2.472,1869,2.472,1871,2.753,1876,2.753,1901,5.142,1910,2.261,1927,2.753,1928,2.753,1944,2.753,1950,2.753,1982,4.69,1996,2.472,2008,2.753,2009,2.753,2177,2.093,2178,2.472,2179,2.753,2248,2.753,2334,2.472,2335,2.753,2336,3.989,2337,2.753,2338,2.753,2341,2.753,2379,5.458,2514,2.753,2556,3.989,2557,2.753,2596,2.753,2648,3.581,2662,2.753,2681,2.753,2741,2.753,2821,2.753,2822,3.181,2823,3.181,2824,3.181,2825,6.306,2826,3.181,2827,5.419,2828,4.608,2829,4.608,2830,3.181,2831,3.181,2832,5.419,2833,6.575,2834,6.575,2835,5.419,2836,4.608,2837,3.181,2838,5.419,2839,7.883,2840,7.941,2841,3.181,2842,3.181,2843,3.181,2844,3.181,2845,5.941,2846,3.181,2847,3.181,2848,5.941,2849,5.941,2850,3.181,2851,3.181,2852,3.181,2853,4.608,2854,3.181,2855,6.575,2856,3.181,2857,3.181,2858,3.181,2859,3.181,2860,6.127,2861,2.753,2862,2.753,2863,2.753,2864,2.753,2865,2.753,2866,3.181,2867,3.181,2868,3.181,2869,3.181,2870,3.181,2871,3.181,2872,2.753,2873,2.753,2874,3.181]],["title/dependencies.html",[1462,3.607,2875,2.782]],["body/dependencies.html",[16,0.016,32,2.119,83,0.013,84,0.013,124,0.419,125,1.393,177,2.44,180,2.705,183,3.739,229,0.919,230,1.64,243,1.002,374,3.462,416,3.032,475,5.589,476,4.553,477,4.553,837,3.739,1028,4.553,1289,4.553,1313,5.589,1368,4.087,1462,4.087,1466,4.087,1468,3.739,1573,4.553,1622,4.087,1623,4.553,1624,4.553,1709,4.553,1710,4.553,1711,4.553,1917,4.087,2361,4.553,2362,4.553,2363,4.553,2364,4.553,2593,4.087,2876,5.261,2877,7.71,2878,5.261,2879,6.457,2880,5.261,2881,5.261,2882,5.261,2883,5.261,2884,6.987,2885,7.785,2886,5.261,2887,5.261,2888,5.261,2889,5.261,2890,5.261,2891,5.261,2892,5.261,2893,5.261,2894,5.261,2895,5.261,2896,5.261,2897,6.987,2898,5.261,2899,5.261,2900,5.261,2901,5.261,2902,5.261,2903,5.261,2904,5.261,2905,5.261,2906,5.261,2907,5.261,2908,5.261,2909,5.261,2910,5.261,2911,5.261,2912,5.261,2913,5.261,2914,5.261,2915,5.261,2916,5.261,2917,5.261,2918,5.261,2919,5.261]],["title/miscellaneous/enumerations.html",[2920,1.973,2921,4.018]],["body/miscellaneous/enumerations.html",[6,3.203,7,0.114,13,1.302,16,0.015,26,3.88,27,3.039,28,2.298,29,3.039,30,3.386,83,0.014,84,0.014,2920,3.826,2921,5.393,2922,5.393]],["title/miscellaneous/functions.html",[2920,1.973,2923,4.018]],["body/miscellaneous/functions.html",[1,2.182,7,0.099,16,0.016,31,0.649,33,0.281,46,2.512,49,2.943,52,1.076,83,0.013,84,0.013,105,4.688,108,0.849,109,0.803,110,4.688,111,0.714,115,1.493,295,2.943,301,2.943,361,3.85,378,5.107,398,4.688,428,2.943,472,3.85,479,5.107,574,4.036,817,2.393,1507,4.688,1765,3.85,1996,5.107,2003,4.688,2860,4.688,2861,5.689,2862,5.689,2863,5.689,2864,5.689,2865,5.689,2872,4.688,2873,6.125,2920,3.326,2923,4.688,2924,7.882,2925,5.416,2926,5.416,2927,5.416,2928,5.416,2929,5.416,2930,5.416,2931,5.416,2932,5.416,2933,5.416,2934,5.416]],["title/index.html",[7,0.071,2935,3.338]],["body/index.html",[2,2.786,16,0.014,83,0.014,84,0.014,87,2.048,208,1.306,2935,5.457,2936,6.305,2937,6.305,2938,6.305]],["title/modules.html",[2939,4.568]],["body/modules.html",[16,0.014,83,0.014,84,0.014,2939,5.506]],["title/properties.html",[8,0.677,2875,2.782]],["body/properties.html",[8,0.909,16,0.016,45,3.203,83,0.014,84,0.014,260,1.186,1607,5.393,2940,6.23,2941,7.139,2942,6.23,2943,6.23,2944,6.23,2945,6.23]],["title/miscellaneous/typealiases.html",[2920,1.973,2946,4.643]],["body/miscellaneous/typealiases.html",[6,2.959,7,0.105,15,0.325,16,0.013,47,3.704,49,3.704,61,2.959,67,3.929,74,3.929,75,3.929,79,3.929,80,3.929,83,0.013,84,0.013,296,4.091,314,5.296,321,4.845,346,4.845,423,4.091,434,4.845,435,5.296,441,4.845,2762,6.972,2920,3.534,2922,6.795,2947,5.755,2948,7.263,2949,7.263]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":320,"title":{},"body":{"interfaces/Association.html":{},"components/AutocompleteComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Producer.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["0.13.0",{"_index":2919,"title":{},"body":{"dependencies.html":{}}}],["0.17.3",{"_index":2909,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":2174,"title":{},"body":{"components/QuestionComponent.html":{}}}],["0.5",{"_index":1316,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["0.5em",{"_index":2170,"title":{},"body":{"components/QuestionComponent.html":{}}}],["0/1",{"_index":2840,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2827,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2834,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2831,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2838,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2837,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2830,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2832,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2826,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2850,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2841,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2829,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2851,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2842,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2828,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2825,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2849,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2845,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2848,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2836,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2833,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2835,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":28,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/DateDataTypeComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DrawingPadDataTypeComponent.html":{},"interfaces/Form.html":{},"components/MultipleComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/enumerations.html":{}}}],["1).pop",{"_index":1162,"title":{},"body":{"injectables/DraftService.html":{}}}],["1)[0",{"_index":1177,"title":{},"body":{"injectables/DraftService.html":{}}}],["1.1.2",{"_index":2940,"title":{},"body":{"properties.html":{}}}],["1.2",{"_index":1731,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["1.8.0",{"_index":2911,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":2897,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2855,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":2844,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1678,"title":{},"body":{"components/LoginPage.html":{}}}],["100",{"_index":699,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{},"coverage.html":{}}}],["100px",{"_index":1611,"title":{},"body":{"components/HomePage.html":{}}}],["100vh",{"_index":1674,"title":{},"body":{"components/LoginPage.html":{}}}],["10px",{"_index":1613,"title":{},"body":{"components/HomePage.html":{}}}],["11",{"_index":2938,"title":{},"body":{"index.html":{}}}],["11px",{"_index":1679,"title":{},"body":{"components/LoginPage.html":{}}}],["16.0.0",{"_index":2877,"title":{},"body":{"dependencies.html":{}}}],["16.1.1",{"_index":2899,"title":{},"body":{"dependencies.html":{}}}],["16.2.12",{"_index":2881,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":953,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["17/22",{"_index":2857,"title":{},"body":{"coverage.html":{}}}],["170",{"_index":745,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["18",{"_index":2937,"title":{},"body":{"index.html":{}}}],["1].value",{"_index":2153,"title":{},"body":{"components/QuestionComponent.html":{}}}],["1].value.split(':')[1",{"_index":2225,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["2",{"_index":1677,"title":{},"body":{"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/QuestionComponent.html":{}}}],["2.3.0",{"_index":2916,"title":{},"body":{"dependencies.html":{}}}],["2.30.0",{"_index":2905,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":2168,"title":{},"body":{"components/QuestionComponent.html":{}}}],["200",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SurveyService.html":{}}}],["2000",{"_index":1245,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["200px",{"_index":1682,"title":{},"body":{"components/LoginPage.html":{}}}],["20px",{"_index":628,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{}}}],["22px",{"_index":954,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["26px",{"_index":951,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["2732px.png",{"_index":1942,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["29",{"_index":2936,"title":{},"body":{"index.html":{}}}],["2px",{"_index":626,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{}}}],["3.1.2",{"_index":2910,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1977,"title":{},"body":{"injectables/PhotoService.html":{}}}],["3000",{"_index":1630,"title":{},"body":{"injectables/LocationService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["30000",{"_index":896,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/LocationService.html":{}}}],["4",{"_index":1680,"title":{},"body":{"components/LoginPage.html":{}}}],["4.0.0",{"_index":2896,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":2914,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2912,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":30,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/enumerations.html":{}}}],["5.0.1",{"_index":2900,"title":{},"body":{"dependencies.html":{}}}],["5.0.6",{"_index":2885,"title":{},"body":{"dependencies.html":{}}}],["5.0.7",{"_index":2886,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":2882,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":2887,"title":{},"body":{"dependencies.html":{}}}],["5.5.1",{"_index":2884,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":947,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["5000",{"_index":861,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["500px",{"_index":1683,"title":{},"body":{"components/LoginPage.html":{}}}],["6",{"_index":2843,"title":{},"body":{"coverage.html":{}}}],["6.1.0",{"_index":2903,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2854,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1608,"title":{},"body":{"components/HomePage.html":{}}}],["67vh",{"_index":2553,"title":{},"body":{"components/SurveysPage.html":{}}}],["7",{"_index":1196,"title":{},"body":{"injectables/DraftService.html":{}}}],["7.0.0",{"_index":2907,"title":{},"body":{"dependencies.html":{}}}],["7.5.5",{"_index":2895,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2913,"title":{},"body":{"dependencies.html":{}}}],["70vh",{"_index":1947,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["77",{"_index":2856,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1949,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["8c8c8c",{"_index":955,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["9.0.1",{"_index":2917,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":689,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["999999",{"_index":1675,"title":{},"body":{"components/LoginPage.html":{}}}],["_",{"_index":1027,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["_.clonedeep(this.selectedform",{"_index":1092,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["_storage",{"_index":2342,"title":{},"body":{"injectables/StorageService.html":{}}}],["abierta",{"_index":2127,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["absolute",{"_index":943,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["abstractcontrol",{"_index":1776,"title":{},"body":{"components/MultipleComponent.html":{},"injectables/QuestionControlService.html":{}}}],["acceder",{"_index":1253,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["acción",{"_index":1237,"title":{},"body":{"components/DraftsPage.html":{}}}],["accordion::part(content",{"_index":2551,"title":{},"body":{"components/SurveysPage.html":{}}}],["action",{"_index":1836,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["actividades",{"_index":2644,"title":{},"body":{"components/TableComponent.html":{}}}],["actual_component",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["add",{"_index":1531,"title":{},"body":{"injectables/FormService.html":{}}}],["addnetworkchangelistener",{"_index":2381,"title":{},"body":{"injectables/SurveyService.html":{}}}],["addphone",{"_index":1880,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["adds",{"_index":2398,"title":{},"body":{"injectables/SurveyService.html":{}}}],["addsection",{"_index":2561,"title":{},"body":{"components/TableComponent.html":{}}}],["agregar",{"_index":1899,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["ajustes",{"_index":916,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["al",{"_index":1254,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{}}}],["alert",{"_index":674,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["alert.present",{"_index":684,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["alertcontroller",{"_index":538,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["alertshown",{"_index":2012,"title":{},"body":{"components/QuestionComponent.html":{}}}],["aliases",{"_index":2947,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":695,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{}}}],["already",{"_index":1373,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["altitud",{"_index":40,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/DetailedFormComponent.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["altitude",{"_index":853,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["androidsettings",{"_index":1621,"title":{},"body":{"injectables/LocationService.html":{}}}],["androidsettings.applicationdetails",{"_index":1640,"title":{},"body":{"injectables/LocationService.html":{}}}],["androidsettings.location",{"_index":1641,"title":{},"body":{"injectables/LocationService.html":{}}}],["angular",{"_index":2362,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2876,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":176,"title":{},"body":{"injectables/ApiService.html":{}}}],["angular/compiler",{"_index":2878,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":124,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":125,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2879,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":416,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"injectables/SecureInnerPagesGuard.html":{},"components/SurveysPage.html":{},"dependencies.html":{}}}],["angular/template",{"_index":2898,"title":{},"body":{"dependencies.html":{}}}],["angular/template/for",{"_index":2594,"title":{},"body":{"components/TableComponent.html":{},"components/TypeaheadComponent.html":{}}}],["answer",{"_index":1,"title":{"interfaces/Answer.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AutocompleteComponent.html":{},"interfaces/Form.html":{},"components/MultipleComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["answer.checked",{"_index":2144,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answer.id.tostring",{"_index":598,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answer.value",{"_index":605,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/QuestionComponent.html":{},"components/UniqueComponent.html":{}}}],["answer.value.split(\":\")[0",{"_index":1796,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answer.value.tolowercase",{"_index":2798,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answer_id",{"_index":82,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["answerbuilder",{"_index":2861,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["answerbuilder(answer",{"_index":2926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["answerformgroupkey",{"_index":2608,"title":{},"body":{"components/TableComponent.html":{}}}],["answergroup",{"_index":1761,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answergroup.get",{"_index":2818,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answergroup.get('other",{"_index":2802,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answergroup.get('other')?.disable",{"_index":1790,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answergroup.get('other')?.enable",{"_index":1789,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answergroup.get('other')?.setvalue(othervalue",{"_index":1786,"title":{},"body":{"components/MultipleComponent.html":{}}}],["answergroup.get('other')?.value",{"_index":1784,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answerid",{"_index":81,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/UniqueComponent.html":{}}}],["answeridtocheck",{"_index":2791,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answerlength",{"_index":56,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["answerpivot",{"_index":78,"title":{"interfaces/AnswerPivot.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"coverage.html":{}}}],["answerpivotbuilder",{"_index":2862,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["answerpivotbuilder(pivot",{"_index":2927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["answerpivotresponse",{"_index":80,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["answerrelation",{"_index":77,"title":{"interfaces/AnswerRelation.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"coverage.html":{}}}],["answerrelation.every",{"_index":140,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["answerrelation.some",{"_index":143,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["answerrelation[0]?.answerpivot.type",{"_index":134,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["answerrelationbuilder",{"_index":2863,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["answerrelationbuilder(relation",{"_index":2929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["answerrelationresponse",{"_index":79,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["answerrelationservice",{"_index":86,"title":{"injectables/AnswerRelationService.html":{}},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["answerrelationtype",{"_index":133,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["answerresponse",{"_index":75,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["answers",{"_index":59,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AutocompleteComponent.html":{},"interfaces/Form.html":{},"components/MultipleComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/UniqueComponent.html":{}}}],["answers.map((answer",{"_index":604,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["answers[answers.length",{"_index":1792,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answers_relation",{"_index":72,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["answerscontrols",{"_index":2606,"title":{},"body":{"components/TableComponent.html":{}}}],["answerscontrols[0",{"_index":2610,"title":{},"body":{"components/TableComponent.html":{}}}],["answerscontrols[1",{"_index":2611,"title":{},"body":{"components/TableComponent.html":{}}}],["answersformgroup",{"_index":558,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/QuestionComponent.html":{},"components/TableComponent.html":{},"components/UniqueComponent.html":{}}}],["answersformgroup.controls",{"_index":595,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/UniqueComponent.html":{}}}],["answersformgroup.controls['other'].value",{"_index":2150,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answersformgroup.controls[answer.id.tostring()].value",{"_index":2143,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answersformgroup.controls[key].setvalue(!value",{"_index":2787,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answersformgroup.controls[key].setvalue(false",{"_index":613,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["answersformgroup.controls[key].setvalue(true",{"_index":612,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["answersformgroup.controls[key].setvalue(value",{"_index":2786,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answersformgroup.controls[key].value",{"_index":596,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/UniqueComponent.html":{}}}],["answersformgroup.get(answerformgroupkey)?.setvalue(true",{"_index":2612,"title":{},"body":{"components/TableComponent.html":{}}}],["answersgroup",{"_index":2162,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answersgroup.controls[answer.order].value",{"_index":2163,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answersrelation",{"_index":62,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["answervalue",{"_index":2783,"title":{},"body":{"components/UniqueComponent.html":{}}}],["anterior",{"_index":2166,"title":{},"body":{"components/QuestionComponent.html":{},"components/TableComponent.html":{}}}],["api",{"_index":1829,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["api/api.service",{"_index":370,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["apiservice",{"_index":152,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["app",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["app.component.html",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["app.getinfo().then((info",{"_index":1574,"title":{},"body":{"components/HomePage.html":{}}}],["appcomponent",{"_index":207,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["application/json",{"_index":200,"title":{},"body":{"injectables/ApiService.html":{}}}],["appversion",{"_index":1553,"title":{},"body":{"components/HomePage.html":{}}}],["ar.questionid",{"_index":2627,"title":{},"body":{"components/TableComponent.html":{}}}],["area",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["areselected",{"_index":94,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["areselected(relation",{"_index":104,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["array",{"_index":44,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{}}}],["array.push(formgroup",{"_index":2231,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["arrays",{"_index":1494,"title":{},"body":{"injectables/FormService.html":{}}}],["asistencia",{"_index":329,"title":{},"body":{"interfaces/Association.html":{},"injectables/DetailedFormService.html":{},"interfaces/Producer.html":{}}}],["asociacion",{"_index":344,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["asociación",{"_index":2656,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["assets/imgs/dataquest",{"_index":1941,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["assignbeneficiary",{"_index":522,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["assignbeneficiary(id",{"_index":549,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["assignformcontrols",{"_index":2180,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["assignformcontrols(question",{"_index":2189,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["assistance",{"_index":317,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["assoaciationservice",{"_index":2753,"title":{},"body":{"components/UniqueComponent.html":{}}}],["association",{"_index":295,"title":{"interfaces/Association.html":{}},"body":{"interfaces/Association.html":{},"injectables/AssociationService.html":{},"interfaces/Producer.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["association!.farming",{"_index":2797,"title":{},"body":{"components/UniqueComponent.html":{}}}],["association.id",{"_index":404,"title":{},"body":{"injectables/AssociationService.html":{}}}],["association_id",{"_index":341,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["associationbuilder",{"_index":378,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["associationbuilder(association",{"_index":398,"title":{},"body":{"injectables/AssociationService.html":{},"miscellaneous/functions.html":{}}}],["associationfarming",{"_index":2796,"title":{},"body":{"components/UniqueComponent.html":{}}}],["associationfarming.tolowercase",{"_index":2799,"title":{},"body":{"components/UniqueComponent.html":{}}}],["associationid",{"_index":311,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["associationresponse",{"_index":346,"title":{},"body":{"interfaces/Association.html":{},"injectables/AssociationService.html":{},"interfaces/Producer.html":{},"miscellaneous/typealiases.html":{}}}],["associationresponse.map",{"_index":397,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associations",{"_index":350,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associations_storage_key",{"_index":405,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{}}}],["associationservice",{"_index":348,"title":{"injectables/AssociationService.html":{}},"body":{"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["async",{"_index":157,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["at_p5",{"_index":328,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["atención",{"_index":2086,"title":{},"body":{"components/QuestionComponent.html":{}}}],["atleastonechecked",{"_index":2181,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["auth/auth.service",{"_index":2292,"title":{},"body":{"injectables/QuestionService.html":{}}}],["auth/login",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth0/angular",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["authentication",{"_index":427,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"injectables/QuestionService.html":{},"interfaces/User.html":{}}}],["authentication.authmanagement",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication.authparams",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication.authresponse",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication.user",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{},"injectables/QuestionService.html":{},"miscellaneous/functions.html":{}}}],["authguard",{"_index":406,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["authmanagement",{"_index":422,"title":{"interfaces/AuthManagement.html":{}},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["author",{"_index":2944,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":201,"title":{},"body":{"injectables/ApiService.html":{}}}],["authparams",{"_index":441,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["authresponse",{"_index":434,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["authservice",{"_index":408,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["autocomplete",{"_index":517,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["autocomplete'},{'name",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["autocomplete.component.html",{"_index":519,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["autocomplete.component.scss",{"_index":518,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["autocomplete/autocomplete.component",{"_index":1864,"title":{},"body":{"components/OpenComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["autocompletecomponent",{"_index":237,"title":{"components/AutocompleteComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["await",{"_index":190,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{}}}],["back",{"_index":636,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["backbuttonsubscription",{"_index":2013,"title":{},"body":{"components/QuestionComponent.html":{}}}],["background",{"_index":1323,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["bar",{"_index":2894,"title":{},"body":{"dependencies.html":{}}}],["base",{"_index":1523,"title":{},"body":{"injectables/FormService.html":{},"components/TableComponent.html":{}}}],["base.foreach((q",{"_index":2625,"title":{},"body":{"components/TableComponent.html":{}}}],["base.foreach((question",{"_index":2622,"title":{},"body":{"components/TableComponent.html":{}}}],["base.push(q",{"_index":1532,"title":{},"body":{"injectables/FormService.html":{}}}],["base64data",{"_index":1314,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["base64photo",{"_index":1963,"title":{},"body":{"injectables/PhotoService.html":{}}}],["basearraycopy",{"_index":2614,"title":{},"body":{"components/TableComponent.html":{}}}],["based",{"_index":1471,"title":{},"body":{"injectables/FormService.html":{}}}],["bearer",{"_index":202,"title":{},"body":{"injectables/ApiService.html":{}}}],["behaviorsubject",{"_index":1891,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["behaviorsubject(this.phones",{"_index":1894,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["beneficiario",{"_index":1056,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["beneficiary",{"_index":20,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["beneficiary.association",{"_index":361,"title":{},"body":{"injectables/AssociationService.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["beneficiary.associationresponse",{"_index":392,"title":{},"body":{"injectables/AssociationService.html":{}}}],["beneficiary.namespace",{"_index":21,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["beneficiary.producer",{"_index":46,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AutocompleteComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"interfaces/Form.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/functions.html":{}}}],["beneficiary.producerresponse",{"_index":2000,"title":{},"body":{"injectables/ProducerService.html":{}}}],["beneficiary.selectedquestions",{"_index":2599,"title":{},"body":{"components/TableComponent.html":{}}}],["beneficiary.specialized",{"_index":1172,"title":{},"body":{"injectables/DraftService.html":{}}}],["blaucast",{"_index":1671,"title":{},"body":{"components/LoginPage.html":{}}}],["boolean",{"_index":14,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/SurveyService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["booleanattribute",{"_index":573,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/FormListComponent.html":{}}}],["border",{"_index":622,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["borrador",{"_index":669,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/QuestionComponent.html":{}}}],["borradores",{"_index":1202,"title":{},"body":{"injectables/DraftService.html":{},"components/HomePage.html":{}}}],["borradores/${currentformid",{"_index":1104,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/PhotoDataTypeComponent.html":{}}}],["borradores/${draftid",{"_index":1211,"title":{},"body":{"injectables/DraftService.html":{}}}],["bottom",{"_index":862,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["break",{"_index":2129,"title":{},"body":{"components/QuestionComponent.html":{}}}],["browser",{"_index":1313,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"dependencies.html":{}}}],["builtform",{"_index":1506,"title":{},"body":{"injectables/FormService.html":{}}}],["builtform.fechadescarga",{"_index":1515,"title":{},"body":{"injectables/FormService.html":{}}}],["builtform.questions",{"_index":1512,"title":{},"body":{"injectables/FormService.html":{}}}],["builtform.questions.filter",{"_index":1513,"title":{},"body":{"injectables/FormService.html":{}}}],["builtform.questions.foreach((question",{"_index":1508,"title":{},"body":{"injectables/FormService.html":{}}}],["button",{"_index":1676,"title":{},"body":{"components/LoginPage.html":{}}}],["button[slot='fixed",{"_index":1325,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["buttons",{"_index":676,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["camera",{"_index":1966,"title":{},"body":{"injectables/PhotoService.html":{}}}],["camera.getphoto",{"_index":1972,"title":{},"body":{"injectables/PhotoService.html":{}}}],["cameraresulttype",{"_index":1967,"title":{},"body":{"injectables/PhotoService.html":{}}}],["cameraresulttype.base64",{"_index":1974,"title":{},"body":{"injectables/PhotoService.html":{}}}],["camerasource",{"_index":1968,"title":{},"body":{"injectables/PhotoService.html":{}}}],["camerasource.camera",{"_index":1975,"title":{},"body":{"injectables/PhotoService.html":{}}}],["campo",{"_index":2813,"title":{},"body":{"components/UniqueComponent.html":{}}}],["canactivate",{"_index":410,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["cancel",{"_index":678,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{}}}],["cancelar",{"_index":677,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{},"components/TypeaheadComponent.html":{}}}],["cancelchanges",{"_index":2687,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["candidato",{"_index":1057,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["canset",{"_index":1041,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["cansetbeneficiary",{"_index":964,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["cansetbeneficiary(selectedbeneficiary",{"_index":983,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["cansetspecializedbeneficiary",{"_index":965,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["cansetspecializedbeneficiary(selectedbeneficiary",{"_index":986,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["cansetsupportbeneficiary",{"_index":966,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["cansetsupportbeneficiary(selectedbeneficiary",{"_index":988,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["canvas",{"_index":1266,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["capacitor",{"_index":1622,"title":{},"body":{"injectables/LocationService.html":{},"components/PhotoDataTypeComponent.html":{},"dependencies.html":{}}}],["capacitor/android",{"_index":2883,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":1573,"title":{},"body":{"components/HomePage.html":{},"dependencies.html":{}}}],["capacitor/camera",{"_index":1917,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"dependencies.html":{}}}],["capacitor/core",{"_index":180,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{},"dependencies.html":{}}}],["capacitor/filesystem",{"_index":1368,"title":{},"body":{"injectables/FilesystemService.html":{},"injectables/PhotoService.html":{},"dependencies.html":{}}}],["capacitor/geolocation",{"_index":837,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/LocationService.html":{},"dependencies.html":{}}}],["capacitor/haptics",{"_index":2888,"title":{},"body":{"dependencies.html":{}}}],["capacitor/ios",{"_index":2889,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":2890,"title":{},"body":{"dependencies.html":{}}}],["capacitor/network",{"_index":374,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{},"dependencies.html":{}}}],["capacitor/preferences",{"_index":183,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/PhotoService.html":{},"dependencies.html":{}}}],["capacitor/splash",{"_index":2891,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":2893,"title":{},"body":{"dependencies.html":{}}}],["capacitorhttp",{"_index":178,"title":{},"body":{"injectables/ApiService.html":{}}}],["capacitorhttp.post(options",{"_index":205,"title":{},"body":{"injectables/ApiService.html":{}}}],["capital",{"_index":2080,"title":{},"body":{"components/QuestionComponent.html":{}}}],["capturedphoto",{"_index":1971,"title":{},"body":{"injectables/PhotoService.html":{}}}],["card",{"_index":1681,"title":{},"body":{"components/LoginPage.html":{}}}],["cargando",{"_index":1659,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["cargo",{"_index":1605,"title":{},"body":{"components/HomePage.html":{}}}],["casa",{"_index":335,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["case",{"_index":1045,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["catch",{"_index":904,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/FilesystemService.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["catch((err",{"_index":1088,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["catch((error",{"_index":901,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["catcherror",{"_index":2447,"title":{},"body":{"injectables/SurveyService.html":{}}}],["catcherror((error",{"_index":2479,"title":{},"body":{"injectables/SurveyService.html":{}}}],["category",{"_index":2932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cedula",{"_index":302,"title":{},"body":{"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"interfaces/Producer.html":{},"interfaces/User.html":{}}}],["center",{"_index":693,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{}}}],["cerrar",{"_index":1593,"title":{},"body":{"components/HomePage.html":{}}}],["change",{"_index":2399,"title":{},"body":{"injectables/SurveyService.html":{}}}],["changed",{"_index":2408,"title":{},"body":{"injectables/SurveyService.html":{}}}],["changeinputstate",{"_index":1749,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["changeinputstate(answergroup",{"_index":1759,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["changequestionid",{"_index":2562,"title":{},"body":{"components/TableComponent.html":{}}}],["changequestionid(base",{"_index":2574,"title":{},"body":{"components/TableComponent.html":{}}}],["changes",{"_index":2404,"title":{},"body":{"injectables/SurveyService.html":{}}}],["changespecialized",{"_index":1109,"title":{},"body":{"injectables/DraftService.html":{}}}],["changespecialized(producer",{"_index":1127,"title":{},"body":{"injectables/DraftService.html":{}}}],["changesyncstatus",{"_index":2382,"title":{},"body":{"injectables/SurveyService.html":{}}}],["changesyncstatus(survey",{"_index":2402,"title":{},"body":{"injectables/SurveyService.html":{}}}],["check",{"_index":878,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/TypeaheadComponent.html":{}}}],["checkandrelation",{"_index":95,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkandrelation(answerrelation",{"_index":112,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkanswer",{"_index":1750,"title":{},"body":{"components/MultipleComponent.html":{}}}],["checkanswer(event",{"_index":1762,"title":{},"body":{"components/MultipleComponent.html":{}}}],["checkanswerrelation",{"_index":97,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkanswerrelation(question",{"_index":114,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkbox",{"_index":2237,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["checkboxes",{"_index":2240,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["checkboxvalues",{"_index":2234,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["checkboxvalues.includes(true",{"_index":2236,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["checked",{"_index":9,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{}}}],["checkedanswersrelation",{"_index":2311,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["checkfolderexists",{"_index":1330,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["checkfolderexists(path",{"_index":1339,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["checkforevents",{"_index":1808,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["checking",{"_index":1388,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["checkorrelation",{"_index":98,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkorrelation(answerrelation",{"_index":117,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkpermissions",{"_index":1331,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["checkphonelistlength",{"_index":1881,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["checkphonelistlength(phones",{"_index":1885,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["child",{"_index":1528,"title":{},"body":{"injectables/FormService.html":{}}}],["childindex",{"_index":2580,"title":{},"body":{"components/TableComponent.html":{}}}],["childquestion",{"_index":2635,"title":{},"body":{"components/TableComponent.html":{}}}],["children",{"_index":1489,"title":{},"body":{"injectables/FormService.html":{}}}],["children.push(base",{"_index":1533,"title":{},"body":{"injectables/FormService.html":{}}}],["circle",{"_index":864,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["class",{"_index":129,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["clear",{"_index":2343,"title":{},"body":{"injectables/StorageService.html":{}}}],["clearpad",{"_index":1269,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["cm_p5",{"_index":334,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["color",{"_index":623,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{}}}],["comenzar",{"_index":939,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["commonmodule",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/LoginPage.html":{},"components/MultipleComponent.html":{},"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["como",{"_index":668,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["compatible",{"_index":1251,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["component",{"_index":206,"title":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["componente",{"_index":2092,"title":{},"body":{"components/QuestionComponent.html":{}}}],["components",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"index.html":{}}}],["components/detailed",{"_index":795,"title":{},"body":{"components/DetailPage.html":{}}}],["components/form",{"_index":1546,"title":{},"body":{"components/FormsPage.html":{},"components/SurveysPage.html":{}}}],["components/header/dataquest",{"_index":834,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["components/question/question.component",{"_index":833,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["components/typeahead/typeahead.component",{"_index":577,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["con",{"_index":2147,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["conexión",{"_index":2495,"title":{},"body":{"injectables/SurveyService.html":{}}}],["confirm",{"_index":681,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["confirmchanges",{"_index":2688,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["confirmexit",{"_index":637,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["connection",{"_index":2424,"title":{},"body":{"injectables/SurveyService.html":{}}}],["connectivity",{"_index":1472,"title":{},"body":{"injectables/FormService.html":{}}}],["consider",{"_index":891,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["console.error('error",{"_index":1378,"title":{},"body":{"injectables/FilesystemService.html":{},"injectables/LocationService.html":{},"components/PhotoDataTypeComponent.html":{}}}],["console.error('permission",{"_index":1394,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["console.error(error",{"_index":2480,"title":{},"body":{"injectables/SurveyService.html":{}}}],["console.log",{"_index":852,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["console.log('associationresponse",{"_index":395,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log('cedula",{"_index":615,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["console.log('creating",{"_index":1188,"title":{},"body":{"injectables/DraftService.html":{}}}],["console.log('date",{"_index":763,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["console.log('drafts",{"_index":1191,"title":{},"body":{"injectables/DraftService.html":{}}}],["console.log('enabled",{"_index":2643,"title":{},"body":{"components/TableComponent.html":{}}}],["console.log('error",{"_index":906,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/FilesystemService.html":{}}}],["console.log('file",{"_index":1398,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["console.log('formcontrol",{"_index":750,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["console.log('index",{"_index":2377,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('key",{"_index":2376,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('make",{"_index":1847,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["console.log('network",{"_index":2453,"title":{},"body":{"injectables/SurveyService.html":{}}}],["console.log('no",{"_index":1832,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["console.log('online",{"_index":2455,"title":{},"body":{"injectables/SurveyService.html":{}}}],["console.log('open",{"_index":1637,"title":{},"body":{"injectables/LocationService.html":{}}}],["console.log('permission",{"_index":1402,"title":{},"body":{"injectables/FilesystemService.html":{},"injectables/LocationService.html":{}}}],["console.log('selectedanswer",{"_index":2613,"title":{},"body":{"components/TableComponent.html":{}}}],["console.log('selectedanswers",{"_index":2603,"title":{},"body":{"components/TableComponent.html":{}}}],["console.log('status",{"_index":385,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log('stringdate",{"_index":753,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["console.log('syncassociations",{"_index":389,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log('value",{"_index":2378,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(`${path",{"_index":1371,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["console.log(`copying",{"_index":1408,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["console.log(`creating",{"_index":1374,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["console.log(`position",{"_index":903,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["console.log(`reading",{"_index":1380,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["console.log(`saving",{"_index":1389,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["console.log(associationresponse",{"_index":396,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log(event",{"_index":1310,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["console.log(position",{"_index":1632,"title":{},"body":{"injectables/LocationService.html":{}}}],["console.log(position.coords",{"_index":847,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["console.log(response",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SurveyService.html":{}}}],["console.log(status.connected",{"_index":386,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log(this.associations",{"_index":382,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log(updatedsurveys",{"_index":2491,"title":{},"body":{"injectables/SurveyService.html":{}}}],["console.log(years",{"_index":782,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["const",{"_index":130,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["constructor",{"_index":101,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["constructor(alertcontroller",{"_index":1692,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{}}}],["constructor(answerrelationservice",{"_index":2569,"title":{},"body":{"components/TableComponent.html":{}}}],["constructor(apiservice",{"_index":356,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["constructor(authservice",{"_index":411,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["constructor(detailedformservice",{"_index":726,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["constructor(draftservice",{"_index":2029,"title":{},"body":{"components/QuestionComponent.html":{}}}],["constructor(fb",{"_index":1645,"title":{},"body":{"components/LoginPage.html":{}}}],["constructor(filesystemservice",{"_index":1953,"title":{},"body":{"injectables/PhotoService.html":{}}}],["constructor(formservice",{"_index":978,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormsPage.html":{}}}],["constructor(formsservice",{"_index":1425,"title":{},"body":{"components/FormListComponent.html":{}}}],["constructor(httpclient",{"_index":159,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(photoservice",{"_index":1909,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["constructor(platform",{"_index":1223,"title":{},"body":{"components/DraftsPage.html":{},"components/TypeaheadComponent.html":{}}}],["constructor(private",{"_index":743,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/FormsPage.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"components/TypeaheadComponent.html":{}}}],["constructor(producersservice",{"_index":536,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["constructor(public",{"_index":418,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(questioncontrolservice",{"_index":2263,"title":{},"body":{"injectables/QuestionService.html":{}}}],["constructor(questionservice",{"_index":642,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["constructor(router",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(storage",{"_index":2348,"title":{},"body":{"injectables/StorageService.html":{}}}],["constructor(storageservice",{"_index":1124,"title":{},"body":{"injectables/DraftService.html":{},"injectables/OfflineManagerService.html":{}}}],["constructor(surveyservice",{"_index":1560,"title":{},"body":{"components/HomePage.html":{},"components/SurveysPage.html":{}}}],["contain",{"_index":2734,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["container",{"_index":688,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/LoginPage.html":{}}}],["container's",{"_index":708,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["containing",{"_index":1493,"title":{},"body":{"injectables/FormService.html":{}}}],["content",{"_index":199,"title":{},"body":{"injectables/ApiService.html":{},"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/SurveysPage.html":{}}}],["continuación",{"_index":2088,"title":{},"body":{"components/QuestionComponent.html":{}}}],["continuar",{"_index":2110,"title":{},"body":{"components/QuestionComponent.html":{}}}],["contraseña",{"_index":1667,"title":{},"body":{"components/LoginPage.html":{}}}],["control",{"_index":1741,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["control.service",{"_index":2291,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["control.service.ts",{"_index":2179,"title":{},"body":{"injectables/QuestionControlService.html":{},"coverage.html":{}}}],["control.service.ts:103",{"_index":2194,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:127",{"_index":2191,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:140",{"_index":2201,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:155",{"_index":2202,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:17",{"_index":2188,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:20",{"_index":2204,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:29",{"_index":2200,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:39",{"_index":2190,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:53",{"_index":2196,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:78",{"_index":2198,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.value",{"_index":1743,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["control/question",{"_index":2290,"title":{},"body":{"injectables/QuestionService.html":{}}}],["convert",{"_index":1516,"title":{},"body":{"injectables/FormService.html":{}}}],["conéctese",{"_index":2496,"title":{},"body":{"injectables/SurveyService.html":{}}}],["coordenadas",{"_index":871,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["cop",{"_index":1717,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["copied",{"_index":1410,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["copy",{"_index":1091,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/FilesystemService.html":{},"injectables/SurveyService.html":{}}}],["copy(oldpath",{"_index":1342,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["copy.uuid",{"_index":1093,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["copying",{"_index":1412,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["copyresult",{"_index":1367,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["copyresult.uri",{"_index":1411,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["cordova",{"_index":2901,"title":{},"body":{"dependencies.html":{}}}],["cordovasqlitedriver",{"_index":2363,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["corresponden",{"_index":2091,"title":{},"body":{"components/QuestionComponent.html":{}}}],["counter",{"_index":2380,"title":{},"body":{"injectables/SurveyService.html":{}}}],["coverage",{"_index":2821,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":2085,"title":{},"body":{"components/QuestionComponent.html":{}}}],["created",{"_index":1377,"title":{},"body":{"injectables/FilesystemService.html":{},"injectables/SurveyService.html":{}}}],["created_at",{"_index":439,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["createdpath",{"_index":1929,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["createdraftsfolder",{"_index":1110,"title":{},"body":{"injectables/DraftService.html":{}}}],["createfolder",{"_index":1332,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["createfolder(path",{"_index":1350,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["createloading",{"_index":2383,"title":{},"body":{"injectables/SurveyService.html":{}}}],["createloading(length",{"_index":2410,"title":{},"body":{"injectables/SurveyService.html":{}}}],["createmockdrafts",{"_index":1216,"title":{},"body":{"injectables/DraftService.html":{}}}],["createmocksurveys",{"_index":2512,"title":{},"body":{"injectables/SurveyService.html":{}}}],["createphotopath",{"_index":1903,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["creates",{"_index":2412,"title":{},"body":{"injectables/SurveyService.html":{}}}],["createsurveysfolder",{"_index":2384,"title":{},"body":{"injectables/SurveyService.html":{}}}],["creating",{"_index":1379,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["creationdate",{"_index":432,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["credentials",{"_index":442,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["cssclass",{"_index":679,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{}}}],["cultivo",{"_index":2789,"title":{},"body":{"components/UniqueComponent.html":{}}}],["currency",{"_index":1715,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["currencypipe",{"_index":1693,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["current",{"_index":1479,"title":{},"body":{"injectables/FormService.html":{},"injectables/QuestionService.html":{},"injectables/SurveyService.html":{}}}],["currentdate",{"_index":1155,"title":{},"body":{"injectables/DraftService.html":{},"injectables/FormService.html":{}}}],["currentdate.toisostring",{"_index":1156,"title":{},"body":{"injectables/DraftService.html":{},"injectables/FormService.html":{}}}],["currentform",{"_index":1902,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{}}}],["currentformbeneficiaryname",{"_index":1098,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/PhotoDataTypeComponent.html":{}}}],["currentformid",{"_index":1097,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/PhotoDataTypeComponent.html":{}}}],["currentformtimestamp",{"_index":1101,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/PhotoDataTypeComponent.html":{}}}],["currentformtimestamp}.jpeg",{"_index":1940,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["currentformtimestamp}/${currentformid",{"_index":1939,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["currentindex",{"_index":2317,"title":{},"body":{"injectables/QuestionService.html":{}}}],["currentposition",{"_index":2326,"title":{},"body":{"injectables/QuestionService.html":{}}}],["currentprogress",{"_index":2330,"title":{},"body":{"injectables/QuestionService.html":{}}}],["currentquestion",{"_index":2014,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["currentquestionid",{"_index":1938,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["cursor",{"_index":2171,"title":{},"body":{"components/QuestionComponent.html":{}}}],["d.beneficiary.id",{"_index":1067,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["d.id",{"_index":1069,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{}}}],["d.uuid",{"_index":1174,"title":{},"body":{"injectables/DraftService.html":{}}}],["danger",{"_index":682,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["data",{"_index":203,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"interfaces/StoredRequest.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["data.pop",{"_index":1319,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["data/mock",{"_index":1153,"title":{},"body":{"injectables/DraftService.html":{},"injectables/SurveyService.html":{}}}],["data:image/jpeg;base64",{"_index":1943,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["dataquest",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["dataquestheadercomponent",{"_index":239,"title":{"components/DataquestHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["datatype",{"_index":55,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["date",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["date().gettime",{"_index":1838,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["date(control.value",{"_index":1744,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["date(draft.fechaultimocambio",{"_index":1198,"title":{},"body":{"injectables/DraftService.html":{}}}],["date(form.dateend",{"_index":1521,"title":{},"body":{"injectables/FormService.html":{}}}],["date(form.dateinit",{"_index":1519,"title":{},"body":{"injectables/FormService.html":{}}}],["date(this.getform().fechadescarga",{"_index":926,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["date(value",{"_index":770,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["date.getfullyear",{"_index":784,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["date.setfullyear(newyear",{"_index":785,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["date.toisostring",{"_index":787,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{}}}],["date.tolocaledatestring('es",{"_index":773,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["datedatatypecomponent",{"_index":242,"title":{"components/DateDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["dateend",{"_index":42,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["dateinit",{"_index":41,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["datethreshold",{"_index":1194,"title":{},"body":{"injectables/DraftService.html":{}}}],["datethreshold.setdate(datethreshold.getdate",{"_index":1195,"title":{},"body":{"injectables/DraftService.html":{}}}],["datetimeelement",{"_index":766,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["datetimeelement.value",{"_index":769,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["day",{"_index":756,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["de",{"_index":342,"title":{},"body":{"interfaces/Association.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"interfaces/Producer.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["debes",{"_index":1081,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["decimalseparator",{"_index":1706,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["decimalzeropadding",{"_index":1703,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["decode",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodetoken",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodetoken(token",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoration",{"_index":957,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["decorators",{"_index":566,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{}}}],["default",{"_index":174,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["default_photo",{"_index":1927,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"coverage.html":{}}}],["defined",{"_index":102,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["del",{"_index":917,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["deletedraft",{"_index":1111,"title":{},"body":{"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["deletedraft(index",{"_index":1130,"title":{},"body":{"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["deletedtoast",{"_index":1242,"title":{},"body":{"components/DraftsPage.html":{}}}],["deletedtoast.present",{"_index":1246,"title":{},"body":{"components/DraftsPage.html":{}}}],["deletionalert",{"_index":1233,"title":{},"body":{"components/DraftsPage.html":{}}}],["deletionalert.present",{"_index":1247,"title":{},"body":{"components/DraftsPage.html":{}}}],["demonstrationplot",{"_index":308,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["demostrativa",{"_index":333,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["denegado",{"_index":909,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["denied",{"_index":1405,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["dependencies",{"_index":1462,"title":{"dependencies.html":{}},"body":{"injectables/FormService.html":{},"dependencies.html":{}}}],["desarrollado",{"_index":1670,"title":{},"body":{"components/LoginPage.html":{}}}],["desarrollo",{"_index":2094,"title":{},"body":{"components/QuestionComponent.html":{}}}],["descargada",{"_index":929,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["description",{"_index":45,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/SurveyService.html":{},"properties.html":{}}}],["desde",{"_index":1256,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["desea",{"_index":670,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["deseas",{"_index":1590,"title":{},"body":{"components/HomePage.html":{}}}],["deshacer",{"_index":1239,"title":{},"body":{"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{}}}],["detail",{"_index":789,"title":{},"body":{"components/DetailPage.html":{},"injectables/FormService.html":{}}}],["detail'},{'name",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["detail.page.html",{"_index":792,"title":{},"body":{"components/DetailPage.html":{}}}],["detail.page.scss",{"_index":791,"title":{},"body":{"components/DetailPage.html":{}}}],["detailed",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["detailedformcomponent",{"_index":245,"title":{"components/DetailedFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["detailedformservice",{"_index":539,"title":{"injectables/DetailedFormService.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["detailpage",{"_index":248,"title":{"components/DetailPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["details",{"_index":1539,"title":{},"body":{"injectables/FormService.html":{}}}],["detailsguard",{"_index":2847,"title":{},"body":{"coverage.html":{}}}],["device",{"_index":1312,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"injectables/FormService.html":{},"injectables/SurveyService.html":{}}}],["directive",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["directives",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["directory",{"_index":1346,"title":{},"body":{"injectables/FilesystemService.html":{},"injectables/PhotoService.html":{}}}],["directory.external",{"_index":1349,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["directoryexists",{"_index":1369,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["disabled",{"_index":533,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["disabledremovebutton",{"_index":1877,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["disablequestion",{"_index":99,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["disablequestion(question",{"_index":119,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["display",{"_index":690,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhoneDataTypeComponent.html":{}}}],["dispositivo",{"_index":918,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["div",{"_index":1900,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["documentation",{"_index":2822,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":706,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["dom",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["draft",{"_index":960,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/FormListComponent.html":{}}}],["draft.beneficiary.cedula",{"_index":1204,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.beneficiary.firstname",{"_index":1208,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.beneficiary.id",{"_index":1205,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.beneficiary.lastname",{"_index":1209,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.dateend",{"_index":1259,"title":{},"body":{"components/DraftsPage.html":{}}}],["draft.description",{"_index":1261,"title":{},"body":{"components/DraftsPage.html":{}}}],["draft.fechainicial",{"_index":1157,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.fechaultimocambio",{"_index":1158,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.id",{"_index":1199,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.name",{"_index":1258,"title":{},"body":{"components/DraftsPage.html":{}}}],["draft.questions[0].answers[0].value",{"_index":1260,"title":{},"body":{"components/DraftsPage.html":{}}}],["draft.uuid",{"_index":1175,"title":{},"body":{"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["draft/draft.service",{"_index":1025,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["draft_storage_key",{"_index":2852,"title":{},"body":{"coverage.html":{}}}],["draftbeneficiaryname",{"_index":1207,"title":{},"body":{"injectables/DraftService.html":{}}}],["draftid",{"_index":1206,"title":{},"body":{"injectables/DraftService.html":{}}}],["drafts",{"_index":1061,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["drafts'},{'name",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["drafts.page.html",{"_index":1220,"title":{},"body":{"components/DraftsPage.html":{}}}],["drafts.page.scss",{"_index":1219,"title":{},"body":{"components/DraftsPage.html":{}}}],["drafts.push(draft",{"_index":1192,"title":{},"body":{"injectables/DraftService.html":{}}}],["drafts.some((d",{"_index":1066,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["draftservice",{"_index":980,"title":{"injectables/DraftService.html":{}},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{},"coverage.html":{}}}],["draftspage",{"_index":250,"title":{"components/DraftsPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["drafttype",{"_index":1004,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["drawing",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["drawingpaddatatypecomponent",{"_index":252,"title":{"components/DrawingPadDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["duration",{"_index":860,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"injectables/OfflineManagerService.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/StoredRequest.html":{}}}],["dynamic",{"_index":2880,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":1526,"title":{},"body":{"injectables/FormService.html":{}}}],["el",{"_index":673,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/UniqueComponent.html":{}}}],["element",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["element.checked",{"_index":1779,"title":{},"body":{"components/MultipleComponent.html":{}}}],["elementref",{"_index":1287,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["elimina",{"_index":1077,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["eliminado",{"_index":1243,"title":{},"body":{"components/DraftsPage.html":{}}}],["eliminar",{"_index":1240,"title":{},"body":{"components/DraftsPage.html":{},"components/PhoneDataTypeComponent.html":{}}}],["email",{"_index":186,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["email_verified_at",{"_index":436,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["emaildatatypecomponent",{"_index":255,"title":{"components/EmailDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["emailverifiedat",{"_index":429,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["en",{"_index":915,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["enabled",{"_index":1635,"title":{},"body":{"injectables/LocationService.html":{},"components/TableComponent.html":{}}}],["enablehighaccuracy",{"_index":890,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/LocationService.html":{}}}],["enablequestion",{"_index":100,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["enablequestion(question",{"_index":122,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["enabling",{"_index":892,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["encoding",{"_index":1363,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["encoding.utf8",{"_index":1397,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["encuesta",{"_index":928,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["encuestas",{"_index":1600,"title":{},"body":{"components/HomePage.html":{},"injectables/SurveyService.html":{}}}],["encuestas/${surveyid",{"_index":2507,"title":{},"body":{"injectables/SurveyService.html":{}}}],["end",{"_index":867,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/PhoneDataTypeComponent.html":{}}}],["endpoint",{"_index":165,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"coverage.html":{}}}],["ensure",{"_index":700,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["entre",{"_index":1733,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["enum",{"_index":25,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["enumerations",{"_index":2921,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":181,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DraftService.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["environment.production",{"_index":1187,"title":{},"body":{"injectables/DraftService.html":{},"injectables/SurveyService.html":{}}}],["environment.url",{"_index":175,"title":{},"body":{"injectables/ApiService.html":{}}}],["environmentinjector",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["err",{"_index":1089,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["error",{"_index":905,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/FilesystemService.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["error(response.data.error",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.message",{"_index":1664,"title":{},"body":{"components/LoginPage.html":{}}}],["error?.message",{"_index":1633,"title":{},"body":{"injectables/LocationService.html":{}}}],["errors",{"_index":2810,"title":{},"body":{"components/UniqueComponent.html":{}}}],["errors?.max",{"_index":2816,"title":{},"body":{"components/UniqueComponent.html":{}}}],["errors?.min",{"_index":2815,"title":{},"body":{"components/UniqueComponent.html":{}}}],["errors?.required",{"_index":2812,"title":{},"body":{"components/UniqueComponent.html":{}}}],["es",{"_index":774,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["escoge",{"_index":1058,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["espacial",{"_index":338,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["especializado",{"_index":1076,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["esta",{"_index":1236,"title":{},"body":{"components/DraftsPage.html":{}}}],["este",{"_index":1085,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/HomePage.html":{},"components/UniqueComponent.html":{}}}],["estás",{"_index":1234,"title":{},"body":{"components/DraftsPage.html":{},"components/HomePage.html":{}}}],["ev",{"_index":2717,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["event",{"_index":741,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["event.detail.value",{"_index":1785,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["event.target",{"_index":767,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["event.target.complete",{"_index":1441,"title":{},"body":{"components/FormListComponent.html":{}}}],["event.target.value.length",{"_index":1898,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["eventemitter",{"_index":2701,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["events",{"_index":1833,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["eventtarget",{"_index":2803,"title":{},"body":{"components/UniqueComponent.html":{}}}],["eventtarget.value",{"_index":2804,"title":{},"body":{"components/UniqueComponent.html":{}}}],["everyanswerisselected",{"_index":139,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["exceed",{"_index":707,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["exists",{"_index":1060,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/FilesystemService.html":{}}}],["existsondrafts",{"_index":1065,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["existsonsurveys",{"_index":1070,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["existsproducerwithspecializedform",{"_index":967,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["existsproducerwithspecializedform(producertosearch",{"_index":990,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["exitosamente",{"_index":1244,"title":{},"body":{"components/DraftsPage.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["extendable",{"_index":57,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["extends",{"_index":68,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["f4f4f4",{"_index":2176,"title":{},"body":{"components/QuestionComponent.html":{}}}],["fails",{"_index":2241,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["false",{"_index":319,"title":{},"body":{"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/LocationService.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/UniqueComponent.html":{}}}],["farming",{"_index":297,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"components/UniqueComponent.html":{}}}],["favor",{"_index":911,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["fb",{"_index":1648,"title":{},"body":{"components/LoginPage.html":{}}}],["fechacarga",{"_index":37,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["fechadescarga",{"_index":34,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["fechainicial",{"_index":35,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["fechaultimocambio",{"_index":36,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["fetch",{"_index":1476,"title":{},"body":{"injectables/FormService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["file.name",{"_index":1387,"title":{},"body":{"injectables/FilesystemService.html":{},"injectables/PhotoService.html":{}}}],["file.uri",{"_index":1981,"title":{},"body":{"injectables/PhotoService.html":{}}}],["fileinfo",{"_index":1969,"title":{},"body":{"injectables/PhotoService.html":{}}}],["files",{"_index":1384,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["filesystem",{"_index":1362,"title":{},"body":{"injectables/FilesystemService.html":{},"injectables/PhotoService.html":{}}}],["filesystem.checkpermissions",{"_index":1401,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["filesystem.copy",{"_index":1409,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["filesystem.mkdir",{"_index":1375,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["filesystem.readdir",{"_index":1381,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["filesystem.readfile",{"_index":1414,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["filesystem.requestpermissions",{"_index":1406,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["filesystem.writefile",{"_index":1396,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["filesystemservice",{"_index":1125,"title":{"injectables/FilesystemService.html":{}},"body":{"injectables/DraftService.html":{},"injectables/FilesystemService.html":{},"injectables/PhotoService.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["filtered",{"_index":1478,"title":{},"body":{"injectables/FormService.html":{}}}],["filtereditems",{"_index":2685,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["filteredquestions",{"_index":2249,"title":{},"body":{"injectables/QuestionService.html":{}}}],["filterlist",{"_index":2689,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["filterlist(searchquery",{"_index":2706,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["finaldate",{"_index":1520,"title":{},"body":{"injectables/FormService.html":{}}}],["finaliza",{"_index":934,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["finalize",{"_index":1820,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["finally",{"_index":1480,"title":{},"body":{"injectables/FormService.html":{}}}],["firstname",{"_index":303,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["firstquestion",{"_index":2124,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["firstquestion.id",{"_index":2126,"title":{},"body":{"components/QuestionComponent.html":{}}}],["fit",{"_index":2552,"title":{},"body":{"components/SurveysPage.html":{}}}],["flex",{"_index":691,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{},"components/PhoneDataTypeComponent.html":{}}}],["float",{"_index":1449,"title":{},"body":{"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["fns",{"_index":2904,"title":{},"body":{"dependencies.html":{}}}],["folder",{"_index":1372,"title":{},"body":{"injectables/FilesystemService.html":{},"injectables/SurveyService.html":{}}}],["folder.files.some((file",{"_index":1386,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["folderpath",{"_index":1958,"title":{},"body":{"injectables/PhotoService.html":{}}}],["font",{"_index":710,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{}}}],["forcerefresh",{"_index":369,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ProducerService.html":{}}}],["forkjoin",{"_index":1819,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["forkjoin(obs",{"_index":1853,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["forkjoin(syncrequests).subscribe",{"_index":2482,"title":{},"body":{"injectables/SurveyService.html":{}}}],["form",{"_index":31,"title":{"interfaces/Form.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["form'},{'name",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["form.component",{"_index":796,"title":{},"body":{"components/DetailPage.html":{}}}],["form.component.html",{"_index":800,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.scss",{"_index":799,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts",{"_index":798,"title":{},"body":{"components/DetailedFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:108",{"_index":826,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:185",{"_index":830,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:190",{"_index":819,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:194",{"_index":820,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:24",{"_index":815,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:33",{"_index":824,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:37",{"_index":816,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:41",{"_index":822,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:45",{"_index":821,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:49",{"_index":823,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:53",{"_index":831,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:58",{"_index":832,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:62",{"_index":829,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:66",{"_index":818,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:87",{"_index":828,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.dateend",{"_index":1446,"title":{},"body":{"components/FormListComponent.html":{}}}],["form.description",{"_index":1448,"title":{},"body":{"components/FormListComponent.html":{}}}],["form.name",{"_index":1445,"title":{},"body":{"components/FormListComponent.html":{}}}],["form.questions.foreach((q",{"_index":1527,"title":{},"body":{"injectables/FormService.html":{}}}],["form.questions[0].answers[0].value",{"_index":1447,"title":{},"body":{"components/FormListComponent.html":{}}}],["form.service",{"_index":581,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["form.service.ts",{"_index":959,"title":{},"body":{"injectables/DetailedFormService.html":{},"coverage.html":{}}}],["form.service.ts:105",{"_index":987,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:123",{"_index":989,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:142",{"_index":1013,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:151",{"_index":991,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:168",{"_index":1011,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:17",{"_index":1018,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:177",{"_index":1012,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:18",{"_index":1017,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:187",{"_index":1007,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:19",{"_index":1016,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:191",{"_index":994,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:20",{"_index":1019,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:202",{"_index":995,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:206",{"_index":1014,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:21",{"_index":982,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:214",{"_index":1000,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:225",{"_index":1015,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:31",{"_index":993,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:35",{"_index":997,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:39",{"_index":996,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:43",{"_index":999,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:47",{"_index":1006,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:60",{"_index":1009,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:64",{"_index":998,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:68",{"_index":1002,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:91",{"_index":984,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.ts",{"_index":2867,"title":{},"body":{"coverage.html":{}}}],["form.uuid",{"_index":1444,"title":{},"body":{"components/FormListComponent.html":{}}}],["form/control/question",{"_index":2178,"title":{},"body":{"injectables/QuestionControlService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["form/detailed",{"_index":580,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["form/form.service",{"_index":1020,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form/question/answer",{"_index":89,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["form/question/photo/photo.service",{"_index":1918,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["form/question/photo/photo.service.ts",{"_index":1950,"title":{},"body":{"injectables/PhotoService.html":{},"coverage.html":{}}}],["form/question/photo/photo.service.ts:21",{"_index":1954,"title":{},"body":{"injectables/PhotoService.html":{}}}],["form/question/photo/photo.service.ts:24",{"_index":1965,"title":{},"body":{"injectables/PhotoService.html":{}}}],["form/question/photo/photo.service.ts:35",{"_index":1964,"title":{},"body":{"injectables/PhotoService.html":{}}}],["form/question/photo/photo.service.ts:42",{"_index":1960,"title":{},"body":{"injectables/PhotoService.html":{}}}],["form/question/photo/photo.service.ts:48",{"_index":1957,"title":{},"body":{"injectables/PhotoService.html":{}}}],["form/question/question.service",{"_index":653,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/OpenComponent.html":{},"components/QuestionComponent.html":{},"components/UniqueComponent.html":{}}}],["form/question/question.service.ts",{"_index":2248,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["form/question/question.service.ts:103",{"_index":2278,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:114",{"_index":2280,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:13",{"_index":2288,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:134",{"_index":2281,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:138",{"_index":2287,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:14",{"_index":2289,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:145",{"_index":2271,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:149",{"_index":2266,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:15",{"_index":2264,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:156",{"_index":2265,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:30",{"_index":2276,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:34",{"_index":2283,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:46",{"_index":2275,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:50",{"_index":2269,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:54",{"_index":2270,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:59",{"_index":2272,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:65",{"_index":2274,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:76",{"_index":2285,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:98",{"_index":2268,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form_id",{"_index":51,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["formarray",{"_index":2067,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"components/TableComponent.html":{}}}],["formarray.at(0",{"_index":2602,"title":{},"body":{"components/TableComponent.html":{}}}],["formarray.at(index",{"_index":2633,"title":{},"body":{"components/TableComponent.html":{}}}],["formarray.controls",{"_index":2246,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formarray.push(newformgroup",{"_index":2620,"title":{},"body":{"components/TableComponent.html":{}}}],["formarray.removeat(formarray.length",{"_index":2628,"title":{},"body":{"components/TableComponent.html":{}}}],["formatteddate",{"_index":786,"title":{},"body":{"components/DateDataTypeComponent.html":{},"injectables/DraftService.html":{}}}],["formbuilder",{"_index":574,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/FormService.html":{},"components/LoginPage.html":{},"injectables/QuestionControlService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formbuilder(form",{"_index":1507,"title":{},"body":{"injectables/FormService.html":{},"miscellaneous/functions.html":{}}}],["formcontrol",{"_index":575,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/QuestionControlService.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["formcontrol(answer.checked",{"_index":2223,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formcontrol(answer.value",{"_index":2217,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formcontrol(value",{"_index":2227,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formcontrol.addvalidators(validators.max(this.question.max",{"_index":1714,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.addvalidators(validators.min(this.question.min",{"_index":1713,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.geterror('max",{"_index":1726,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.geterror('min",{"_index":1720,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.setvalue(association.name",{"_index":2659,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["formcontrol.setvalue(element.value",{"_index":1803,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.setvalue(maskitoparsenumber(element.value",{"_index":1719,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["formcontrol.setvalue(selection",{"_index":608,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["formcontrol.setvalue(transplantdate",{"_index":749,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["formcontrol.setvalue(value",{"_index":1782,"title":{},"body":{"components/MultipleComponent.html":{}}}],["formcontrol.value",{"_index":592,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{}}}],["formdetail",{"_index":24,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["formdetail.answer",{"_index":1765,"title":{},"body":{"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["formdetail.answerpivot",{"_index":2928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formdetail.answerrelation",{"_index":105,"title":{},"body":{"injectables/AnswerRelationService.html":{},"miscellaneous/functions.html":{}}}],["formdetail.form",{"_index":817,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"miscellaneous/functions.html":{}}}],["formdetail.formresponse",{"_index":1504,"title":{},"body":{"injectables/FormService.html":{}}}],["formdetail.formtype.specialized",{"_index":1039,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["formdetail.formtype[formid",{"_index":1044,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["formdetail.question",{"_index":115,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FormService.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["formdetail.questioncategory",{"_index":2933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formgroup",{"_index":106,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["formgroup(group",{"_index":2210,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formgroup.addcontrol",{"_index":2226,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formgroup.controls",{"_index":2132,"title":{},"body":{"components/QuestionComponent.html":{}}}],["formgroup.controls[key].invalid",{"_index":2244,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formgroup.controls[lastansweredquestion.id.tostring()].valid",{"_index":2103,"title":{},"body":{"components/QuestionComponent.html":{}}}],["formgroup.controls[question.id].value",{"_index":2164,"title":{},"body":{"components/QuestionComponent.html":{}}}],["formgroup.get(`${order",{"_index":1897,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["formgroup.get(answer.id.tostring",{"_index":1777,"title":{},"body":{"components/MultipleComponent.html":{}}}],["formgroup.get(id)!.disabled",{"_index":2323,"title":{},"body":{"injectables/QuestionService.html":{}}}],["formgroup.get(id.tostring",{"_index":1780,"title":{},"body":{"components/MultipleComponent.html":{}}}],["formgroup.get(questionid)?.disable",{"_index":150,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["formgroup.get(questionid)?.enable",{"_index":151,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["formgroup.get(questionid)?.reset",{"_index":149,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["formgroup.valid",{"_index":2247,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formgroupdirective",{"_index":576,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["formid",{"_index":70,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/DetailedFormService.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["formlistcomponent",{"_index":256,"title":{"components/FormListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["formresponse",{"_index":47,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"miscellaneous/typealiases.html":{}}}],["forms",{"_index":1424,"title":{},"body":{"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{}}}],["forms'},{'name",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["forms.filter((form",{"_index":1517,"title":{},"body":{"injectables/FormService.html":{}}}],["forms.page.html",{"_index":1542,"title":{},"body":{"components/FormsPage.html":{}}}],["forms.page.scss",{"_index":1541,"title":{},"body":{"components/FormsPage.html":{}}}],["forms_storage_key",{"_index":1538,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["formservice",{"_index":979,"title":{"injectables/FormService.html":{}},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"coverage.html":{}}}],["formsmodule",{"_index":790,"title":{},"body":{"components/DetailPage.html":{},"components/LoginPage.html":{}}}],["formspage",{"_index":258,"title":{"components/FormsPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["formsresponse",{"_index":1503,"title":{},"body":{"injectables/FormService.html":{}}}],["formsresponse.map",{"_index":1505,"title":{},"body":{"injectables/FormService.html":{}}}],["formsservice",{"_index":1427,"title":{},"body":{"components/FormListComponent.html":{}}}],["formtosend",{"_index":1230,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["formtype",{"_index":26,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/DetailedFormService.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/enumerations.html":{}}}],["formulario",{"_index":940,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["formularios",{"_index":1599,"title":{},"body":{"components/HomePage.html":{}}}],["foto",{"_index":1946,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["framework",{"_index":2945,"title":{},"body":{"properties.html":{}}}],["from(network.getstatus()).pipe",{"_index":383,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["from(this.apiservice.post(endpoint",{"_index":2475,"title":{},"body":{"injectables/SurveyService.html":{}}}],["from(this.apiservice.post(endpoint)).pipe",{"_index":390,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["from(this.getlocalassociations",{"_index":388,"title":{},"body":{"injectables/AssociationService.html":{}}}],["from(this.storageservice.get(storage_req_key)).pipe",{"_index":1821,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["fromdirectory",{"_index":1345,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["full",{"_index":703,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["fullsavedstring",{"_index":2151,"title":{},"body":{"components/QuestionComponent.html":{}}}],["fullsavedstring.split",{"_index":2155,"title":{},"body":{"components/QuestionComponent.html":{}}}],["function",{"_index":426,"title":{},"body":{"interfaces/AuthManagement.html":{},"coverage.html":{}}}],["functions",{"_index":2923,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":1602,"title":{},"body":{"components/HomePage.html":{}}}],["generateformarray",{"_index":2182,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformarray(question",{"_index":2193,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformcontrol",{"_index":2183,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformcontrol(question",{"_index":2195,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformgroup",{"_index":2184,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformgroup(question",{"_index":2197,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateuuid",{"_index":1112,"title":{},"body":{"injectables/DraftService.html":{}}}],["genericmessage",{"_index":2111,"title":{},"body":{"components/QuestionComponent.html":{}}}],["geolocation",{"_index":1021,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/LocationService.html":{}}}],["geolocation.checkpermissions",{"_index":880,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/LocationService.html":{}}}],["geolocation.getcurrentposition",{"_index":889,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["geolocation.getcurrentposition(options",{"_index":1631,"title":{},"body":{"injectables/LocationService.html":{}}}],["geolocation.requestpermissions",{"_index":885,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/LocationService.html":{}}}],["get(answerid.tostring())!.value",{"_index":147,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["get(endpoint",{"_index":162,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(key",{"_index":2351,"title":{},"body":{"injectables/StorageService.html":{}}}],["get(questionid",{"_index":146,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["getall",{"_index":156,"title":{},"body":{"injectables/ApiService.html":{}}}],["getall(endpoint",{"_index":167,"title":{},"body":{"injectables/ApiService.html":{}}}],["getanswerid",{"_index":523,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getanswerid(value",{"_index":551,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getanswers",{"_index":524,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["getappversion",{"_index":1554,"title":{},"body":{"components/HomePage.html":{}}}],["getassociation",{"_index":2649,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["getassociationbyid",{"_index":351,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getassociationbyid(id",{"_index":359,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getassociations",{"_index":352,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getcategory",{"_index":2015,"title":{},"body":{"components/QuestionComponent.html":{},"components/TableComponent.html":{},"components/TypeComponent.html":{}}}],["getcheckedanswerid",{"_index":2744,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getcheckedanswerid(answersformgroup",{"_index":2760,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getchildquestion",{"_index":2563,"title":{},"body":{"components/TableComponent.html":{}}}],["getchildquestion(sectionindex",{"_index":2579,"title":{},"body":{"components/TableComponent.html":{}}}],["getcurrentindex",{"_index":2251,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getcurrentindex(current",{"_index":2267,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getcurrentlocation",{"_index":845,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/LocationService.html":{}}}],["getdata",{"_index":525,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getdatatype",{"_index":1858,"title":{},"body":{"components/OpenComponent.html":{},"components/TypeComponent.html":{}}}],["getdrafts",{"_index":1113,"title":{},"body":{"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["getdraftsarrayfromstorage",{"_index":1114,"title":{},"body":{"injectables/DraftService.html":{}}}],["getfilteredlength",{"_index":2252,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getfilteredquestions",{"_index":2294,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getfirst",{"_index":2253,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getform",{"_index":801,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["getform().dateend",{"_index":935,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["getform().dateinit",{"_index":933,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["getform().description",{"_index":938,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["getform().name",{"_index":930,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["getformcontrol",{"_index":1904,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"injectables/QuestionControlService.html":{}}}],["getformcontrol(question",{"_index":2199,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["getformgroup",{"_index":2254,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["getformgroup(index",{"_index":2583,"title":{},"body":{"components/TableComponent.html":{}}}],["getforms",{"_index":1457,"title":{},"body":{"injectables/FormService.html":{}}}],["gethelpertext",{"_index":1690,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["getlast",{"_index":2255,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getlastansweredquestion",{"_index":2101,"title":{},"body":{"components/QuestionComponent.html":{}}}],["getlocalassociations",{"_index":353,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getlocaldrafts",{"_index":1115,"title":{},"body":{"injectables/DraftService.html":{}}}],["getlocalforms",{"_index":1458,"title":{},"body":{"injectables/FormService.html":{}}}],["getlocalproducers",{"_index":1983,"title":{},"body":{"injectables/ProducerService.html":{}}}],["getlocalsurveys",{"_index":2385,"title":{},"body":{"injectables/SurveyService.html":{}}}],["getlocation",{"_index":802,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["getmaxdate",{"_index":720,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["getmindate",{"_index":721,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["getnetworkstatus",{"_index":2386,"title":{},"body":{"injectables/SurveyService.html":{}}}],["getnewyear",{"_index":722,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["getnewyear(years",{"_index":732,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["getnextquestion",{"_index":2256,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getnextquestion(current",{"_index":2273,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getorder",{"_index":2564,"title":{},"body":{"components/TableComponent.html":{},"components/TypeComponent.html":{}}}],["getoriginallength",{"_index":2257,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getoriginalquestions",{"_index":2258,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getothererrormessage",{"_index":2745,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getotherplaceholder",{"_index":2746,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getothervalue",{"_index":2747,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getphoto",{"_index":1905,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["getphotoabsolutepath",{"_index":1951,"title":{},"body":{"injectables/PhotoService.html":{}}}],["getphotoabsolutepath(folderpath",{"_index":1955,"title":{},"body":{"injectables/PhotoService.html":{}}}],["getplaceholder",{"_index":1799,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["getpreviousquestion",{"_index":2259,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getpreviousquestion(current",{"_index":2277,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getpreviousvalidquestionfrom",{"_index":2260,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getpreviousvalidquestionfrom(question",{"_index":2279,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getproducers",{"_index":1984,"title":{},"body":{"injectables/ProducerService.html":{}}}],["getprogress",{"_index":638,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/QuestionService.html":{}}}],["getquestionchildren",{"_index":1459,"title":{},"body":{"injectables/FormService.html":{},"components/TableComponent.html":{}}}],["getquestionchildren(question",{"_index":1487,"title":{},"body":{"injectables/FormService.html":{}}}],["getquestionvalue",{"_index":526,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["gets",{"_index":2416,"title":{},"body":{"injectables/SurveyService.html":{}}}],["getselectedvalue",{"_index":527,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getselectedvalue(answersformgroup",{"_index":556,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getsurveys",{"_index":2387,"title":{},"body":{"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["getsurveysarrayfromstorage",{"_index":2388,"title":{},"body":{"injectables/SurveyService.html":{}}}],["getsyncedratio",{"_index":2517,"title":{},"body":{"components/SurveysPage.html":{}}}],["getsyncedsurveys",{"_index":2518,"title":{},"body":{"components/SurveysPage.html":{}}}],["gettext",{"_index":2565,"title":{},"body":{"components/TableComponent.html":{},"components/TypeComponent.html":{}}}],["gettextvalue",{"_index":1751,"title":{},"body":{"components/MultipleComponent.html":{}}}],["getting",{"_index":899,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/LocationService.html":{}}}],["gettoken",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettotalquestions",{"_index":803,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["gettransformeddownladeddate",{"_index":804,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["gettype",{"_index":2016,"title":{},"body":{"components/QuestionComponent.html":{},"components/TypeComponent.html":{}}}],["getunsyncedratio",{"_index":2519,"title":{},"body":{"components/SurveysPage.html":{}}}],["getunsyncedsurveys",{"_index":2520,"title":{},"body":{"components/SurveysPage.html":{}}}],["getuser",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuuidarrayfromlocalstorage",{"_index":2389,"title":{},"body":{"injectables/SurveyService.html":{}}}],["getuuidarrayfromstorage",{"_index":1116,"title":{},"body":{"injectables/DraftService.html":{}}}],["getvalue",{"_index":723,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["getvalue(order",{"_index":1887,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["given",{"_index":1490,"title":{},"body":{"injectables/FormService.html":{}}}],["gotodetail",{"_index":1221,"title":{},"body":{"components/DraftsPage.html":{},"components/SurveysPage.html":{}}}],["gotodetail(formtosend",{"_index":1228,"title":{},"body":{"components/DraftsPage.html":{}}}],["gotodetail(survey",{"_index":2527,"title":{},"body":{"components/SurveysPage.html":{}}}],["granted",{"_index":882,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/FilesystemService.html":{},"injectables/LocationService.html":{}}}],["gray",{"_index":2169,"title":{},"body":{"components/QuestionComponent.html":{}}}],["greenhouse",{"_index":309,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["grid",{"_index":1672,"title":{},"body":{"components/LoginPage.html":{}}}],["group",{"_index":2206,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[answer.id",{"_index":2222,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[answer.order",{"_index":2216,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[child.id",{"_index":2229,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[question.id",{"_index":2208,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["guardando",{"_index":1945,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["guardar",{"_index":667,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/QuestionComponent.html":{}}}],["habilita",{"_index":912,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["handled",{"_index":1455,"title":{},"body":{"injectables/FormService.html":{}}}],["handler",{"_index":683,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{}}}],["handlerefresh",{"_index":1422,"title":{},"body":{"components/FormListComponent.html":{}}}],["handlerefresh(event",{"_index":1431,"title":{},"body":{"components/FormListComponent.html":{}}}],["has_especializada",{"_index":326,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["hay",{"_index":2494,"title":{},"body":{"injectables/SurveyService.html":{}}}],["header",{"_index":632,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["header'},{'name",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["header.component",{"_index":835,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["header.component.html",{"_index":634,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.scss",{"_index":633,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts",{"_index":631,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:15",{"_index":646,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":645,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":652,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:30",{"_index":649,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:34",{"_index":647,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:41",{"_index":648,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:71",{"_index":651,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:75",{"_index":650,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header/dataquest",{"_index":630,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{},"coverage.html":{}}}],["headers",{"_index":198,"title":{},"body":{"injectables/ApiService.html":{}}}],["hecho",{"_index":2740,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["height",{"_index":698,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{},"components/SurveysPage.html":{}}}],["here",{"_index":1456,"title":{},"body":{"injectables/FormService.html":{}}}],["home",{"_index":1550,"title":{},"body":{"components/HomePage.html":{}}}],["home'},{'name",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["home.page.html",{"_index":1552,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1551,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":260,"title":{"components/HomePage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"properties.html":{}}}],["horizontally",{"_index":694,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["hover",{"_index":2175,"title":{},"body":{"components/QuestionComponent.html":{}}}],["html",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["htmlinputelement",{"_index":768,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["htmlionalertelement",{"_index":1722,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["htmlioninputelement",{"_index":1718,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["htmlioninputelement).getinputelement",{"_index":1712,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["htmlionloadingelement",{"_index":2471,"title":{},"body":{"injectables/SurveyService.html":{}}}],["htmlionmodalelement",{"_index":1570,"title":{},"body":{"components/HomePage.html":{}}}],["httpclient",{"_index":160,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpresponse",{"_index":179,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{}}}],["https://ionicframework.com",{"_index":2943,"title":{},"body":{"properties.html":{}}}],["icon",{"_index":709,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{}}}],["id",{"_index":10,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/ApiService.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"interfaces/Form.html":{},"components/MultipleComponent.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionService.html":{},"interfaces/StoredRequest.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["id.split",{"_index":614,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["id.tostring",{"_index":1781,"title":{},"body":{"components/MultipleComponent.html":{},"components/TableComponent.html":{}}}],["idcard",{"_index":430,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["identification",{"_index":298,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["identifier",{"_index":2823,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":705,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["img",{"_index":687,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["img::part(image",{"_index":1948,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["implementation",{"_index":2409,"title":{},"body":{"injectables/SurveyService.html":{}}}],["implements",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["import",{"_index":19,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["imports",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["individual",{"_index":2082,"title":{},"body":{"components/QuestionComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["info.version",{"_index":1576,"title":{},"body":{"components/HomePage.html":{}}}],["información",{"_index":1601,"title":{},"body":{"components/HomePage.html":{}}}],["ingresa",{"_index":1255,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["ingrese",{"_index":1665,"title":{},"body":{"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["iniciado",{"_index":932,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["iniciar",{"_index":1669,"title":{},"body":{"components/LoginPage.html":{}}}],["init",{"_index":2344,"title":{},"body":{"injectables/StorageService.html":{}}}],["initialdate",{"_index":1518,"title":{},"body":{"injectables/FormService.html":{}}}],["initializeapp",{"_index":1555,"title":{},"body":{"components/HomePage.html":{}}}],["inject",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(environmentinjector",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":85,"title":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FilesystemService.html":{},"injectables/FormService.html":{},"injectables/LocationService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{}},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FilesystemService.html":{},"injectables/FormService.html":{},"injectables/LocationService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["injectables",{"_index":87,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FilesystemService.html":{},"injectables/FormService.html":{},"injectables/LocationService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"index.html":{}}}],["injected",{"_index":1463,"title":{},"body":{"injectables/FormService.html":{}}}],["inner",{"_index":2336,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["inner.jpg",{"_index":1610,"title":{},"body":{"components/HomePage.html":{}}}],["input",{"_index":571,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["inputchangeeventdetail",{"_index":2779,"title":{},"body":{"components/UniqueComponent.html":{}}}],["inputcustomevent",{"_index":2780,"title":{},"body":{"components/UniqueComponent.html":{}}}],["inputs",{"_index":532,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["instanceof",{"_index":2233,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["insumo_p5",{"_index":339,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["insumos",{"_index":340,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["intentarlo",{"_index":923,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"interfaces/User.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Form.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"interfaces/User.html":{},"index.html":{}}}],["internet",{"_index":2423,"title":{},"body":{"injectables/SurveyService.html":{}}}],["intl.datetimeformatoptions",{"_index":771,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["invalid",{"_index":2806,"title":{},"body":{"components/UniqueComponent.html":{}}}],["invalidcontrols",{"_index":2242,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["invalidcontrols.length",{"_index":2245,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["invernadero",{"_index":337,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["ion",{"_index":620,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{}}}],["ionic",{"_index":2941,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["ionic/storage",{"_index":2361,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["ionicons",{"_index":2906,"title":{},"body":{"dependencies.html":{}}}],["ionmodal",{"_index":565,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["ionviewdidenter",{"_index":1556,"title":{},"body":{"components/HomePage.html":{}}}],["ionviewwillenter",{"_index":1222,"title":{},"body":{"components/DraftsPage.html":{},"components/SurveysPage.html":{}}}],["isassociationquestion",{"_index":2655,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["isbase64",{"_index":1360,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["ischecked",{"_index":1752,"title":{},"body":{"components/MultipleComponent.html":{}}}],["ischecked(answer",{"_index":1767,"title":{},"body":{"components/MultipleComponent.html":{}}}],["isdraft",{"_index":639,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["isfarmingquestion",{"_index":2788,"title":{},"body":{"components/UniqueComponent.html":{}}}],["isfirstquestion",{"_index":2017,"title":{},"body":{"components/QuestionComponent.html":{}}}],["isform",{"_index":640,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["islast",{"_index":1795,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["islastanswer",{"_index":1753,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["islastanswer(id",{"_index":1769,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["islastquestion",{"_index":2018,"title":{},"body":{"components/QuestionComponent.html":{}}}],["islogged",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["isotherinvalid",{"_index":2748,"title":{},"body":{"components/UniqueComponent.html":{}}}],["isothertouched",{"_index":2808,"title":{},"body":{"components/UniqueComponent.html":{}}}],["isquestionspage",{"_index":968,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["isquestionvalid",{"_index":2019,"title":{},"body":{"components/QuestionComponent.html":{}}}],["isspecializedbeneficiary",{"_index":1049,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["isspecializedform",{"_index":1037,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["issupportcandidate",{"_index":1052,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["issurvey",{"_index":805,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["istable",{"_index":2049,"title":{},"body":{"components/QuestionComponent.html":{}}}],["istokenexpired",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["istokenexpired(token",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalid",{"_index":2020,"title":{},"body":{"components/QuestionComponent.html":{}}}],["item",{"_index":1684,"title":{},"body":{"components/LoginPage.html":{},"components/TypeaheadComponent.html":{}}}],["item.tolowercase().includes(normalizedquery",{"_index":2739,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["item::part(native",{"_index":621,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["items",{"_index":696,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/LoginPage.html":{},"components/TypeaheadComponent.html":{}}}],["iterate",{"_index":1524,"title":{},"body":{"injectables/FormService.html":{}}}],["json",{"_index":2908,"title":{},"body":{"dependencies.html":{}}}],["json.parse",{"_index":393,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"components/TableComponent.html":{}}}],["json.parse(json.stringify(survey",{"_index":2449,"title":{},"body":{"injectables/SurveyService.html":{}}}],["json.parse(response.data",{"_index":2001,"title":{},"body":{"injectables/ProducerService.html":{}}}],["json.parse(storedoperations",{"_index":1840,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["json.parse(value",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(draft",{"_index":1215,"title":{},"body":{"injectables/DraftService.html":{}}}],["json.stringify(resource",{"_index":204,"title":{},"body":{"injectables/ApiService.html":{}}}],["json.stringify(storedobj",{"_index":1844,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["json.stringify(survey",{"_index":2511,"title":{},"body":{"injectables/SurveyService.html":{}}}],["json.stringify(this.question.questionchildren[0",{"_index":2615,"title":{},"body":{"components/TableComponent.html":{}}}],["json.stringify(user",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":692,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/PhoneDataTypeComponent.html":{}}}],["jwt",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt_decode",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_decode(token",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwthelperservice",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":192,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"injectables/FormService.html":{},"injectables/QuestionControlService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/UniqueComponent.html":{}}}],["keys",{"_index":2345,"title":{},"body":{"injectables/StorageService.html":{}}}],["la",{"_index":343,"title":{},"body":{"interfaces/Association.html":{},"components/DetailedFormComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"components/QuestionComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["large",{"_index":713,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["las",{"_index":2090,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["lastanswer",{"_index":1791,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["lastanswer.id",{"_index":1794,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["lastansweredquestion",{"_index":2102,"title":{},"body":{"components/QuestionComponent.html":{}}}],["lastindex",{"_index":2304,"title":{},"body":{"injectables/QuestionService.html":{}}}],["lastname",{"_index":305,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["lastquestion",{"_index":2305,"title":{},"body":{"injectables/QuestionService.html":{}}}],["latitud",{"_index":872,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["left",{"_index":944,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/HomePage.html":{}}}],["legend",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["length",{"_index":2328,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{}}}],["lightgray",{"_index":624,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["limpiar",{"_index":1321,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["line",{"_index":950,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["list",{"_index":1419,"title":{},"body":{"components/FormListComponent.html":{},"injectables/SurveyService.html":{}}}],["list'},{'name",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["list.component",{"_index":1547,"title":{},"body":{"components/FormsPage.html":{},"components/SurveysPage.html":{}}}],["list.component.html",{"_index":1421,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.scss",{"_index":1420,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts",{"_index":1418,"title":{},"body":{"components/FormListComponent.html":{},"coverage.html":{}}}],["list.component.ts:20",{"_index":1430,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:21",{"_index":1429,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:22",{"_index":1428,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:23",{"_index":1426,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:36",{"_index":1435,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:40",{"_index":1434,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:55",{"_index":1432,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:62",{"_index":1436,"title":{},"body":{"components/FormListComponent.html":{}}}],["list/form",{"_index":1417,"title":{},"body":{"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/SurveysPage.html":{},"coverage.html":{}}}],["listener",{"_index":2400,"title":{},"body":{"injectables/SurveyService.html":{}}}],["listeners",{"_index":2432,"title":{},"body":{"injectables/SurveyService.html":{}}}],["literal",{"_index":2762,"title":{},"body":{"components/UniqueComponent.html":{},"miscellaneous/typealiases.html":{}}}],["loadforms",{"_index":1543,"title":{},"body":{"components/FormsPage.html":{}}}],["loading",{"_index":1657,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["loading.dismiss",{"_index":2100,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["loading.present",{"_index":1660,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["loadingcontroller",{"_index":1646,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["loadothercontrol",{"_index":2749,"title":{},"body":{"components/UniqueComponent.html":{}}}],["loadproducers",{"_index":1557,"title":{},"body":{"components/HomePage.html":{}}}],["loaduser",{"_index":1558,"title":{},"body":{"components/HomePage.html":{}}}],["local",{"_index":1453,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["localforage",{"_index":2364,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["locally",{"_index":1498,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["location",{"_index":644,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/LocationService.html":{},"components/QuestionComponent.html":{}}}],["locationservice",{"_index":813,"title":{"injectables/LocationService.html":{}},"body":{"components/DetailedFormComponent.html":{},"injectables/LocationService.html":{},"coverage.html":{}}}],["lodash",{"_index":1028,"title":{},"body":{"injectables/DetailedFormService.html":{},"dependencies.html":{}}}],["logged",{"_index":419,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["login",{"_index":424,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["login(authparams",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.page.html",{"_index":1644,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":1643,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":262,"title":{"components/LoginPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["logout",{"_index":425,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"interfaces/User.html":{}}}],["logoutalert",{"_index":1585,"title":{},"body":{"components/HomePage.html":{}}}],["logoutalert.present",{"_index":1592,"title":{},"body":{"components/HomePage.html":{}}}],["longitud",{"_index":874,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["los",{"_index":913,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["makes",{"_index":1475,"title":{},"body":{"injectables/FormService.html":{}}}],["making",{"_index":1464,"title":{},"body":{"injectables/FormService.html":{}}}],["malla",{"_index":336,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["manager.service.ts",{"_index":1807,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{}}}],["manager.service.ts:13",{"_index":1811,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["manager.service.ts:20",{"_index":1812,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["manager.service.ts:44",{"_index":1818,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["manager.service.ts:73",{"_index":1815,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["manager/offline",{"_index":1806,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{}}}],["managing",{"_index":1452,"title":{},"body":{"injectables/FormService.html":{},"injectables/SurveyService.html":{}}}],["manually",{"_index":2407,"title":{},"body":{"injectables/SurveyService.html":{}}}],["map",{"_index":375,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["map((response",{"_index":391,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["margin",{"_index":956,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["maskito/angular",{"_index":1710,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"dependencies.html":{}}}],["maskito/core",{"_index":1711,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"dependencies.html":{}}}],["maskito/kit",{"_index":1709,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"dependencies.html":{}}}],["maskitoelementpredicateasync",{"_index":1700,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskitomodule",{"_index":1687,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskitonumberoptionsgenerator",{"_index":1702,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskitooptions",{"_index":1701,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskitoparsenumber",{"_index":1708,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskpredicate",{"_index":1688,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["matching",{"_index":84,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.max(window.devicepixelratio",{"_index":1301,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["max",{"_index":66,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/DataquestHeaderComponent.html":{},"interfaces/Form.html":{},"components/LoginPage.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/SurveysPage.html":{}}}],["maxalert",{"_index":1727,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["maxalert.present",{"_index":1729,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["maxcurrency",{"_index":1732,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maxdate",{"_index":776,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["maximumage",{"_index":1629,"title":{},"body":{"injectables/LocationService.html":{}}}],["mayor",{"_index":1734,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["menor",{"_index":1735,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["mergemap",{"_index":2448,"title":{},"body":{"injectables/SurveyService.html":{}}}],["mergemap((response",{"_index":2477,"title":{},"body":{"injectables/SurveyService.html":{}}}],["message",{"_index":660,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/UniqueComponent.html":{}}}],["metadata",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["method",{"_index":2405,"title":{},"body":{"injectables/SurveyService.html":{},"components/TypeComponent.html":{}}}],["methods",{"_index":92,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["middlename",{"_index":304,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["min",{"_index":65,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"components/LoginPage.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/SurveysPage.html":{}}}],["minalert",{"_index":1721,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["minalert.present",{"_index":1725,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["mincurrency",{"_index":1730,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["mindate",{"_index":779,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["miscellaneous",{"_index":2920,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mock",{"_index":1189,"title":{},"body":{"injectables/DraftService.html":{}}}],["mockdrafts",{"_index":1217,"title":{},"body":{"injectables/DraftService.html":{}}}],["mockform",{"_index":1152,"title":{},"body":{"injectables/DraftService.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["mocksurveys",{"_index":2513,"title":{},"body":{"injectables/SurveyService.html":{}}}],["modal",{"_index":520,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/HomePage.html":{}}}],["models/auth.namespace",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{},"injectables/QuestionService.html":{}}}],["models/beneficiary.namespace",{"_index":371,"title":{},"body":{"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/ProducerService.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["models/formdetail.namespace",{"_index":126,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["modules",{"_index":2939,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["money",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["moneydatatypecomponent",{"_index":264,"title":{"components/MoneyDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["moneymask",{"_index":1689,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["month",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["monthdatatypecomponent",{"_index":266,"title":{"components/MonthDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["move",{"_index":2677,"title":{},"body":{"components/TypeComponent.html":{}}}],["moved",{"_index":1270,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["moved(event",{"_index":1280,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["multiple",{"_index":1746,"title":{},"body":{"components/MultipleComponent.html":{}}}],["multiple'},{'name",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["multiple.component.html",{"_index":1748,"title":{},"body":{"components/MultipleComponent.html":{}}}],["multiple.component.scss",{"_index":1747,"title":{},"body":{"components/MultipleComponent.html":{}}}],["multiple/multiple.component",{"_index":2673,"title":{},"body":{"components/TypeComponent.html":{}}}],["multiplecomponent",{"_index":268,"title":{"components/MultipleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["más",{"_index":868,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["máximo",{"_index":1728,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["mínimo",{"_index":1724,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["móvil",{"_index":1257,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["múltiple",{"_index":2145,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["name",{"_index":33,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":23,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/User.html":{}}}],["native",{"_index":1623,"title":{},"body":{"injectables/LocationService.html":{},"dependencies.html":{}}}],["nativesettings",{"_index":1620,"title":{},"body":{"injectables/LocationService.html":{}}}],["nativesettings.openandroid",{"_index":1638,"title":{},"body":{"injectables/LocationService.html":{}}}],["navcontroller",{"_index":2031,"title":{},"body":{"components/QuestionComponent.html":{}}}],["navctrl",{"_index":2030,"title":{},"body":{"components/QuestionComponent.html":{}}}],["navigate",{"_index":863,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/FormListComponent.html":{}}}],["navigate(formtosend",{"_index":1433,"title":{},"body":{"components/FormListComponent.html":{}}}],["ndice",{"_index":2093,"title":{},"body":{"components/QuestionComponent.html":{}}}],["needed",{"_index":894,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["network",{"_index":373,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["network.addlistener('networkstatuschange",{"_index":2452,"title":{},"body":{"injectables/SurveyService.html":{}}}],["network.getstatus().then((status",{"_index":2456,"title":{},"body":{"injectables/SurveyService.html":{}}}],["network.removealllisteners",{"_index":2457,"title":{},"body":{"injectables/SurveyService.html":{}}}],["new",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"components/DrawingPadDataTypeComponent.html":{},"injectables/FormService.html":{},"components/LoginPage.html":{},"components/MonthDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/QuestionControlService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{}}}],["newformgroup",{"_index":2617,"title":{},"body":{"components/TableComponent.html":{}}}],["newformgroup.reset",{"_index":2619,"title":{},"body":{"components/TableComponent.html":{}}}],["newid",{"_index":2623,"title":{},"body":{"components/TableComponent.html":{}}}],["newpath",{"_index":1343,"title":{},"body":{"injectables/FilesystemService.html":{},"components/PhotoDataTypeComponent.html":{}}}],["newyear",{"_index":783,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["next",{"_index":2308,"title":{},"body":{"injectables/QuestionService.html":{}}}],["nextquestion",{"_index":2021,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["ngafterviewinit",{"_index":1271,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["ngonchanges",{"_index":1691,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["ngondestroy",{"_index":806,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["ngoninit",{"_index":528,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["nica",{"_index":2148,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["nit",{"_index":299,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["none",{"_index":958,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["normalize",{"_index":2732,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["normalizedquery",{"_index":2736,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["null",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FormService.html":{},"components/MultipleComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{}}}],["number",{"_index":17,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["number(day",{"_index":762,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["number(id",{"_index":1793,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["number(month",{"_index":761,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["number(year",{"_index":760,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["numberdatatypecomponent",{"_index":270,"title":{"components/NumberDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["numeric",{"_index":772,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["o",{"_index":1079,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["object.keys(answersformgroup.controls",{"_index":2607,"title":{},"body":{"components/TableComponent.html":{}}}],["object.keys(formgroup.controls).filter",{"_index":2243,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["object.keys(sectionformgroup.controls).foreach((key",{"_index":2604,"title":{},"body":{"components/TableComponent.html":{}}}],["object.values(formgroup.value",{"_index":2235,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["obs",{"_index":1845,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["obs.push(oneobs",{"_index":1852,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["observable",{"_index":166,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["obtener",{"_index":920,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["obtenida",{"_index":856,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["of(false",{"_index":1834,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["of(response.status",{"_index":2478,"title":{},"body":{"injectables/SurveyService.html":{}}}],["of(undefined",{"_index":2481,"title":{},"body":{"injectables/SurveyService.html":{}}}],["offline",{"_index":1473,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["offlinemanagerservice",{"_index":1804,"title":{"injectables/OfflineManagerService.html":{}},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{}}}],["ok",{"_index":876,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["oldpath",{"_index":1103,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/FilesystemService.html":{},"injectables/SurveyService.html":{}}}],["onchange",{"_index":1738,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["onchange(event",{"_index":1739,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["one",{"_index":1848,"title":{},"body":{"injectables/OfflineManagerService.html":{},"injectables/QuestionControlService.html":{},"interfaces/StoredRequest.html":{}}}],["oneobs",{"_index":1849,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["oninit",{"_index":516,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["online",{"_index":1474,"title":{},"body":{"injectables/FormService.html":{},"injectables/SurveyService.html":{}}}],["onsubmit",{"_index":2022,"title":{},"body":{"components/QuestionComponent.html":{}}}],["op",{"_index":1846,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["op.data",{"_index":1851,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["open",{"_index":534,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/OpenComponent.html":{},"components/TypeComponent.html":{}}}],["open'},{'name",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["open.component.html",{"_index":1857,"title":{},"body":{"components/OpenComponent.html":{}}}],["open.component.scss",{"_index":1856,"title":{},"body":{"components/OpenComponent.html":{}}}],["open/open.component",{"_index":2672,"title":{},"body":{"components/TypeComponent.html":{}}}],["opencomponent",{"_index":271,"title":{"components/OpenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["openmodal",{"_index":529,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["opensettings",{"_index":1616,"title":{},"body":{"injectables/LocationService.html":{}}}],["opensettings(app",{"_index":1618,"title":{},"body":{"injectables/LocationService.html":{}}}],["operations",{"_index":1816,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["option",{"_index":1639,"title":{},"body":{"injectables/LocationService.html":{}}}],["optional",{"_index":109,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":196,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/LocationService.html":{},"components/TypeaheadComponent.html":{}}}],["order",{"_index":11,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"components/PhoneDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["organizacional",{"_index":2096,"title":{},"body":{"components/QuestionComponent.html":{}}}],["originalquestions",{"_index":2250,"title":{},"body":{"injectables/QuestionService.html":{}}}],["othercontrol",{"_index":2801,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othercontrol.setvalue(othervalue",{"_index":2805,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othercontrol?.errors",{"_index":2811,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othercontrol?.invalid",{"_index":2807,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othercontrol?.touched",{"_index":2809,"title":{},"body":{"components/UniqueComponent.html":{}}}],["otherformcontrol",{"_index":2817,"title":{},"body":{"components/UniqueComponent.html":{}}}],["otherformcontrol.addvalidators(validators.max(this.question.max",{"_index":2820,"title":{},"body":{"components/UniqueComponent.html":{}}}],["otherformcontrol.addvalidators(validators.min(this.question.min",{"_index":2819,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othervalue",{"_index":1783,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["otherwise",{"_index":2731,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["otro",{"_index":1059,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["outline",{"_index":865,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["output",{"_index":2723,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["outputs",{"_index":2694,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["overflow",{"_index":2554,"title":{},"body":{"components/SurveysPage.html":{}}}],["overview",{"_index":2935,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":952,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{}}}],["p.id",{"_index":1171,"title":{},"body":{"injectables/DraftService.html":{}}}],["package",{"_index":2875,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pad",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["padding",{"_index":1612,"title":{},"body":{"components/HomePage.html":{}}}],["pages.guard.ts",{"_index":2338,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["pages.guard.ts:11",{"_index":2340,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{}}}],["pages.guard.ts:8",{"_index":2339,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{}}}],["pages/secure",{"_index":2337,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["para",{"_index":1252,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["param",{"_index":1501,"title":{},"body":{"injectables/FormService.html":{},"injectables/SurveyService.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["parcela",{"_index":332,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["parent",{"_index":1492,"title":{},"body":{"injectables/FormService.html":{}}}],["parseddate",{"_index":759,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["parseddate.toisostring",{"_index":764,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["pasamos",{"_index":2089,"title":{},"body":{"components/QuestionComponent.html":{}}}],["passes",{"_index":2239,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["password",{"_index":187,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthManagement.html":{},"components/LoginPage.html":{},"interfaces/User.html":{}}}],["path",{"_index":1201,"title":{},"body":{"injectables/DraftService.html":{},"injectables/FilesystemService.html":{},"injectables/PhotoService.html":{},"injectables/SurveyService.html":{}}}],["path}/${surveyid",{"_index":2510,"title":{},"body":{"injectables/SurveyService.html":{}}}],["pd_p5",{"_index":331,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["percentage",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["percentagedatatypecomponent",{"_index":273,"title":{"components/PercentageDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["permiso",{"_index":908,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permisos",{"_index":914,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissionresult",{"_index":884,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/FilesystemService.html":{},"injectables/LocationService.html":{}}}],["permissionresult.location",{"_index":886,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/LocationService.html":{}}}],["permissionresult.publicstorage",{"_index":1393,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["permissions",{"_index":879,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/FilesystemService.html":{}}}],["permissions.location",{"_index":881,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissionstatus",{"_index":1366,"title":{},"body":{"injectables/FilesystemService.html":{},"injectables/LocationService.html":{}}}],["permissionstatus.location",{"_index":1625,"title":{},"body":{"injectables/LocationService.html":{}}}],["permissionstatus.publicstorage",{"_index":1391,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["pertenece",{"_index":2657,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["phone",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["phonedatatypecomponent",{"_index":275,"title":{"components/PhoneDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["phones",{"_index":1878,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["phonesobserver",{"_index":1879,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["photo",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["photo.base64string",{"_index":1931,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["photo_prefix",{"_index":1928,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"coverage.html":{}}}],["photoasbase64",{"_index":1925,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{}}}],["photodatatypecomponent",{"_index":277,"title":{"components/PhotoDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["photoname",{"_index":1956,"title":{},"body":{"injectables/PhotoService.html":{}}}],["photopath",{"_index":1961,"title":{},"body":{"injectables/PhotoService.html":{}}}],["photoservice",{"_index":1910,"title":{"injectables/PhotoService.html":{}},"body":{"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"coverage.html":{}}}],["pivot",{"_index":49,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["place",{"_index":1673,"title":{},"body":{"components/LoginPage.html":{}}}],["platform",{"_index":1224,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{},"components/TypeaheadComponent.html":{}}}],["pointer",{"_index":2172,"title":{},"body":{"components/QuestionComponent.html":{}}}],["por",{"_index":910,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["position",{"_index":39,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/DetailedFormComponent.html":{},"interfaces/Form.html":{},"injectables/LocationService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{}}}],["position.coords.altitude",{"_index":851,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["position.coords.latitude",{"_index":873,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["position.coords.latitude},${position.coords.longitude",{"_index":849,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["position.coords.longitude",{"_index":875,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["positionoptions",{"_index":1628,"title":{},"body":{"injectables/LocationService.html":{}}}],["post",{"_index":158,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FormService.html":{}}}],["post(endpoint",{"_index":169,"title":{},"body":{"injectables/ApiService.html":{}}}],["precision",{"_index":893,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/MoneyDataTypeComponent.html":{}}}],["preferences",{"_index":182,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/PhotoService.html":{}}}],["preferences.get",{"_index":191,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["preferences.remove",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["preferences.set(options",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["prefix",{"_index":1704,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["pregunta",{"_index":2112,"title":{},"body":{"components/QuestionComponent.html":{}}}],["preguntas",{"_index":937,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["preloadfarmingvalue",{"_index":2750,"title":{},"body":{"components/UniqueComponent.html":{}}}],["preloadfarmingvalue(answersformgroup",{"_index":2771,"title":{},"body":{"components/UniqueComponent.html":{}}}],["preloadselectedanswers",{"_index":2566,"title":{},"body":{"components/TableComponent.html":{}}}],["preloadtransplantdate",{"_index":724,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["preloadtransplantdate(transplantdate",{"_index":738,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["preloadvalue",{"_index":2650,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["presentalert",{"_index":2023,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["presentalert(istable",{"_index":2047,"title":{},"body":{"components/QuestionComponent.html":{}}}],["presentlocationalert",{"_index":807,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["presentlocationalert(position",{"_index":825,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["presentlocationtoast",{"_index":808,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["presentlocationtoast(message",{"_index":827,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["presentpermissionalert",{"_index":907,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["presents",{"_index":2422,"title":{},"body":{"injectables/SurveyService.html":{}}}],["presenttoast",{"_index":1906,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["presenttoast(message",{"_index":1913,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["prevent",{"_index":898,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["previous",{"_index":2320,"title":{},"body":{"injectables/QuestionService.html":{}}}],["previousbeneficiary",{"_index":1035,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["previousbeneficiary.specialized",{"_index":1040,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["previousquestion",{"_index":2024,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["previousquestion.id.tostring",{"_index":2322,"title":{},"body":{"injectables/QuestionService.html":{}}}],["primer_apellido",{"_index":324,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["primer_nombre",{"_index":322,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["primero",{"_index":1084,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["priorizado",{"_index":2790,"title":{},"body":{"components/UniqueComponent.html":{}}}],["private",{"_index":93,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["proceso",{"_index":1587,"title":{},"body":{"components/HomePage.html":{}}}],["processed",{"_index":1477,"title":{},"body":{"injectables/FormService.html":{}}}],["producer",{"_index":301,"title":{"interfaces/Producer.html":{}},"body":{"interfaces/Association.html":{},"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["producer.cedula",{"_index":617,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["producer.id",{"_index":602,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{}}}],["producer.specialized",{"_index":1165,"title":{},"body":{"injectables/DraftService.html":{}}}],["producerbaseparams",{"_index":318,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"coverage.html":{}}}],["producerbuilder",{"_index":1996,"title":{},"body":{"injectables/ProducerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["producerbuilder(producer",{"_index":2003,"title":{},"body":{"injectables/ProducerService.html":{},"miscellaneous/functions.html":{}}}],["producerresponse",{"_index":321,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"miscellaneous/typealiases.html":{}}}],["producerresponse.map",{"_index":2002,"title":{},"body":{"injectables/ProducerService.html":{}}}],["producers",{"_index":599,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"injectables/ProducerService.html":{}}}],["producers.find",{"_index":616,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{}}}],["producers.map((producer",{"_index":601,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["producers_storage_key",{"_index":2008,"title":{},"body":{"injectables/ProducerService.html":{},"coverage.html":{}}}],["producerservice",{"_index":537,"title":{"injectables/ProducerService.html":{}},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"components/HomePage.html":{},"injectables/ProducerService.html":{},"coverage.html":{}}}],["producersservice",{"_index":541,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{}}}],["producertosearch",{"_index":992,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["producertosearch.id",{"_index":1068,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["progreso",{"_index":665,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["progress",{"_index":635,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/QuestionService.html":{}}}],["progressbar",{"_index":641,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["project",{"_index":2942,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":48,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["promise",{"_index":173,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FilesystemService.html":{},"injectables/FormService.html":{},"injectables/LocationService.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"interfaces/User.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DrawingPadDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provided",{"_index":2710,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["providedin",{"_index":127,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FilesystemService.html":{},"injectables/FormService.html":{},"injectables/LocationService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["proyecto",{"_index":931,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["public",{"_index":96,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FilesystemService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["publicstorage",{"_index":1404,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["pudo",{"_index":919,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["puede",{"_index":1238,"title":{},"body":{"components/DraftsPage.html":{},"components/HomePage.html":{}}}],["pushdraft",{"_index":1117,"title":{},"body":{"injectables/DraftService.html":{}}}],["pushdraft(draft",{"_index":1137,"title":{},"body":{"injectables/DraftService.html":{}}}],["pushed",{"_index":2429,"title":{},"body":{"injectables/SurveyService.html":{}}}],["pushes",{"_index":2427,"title":{},"body":{"injectables/SurveyService.html":{}}}],["pushsurvey",{"_index":2390,"title":{},"body":{"injectables/SurveyService.html":{}}}],["pushsurvey(survey",{"_index":2425,"title":{},"body":{"injectables/SurveyService.html":{}}}],["q.answersrelation.foreach((ar",{"_index":2626,"title":{},"body":{"components/TableComponent.html":{}}}],["q.questionparentid",{"_index":1529,"title":{},"body":{"injectables/FormService.html":{}}}],["quality",{"_index":1976,"title":{},"body":{"injectables/PhotoService.html":{}}}],["que",{"_index":1589,"title":{},"body":{"components/HomePage.html":{},"components/QuestionComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["query",{"_index":2712,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["question",{"_index":52,"title":{"interfaces/Question.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["question'},{'name",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["question.answers.foreach((answer",{"_index":2142,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["question.answers[0",{"_index":2165,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.answers[0].value",{"_index":2221,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["question.answers[question.answers.length",{"_index":2152,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["question.answersrelation",{"_index":131,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["question.component.html",{"_index":2011,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.component.scss",{"_index":2010,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.datatype",{"_index":2160,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["question.id",{"_index":1530,"title":{},"body":{"injectables/FormService.html":{},"components/QuestionComponent.html":{},"components/TableComponent.html":{}}}],["question.id.tostring",{"_index":148,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["question.questionchildren",{"_index":1511,"title":{},"body":{"injectables/FormService.html":{}}}],["question.questionchildren.foreach((section",{"_index":2228,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["question.questionparentid",{"_index":1514,"title":{},"body":{"injectables/FormService.html":{},"injectables/QuestionService.html":{}}}],["question.required",{"_index":2211,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["question.type",{"_index":1509,"title":{},"body":{"injectables/FormService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["question.usertyperestriction",{"_index":2300,"title":{},"body":{"injectables/QuestionService.html":{}}}],["question/question.service",{"_index":1024,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["question?.id",{"_index":2125,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question_category",{"_index":73,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["question_category_id",{"_index":71,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["question_id",{"_index":76,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["questionbuilder",{"_index":2864,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["questionbuilder(question",{"_index":2930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["questioncategory",{"_index":61,"title":{"interfaces/QuestionCategory.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["questioncategorybuilder",{"_index":2865,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["questioncategorybuilder(category",{"_index":2931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["questioncategoryid",{"_index":60,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["questioncategoryresponse",{"_index":74,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["questionchildren",{"_index":63,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/TableComponent.html":{}}}],["questionchildren[sectionindex][childindex",{"_index":2634,"title":{},"body":{"components/TableComponent.html":{}}}],["questioncomponent",{"_index":279,"title":{"components/QuestionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["questioncontrolservice",{"_index":2177,"title":{"injectables/QuestionControlService.html":{}},"body":{"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["questionformarray",{"_index":2136,"title":{},"body":{"components/QuestionComponent.html":{}}}],["questionformarray.at",{"_index":2139,"title":{},"body":{"components/QuestionComponent.html":{}}}],["questionformcontrol",{"_index":765,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["questionformcontrol.setvalue(photo.base64string",{"_index":1922,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["questionformcontrol.setvalue(stringdate",{"_index":775,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["questionformcontrol.value",{"_index":1926,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["questionformgroup",{"_index":2131,"title":{},"body":{"components/QuestionComponent.html":{}}}],["questionid",{"_index":12,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"interfaces/Association.html":{},"interfaces/Form.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/TableComponent.html":{}}}],["questionpage",{"_index":1010,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["questionparentid",{"_index":58,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["questionresponse",{"_index":67,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["questions",{"_index":43,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{}}}],["questions.foreach((question",{"_index":2207,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["questionservice",{"_index":643,"title":{"injectables/QuestionService.html":{}},"body":{"components/DataquestHeaderComponent.html":{},"injectables/DetailedFormService.html":{},"components/OpenComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["questionspage",{"_index":961,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["radius",{"_index":627,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["ratio",{"_index":1300,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["reactiveformsmodule",{"_index":717,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["read",{"_index":1382,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["readdirresult",{"_index":1365,"title":{},"body":{"injectables/FilesystemService.html":{},"injectables/PhotoService.html":{}}}],["readfile",{"_index":1333,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["readfile(path",{"_index":1352,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["readfileasbase64",{"_index":1334,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["readfileasbase64(path",{"_index":1354,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["readfileresult",{"_index":1413,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["readfileresult.data",{"_index":1415,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["readfolder",{"_index":1335,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["readfolder(path",{"_index":1356,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["reading",{"_index":1383,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["readonly",{"_index":154,"title":{},"body":{"injectables/ApiService.html":{},"components/MoneyDataTypeComponent.html":{}}}],["readphoto",{"_index":1952,"title":{},"body":{"injectables/PhotoService.html":{}}}],["readphoto(photopath",{"_index":1959,"title":{},"body":{"injectables/PhotoService.html":{}}}],["realizar",{"_index":1082,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["reanudar",{"_index":942,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["recomendadas",{"_index":2645,"title":{},"body":{"components/TableComponent.html":{}}}],["recommended_actions_question_text",{"_index":2596,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["recommendedactions",{"_index":313,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["recursive",{"_index":1376,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["relation",{"_index":110,"title":{},"body":{"injectables/AnswerRelationService.html":{},"miscellaneous/functions.html":{}}}],["relation.answerpivot.answerid",{"_index":145,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.questionid",{"_index":144,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service",{"_index":2293,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["relation.service.ts",{"_index":91,"title":{},"body":{"injectables/AnswerRelationService.html":{},"coverage.html":{}}}],["relation.service.ts:11",{"_index":116,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:26",{"_index":113,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:35",{"_index":118,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:45",{"_index":107,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:55",{"_index":120,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:61",{"_index":123,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:8",{"_index":103,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation/answer",{"_index":90,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["remote",{"_index":1454,"title":{},"body":{"injectables/FormService.html":{}}}],["remove",{"_index":2346,"title":{},"body":{"injectables/StorageService.html":{}}}],["remove(key",{"_index":2356,"title":{},"body":{"injectables/StorageService.html":{}}}],["removealllisteners",{"_index":2391,"title":{},"body":{"injectables/SurveyService.html":{}}}],["removeddraft",{"_index":1095,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{}}}],["removeddraft.beneficiary",{"_index":1163,"title":{},"body":{"injectables/DraftService.html":{}}}],["removeddraft.id",{"_index":1164,"title":{},"body":{"injectables/DraftService.html":{}}}],["removeddraft.uuid",{"_index":1168,"title":{},"body":{"injectables/DraftService.html":{}}}],["removedraft",{"_index":1118,"title":{},"body":{"injectables/DraftService.html":{}}}],["removedraft(draft",{"_index":1139,"title":{},"body":{"injectables/DraftService.html":{}}}],["removeolddrafts",{"_index":1119,"title":{},"body":{"injectables/DraftService.html":{}}}],["removephone",{"_index":1882,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["removes",{"_index":2431,"title":{},"body":{"injectables/SurveyService.html":{}}}],["removesection",{"_index":2567,"title":{},"body":{"components/TableComponent.html":{}}}],["removetoken",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeuser",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeuuid",{"_index":1120,"title":{},"body":{"injectables/DraftService.html":{}}}],["removeuuid(uuid",{"_index":1142,"title":{},"body":{"injectables/DraftService.html":{}}}],["rendered",{"_index":2708,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["representing",{"_index":1483,"title":{},"body":{"injectables/FormService.html":{}}}],["requerida",{"_index":2113,"title":{},"body":{"components/QuestionComponent.html":{}}}],["requerido",{"_index":2814,"title":{},"body":{"components/UniqueComponent.html":{}}}],["request",{"_index":883,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["requestdata",{"_index":1423,"title":{},"body":{"components/FormListComponent.html":{}}}],["requesting",{"_index":1407,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["requestpermissions",{"_index":1336,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["requests",{"_index":1465,"title":{},"body":{"injectables/FormService.html":{}}}],["required",{"_index":54,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["requiredchildrenresponse",{"_index":2185,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["requiredtableresponse",{"_index":2186,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["resizecanvas",{"_index":1272,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["resolves",{"_index":1486,"title":{},"body":{"injectables/FormService.html":{},"injectables/SurveyService.html":{}}}],["resource",{"_index":170,"title":{},"body":{"injectables/ApiService.html":{}}}],["respectivo",{"_index":1078,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["responda",{"_index":2107,"title":{},"body":{"components/QuestionComponent.html":{}}}],["response",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.data",{"_index":394,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{}}}],["response.status",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["respuesta",{"_index":2146,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["result",{"_index":189,"title":{},"body":{"injectables/ApiService.html":{},"components/AutocompleteComponent.html":{},"injectables/FilesystemService.html":{},"injectables/LocationService.html":{},"injectables/PhotoService.html":{}}}],["result.files.find",{"_index":1980,"title":{},"body":{"injectables/PhotoService.html":{}}}],["result.value",{"_index":195,"title":{},"body":{"injectables/ApiService.html":{}}}],["results",{"_index":83,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["resulttype",{"_index":1973,"title":{},"body":{"injectables/PhotoService.html":{}}}],["resumedraft",{"_index":809,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["retrieved",{"_index":1484,"title":{},"body":{"injectables/FormService.html":{}}}],["retrieves",{"_index":1470,"title":{},"body":{"injectables/FormService.html":{},"injectables/SurveyService.html":{}}}],["retrieving",{"_index":1467,"title":{},"body":{"injectables/FormService.html":{}}}],["return",{"_index":135,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"injectables/FormService.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["returned",{"_index":1482,"title":{},"body":{"injectables/FormService.html":{}}}],["returns",{"_index":111,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":945,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/SurveysPage.html":{}}}],["role",{"_index":431,"title":{},"body":{"interfaces/AuthManagement.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{},"interfaces/User.html":{}}}],["roles",{"_index":437,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["root",{"_index":128,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FilesystemService.html":{},"injectables/FormService.html":{},"injectables/LocationService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["root'},{'name",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["router",{"_index":409,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"injectables/SecureInnerPagesGuard.html":{},"components/SurveysPage.html":{}}}],["rx",{"_index":2593,"title":{},"body":{"components/TableComponent.html":{},"components/TypeaheadComponent.html":{},"dependencies.html":{}}}],["rxfor",{"_index":2558,"title":{},"body":{"components/TableComponent.html":{},"components/TypeaheadComponent.html":{}}}],["rxjs",{"_index":177,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1500,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{}}}],["s.beneficiary.id",{"_index":1072,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["s.id",{"_index":1073,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["sale",{"_index":663,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["salir",{"_index":671,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["satisfactoriamente",{"_index":857,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["save",{"_index":2500,"title":{},"body":{"injectables/SurveyService.html":{}}}],["save_photo_error",{"_index":1944,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"coverage.html":{}}}],["saved",{"_index":2435,"title":{},"body":{"injectables/SurveyService.html":{}}}],["savedraftinfile",{"_index":1121,"title":{},"body":{"injectables/DraftService.html":{}}}],["savedraftinfile(draft",{"_index":1144,"title":{},"body":{"injectables/DraftService.html":{}}}],["savedraftinstorage",{"_index":1122,"title":{},"body":{"injectables/DraftService.html":{}}}],["savedraftinstorage(draft",{"_index":1146,"title":{},"body":{"injectables/DraftService.html":{}}}],["savedrafts",{"_index":1123,"title":{},"body":{"injectables/DraftService.html":{}}}],["savedstringarray",{"_index":2154,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savedstringarray.join",{"_index":2159,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savedstringarray.length",{"_index":2156,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savedstringarray.push(textanswered",{"_index":2158,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savedstringarray[1",{"_index":2157,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveopenresponse",{"_index":2025,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveopenresponse(question",{"_index":2051,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savepad",{"_index":1273,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["savephoto",{"_index":1907,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{}}}],["savephoto(path",{"_index":1962,"title":{},"body":{"injectables/PhotoService.html":{}}}],["savephoto(photo",{"_index":1914,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["saveresponse",{"_index":2026,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveresponse(question",{"_index":2053,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saves",{"_index":2428,"title":{},"body":{"injectables/SurveyService.html":{}}}],["saveselection",{"_index":2027,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveselection(question",{"_index":2055,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savesurvey",{"_index":969,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["savesurveyinfile",{"_index":2392,"title":{},"body":{"injectables/SurveyService.html":{}}}],["savesurveyinfile(survey",{"_index":2433,"title":{},"body":{"injectables/SurveyService.html":{}}}],["savesurveyinstorage",{"_index":2393,"title":{},"body":{"injectables/SurveyService.html":{}}}],["savesurveyinstorage(survey",{"_index":2436,"title":{},"body":{"injectables/SurveyService.html":{}}}],["savesurveys",{"_index":2394,"title":{},"body":{"injectables/SurveyService.html":{}}}],["savetableresponse",{"_index":2028,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savetableresponse(question",{"_index":2057,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saving",{"_index":1395,"title":{},"body":{"injectables/FilesystemService.html":{},"injectables/FormService.html":{},"components/PhotoDataTypeComponent.html":{}}}],["screen",{"_index":2892,"title":{},"body":{"dependencies.html":{}}}],["scroll",{"_index":2555,"title":{},"body":{"components/SurveysPage.html":{}}}],["se",{"_index":666,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/QuestionComponent.html":{}}}],["search",{"_index":2711,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchansweridbyfarming",{"_index":2751,"title":{},"body":{"components/UniqueComponent.html":{}}}],["searchbarinput",{"_index":2690,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchbarinput(ev",{"_index":2715,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchquery",{"_index":2713,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchquery.tolowercase",{"_index":2737,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["secciones",{"_index":2109,"title":{},"body":{"components/QuestionComponent.html":{}}}],["sección",{"_index":2647,"title":{},"body":{"components/TableComponent.html":{}}}],["secondary",{"_index":680,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["secondlastname",{"_index":306,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["section.foreach((child",{"_index":2140,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["sectionformgroup",{"_index":2138,"title":{},"body":{"components/QuestionComponent.html":{},"components/TableComponent.html":{}}}],["sectionformgroup.get",{"_index":2605,"title":{},"body":{"components/TableComponent.html":{}}}],["sectionindex",{"_index":2582,"title":{},"body":{"components/TableComponent.html":{}}}],["secureinnerpagesguard",{"_index":2334,"title":{"injectables/SecureInnerPagesGuard.html":{}},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["see",{"_index":2733,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["seem",{"_index":1835,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["segundo_apellido",{"_index":325,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["segundo_nombre",{"_index":323,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["seguro",{"_index":1235,"title":{},"body":{"components/DraftsPage.html":{},"components/HomePage.html":{}}}],["selecciona",{"_index":546,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TypeaheadComponent.html":{}}}],["select",{"_index":2691,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["select(item",{"_index":2718,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selectedanswers",{"_index":2598,"title":{},"body":{"components/TableComponent.html":{}}}],["selectedanswers[key",{"_index":2609,"title":{},"body":{"components/TableComponent.html":{}}}],["selectedbeneficiary",{"_index":985,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["selectedbeneficiary.specialized",{"_index":1050,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["selectedbeneficiary.support",{"_index":1053,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["selectedform",{"_index":962,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["selecteditem",{"_index":2693,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selectedquestionids",{"_index":345,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["selectedquestions",{"_index":314,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/typealiases.html":{}}}],["selectedvalue",{"_index":594,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selection",{"_index":521,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selectioncancel",{"_index":2695,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selectionchange",{"_index":2696,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selectionchanged",{"_index":530,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selectionchanged(selection",{"_index":561,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selector",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["sendrequests",{"_index":1809,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["sendrequests(operations",{"_index":1813,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["sends",{"_index":2441,"title":{},"body":{"injectables/SurveyService.html":{}}}],["server",{"_index":1466,"title":{},"body":{"injectables/FormService.html":{},"injectables/SurveyService.html":{},"dependencies.html":{}}}],["service",{"_index":1451,"title":{},"body":{"injectables/FormService.html":{},"injectables/SurveyService.html":{}}}],["services",{"_index":1634,"title":{},"body":{"injectables/LocationService.html":{}}}],["services/api/api.service",{"_index":1499,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["services/association/association.service",{"_index":578,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["services/auth/auth.service",{"_index":417,"title":{},"body":{"injectables/AuthGuard.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["services/detailed",{"_index":579,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/OpenComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["services/draft/draft.service",{"_index":1232,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{}}}],["services/filesystem/filesystem.service",{"_index":1154,"title":{},"body":{"injectables/DraftService.html":{},"injectables/PhotoService.html":{},"injectables/SurveyService.html":{}}}],["services/form/form.service",{"_index":1437,"title":{},"body":{"components/FormListComponent.html":{},"components/FormsPage.html":{}}}],["services/location/location.service",{"_index":836,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["services/producer/producer.service",{"_index":582,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"components/HomePage.html":{}}}],["services/storage/storage.service",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["services/survey/survey.service",{"_index":1438,"title":{},"body":{"components/FormListComponent.html":{},"components/HomePage.html":{},"components/SurveysPage.html":{}}}],["sesión",{"_index":1594,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["set",{"_index":897,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/StorageService.html":{}}}],["set(key",{"_index":2358,"title":{},"body":{"injectables/StorageService.html":{}}}],["setbeneficiary",{"_index":970,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setbeneficiary(selectedbeneficiary",{"_index":1001,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setcheckedvalue",{"_index":531,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["setcheckedvalue(answersformgroup",{"_index":563,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/UniqueComponent.html":{}}}],["setcheckedvalue(formgroup",{"_index":1772,"title":{},"body":{"components/MultipleComponent.html":{}}}],["setform",{"_index":971,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setform(form",{"_index":1003,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setlocalassociations",{"_index":354,"title":{},"body":{"injectables/AssociationService.html":{}}}],["setlocalassociations(associations",{"_index":365,"title":{},"body":{"injectables/AssociationService.html":{}}}],["setlocalforms",{"_index":1460,"title":{},"body":{"injectables/FormService.html":{}}}],["setlocalforms(forms",{"_index":1495,"title":{},"body":{"injectables/FormService.html":{}}}],["setlocalproducers",{"_index":1985,"title":{},"body":{"injectables/ProducerService.html":{}}}],["setlocalproducers(producers",{"_index":1991,"title":{},"body":{"injectables/ProducerService.html":{}}}],["setothervalue",{"_index":2752,"title":{},"body":{"components/UniqueComponent.html":{}}}],["setothervalue(event",{"_index":2775,"title":{},"body":{"components/UniqueComponent.html":{}}}],["setquestions",{"_index":972,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/QuestionService.html":{}}}],["setquestions(questions",{"_index":2282,"title":{},"body":{"injectables/QuestionService.html":{}}}],["setquestionspage",{"_index":973,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setquestionspage(questionpage",{"_index":1008,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["sets",{"_index":1497,"title":{},"body":{"injectables/FormService.html":{}}}],["setsignature",{"_index":1274,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["settextvalue",{"_index":1754,"title":{},"body":{"components/MultipleComponent.html":{}}}],["settextvalue(event",{"_index":1774,"title":{},"body":{"components/MultipleComponent.html":{}}}],["settimeout",{"_index":1440,"title":{},"body":{"components/FormListComponent.html":{},"injectables/SurveyService.html":{}}}],["settings",{"_index":1624,"title":{},"body":{"injectables/LocationService.html":{},"dependencies.html":{}}}],["settoken",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["settoken(token",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuser",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuser(user",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["setvalue",{"_index":725,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["setvalue(event",{"_index":740,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["short",{"_index":927,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["showalreadyspecializedbeneficiaryalert",{"_index":974,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["shownospecializedbeneficiaryalert",{"_index":975,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["shownosupportbeneficiaryalert",{"_index":976,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["showquestion",{"_index":2568,"title":{},"body":{"components/TableComponent.html":{}}}],["showquestion(childindex",{"_index":2591,"title":{},"body":{"components/TableComponent.html":{}}}],["showquestion(id",{"_index":2641,"title":{},"body":{"components/TableComponent.html":{}}}],["showstorage",{"_index":2347,"title":{},"body":{"injectables/StorageService.html":{}}}],["si",{"_index":662,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["side",{"_index":866,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["signature",{"_index":1307,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["signature_pad",{"_index":1289,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"dependencies.html":{}}}],["signatureimg",{"_index":1267,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["signaturepad",{"_index":1268,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["signaturepad(this.canvas.nativeelement",{"_index":1291,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["siguiente",{"_index":2167,"title":{},"body":{"components/QuestionComponent.html":{}}}],["simplechanges",{"_index":1916,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["sin",{"_index":1080,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/SurveysPage.html":{}}}],["sincronizadas",{"_index":2540,"title":{},"body":{"components/SurveysPage.html":{}}}],["sincronizando",{"_index":2493,"title":{},"body":{"injectables/SurveyService.html":{}}}],["sincronizar",{"_index":1586,"title":{},"body":{"components/HomePage.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["size",{"_index":711,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{}}}],["small",{"_index":1262,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["social",{"_index":2081,"title":{},"body":{"components/QuestionComponent.html":{}}}],["socio",{"_index":2095,"title":{},"body":{"components/QuestionComponent.html":{}}}],["solid",{"_index":1322,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["someanswerisselected",{"_index":142,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["sost_p5",{"_index":327,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["specialized",{"_index":27,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"injectables/DetailedFormService.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/enumerations.html":{}}}],["sqlite",{"_index":2902,"title":{},"body":{"dependencies.html":{}}}],["src/.../auth.namespace.ts",{"_index":2949,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../beneficiary.namespace.ts",{"_index":2948,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../builder.ts",{"_index":2924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../formdetail.namespace.ts",{"_index":2922,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":2925,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/detailed",{"_index":797,"title":{},"body":{"components/DetailedFormComponent.html":{},"coverage.html":{}}}],["src/app/components/form",{"_index":1416,"title":{},"body":{"components/FormListComponent.html":{},"coverage.html":{}}}],["src/app/components/header/dataquest",{"_index":629,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/question/question.component.ts",{"_index":2009,"title":{},"body":{"components/QuestionComponent.html":{},"coverage.html":{}}}],["src/app/components/question/question.component.ts:100",{"_index":2043,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:151",{"_index":2050,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:161",{"_index":2048,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:175",{"_index":2046,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:185",{"_index":2034,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:189",{"_index":2035,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:193",{"_index":2040,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:197",{"_index":2042,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:201",{"_index":2039,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:212",{"_index":2037,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:218",{"_index":2054,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:240",{"_index":2058,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:257",{"_index":2056,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:285",{"_index":2052,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:304",{"_index":2038,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:308",{"_index":2036,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:312",{"_index":2041,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:35",{"_index":2061,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:36",{"_index":2062,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:37",{"_index":2064,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:38",{"_index":2063,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:39",{"_index":2059,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:40",{"_index":2032,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:53",{"_index":2045,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:65",{"_index":2044,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:69",{"_index":2033,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts",{"_index":515,"title":{},"body":{"components/AutocompleteComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:101",{"_index":562,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:121",{"_index":564,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:131",{"_index":550,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:144",{"_index":552,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:31",{"_index":569,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:32",{"_index":545,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:33",{"_index":543,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:34",{"_index":544,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:35",{"_index":548,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:36",{"_index":542,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:38",{"_index":570,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:40",{"_index":540,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:48",{"_index":559,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:52",{"_index":560,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:57",{"_index":555,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:73",{"_index":557,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:85",{"_index":554,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:97",{"_index":553,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts",{"_index":1745,"title":{},"body":{"components/MultipleComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:16",{"_index":1758,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:17",{"_index":1757,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:18",{"_index":1756,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:20",{"_index":1755,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:24",{"_index":1771,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:26",{"_index":1764,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:30",{"_index":1768,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:44",{"_index":1763,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:53",{"_index":1773,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:62",{"_index":1766,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:70",{"_index":1775,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:78",{"_index":1760,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:89",{"_index":1770,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/open/date",{"_index":714,"title":{},"body":{"components/DateDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/drawing",{"_index":1264,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/email",{"_index":1326,"title":{},"body":{"components/EmailDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/money",{"_index":1685,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/month",{"_index":1736,"title":{},"body":{"components/MonthDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/number",{"_index":1797,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/open.component.ts",{"_index":1855,"title":{},"body":{"components/OpenComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/open.component.ts:44",{"_index":1861,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/open.component.ts:45",{"_index":1860,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/open.component.ts:46",{"_index":1859,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/open.component.ts:50",{"_index":1863,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/open.component.ts:52",{"_index":1862,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/percentage",{"_index":1871,"title":{},"body":{"components/PercentageDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/phone",{"_index":1876,"title":{},"body":{"components/PhoneDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/photo",{"_index":1901,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/text",{"_index":2648,"title":{},"body":{"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/table/table.component.ts",{"_index":2556,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/table/table.component.ts:102",{"_index":2587,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:106",{"_index":2585,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:110",{"_index":2578,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:114",{"_index":2584,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:121",{"_index":2581,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:130",{"_index":2592,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:158",{"_index":2577,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:165",{"_index":2576,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:21",{"_index":2572,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:22",{"_index":2571,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:23",{"_index":2570,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:31",{"_index":2588,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:38",{"_index":2589,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:59",{"_index":2573,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:74",{"_index":2575,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:88",{"_index":2590,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:98",{"_index":2586,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/type.component.ts",{"_index":2662,"title":{},"body":{"components/TypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/type.component.ts:27",{"_index":2665,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:28",{"_index":2664,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:29",{"_index":2663,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:33",{"_index":2671,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:36",{"_index":2666,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:40",{"_index":2670,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:44",{"_index":2667,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:48",{"_index":2669,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:52",{"_index":2668,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts",{"_index":2741,"title":{},"body":{"components/UniqueComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:102",{"_index":2772,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:114",{"_index":2773,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:131",{"_index":2765,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:140",{"_index":2776,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:150",{"_index":2768,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:167",{"_index":2763,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:183",{"_index":2764,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:192",{"_index":2769,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:205",{"_index":2758,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:219",{"_index":2767,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:25",{"_index":2757,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:26",{"_index":2756,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:27",{"_index":2755,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:29",{"_index":2778,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:30",{"_index":2754,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:38",{"_index":2770,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:40",{"_index":2759,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:44",{"_index":2777,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:55",{"_index":2766,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:69",{"_index":2761,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:87",{"_index":2774,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts",{"_index":2681,"title":{},"body":{"components/TypeaheadComponent.html":{},"coverage.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:14",{"_index":2698,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:15",{"_index":2699,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:16",{"_index":2700,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:18",{"_index":2702,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:19",{"_index":2703,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:21",{"_index":2722,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:22",{"_index":2697,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:26",{"_index":2714,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:30",{"_index":2719,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:35",{"_index":2721,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:39",{"_index":2704,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:43",{"_index":2705,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:47",{"_index":2716,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:57",{"_index":2707,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/guards/auth/auth.guard.ts",{"_index":407,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth/auth.guard.ts:11",{"_index":413,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/guards/auth/auth.guard.ts:8",{"_index":412,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/guards/auth/auth.guard.ts:9",{"_index":415,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/guards/details/details.guard.ts",{"_index":2846,"title":{},"body":{"coverage.html":{}}}],["src/app/guards/secure",{"_index":2335,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["src/app/models/auth.namespace.ts",{"_index":423,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/models/beneficiary.namespace.ts",{"_index":296,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/models/formdetail.namespace.ts",{"_index":6,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/detail/detail.page.ts",{"_index":788,"title":{},"body":{"components/DetailPage.html":{},"coverage.html":{}}}],["src/app/pages/detail/detail.page.ts:16",{"_index":793,"title":{},"body":{"components/DetailPage.html":{}}}],["src/app/pages/detail/detail.page.ts:20",{"_index":794,"title":{},"body":{"components/DetailPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts",{"_index":1218,"title":{},"body":{"components/DraftsPage.html":{},"coverage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:16",{"_index":1225,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:26",{"_index":1231,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:28",{"_index":1227,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:32",{"_index":1226,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:57",{"_index":1229,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/forms/forms.page.ts",{"_index":1540,"title":{},"body":{"components/FormsPage.html":{},"coverage.html":{}}}],["src/app/pages/forms/forms.page.ts:16",{"_index":1544,"title":{},"body":{"components/FormsPage.html":{}}}],["src/app/pages/forms/forms.page.ts:20",{"_index":1545,"title":{},"body":{"components/FormsPage.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1549,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:104",{"_index":1565,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:108",{"_index":1562,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:18",{"_index":1571,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:20",{"_index":1572,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:21",{"_index":1561,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:32",{"_index":1568,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:38",{"_index":1564,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:42",{"_index":1563,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:53",{"_index":1569,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:75",{"_index":1567,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:98",{"_index":1566,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/login/login.page.ts",{"_index":1642,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/pages/login/login.page.ts:22",{"_index":1647,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:30",{"_index":1655,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:38",{"_index":1650,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:40",{"_index":1649,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts",{"_index":2514,"title":{},"body":{"components/SurveysPage.html":{},"coverage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:17",{"_index":2521,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:25",{"_index":2529,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:27",{"_index":2522,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:31",{"_index":2524,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:36",{"_index":2526,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:41",{"_index":2528,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:46",{"_index":2523,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:52",{"_index":2525,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/services/api/api.service.ts",{"_index":153,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api/api.service.ts:13",{"_index":161,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:19",{"_index":168,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:23",{"_index":163,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:31",{"_index":171,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/association/association.service.ts",{"_index":349,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{}}}],["src/app/services/association/association.service.ts:15",{"_index":358,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:26",{"_index":363,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:31",{"_index":368,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:61",{"_index":366,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:65",{"_index":364,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:69",{"_index":360,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts:20",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:28",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:33",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:38",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:44",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:48",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:54",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:58",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:65",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:85",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:91",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:97",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/detailed",{"_index":88,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/DetailedFormService.html":{},"injectables/PhotoService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["src/app/services/draft/draft.service.ts",{"_index":1107,"title":{},"body":{"injectables/DraftService.html":{},"coverage.html":{}}}],["src/app/services/draft/draft.service.ts:100",{"_index":1136,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:106",{"_index":1133,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:110",{"_index":1141,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:119",{"_index":1148,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:126",{"_index":1147,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:135",{"_index":1132,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:139",{"_index":1150,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:148",{"_index":1129,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:15",{"_index":1151,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:153",{"_index":1145,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:16",{"_index":1126,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:24",{"_index":1138,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:33",{"_index":1131,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:43",{"_index":1128,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:52",{"_index":1140,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:62",{"_index":1143,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:67",{"_index":1135,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:88",{"_index":1134,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/filesystem/filesystem.service.ts",{"_index":1329,"title":{},"body":{"injectables/FilesystemService.html":{},"coverage.html":{}}}],["src/app/services/filesystem/filesystem.service.ts:110",{"_index":1358,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["src/app/services/filesystem/filesystem.service.ts:121",{"_index":1348,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["src/app/services/filesystem/filesystem.service.ts:146",{"_index":1355,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["src/app/services/filesystem/filesystem.service.ts:15",{"_index":1338,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["src/app/services/filesystem/filesystem.service.ts:162",{"_index":1353,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["src/app/services/filesystem/filesystem.service.ts:18",{"_index":1351,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["src/app/services/filesystem/filesystem.service.ts:39",{"_index":1357,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["src/app/services/filesystem/filesystem.service.ts:54",{"_index":1340,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["src/app/services/filesystem/filesystem.service.ts:65",{"_index":1361,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["src/app/services/filesystem/filesystem.service.ts:99",{"_index":1341,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["src/app/services/form/form.service.ts",{"_index":1450,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["src/app/services/form/form.service.ts:120",{"_index":1485,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:129",{"_index":1496,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:18",{"_index":1461,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:39",{"_index":1469,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:94",{"_index":1488,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/location/location.service.ts",{"_index":1615,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["src/app/services/location/location.service.ts:10",{"_index":1617,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/services/location/location.service.ts:42",{"_index":1619,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/services/offline",{"_index":1805,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{}}}],["src/app/services/producer/producer.service.ts",{"_index":1982,"title":{},"body":{"injectables/ProducerService.html":{},"coverage.html":{}}}],["src/app/services/producer/producer.service.ts:16",{"_index":1988,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:23",{"_index":1990,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:27",{"_index":1995,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:33",{"_index":1994,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:59",{"_index":1989,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:63",{"_index":1992,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/storage/storage.service.ts",{"_index":2341,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/services/storage/storage.service.ts:10",{"_index":2349,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:16",{"_index":2353,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:22",{"_index":2359,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:26",{"_index":2352,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:30",{"_index":2357,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:34",{"_index":2350,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:38",{"_index":2355,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:42",{"_index":2354,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:46",{"_index":2360,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/survey/survey.service.ts",{"_index":2379,"title":{},"body":{"injectables/SurveyService.html":{},"coverage.html":{}}}],["src/app/services/survey/survey.service.ts:104",{"_index":2419,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:114",{"_index":2417,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:121",{"_index":2438,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:131",{"_index":2437,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:145",{"_index":2439,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:19",{"_index":2444,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:199",{"_index":2411,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:20",{"_index":2445,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:209",{"_index":2421,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:21",{"_index":2446,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:22",{"_index":2396,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:228",{"_index":2403,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:237",{"_index":2413,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:247",{"_index":2434,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:36",{"_index":2426,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:45",{"_index":2397,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:56",{"_index":2415,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:67",{"_index":2430,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:74",{"_index":2414,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:89",{"_index":2418,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/utils/builder.ts",{"_index":2860,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/data/mock",{"_index":2866,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.development.ts",{"_index":2868,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.mobile.ts",{"_index":2869,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":2870,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.ts",{"_index":2871,"title":{},"body":{"coverage.html":{}}}],["src/main.ts",{"_index":2872,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["standalone",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["startdraft",{"_index":810,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["startdrawing",{"_index":1275,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["startdrawing(event",{"_index":1285,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["startform",{"_index":811,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["statements",{"_index":2824,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":568,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["status",{"_index":1403,"title":{},"body":{"injectables/FilesystemService.html":{},"injectables/LocationService.html":{},"injectables/SurveyService.html":{}}}],["status.connected",{"_index":387,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["storage",{"_index":1468,"title":{},"body":{"injectables/FormService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"dependencies.html":{}}}],["storage/storage.service",{"_index":372,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["storage_req_key",{"_index":1843,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{}}}],["storageservice",{"_index":357,"title":{"injectables/StorageService.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["store",{"_index":1537,"title":{},"body":{"injectables/FormService.html":{}}}],["stored",{"_index":1481,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["storedobj",{"_index":1823,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedobj.length",{"_index":1825,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedobj.push(action",{"_index":1841,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedoperations",{"_index":1824,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedreq",{"_index":1854,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedrequest",{"_index":1814,"title":{"interfaces/StoredRequest.html":{}},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{}}}],["storerequest",{"_index":1810,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["storerequest(url",{"_index":1817,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"components/HomePage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["stringdate",{"_index":751,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["stringdate.split",{"_index":758,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["strong",{"_index":949,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["stuck",{"_index":900,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["styles",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["styleurls",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["su",{"_index":664,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["subheader",{"_index":2087,"title":{},"body":{"components/QuestionComponent.html":{}}}],["subscription",{"_index":2060,"title":{},"body":{"components/QuestionComponent.html":{}}}],["substring",{"_index":2735,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["succesfully",{"_index":1827,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["success",{"_index":1324,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["sum",{"_index":733,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["supplies",{"_index":310,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["support",{"_index":29,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"injectables/DetailedFormService.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/enumerations.html":{}}}],["survey",{"_index":963,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["survey)).pipe",{"_index":2476,"title":{},"body":{"injectables/SurveyService.html":{}}}],["survey.beneficiary.firstname",{"_index":2504,"title":{},"body":{"injectables/SurveyService.html":{}}}],["survey.beneficiary.lastname",{"_index":2505,"title":{},"body":{"injectables/SurveyService.html":{}}}],["survey.fechainicial",{"_index":2506,"title":{},"body":{"injectables/SurveyService.html":{}}}],["survey.id",{"_index":2502,"title":{},"body":{"injectables/SurveyService.html":{}}}],["survey.sync",{"_index":2470,"title":{},"body":{"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["survey.uuid",{"_index":2490,"title":{},"body":{"injectables/SurveyService.html":{}}}],["survey/survey.service",{"_index":1026,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["survey_storage_key",{"_index":2858,"title":{},"body":{"coverage.html":{}}}],["surveybeneficiaryname",{"_index":2503,"title":{},"body":{"injectables/SurveyService.html":{}}}],["surveyid",{"_index":2501,"title":{},"body":{"injectables/SurveyService.html":{}}}],["surveys",{"_index":1063,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/FilesystemService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["surveys'},{'name",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["surveys.filter((survey",{"_index":2531,"title":{},"body":{"components/SurveysPage.html":{}}}],["surveys.length",{"_index":2536,"title":{},"body":{"components/SurveysPage.html":{}}}],["surveys.page.html",{"_index":2516,"title":{},"body":{"components/SurveysPage.html":{}}}],["surveys.page.scss",{"_index":2515,"title":{},"body":{"components/SurveysPage.html":{}}}],["surveys.push(survey",{"_index":2466,"title":{},"body":{"injectables/SurveyService.html":{}}}],["surveys.some((s",{"_index":1071,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["surveys_storage_key",{"_index":2859,"title":{},"body":{"coverage.html":{}}}],["surveyservice",{"_index":981,"title":{"injectables/SurveyService.html":{}},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"coverage.html":{}}}],["surveyspage",{"_index":281,"title":{"components/SurveysPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["surveystosync",{"_index":2468,"title":{},"body":{"injectables/SurveyService.html":{}}}],["surveystosync.map((survey",{"_index":2474,"title":{},"body":{"injectables/SurveyService.html":{}}}],["surveytype",{"_index":1005,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["switch",{"_index":1043,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["switchmap",{"_index":376,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{}}}],["switchmap((status",{"_index":384,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["switchmap((storedoperations",{"_index":1822,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["sync",{"_index":38,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["syncassociations",{"_index":355,"title":{},"body":{"injectables/AssociationService.html":{}}}],["syncassociations(forcerefresh",{"_index":367,"title":{},"body":{"injectables/AssociationService.html":{}}}],["synced",{"_index":1828,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["syncedsurvey",{"_index":2486,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncedsurvey.dateend",{"_index":2543,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurvey.description",{"_index":2545,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurvey.name",{"_index":2542,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurvey.questions[0].answers[0].value",{"_index":2544,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurvey.uuid",{"_index":2541,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurveys",{"_index":2533,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurveys.length",{"_index":2535,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncproducers",{"_index":1986,"title":{},"body":{"injectables/ProducerService.html":{}}}],["syncproducers(forcerefresh",{"_index":1993,"title":{},"body":{"injectables/ProducerService.html":{}}}],["syncrequests",{"_index":2473,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncresult",{"_index":2488,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncresult?.uuid",{"_index":2489,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncresults",{"_index":2483,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncresults.find",{"_index":2487,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncs",{"_index":2440,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncsurveys",{"_index":2395,"title":{},"body":{"injectables/SurveyService.html":{}}}],["t",{"_index":164,"title":{},"body":{"injectables/ApiService.html":{}}}],["tabla",{"_index":1491,"title":{},"body":{"injectables/FormService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["table",{"_index":2557,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["table.component.html",{"_index":2560,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":2559,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecomponent",{"_index":283,"title":{"components/TableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["tablemessage",{"_index":2106,"title":{},"body":{"components/QuestionComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2874,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1970,"title":{},"body":{"injectables/PhotoService.html":{}}}],["takephoto",{"_index":1908,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{}}}],["takes",{"_index":701,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["tap",{"_index":377,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["tap((associations",{"_index":399,"title":{},"body":{"injectables/AssociationService.html":{}}}],["tap((producers",{"_index":2004,"title":{},"body":{"injectables/ProducerService.html":{}}}],["tardar",{"_index":1588,"title":{},"body":{"components/HomePage.html":{}}}],["technical",{"_index":316,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["technicalassistance",{"_index":307,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["tel",{"_index":2161,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["template",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["templateurl",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["text",{"_index":53,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["textanswered",{"_index":2149,"title":{},"body":{"components/QuestionComponent.html":{}}}],["textareadatatypecomponent",{"_index":285,"title":{"components/TextAreaDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["textdatatypecomponent",{"_index":287,"title":{"components/TextDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["then((alert",{"_index":2097,"title":{},"body":{"components/QuestionComponent.html":{}}}],["then((position",{"_index":846,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["this._storage",{"_index":2368,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.clear",{"_index":2372,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.foreach((value",{"_index":2375,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.get(key",{"_index":2370,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.keys",{"_index":2374,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.length",{"_index":2373,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.remove(key",{"_index":2371,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.set(key",{"_index":2369,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.alertcontroller",{"_index":2084,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.alertcontroller.create",{"_index":675,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["this.alertshown",{"_index":2083,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.answerrelationservice.checkanswerrelation",{"_index":2638,"title":{},"body":{"components/TableComponent.html":{}}}],["this.answerrelationservice.checkanswerrelation(nextquestion",{"_index":2312,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.answerrelationservice.disablequestion(question",{"_index":2333,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["this.answerrelationservice.enablequestion(question",{"_index":2332,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["this.apiservice.post",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(op.url",{"_index":1850,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.appversion",{"_index":1575,"title":{},"body":{"components/HomePage.html":{}}}],["this.areselected(relation",{"_index":141,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["this.assignbeneficiary(selection",{"_index":607,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.assignformcontrols(question",{"_index":2212,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.assoaciationservice.getassociationbyid(associationid",{"_index":2795,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.associations",{"_index":381,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associations.find((association",{"_index":403,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associationservice.getassociationbyid(associationid",{"_index":2661,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["this.atleastonechecked",{"_index":2224,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.authservice.getuser",{"_index":2298,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.authservice.getuser().then((user",{"_index":1596,"title":{},"body":{"components/HomePage.html":{}}}],["this.authservice.islogged",{"_index":420,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["this.authservice.login(this.form.value",{"_index":1662,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authservice.logout",{"_index":1595,"title":{},"body":{"components/HomePage.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["this.backbuttonsubscription",{"_index":2073,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.backbuttonsubscription.unsubscribe",{"_index":2075,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.cansetbeneficiary(selectedbeneficiary",{"_index":1042,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.cansetspecializedbeneficiary(selectedbeneficiary",{"_index":1046,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.cansetsupportbeneficiary(selectedbeneficiary",{"_index":1047,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.canvas.nativeelement.getcontext('2d').scale(ratio",{"_index":1304,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.height",{"_index":1303,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.offsetheight",{"_index":1299,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.offsetwidth",{"_index":1298,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.style.height",{"_index":1297,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.style.width",{"_index":1296,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.width",{"_index":1302,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.changeinputstate(answersformgroup",{"_index":2785,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.changeinputstate(formgroup",{"_index":1778,"title":{},"body":{"components/MultipleComponent.html":{}}}],["this.changequestionid(basearraycopy",{"_index":2616,"title":{},"body":{"components/TableComponent.html":{}}}],["this.changespecialized(producer",{"_index":1166,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.checkandrelation(answerrelation",{"_index":136,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["this.checkfolderexists(path",{"_index":1370,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["this.checkorrelation(answerrelation",{"_index":137,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["this.checkpermissions",{"_index":1390,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["this.checkphonelistlength(phones",{"_index":1896,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["this.confirmchanges",{"_index":2727,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.confirmexit",{"_index":658,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["this.counter",{"_index":2467,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.createdraftsfolder",{"_index":1182,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.createloading(surveystosync.length",{"_index":2472,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.createmockdrafts",{"_index":1190,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.createmocksurveys",{"_index":2464,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.createphotopath",{"_index":1930,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.createsurveysfolder",{"_index":2459,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.currencypipe.transform",{"_index":1716,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["this.currentform",{"_index":1919,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{}}}],["this.currentform.beneficiary.firstname",{"_index":1935,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.currentform.beneficiary.lastname",{"_index":1936,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.currentform.fechainicial",{"_index":1937,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.currentform.id",{"_index":1934,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.currentquestion",{"_index":2070,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion.questioncategory.name",{"_index":2079,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion.questionchildren.foreach((section",{"_index":2137,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion.type",{"_index":2098,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion?.questioncategory.name",{"_index":2118,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion?.type",{"_index":2119,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.data",{"_index":586,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.decodetoken(token",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.detailedformservice.getform",{"_index":839,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{}}}],["this.detailedformservice.getform().beneficiary.associationid",{"_index":2660,"title":{},"body":{"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.detailedformservice.getform().beneficiary.recommendedactions",{"_index":2600,"title":{},"body":{"components/TableComponent.html":{}}}],["this.detailedformservice.getform().beneficiary.transplantdate",{"_index":744,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["this.detailedformservice.gettotalquestions",{"_index":925,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.isdraft",{"_index":686,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["this.detailedformservice.isform",{"_index":685,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["this.detailedformservice.isquestionspage",{"_index":657,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["this.detailedformservice.issurvey",{"_index":840,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["this.detailedformservice.savesurvey",{"_index":2115,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.detailedformservice.setbeneficiary(beneficiary",{"_index":618,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.detailedformservice.setform(formtosend",{"_index":1249,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["this.detailedformservice.setform(survey",{"_index":2532,"title":{},"body":{"components/SurveysPage.html":{}}}],["this.detailedformservice.setquestionspage(false",{"_index":838,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.setquestionspage(true",{"_index":843,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.startdraft",{"_index":924,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.updatemodifydate",{"_index":2134,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.disabled",{"_index":746,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["this.disablequestion(childquestion",{"_index":2640,"title":{},"body":{"components/TableComponent.html":{}}}],["this.disablequestion(nextquestion",{"_index":2315,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.draft",{"_index":1031,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{}}}],["this.drafts",{"_index":1184,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts.filter((draft",{"_index":1197,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts.findindex((d",{"_index":1173,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts.push(draft",{"_index":1159,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts.splice(index",{"_index":1161,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts[index].fechaultimocambio",{"_index":1200,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.draftservice.deletedraft(index",{"_index":1241,"title":{},"body":{"components/DraftsPage.html":{}}}],["this.draftservice.getdrafts",{"_index":1062,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{}}}],["this.draftservice.getlocaldrafts",{"_index":1584,"title":{},"body":{"components/HomePage.html":{}}}],["this.draftservice.pushdraft(copy",{"_index":1094,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.draftservice.removedraft",{"_index":1096,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.draftservice.savedraftinstorage(this.currentform",{"_index":2135,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.draftservice.updatemodifydate(this.selectedform",{"_index":1106,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.enablequestion(childquestion",{"_index":2639,"title":{},"body":{"components/TableComponent.html":{}}}],["this.enablequestion(nextquestion",{"_index":2313,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.existsproducerwithspecializedform(selectedbeneficiary",{"_index":1048,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.farming",{"_index":2794,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.fb.group",{"_index":1651,"title":{},"body":{"components/LoginPage.html":{}}}],["this.filesystemservice.copy(oldpath",{"_index":2508,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.filesystemservice.createfolder(path",{"_index":1203,"title":{},"body":{"injectables/DraftService.html":{},"injectables/SurveyService.html":{}}}],["this.filesystemservice.readfileasbase64(photopath",{"_index":1978,"title":{},"body":{"injectables/PhotoService.html":{}}}],["this.filesystemservice.readfolder",{"_index":1979,"title":{},"body":{"injectables/PhotoService.html":{}}}],["this.filesystemservice.writefile",{"_index":2509,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.filesystemservice.writefile(path",{"_index":1214,"title":{},"body":{"injectables/DraftService.html":{},"injectables/PhotoService.html":{}}}],["this.filtereditems",{"_index":2724,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.filteredquestions",{"_index":2299,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions.indexof(current",{"_index":2318,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions.length",{"_index":2302,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions[0",{"_index":2303,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions[lastindex",{"_index":2306,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions[this.getcurrentindex(current",{"_index":2309,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filterlist(ev.target.value",{"_index":2730,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.form",{"_index":1030,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{}}}],["this.form.valid",{"_index":1661,"title":{},"body":{"components/LoginPage.html":{}}}],["this.formgroup",{"_index":2068,"title":{},"body":{"components/QuestionComponent.html":{},"components/UniqueComponent.html":{}}}],["this.formgroup.controls",{"_index":2601,"title":{},"body":{"components/TableComponent.html":{}}}],["this.formgroup.controls[nextquestion.id]!.disabled",{"_index":2123,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.formgroup.controls[this.currentquestion.id].valid",{"_index":2120,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.formgroup.controls[this.question.id",{"_index":1742,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["this.formgroup.controls[this.question.id].setvalue(event.detail.value",{"_index":1740,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["this.formgroup.get",{"_index":589,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.formgroup.get(`${this.question.id",{"_index":748,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MultipleComponent.html":{}}}],["this.formgroup.get(`${this.question.id}`)?.setvalue(base64data",{"_index":1317,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.formgroup.get(`${this.question.id}`)?.setvalue(event.target.value",{"_index":1328,"title":{},"body":{"components/EmailDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["this.formgroup.get(`${this.question.id}`)?.value",{"_index":752,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["this.formgroup.get(questionid",{"_index":1924,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.formgroup.valid",{"_index":2121,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.forms",{"_index":1443,"title":{},"body":{"components/FormListComponent.html":{},"components/FormsPage.html":{}}}],["this.formservice.getforms().subscribe((forms",{"_index":1548,"title":{},"body":{"components/FormsPage.html":{}}}],["this.formsservice.getforms().subscribe((forms",{"_index":1442,"title":{},"body":{"components/FormListComponent.html":{}}}],["this.generateformarray(question",{"_index":2214,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.generateformcontrol(question",{"_index":2213,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.generateformgroup(question",{"_index":2215,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.getanswerid(selection",{"_index":609,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getanswers",{"_index":603,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["this.getanswers().find((answer",{"_index":619,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getassociation",{"_index":2658,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["this.getcheckedanswerid(answersformgroup",{"_index":2784,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.getchildquestion",{"_index":2636,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getcurrentindex(currentquestion",{"_index":2327,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getcurrentlocation",{"_index":1627,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.getdata",{"_index":587,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getdraftsarrayfromstorage",{"_index":1186,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.getfilteredlength",{"_index":2329,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getfirst",{"_index":2319,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getform().altitud",{"_index":850,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.getform().position",{"_index":848,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.getformcontrol",{"_index":1920,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.getformcontrol(child",{"_index":2230,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.getformcontrol(question",{"_index":2209,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.getformgroup(i).get(questionid)!.enabled",{"_index":2642,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getformgroup(sectionindex",{"_index":2637,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getlast",{"_index":2307,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getlocalforms",{"_index":1502,"title":{},"body":{"injectables/FormService.html":{}}}],["this.getlocalproducers",{"_index":1999,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.getlocation",{"_index":841,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.getnewyear(number(this.question.max",{"_index":778,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["this.getnewyear(number(this.question.min",{"_index":781,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["this.getnextquestion(question",{"_index":2310,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getpreviousquestion(question",{"_index":2321,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getpreviousvalidquestionfrom(previousquestion",{"_index":2324,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getprogress",{"_index":655,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["this.getquestionchildren(question",{"_index":1510,"title":{},"body":{"injectables/FormService.html":{}}}],["this.getquestionvalue",{"_index":585,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getselectedvalue(answers",{"_index":593,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getsurveys",{"_index":2530,"title":{},"body":{"components/SurveysPage.html":{}}}],["this.getsurveysarrayfromstorage",{"_index":2462,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.getsyncedsurveys",{"_index":2534,"title":{},"body":{"components/SurveysPage.html":{}}}],["this.gettoken",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getunsyncedsurveys",{"_index":2538,"title":{},"body":{"components/SurveysPage.html":{}}}],["this.getuuidarrayfromlocalstorage",{"_index":2458,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.getuuidarrayfromstorage",{"_index":1181,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.httpclient.get(`/api/${endpoint",{"_index":184,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient.get(`/api/${endpoint}/${id",{"_index":185,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient.post(`/api/${endpoint",{"_index":188,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.init",{"_index":2365,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.initializeapp",{"_index":1577,"title":{},"body":{"components/HomePage.html":{}}}],["this.isdraft",{"_index":672,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["this.isform",{"_index":661,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["this.islastanswer(id",{"_index":1787,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["this.isquestionvalid",{"_index":2077,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.issurvey",{"_index":2072,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.istokenexpired(token",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isvalid",{"_index":2114,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.items",{"_index":2725,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.items.filter((item",{"_index":2738,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.jwthelperservice.istokenexpired(token",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loadingcontroller.create",{"_index":1658,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["this.loadingcontroller.dismiss",{"_index":1663,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loadothercontrol",{"_index":2800,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.loadproducers",{"_index":1579,"title":{},"body":{"components/HomePage.html":{}}}],["this.loaduser",{"_index":1580,"title":{},"body":{"components/HomePage.html":{}}}],["this.location.back",{"_index":659,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["this.locationservice",{"_index":844,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.modal.dismiss",{"_index":611,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/HomePage.html":{}}}],["this.modal.present",{"_index":588,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.navcontroller.pop",{"_index":888,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.navctrl.pop",{"_index":2116,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.online",{"_index":2454,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.open",{"_index":591,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.opensettings",{"_index":1636,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.opensettings(true",{"_index":1626,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.originalquestions",{"_index":2296,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.originalquestions.filter",{"_index":2295,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.originalquestions.length",{"_index":2301,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.other",{"_index":1788,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["this.phones",{"_index":1892,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["this.phonesobserver",{"_index":1893,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["this.phonesobserver.subscribe((phones",{"_index":1895,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["this.photoservice.savephoto(createdpath",{"_index":1932,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.photoservice.takephoto",{"_index":1921,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.platform.backbutton.subscribewithpriority(10",{"_index":2074,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.platform.is('mobile",{"_index":1248,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["this.platform.ready().then",{"_index":1578,"title":{},"body":{"components/HomePage.html":{}}}],["this.preloadfarmingvalue(answersformgroup",{"_index":2782,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.preloadselectedanswers",{"_index":2597,"title":{},"body":{"components/TableComponent.html":{}}}],["this.preloadtransplantdate(transplantdate",{"_index":747,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["this.preloadvalue",{"_index":2654,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["this.presentalert",{"_index":2492,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.presentalert(false",{"_index":2117,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.presentalert(istable",{"_index":2099,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.presentlocationalert",{"_index":902,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.presentlocationalert(position",{"_index":869,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.presentlocationtoast",{"_index":854,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.presentpermissionalert",{"_index":887,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.presenttoast(save_photo_error",{"_index":1933,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.producers",{"_index":1997,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.producerservice.updateproducers",{"_index":1598,"title":{},"body":{"components/HomePage.html":{}}}],["this.producersservice.getproducers",{"_index":600,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{}}}],["this.progress",{"_index":654,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/QuestionService.html":{}}}],["this.question.answers",{"_index":606,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.answers.find",{"_index":597,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.datatype",{"_index":1870,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.question.id",{"_index":590,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.max",{"_index":777,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.min",{"_index":780,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.order",{"_index":2631,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questioncategory.name",{"_index":2632,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questionchildren",{"_index":2630,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questionchildren.length",{"_index":2624,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questionchildren.pop",{"_index":2629,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questionchildren.push(basearraycopy",{"_index":2621,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.text",{"_index":2595,"title":{},"body":{"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question?.datatype",{"_index":2678,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.question?.order",{"_index":2680,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.question?.questioncategory.name",{"_index":2675,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.question?.text",{"_index":2679,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.question?.type",{"_index":2676,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.questioncontrolservice.toformgroup(basearraycopy",{"_index":2618,"title":{},"body":{"components/TableComponent.html":{}}}],["this.questioncontrolservice.toformgroup(this.filteredquestions",{"_index":2331,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.questionservice.getfirst",{"_index":2071,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.getformgroup",{"_index":2069,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.getnextvalidquestionfrom",{"_index":2104,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.getpreviousvalidquestionfrom",{"_index":2105,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.getprogress",{"_index":656,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["this.questionservice.setquestions(this.selectedform.questions",{"_index":1086,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.questionservice.togglenextquestionfrom",{"_index":2078,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.togglenextquestionfrom(question",{"_index":2122,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.togglenextquestionfrom(this.question",{"_index":2781,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.questionspage",{"_index":1034,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.readfolder",{"_index":1385,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["this.removeolddrafts",{"_index":1185,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.removetoken",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removeuser",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removeuuid(draft.uuid",{"_index":1176,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.removeuuid(removeddraft.uuid",{"_index":1169,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.requestdata",{"_index":1439,"title":{},"body":{"components/FormListComponent.html":{}}}],["this.requestpermissions",{"_index":1392,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["this.requiredchildrenresponse",{"_index":2220,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.requiredtableresponse",{"_index":2232,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.resizecanvas",{"_index":1293,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.router.navigate(['/home",{"_index":421,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.router.navigate(['/login",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["this.router.navigate(['detail",{"_index":1250,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["this.savedraftinstorage(draft",{"_index":1160,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.savedrafts",{"_index":1170,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.saveopenresponse(question",{"_index":2128,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.savephoto(photo",{"_index":1923,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.saveresponse(child",{"_index":2141,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.saveresponse(this.currentquestion",{"_index":2076,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.saveselection(question",{"_index":2133,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.savesurveyinstorage(copy",{"_index":2451,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.savesurveys",{"_index":2465,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.savetableresponse(question",{"_index":2130,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.searchansweridbyfarming",{"_index":2792,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.selectedform",{"_index":1029,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.beneficiary",{"_index":1036,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.beneficiary.firstname",{"_index":1099,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.beneficiary.lastname",{"_index":1100,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.fechainicial",{"_index":1102,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.id",{"_index":1038,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.position",{"_index":1087,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.questions.length",{"_index":1090,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selection",{"_index":584,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.selectioncancel.emit",{"_index":2728,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.selectionchange.emit(this.workingselectedvalue",{"_index":2729,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.sendrequests(storedobj).pipe",{"_index":1826,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.setcheckedvalue(answersformgroup",{"_index":2793,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.setcheckedvalue(formgroup",{"_index":610,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["this.setlocalassociations(associations",{"_index":400,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.setlocalforms(forms",{"_index":1522,"title":{},"body":{"injectables/FormService.html":{}}}],["this.setlocalproducers(producers",{"_index":2005,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.setquestions",{"_index":1033,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.setsignature",{"_index":1305,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.settoken(authresponse.token",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setuser(user",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.showalreadyspecializedbeneficiaryalert",{"_index":1051,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.shownospecializedbeneficiaryalert",{"_index":1054,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.shownosupportbeneficiaryalert",{"_index":1055,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.signatureimg",{"_index":1309,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad",{"_index":1290,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.clear",{"_index":1306,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.fromdata(data",{"_index":1320,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.fromdataurl(signature",{"_index":1308,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.off",{"_index":1294,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.on",{"_index":1295,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.todata",{"_index":1318,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.todataurl('image/png",{"_index":1315,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.startdraft",{"_index":842,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.storage.create",{"_index":2367,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.storage.definedriver(cordovasqlitedriver",{"_index":2366,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.storageservice.clear",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storageservice.get('drafts').then((drafts",{"_index":1183,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.storageservice.get(associations_storage_key",{"_index":402,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.storageservice.get(forms_storage_key",{"_index":1534,"title":{},"body":{"injectables/FormService.html":{}}}],["this.storageservice.get(producers_storage_key",{"_index":2006,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.storageservice.get(storage_req_key).then((storedoperations",{"_index":1839,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.storageservice.get(surveys_storage_key).then((surveys",{"_index":2460,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.storageservice.get(uuid_array_storage_key).then((uuidarray",{"_index":1193,"title":{},"body":{"injectables/DraftService.html":{},"injectables/SurveyService.html":{}}}],["this.storageservice.remove(`${draft_storage_key",{"_index":1167,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.storageservice.remove(storage_req_key",{"_index":1831,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.storageservice.set",{"_index":1842,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.storageservice.set('associations",{"_index":401,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.storageservice.set(endpoint",{"_index":2007,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.storageservice.set(forms_storage_key",{"_index":1535,"title":{},"body":{"injectables/FormService.html":{}}}],["this.storageservice.set(uuid_array_storage_key",{"_index":1180,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.survey",{"_index":1032,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{}}}],["this.surveys",{"_index":2461,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.filter",{"_index":2469,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.indexof(survey",{"_index":2497,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.length",{"_index":2463,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.map",{"_index":2485,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.push(copy",{"_index":2450,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys[index].sync",{"_index":2498,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveyservice.addnetworkchangelistener",{"_index":1582,"title":{},"body":{"components/HomePage.html":{}}}],["this.surveyservice.getlocalsurveys",{"_index":1583,"title":{},"body":{"components/HomePage.html":{}}}],["this.surveyservice.getnetworkstatus",{"_index":1581,"title":{},"body":{"components/HomePage.html":{}}}],["this.surveyservice.getsurveys",{"_index":1064,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/SurveysPage.html":{}}}],["this.surveyservice.pushsurvey(removeddraft",{"_index":1105,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.surveyservice.syncsurveys",{"_index":1591,"title":{},"body":{"components/HomePage.html":{}}}],["this.syncassociations(true).subscribe((associations",{"_index":380,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.syncproducers(true).subscribe((producers",{"_index":1998,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.toastcontroller.create",{"_index":859,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"injectables/OfflineManagerService.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/StoredRequest.html":{}}}],["this.togglenextquestionfrom(nextquestion",{"_index":2316,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.updateprogress(nextquestion",{"_index":2314,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.updateprogress(previousquestion",{"_index":2325,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.url}/api/${endpoint",{"_index":197,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.user",{"_index":1597,"title":{},"body":{"components/HomePage.html":{}}}],["this.uuidarray",{"_index":1178,"title":{},"body":{"injectables/DraftService.html":{},"injectables/SurveyService.html":{}}}],["this.uuidarray.filter((id",{"_index":1179,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.workingselectedvalue",{"_index":2726,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["thousandseparator",{"_index":1705,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["through",{"_index":1525,"title":{},"body":{"injectables/FormService.html":{}}}],["throw",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{}}}],["tiene",{"_index":1075,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["time",{"_index":1837,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["timeout",{"_index":895,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/LocationService.html":{}}}],["timestamp",{"_index":1210,"title":{},"body":{"injectables/DraftService.html":{},"injectables/SurveyService.html":{}}}],["timestamp}.txt",{"_index":1213,"title":{},"body":{"injectables/DraftService.html":{},"injectables/SurveyService.html":{}}}],["timestamp}/${draftid",{"_index":1212,"title":{},"body":{"injectables/DraftService.html":{}}}],["title",{"_index":535,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TypeaheadComponent.html":{}}}],["toast",{"_index":858,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/StoredRequest.html":{}}}],["toast.present",{"_index":870,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/StoredRequest.html":{}}}],["toast.then((toast",{"_index":1830,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["toastcontroller",{"_index":814,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/StoredRequest.html":{}}}],["todas",{"_index":2108,"title":{},"body":{"components/QuestionComponent.html":{}}}],["today",{"_index":754,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["today.toisostring",{"_index":755,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["todirectory",{"_index":1347,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["todo",{"_index":2499,"title":{},"body":{"injectables/SurveyService.html":{},"components/TypeComponent.html":{}}}],["toformgroup",{"_index":2187,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["toformgroup(questions",{"_index":2203,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["togglenextquestionfrom",{"_index":2261,"title":{},"body":{"injectables/QuestionService.html":{}}}],["togglenextquestionfrom(question",{"_index":2284,"title":{},"body":{"injectables/QuestionService.html":{}}}],["token",{"_index":194,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["token.value",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["token_key",{"_index":193,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["token_storage_key",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["tokengetter",{"_index":2873,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toolbar",{"_index":704,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{}}}],["top",{"_index":946,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{}}}],["total",{"_index":936,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["trackitems",{"_index":2692,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["trackitems(index",{"_index":2720,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["transform",{"_index":583,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/FormListComponent.html":{}}}],["transition",{"_index":2173,"title":{},"body":{"components/QuestionComponent.html":{}}}],["translatey",{"_index":948,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["transplantdate",{"_index":312,"title":{},"body":{"interfaces/Association.html":{},"components/DateDataTypeComponent.html":{},"interfaces/Producer.html":{}}}],["tree",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["true",{"_index":138,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["try",{"_index":877,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/FilesystemService.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["tslib",{"_index":2915,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["type'},{'name",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["type.component",{"_index":1866,"title":{},"body":{"components/OpenComponent.html":{},"components/TableComponent.html":{}}}],["type.component.html",{"_index":719,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{}}}],["type.component.scss",{"_index":718,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{}}}],["type.component.ts",{"_index":716,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"coverage.html":{}}}],["type.component.ts:14",{"_index":1872,"title":{},"body":{"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:15",{"_index":729,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:16",{"_index":728,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:17",{"_index":727,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:18",{"_index":1278,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:19",{"_index":1801,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:20",{"_index":1800,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:21",{"_index":737,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:22",{"_index":1883,"title":{},"body":{"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:23",{"_index":1277,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:24",{"_index":1696,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["type.component.ts:25",{"_index":1695,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{}}}],["type.component.ts:26",{"_index":1888,"title":{},"body":{"components/PhoneDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:27",{"_index":1282,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:28",{"_index":2651,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["type.component.ts:29",{"_index":739,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["type.component.ts:30",{"_index":1707,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:31",{"_index":1874,"title":{},"body":{"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:33",{"_index":2653,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["type.component.ts:34",{"_index":736,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:35",{"_index":1875,"title":{},"body":{"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:36",{"_index":1694,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{}}}],["type.component.ts:37",{"_index":2652,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["type.component.ts:41",{"_index":1912,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:42",{"_index":1890,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:43",{"_index":1699,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["type.component.ts:44",{"_index":1802,"title":{},"body":{"components/NumberDataTypeComponent.html":{}}}],["type.component.ts:46",{"_index":1284,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:52",{"_index":1915,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:54",{"_index":1698,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:55",{"_index":742,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:59",{"_index":1884,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:60",{"_index":1281,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:62",{"_index":1873,"title":{},"body":{"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:64",{"_index":1279,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:68",{"_index":1283,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{}}}],["type.component.ts:71",{"_index":730,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{}}}],["type.component.ts:72",{"_index":1911,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:74",{"_index":1286,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:78",{"_index":731,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["type.component.ts:80",{"_index":1889,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:85",{"_index":734,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["type.component.ts:89",{"_index":1886,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:95",{"_index":1697,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["type/date",{"_index":715,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/drawing",{"_index":1265,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/email",{"_index":1327,"title":{},"body":{"components/EmailDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/money",{"_index":1686,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/month",{"_index":1737,"title":{},"body":{"components/MonthDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/number",{"_index":1798,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/percentage",{"_index":1868,"title":{},"body":{"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"coverage.html":{}}}],["type/phone",{"_index":1869,"title":{},"body":{"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"coverage.html":{}}}],["type/photo",{"_index":1865,"title":{},"body":{"components/OpenComponent.html":{},"components/PhotoDataTypeComponent.html":{},"coverage.html":{}}}],["type/table/table.component",{"_index":2065,"title":{},"body":{"components/QuestionComponent.html":{}}}],["type/text",{"_index":1867,"title":{},"body":{"components/OpenComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"coverage.html":{}}}],["type/type.component",{"_index":2066,"title":{},"body":{"components/QuestionComponent.html":{}}}],["typeahead",{"_index":2682,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["typeahead'},{'name",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["typeahead.component.html",{"_index":2684,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["typeahead.component.scss",{"_index":2683,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["typeaheadcomponent",{"_index":288,"title":{"components/TypeaheadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["typealiases",{"_index":2946,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typecomponent",{"_index":290,"title":{"components/TypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["types",{"_index":438,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["técnica",{"_index":330,"title":{},"body":{"interfaces/Association.html":{},"injectables/DetailedFormService.html":{},"interfaces/Producer.html":{}}}],["ubicación",{"_index":855,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["un",{"_index":1083,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["una",{"_index":1666,"title":{},"body":{"components/LoginPage.html":{}}}],["undefined",{"_index":362,"title":{},"body":{"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/FilesystemService.html":{},"injectables/FormService.html":{},"injectables/LocationService.html":{},"injectables/PhotoService.html":{},"injectables/SurveyService.html":{},"components/TextDataTypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["undopad",{"_index":1276,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["unique",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["unique.component.html",{"_index":2743,"title":{},"body":{"components/UniqueComponent.html":{}}}],["unique.component.scss",{"_index":2742,"title":{},"body":{"components/UniqueComponent.html":{}}}],["unique/unique.component",{"_index":2674,"title":{},"body":{"components/TypeComponent.html":{}}}],["uniquecomponent",{"_index":291,"title":{"components/UniqueComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["unknown",{"_index":414,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LocationService.html":{},"injectables/StorageService.html":{}}}],["uno",{"_index":547,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TypeaheadComponent.html":{}}}],["unsynced",{"_index":2442,"title":{},"body":{"injectables/SurveyService.html":{}}}],["unsyncedsurvey.dateend",{"_index":2548,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurvey.description",{"_index":2550,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurvey.name",{"_index":2547,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurvey.questions[0].answers[0].value",{"_index":2549,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurvey.uuid",{"_index":2546,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurveys",{"_index":2537,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurveys.length",{"_index":2539,"title":{},"body":{"components/SurveysPage.html":{}}}],["up",{"_index":702,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["update",{"_index":2401,"title":{},"body":{"injectables/SurveyService.html":{},"components/TypeaheadComponent.html":{}}}],["updated_at",{"_index":440,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["updateddate",{"_index":433,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["updatedsurveys",{"_index":2484,"title":{},"body":{"injectables/SurveyService.html":{}}}],["updatemodifydate",{"_index":977,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{}}}],["updatemodifydate(draft",{"_index":1149,"title":{},"body":{"injectables/DraftService.html":{}}}],["updateproducers",{"_index":1987,"title":{},"body":{"injectables/ProducerService.html":{}}}],["updateprogress",{"_index":2262,"title":{},"body":{"injectables/QuestionService.html":{}}}],["updateprogress(currentquestion",{"_index":2286,"title":{},"body":{"injectables/QuestionService.html":{}}}],["updates",{"_index":2443,"title":{},"body":{"injectables/SurveyService.html":{}}}],["uploadsurveys",{"_index":1559,"title":{},"body":{"components/HomePage.html":{}}}],["url",{"_index":155,"title":{},"body":{"injectables/ApiService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["url('../../../assets/imgs/header",{"_index":1609,"title":{},"body":{"components/HomePage.html":{}}}],["used",{"_index":1536,"title":{},"body":{"injectables/FormService.html":{},"injectables/SurveyService.html":{}}}],["useful",{"_index":2406,"title":{},"body":{"injectables/SurveyService.html":{}}}],["usefullpath",{"_index":1344,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["user",{"_index":428,"title":{"interfaces/User.html":{}},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"injectables/QuestionService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["user.name",{"_index":1604,"title":{},"body":{"components/HomePage.html":{}}}],["user.type",{"_index":1606,"title":{},"body":{"components/HomePage.html":{},"injectables/QuestionService.html":{}}}],["user_id",{"_index":50,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["user_key",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_storage_key",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["user_type_restriction",{"_index":69,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["userbuilder",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["userbuilder(authresponse.user",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["userbuilder(user",{"_index":2934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userresponse",{"_index":435,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["usertype",{"_index":2297,"title":{},"body":{"injectables/QuestionService.html":{}}}],["usertyperestriction",{"_index":64,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["usuario",{"_index":1603,"title":{},"body":{"components/HomePage.html":{}}}],["utils/builder",{"_index":379,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["uuid",{"_index":32,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"components/SurveysPage.html":{},"dependencies.html":{}}}],["uuid_array_storage_key",{"_index":2853,"title":{},"body":{"coverage.html":{}}}],["uuidarray",{"_index":1108,"title":{},"body":{"injectables/DraftService.html":{},"injectables/SurveyService.html":{}}}],["uuids",{"_index":2420,"title":{},"body":{"injectables/SurveyService.html":{}}}],["uuidv4",{"_index":1023,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["v4",{"_index":1022,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["validation",{"_index":2238,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validationerrors",{"_index":2205,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validatorfn",{"_index":2192,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validators",{"_index":1656,"title":{},"body":{"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/QuestionControlService.html":{},"components/UniqueComponent.html":{}}}],["validators.email",{"_index":1653,"title":{},"body":{"components/LoginPage.html":{}}}],["validators.maxlength(10",{"_index":2219,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validators.minlength(10",{"_index":2218,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validators.minlength(6",{"_index":1654,"title":{},"body":{"components/LoginPage.html":{}}}],["validators.required",{"_index":1652,"title":{},"body":{"components/LoginPage.html":{},"injectables/QuestionControlService.html":{}}}],["valor",{"_index":1723,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["value",{"_index":13,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"injectables/FilesystemService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/LocationService.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/enumerations.html":{}}}],["var",{"_index":132,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["variable",{"_index":2839,"title":{},"body":{"coverage.html":{}}}],["ver",{"_index":941,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["version",{"_index":1607,"title":{},"body":{"components/HomePage.html":{},"properties.html":{}}}],["vertically",{"_index":697,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["view",{"_index":2709,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["viewchild",{"_index":572,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{}}}],["viewchild('canvas",{"_index":1288,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["viewchild('modal",{"_index":567,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/HomePage.html":{}}}],["viewsurvey",{"_index":812,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["visit",{"_index":315,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["visita",{"_index":2646,"title":{},"body":{"components/TableComponent.html":{}}}],["void",{"_index":121,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/AssociationService.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["vuelve",{"_index":922,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["válidos",{"_index":1668,"title":{},"body":{"components/LoginPage.html":{}}}],["white",{"_index":1614,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["width",{"_index":625,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["window.addeventlistener('resize",{"_index":1292,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["workingselectedvalue",{"_index":2686,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["works",{"_index":1311,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["writefile",{"_index":1337,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["writefile(path",{"_index":1359,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["writefileresult",{"_index":1364,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["writefileresult.uri",{"_index":1400,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["written",{"_index":1399,"title":{},"body":{"injectables/FilesystemService.html":{}}}],["x",{"_index":712,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["xx",{"_index":1263,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["y",{"_index":921,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/SurveysPage.html":{},"components/UniqueComponent.html":{}}}],["ya",{"_index":1074,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["year",{"_index":757,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["years",{"_index":735,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["yes",{"_index":172,"title":{},"body":{"injectables/ApiService.html":{},"injectables/SurveyService.html":{}}}],["zona",{"_index":347,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["zone",{"_index":300,"title":{},"body":{"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Producer.html":{},"interfaces/User.html":{}}}],["zone.js",{"_index":2918,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Answer.html":{"url":"interfaces/Answer.html","title":"interface - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n\n  export enum FormType {\n    SPECIALIZED = 1,\n    SUPPORT = 5,\n  }\n\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnswerPivot.html":{"url":"interfaces/AnswerPivot.html","title":"interface - AnswerPivot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnswerPivot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            answerId\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answerId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n\n  export enum FormType {\n    SPECIALIZED = 1,\n    SUPPORT = 5,\n  }\n\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnswerRelation.html":{"url":"interfaces/AnswerRelation.html","title":"interface - AnswerRelation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnswerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            answerPivot\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answerPivot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answerPivot:         AnswerPivot\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnswerPivot\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n\n  export enum FormType {\n    SPECIALIZED = 1,\n    SUPPORT = 5,\n  }\n\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnswerRelationService.html":{"url":"injectables/AnswerRelationService.html","title":"injectable - AnswerRelationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnswerRelationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                areSelected\n                            \n                            \n                                    Private\n                                checkAndRelation\n                            \n                            \n                                    Public\n                                checkAnswerRelation\n                            \n                            \n                                    Private\n                                checkOrRelation\n                            \n                            \n                                    Public\n                                disableQuestion\n                            \n                            \n                                    Public\n                                enableQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        areSelected\n                        \n                    \n                \n            \n            \n                \n                        \n                    areSelected(relation: FormDetail.AnswerRelation, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                        FormDetail.AnswerRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkAndRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAndRelation(answerRelation: FormDetail.AnswerRelation[], formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answerRelation\n                                            \n                                                        FormDetail.AnswerRelation[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        checkAnswerRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAnswerRelation(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkOrRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkOrRelation(answerRelation: FormDetail.AnswerRelation[], formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answerRelation\n                                            \n                                                        FormDetail.AnswerRelation[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        disableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        enableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnswerRelationService {\n  constructor() {}\n\n  public checkAnswerRelation(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): boolean {\n    const answerRelation: FormDetail.AnswerRelation[] = question.answersRelation;\n    var answerRelationType: string = answerRelation[0]?.answerPivot.type;\n    if (answerRelationType === 'and') {\n      return this.checkAndRelation(answerRelation, formGroup);\n    } else if (answerRelationType === 'or') {\n      return this.checkOrRelation(answerRelation, formGroup);\n    } else {\n      return true;\n    }\n  }\n\n  private checkAndRelation(answerRelation: FormDetail.AnswerRelation[], formGroup: FormGroup): boolean {\n    const everyAnswerIsSelected: boolean = answerRelation.every(\n      (relation: FormDetail.AnswerRelation) => {\n        return this.areSelected(relation, formGroup);\n      }\n    );\n    return everyAnswerIsSelected;\n  }\n\n  private checkOrRelation(answerRelation: FormDetail.AnswerRelation[], formGroup: FormGroup): boolean {\n    const someAnswerIsSelected: boolean = answerRelation.some(\n      (relation: FormDetail.AnswerRelation) => {\n        return this.areSelected(relation, formGroup);\n      }\n    );\n\n    return someAnswerIsSelected;\n  }\n\n  private areSelected(relation: FormDetail.AnswerRelation, formGroup: FormGroup): boolean {\n    const questionId: string = relation.questionId;\n    const answerId: number = relation.answerPivot.answerId;\n    const value: boolean = formGroup\n      .get(questionId)!\n      .get(answerId.toString())!.value;\n\n    return value;\n  }\n\n  public disableQuestion(question: FormDetail.Question, formGroup: FormGroup): void {\n    const questionId: string = question.id.toString();\n    formGroup.get(questionId)?.reset();\n    formGroup.get(questionId)?.disable();\n  }\n\n  public enableQuestion(question: FormDetail.Question, formGroup: FormGroup): void {\n    const questionId: string = question.id.toString();\n    formGroup.get(questionId)?.enable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                    Async\n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/api.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(endpoint: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:23\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:19\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(endpoint: string, resource?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                resource\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.url\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api/api.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CapacitorHttp, HttpResponse } from '@capacitor/core';\nimport { environment } from 'environment';\nimport { Preferences } from '@capacitor/preferences';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private readonly url = environment.url;\n\n  constructor(\n    private httpClient: HttpClient,\n  ) {}\n\n  public getAll (endpoint: string): Observable {\n    return this.httpClient.get(`/api/${endpoint}/`);\n  }\n\n  public get (endpoint: string, id: string): Observable {\n    return this.httpClient.get(`/api/${endpoint}/${id}`);\n  }\n\n  /* public post (endpoint: string, resource?: { email: string; password: string; }): Observable {\n    return this.httpClient.post(`/api/${endpoint}/`, resource);\n  } */\n\n  public async post (endpoint: string, resource?: any): Promise {\n    const result = await Preferences.get({ key: 'TOKEN_KEY' });\n    const token = result.value\n    const options = {\n      url: `${this.url}/api/${endpoint}`,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      data: JSON.stringify(resource)\n    }\n\n    return CapacitorHttp.post(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                environmentInjector\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        environmentInjector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EnvironmentInjector)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EnvironmentInjector, inject } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule],\n})\nexport class AppComponent {\n  public environmentInjector = inject(EnvironmentInjector);\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Association.html":{"url":"interfaces/Association.html","title":"interface - Association","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Association\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Beneficiary.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            farming\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            identification\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nit\n                                        \n                                \n                                \n                                        \n                                            zone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        farming\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        farming:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identification\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identification:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Beneficiary {\n\n  export interface Producer {\n    cedula: string;\n    firstname: string;\n    middlename: string;\n    lastname: string;\n    secondLastname: string;\n    id: string;\n    specialized: boolean;\n    technicalAssistance: boolean;\n    demonstrationPlot: boolean;\n    greenhouse: boolean;\n    supplies: boolean;\n    associationId: number;\n    transplantDate: string;\n    recommendedActions: SelectedQuestions\n    support: boolean; // Support visit / Technical Assistance\n  }\n\n  export const ProducerBaseParams = {\n    cedula: '',\n    firstname: '',\n    middlename: '',\n    lastname: '',\n    secondLastname: '',\n    id: '',\n    specialized: false,\n    technicalAssistance: false,\n    demonstrationPlot: false,\n    greenhouse: false,\n    supplies: false,\n    associationId: 0,\n    transplantDate: '',\n    recommendedActions: {},\n    support: false\n  };\n\n  export type ProducerResponse = {\n    cedula: string;\n    primer_nombre: string;\n    segundo_nombre: string;\n    primer_apellido: string;\n    segundo_apellido: string;\n    identification: string;\n    has_especializada: number;\n    sost_p5: number;        // support visit\n    at_p5: number;          // asistencia técnica\n    pd_p5: number;          // parcela demostrativa\n    cm_p5: number;          // casa malla (invernadero espacial)\n    insumo_p5: number;      // insumos\n    association_id: number; // id de la asociacion\n    transplantDate: string;\n    selectedQuestionIds: SelectedQuestions\n  }\n\n  export type SelectedQuestions = { [questionId: string] : boolean };\n\n  export interface Association {\n    id: number;\n    nit: number;\n    name: string;\n    identification: string;\n    zone: string;\n    farming: string;\n  }\n\n  export type AssociationResponse = {\n    id: number;\n    nit: number;\n    name: string;\n    identification: string;\n    zona: string;\n    farming: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssociationService.html":{"url":"injectables/AssociationService.html","title":"injectable - AssociationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AssociationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/association/association.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                associations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAssociationById\n                            \n                            \n                                    Public\n                                getAssociations\n                            \n                            \n                                    Private\n                                getLocalAssociations\n                            \n                            \n                                    Private\n                                setLocalAssociations\n                            \n                            \n                                    Private\n                                syncAssociations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/association/association.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAssociationById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssociationById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Beneficiary.Association | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAssociations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssociations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Beneficiary.Association[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLocalAssociations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalAssociations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLocalAssociations\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLocalAssociations(associations: Beneficiary.Association[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                associations\n                                            \n                                                            Beneficiary.Association[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncAssociations\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncAssociations(forceRefresh: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                forceRefresh\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Beneficiary.Association[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/association/association.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApiService } from '../api/api.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { StorageService } from '../storage/storage.service';\nimport { Network } from '@capacitor/network';\nimport { Observable, from, map, switchMap, tap } from 'rxjs';\nimport { HttpResponse } from '@capacitor/core';\nimport { associationBuilder } from '@utils/builder';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AssociationService {\n\n  associations: Beneficiary.Association[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private storageService: StorageService\n  ) {\n    this.syncAssociations(true).subscribe((associations: Beneficiary.Association[]) => {\n      this.associations = associations;\n    });\n  }\n\n  public getAssociations(): Beneficiary.Association[] {\n    console.log(this.associations);\n    return this.associations;\n  }\n\n  private syncAssociations(forceRefresh: boolean = false): Observable {\n    return from(Network.getStatus()).pipe(\n      switchMap((status) => {\n        console.log('status')\n        console.log(status.connected)\n        if (!status.connected || !forceRefresh) {\n          return from(this.getLocalAssociations());\n        } else {\n          console.log('syncAssociations')\n          return from(this.apiService.post(ENDPOINT)).pipe(\n            map((response: HttpResponse) => {\n              const associationResponse: Beneficiary.AssociationResponse[] = JSON.parse(\n                response.data\n              );\n              console.log('associationResponse');\n              console.log(associationResponse);\n              const associations: Beneficiary.Association[] = associationResponse.map(\n                (association) => associationBuilder(association)\n              );\n              return associations;\n            }),\n            tap((associations: Beneficiary.Association[]) => {\n              this.setLocalAssociations(associations);\n            })\n          );\n        }\n      })\n    );\n  }\n\n  private setLocalAssociations(associations: Beneficiary.Association[]): void {\n    this.storageService.set('associations', associations);\n  }\n\n  private getLocalAssociations(): Promise {\n    return this.storageService.get(ASSOCIATIONS_STORAGE_KEY)\n  }\n\n  public getAssociationById(id: number): Beneficiary.Association | undefined {\n    return this.associations.find((association) => association.id === id);\n  }\n}\n\nconst ASSOCIATIONS_STORAGE_KEY = 'associations';\nconst ENDPOINT = ASSOCIATIONS_STORAGE_KEY;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/guards/auth/auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/auth/auth.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/guards/auth/auth.guard.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/guards/auth/auth.guard.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard {\n  constructor(public authService: AuthService, public router: Router) {}\n\n  async canActivate() {\n\n    const Logged = await this.authService.isLogged();\n\n    if (Logged) {\n      this.router.navigate(['/home']);\n    }\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthManagement.html":{"url":"interfaces/AuthManagement.html","title":"interface - AuthManagement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthManagement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Auth.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            logout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logout:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Authentication {\n  export interface User {\n    id: number;\n    name: string;\n    email: string;\n    emailVerifiedAt: string;\n    idCard: string;\n    role: string;\n    type: string;\n    zone: string;\n    creationDate: string;\n    updatedDate: string;\n  }\n\n  export type AuthResponse = {\n    token: string;\n    user: UserResponse;\n  };\n\n  export type UserResponse = {\n    id: number;\n    name: string;\n    email: string;\n    email_verified_at: string;\n    cedula: string;\n    roles: string;\n    types: string;\n    zone: string;\n    created_at: string;\n    updated_at: string;\n  };\n\n  export type AuthParams = {\n    email: string;\n    password: string;\n  };\n\n  export interface AuthManagement {\n    login: (credentials: AuthParams) => Promise;\n    logout: () => void;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                decodeToken\n                            \n                            \n                                    Public\n                                    Async\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                getUser\n                            \n                            \n                                    Public\n                                    Async\n                                isLogged\n                            \n                            \n                                    Private\n                                isTokenExpired\n                            \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                removeToken\n                            \n                            \n                                    Private\n                                removeUser\n                            \n                            \n                                    Private\n                                setToken\n                            \n                            \n                                    Private\n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, apiService: ApiService, jwtHelperService: JwtHelperService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelperService\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        decodeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decodeToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        isLogged\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLogged()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isTokenExpired\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTokenExpired(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(authParams: Authentication.AuthParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authParams\n                                            \n                                                            Authentication.AuthParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    setToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUser(user: Authentication.User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Authentication.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport jwt_decode from 'jwt-decode';\nimport { ApiService } from '../api/api.service';\nimport { HttpResponse } from '@capacitor/core';\nimport { Preferences } from '@capacitor/preferences';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Authentication } from '@models/Auth.namespace';\nimport { userBuilder } from '@utils/builder';\nimport { Observable, from, map } from 'rxjs';\nimport { StorageService } from '@services/storage/storage.service';\n\nconst TOKEN_STORAGE_KEY = 'TOKEN_KEY';\nconst USER_STORAGE_KEY = 'USER_KEY';\nconst ENDPOINT = 'auth/login';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService implements Authentication.AuthManagement {\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private jwtHelperService: JwtHelperService,\n    private storageService: StorageService\n  ) {}\n\n  public async getToken(): Promise {\n    const token = await Preferences.get({ key: TOKEN_STORAGE_KEY });\n    return token.value || null;\n  }\n\n  public async getUser(): Promise {\n    const { value } = await Preferences.get({ key: USER_STORAGE_KEY })\n    return JSON.parse(value!) as Authentication.User;\n  }\n\n  private setUser(user: Authentication.User) {\n    this.removeUser();\n    const options = { key: USER_STORAGE_KEY, value: JSON.stringify(user) };\n    Preferences.set(options);\n  }\n\n  private removeUser() {\n    Preferences.remove({ key: USER_STORAGE_KEY });\n  }\n\n  private setToken(token: string) {\n    this.removeToken();\n    const options = { key: TOKEN_STORAGE_KEY, value: token };\n    Preferences.set(options);\n  }\n\n  public removeToken() {\n    Preferences.remove({ key: TOKEN_STORAGE_KEY });\n  }\n\n  public async decodeToken(token: string): Promise {\n    if (token) {\n      return jwt_decode(token);\n    }\n    return false;\n  }\n\n  public async login(\n    authParams: Authentication.AuthParams\n  ): Promise {\n    const response: HttpResponse = await this.apiService.post(\n      ENDPOINT,\n      authParams\n    );\n    console.log(response);\n    if (response.status !== 200) {\n      throw new Error(response.data.error);\n    }\n    const authResponse: Authentication.AuthResponse =\n      response.data as Authentication.AuthResponse;\n    this.setToken(authResponse.token);\n    const user: Authentication.User = userBuilder(authResponse.user);\n    this.setUser(user);\n    this.router.navigate(['/home']);\n    return user;\n  }\n\n  public logout(): void {\n    this.removeToken();\n    this.storageService.clear();\n    this.router.navigate(['/login']);\n  }\n\n  public async isLogged(): Promise {\n    const token = (await this.getToken()) as string;\n    const decodedToken = await this.decodeToken(token);\n    return decodedToken && !this.isTokenExpired(token);\n  }\n\n  private isTokenExpired(token: string): boolean {\n    return this.jwtHelperService.isTokenExpired(token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AutocompleteComponent.html":{"url":"components/AutocompleteComponent.html","title":"component - AutocompleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AutocompleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/autocomplete/autocomplete.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-autocomplete\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                TypeaheadComponent\n                \n            \n\n            \n                styleUrls\n                ./autocomplete.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./autocomplete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    \n                                modal\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assignBeneficiary\n                            \n                            \n                                    Private\n                                getAnswerId\n                            \n                            \n                                getAnswers\n                            \n                            \n                                    Private\n                                getData\n                            \n                            \n                                    Private\n                                getQuestionValue\n                            \n                            \n                                    Private\n                                getSelectedValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                    Private\n                                setCheckedValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                open\n                            \n                            \n                                question\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(producersService: ProducerService, alertController: AlertController, detailedFormService: DetailedFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        producersService\n                                                  \n                                                        \n                                                                        ProducerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Selecciona uno'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        assignBeneficiary\n                        \n                    \n                \n            \n            \n                \n                        \n                    assignBeneficiary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAnswerId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnswerId(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAnswers\n                        \n                    \n                \n            \n            \n                \ngetAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getQuestionValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQuestionValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSelectedValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSelectedValue(answersFormGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionChanged\n                        \n                    \n                \n            \n            \n                \nselectionChanged(selection: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setCheckedValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCheckedValue(answersFormGroup: FormGroup, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonModal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n  booleanAttribute,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n} from '@angular/forms';\nimport { AlertController, IonModal, IonicModule } from '@ionic/angular';\nimport { TypeaheadComponent } from '@components/typeahead/typeahead.component';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { AssociationService } from '@services/association/association.service';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { ProducerService } from '@services/producer/producer.service';\n\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule, TypeaheadComponent],\n})\nexport class AutocompleteComponent implements OnInit {\n  @ViewChild('modal', { static: true }) modal!: IonModal;\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ transform: booleanAttribute }) open!: boolean;\n  @Input() title = 'Selecciona uno';\n  @Input({ required: true }) disabled!: boolean;\n\n  selection!: string;\n\n  public data: string[] = [];\n\n  constructor(\n    private producersService: ProducerService,\n    private alertController: AlertController,\n    private detailedFormService: DetailedFormService\n  ) {}\n\n  ngOnInit() {\n    this.selection = this.getQuestionValue();\n  }\n\n  openModal(): void {\n    this.data = this.getData();\n    this.modal.present();\n  }\n\n  private getQuestionValue(): string {\n    const answers: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    let value: string = '';\n    if (this.open) {\n      const formControl: FormControl = this.formGroup.get(\n        `${this.question.id}`\n      ) as FormControl;\n      value = formControl.value;\n    } else {\n      value = this.getSelectedValue(answers);\n    }\n    return value;\n  }\n\n  private getSelectedValue(answersFormGroup: FormGroup): string {\n    let selectedValue: string = '';\n    for (const key in answersFormGroup.controls) {\n      if (answersFormGroup.controls[key].value) {\n        selectedValue = this.question.answers.find(\n          (answer) => answer.id.toString() === key\n        )?.value as string;\n      }\n    }\n    return selectedValue;\n  }\n\n  private getData(): string[] {\n    let result: string[] = [];\n    if (this.open) {\n      const producers: Beneficiary.Producer[] = this.producersService.getProducers();\n      result = producers.map((producer) => producer.id);\n    } else {\n      const answers = this.getAnswers();\n      result = answers.map((answer) => answer.value);\n    }\n    return result;\n  }\n\n  getAnswers() {\n    return this.question.answers;\n  }\n\n  selectionChanged(selection: string) {\n\n    if (this.open) {\n      const formControl: FormControl = this.formGroup.get(\n        `${this.question.id}`\n      ) as FormControl;\n      if (!this.assignBeneficiary(selection))\n        return;\n      formControl.setValue(selection);\n    } else {\n      const formGroup: FormGroup = this.formGroup.get(\n        `${this.question.id}`\n      ) as FormGroup;\n      const answerId: string = this.getAnswerId(selection);\n      this.setCheckedValue(formGroup, answerId);\n    }\n    this.selection = selection;\n    this.modal.dismiss();\n  }\n\n  private setCheckedValue(answersFormGroup: FormGroup, id: string): void {\n    for (const key in answersFormGroup.controls) {\n      if (key === id) {\n        answersFormGroup.controls[key].setValue(true);\n      } else {\n        answersFormGroup.controls[key].setValue(false);\n      }\n    }\n  }\n\n  private assignBeneficiary(id: string): boolean {\n    const cedula = id.split(' ')[0];\n    console.log('Cedula: ', cedula)\n    const producers: Beneficiary.Producer[] = this.producersService.getProducers();\n    const beneficiary: Beneficiary.Producer | undefined = producers.find(\n      (producer) => producer.cedula == cedula\n    );\n    if (!beneficiary) {\n      return false;\n    }\n    return this.detailedFormService.setBeneficiary(beneficiary);\n  }\n\n  private getAnswerId(value: string): string {\n    const answer = this.getAnswers().find((answer) => answer.value === value);\n    return answer ? answer.id.toString() : '';\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n    {{ selection }}\n  \n\n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./autocomplete.component.scss\n                \n                ion-item::part(native) {\n  border-color: lightgray;\n  border-width: 2px;\n  border-radius: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}    {{ selection }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AutocompleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataquestHeaderComponent.html":{"url":"components/DataquestHeaderComponent.html","title":"component - DataquestHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DataquestHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/dataquest-header/dataquest-header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dataquest-header\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./dataquest-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dataquest-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                back\n                            \n                            \n                                    Private\n                                    Async\n                                confirmExit\n                            \n                            \n                                getProgress\n                            \n                            \n                                isDraft\n                            \n                            \n                                isForm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressBar\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, alertController: AlertController, location: Location, detailedFormService: DetailedFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressBar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        back\n                        \n                    \n                \n            \n            \n                \nback()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        confirmExit\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmExit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProgress\n                        \n                    \n                \n            \n            \n                \ngetProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isForm\n                        \n                    \n                \n            \n            \n                \nisForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        progress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, booleanAttribute } from '@angular/core';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { CommonModule, Location } from '@angular/common';\nimport { QuestionService } from '@services/detailed-form/question/question.service';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\n\n@Component({\n  selector: 'app-dataquest-header',\n  templateUrl: './dataquest-header.component.html',\n  styleUrls: ['./dataquest-header.component.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule],\n})\nexport class DataquestHeaderComponent implements OnInit {\n  @Input({ transform: booleanAttribute }) progressBar: boolean = false;\n\n  progress: number;\n\n  constructor(\n    private questionService: QuestionService,\n    private alertController: AlertController,\n    private location: Location,\n    private detailedFormService: DetailedFormService,\n  ) {\n    this.progress = this.getProgress();\n  }\n\n  ngOnInit() {}\n\n  getProgress(): number {\n    return this.questionService.getProgress();\n  }\n\n  back() {\n    if (this.detailedFormService.isQuestionsPage())\n      this.confirmExit();\n    else\n      this.location.back();\n  }\n\n  private async confirmExit() {\n    var message: string = ''\n    if (this.isForm())\n      message = 'Si sale, su progreso se guardará como borrador. ¿Desea salir?';\n    else if (this.isDraft())\n      message = 'Si sale, se guardará el borrador. ¿Desea salir?';\n\n    const alert = await this.alertController.create({\n      header: '¿Desea salir?',\n      message: message,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n        },\n        {\n          text: 'Salir',\n          role: 'confirm',\n          cssClass: 'danger',\n          handler: () => {\n            this.location.back();\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  isForm(): boolean {\n    return this.detailedFormService.isForm();\n  }\n\n  isDraft(): boolean {\n    return this.detailedFormService.isDraft();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./dataquest-header.component.scss\n                \n                .img-container {\n  width: 90%;\n  display: flex;\n  justify-content: center; /* Center horizontally */\n  align-items: center; /* Center vertically */\n  height: 100%; /* Ensure the container takes up the full height of the toolbar */\n}\n\nion-img {\n  max-width: 100%; /* Ensure the image doesn't exceed the container's width */\n  max-height: 100%; /* Ensure the image doesn't exceed the container's height */\n}\n\nion-icon {\n  font-size: x-large;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataquestHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateDataTypeComponent.html":{"url":"components/DateDataTypeComponent.html","title":"component - DateDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/date-data-type/date-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-date-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./date-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMaxDate\n                            \n                            \n                                getMinDate\n                            \n                            \n                                    Private\n                                getNewYear\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preloadTransplantDate\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detailedFormService: DetailedFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMaxDate\n                        \n                    \n                \n            \n            \n                \ngetMaxDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinDate\n                        \n                    \n                \n            \n            \n                \ngetMinDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNewYear\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNewYear(years: number, sum: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                years\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sum\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        preloadTransplantDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadTransplantDate(transplantDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transplantDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ReactiveFormsModule, FormGroup, FormControl } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\n\n@Component({\n  selector: 'app-date-data-type',\n  templateUrl: './date-data-type.component.html',\n  styleUrls: ['./date-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule, ReactiveFormsModule],\n})\nexport class DateDataTypeComponent {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(private detailedFormService: DetailedFormService) {}\n\n  ngOnInit() {\n    const transplantDate: string = this.detailedFormService.getForm().beneficiary.transplantDate;\n    if (this.question.id === '170' && transplantDate) {\n      this.disabled = true;\n      this.preloadTransplantDate(transplantDate);\n    }\n  }\n\n  private preloadTransplantDate(transplantDate: string) {\n    const formControl: FormControl = this.formGroup.get(`${this.question.id}`) as FormControl;\n    formControl.setValue(transplantDate);\n  }\n\n  getValue(): string {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n    console.log('formControl: ', formControl)\n    const stringDate: string = this.formGroup.get(`${this.question.id}`)?.value;\n    console.log('stringDate: ', stringDate);\n    if (!stringDate) {\n      const today: Date = new Date();\n      return today.toISOString();\n    }\n    const [day, month, year] = stringDate.split('/');\n    const parsedDate: Date = new Date(\n      Number(year),\n      Number(month) - 1,\n      Number(day)\n    );\n    console.log('date: ', parsedDate.toISOString());\n    return parsedDate.toISOString();\n  }\n\n  setValue(event: Event): void {\n    const questionFormControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n    const dateTimeElement = event.target as HTMLInputElement;\n    const value: string = dateTimeElement.value;\n    const date: Date = new Date(value);\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n    };\n    const stringDate: string = date.toLocaleDateString('es-ES', options);\n    questionFormControl.setValue(stringDate);\n  }\n\n  getMaxDate(): string | undefined {\n    const maxDate: string | undefined = this.question.max\n      ? this.getNewYear(Number(this.question.max), true)\n      : undefined;\n    return maxDate;\n  }\n\n  getMinDate(): string | undefined {\n    const minDate: string | undefined = this.question.min\n      ? this.getNewYear(Number(this.question.min), false)\n      : undefined;\n    return minDate;\n  }\n\n  private getNewYear(years: number, sum: boolean): string {\n    console.log(years, sum);\n    const date: Date = new Date();\n    const newYear: number = sum\n      ? date.getFullYear() + years\n      : date.getFullYear() - years;\n    date.setFullYear(newYear);\n    const formattedDate: string = date.toISOString();\n    return formattedDate;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./date-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailPage.html":{"url":"components/DetailPage.html","title":"component - DetailPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/detail/detail.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detail\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                                FormsModule\n                \n            \n\n            \n                styleUrls\n                ./detail.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./detail.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/detail/detail.page.ts:16\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/detail/detail.page.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DetailedFormComponent\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detail/detail.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { DetailedFormComponent } from '@components/detailed-form/detailed-form.component';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.page.html',\n  styleUrls: ['./detail.page.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule, FormsModule]\n})\nexport class DetailPage implements OnInit {\n\n  component = DetailedFormComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./detail.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailedFormComponent.html":{"url":"components/DetailedFormComponent.html","title":"component - DetailedFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailedFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/detailed-form/detailed-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detailed-form\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                QuestionComponent\n                                DataquestHeaderComponent\n                \n            \n\n            \n                styleUrls\n                ./detailed-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./detailed-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getForm\n                            \n                            \n                                    Private\n                                getLocation\n                            \n                            \n                                getTotalQuestions\n                            \n                            \n                                getTransformedDownladedDate\n                            \n                            \n                                isDraft\n                            \n                            \n                                isForm\n                            \n                            \n                                isSurvey\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                    Async\n                                presentLocationAlert\n                            \n                            \n                                    Private\n                                    Async\n                                presentLocationToast\n                            \n                            \n                                resumeDraft\n                            \n                            \n                                    Private\n                                startDraft\n                            \n                            \n                                startForm\n                            \n                            \n                                viewSurvey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detailedFormService: DetailedFormService, locationService: LocationService, toastController: ToastController, alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/detailed-form/detailed-form.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locationService\n                                                  \n                                                        \n                                                                        LocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getForm\n                        \n                    \n                \n            \n            \n                \ngetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalQuestions\n                        \n                    \n                \n            \n            \n                \ngetTotalQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransformedDownladedDate\n                        \n                    \n                \n            \n            \n                \ngetTransformedDownladedDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:194\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isForm\n                        \n                    \n                \n            \n            \n                \nisForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSurvey\n                        \n                    \n                \n            \n            \n                \nisSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        presentLocationAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentLocationAlert(position: Position)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                        Position\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        presentLocationToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentLocationToast(message: string, position: Position)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                position\n                                            \n                                                        Position\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resumeDraft\n                        \n                    \n                \n            \n            \n                \nresumeDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:185\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startForm\n                        \n                    \n                \n            \n            \n                \nstartForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewSurvey\n                        \n                    \n                \n            \n            \n                \nviewSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Default value : QuestionComponent\n                    \n                \n                    \n                        \n                                Defined in src/app/components/detailed-form/detailed-form.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { AlertController, IonicModule, ToastController } from '@ionic/angular';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { QuestionComponent } from '@components/question/question.component';\nimport { DataquestHeaderComponent } from '@components/header/dataquest-header/dataquest-header.component';\nimport { LocationService } from '@services/location/location.service';\nimport { Position } from '@capacitor/geolocation';\n\n@Component({\n  selector: 'app-detailed-form',\n  templateUrl: './detailed-form.component.html',\n  styleUrls: ['./detailed-form.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    IonicModule,\n    QuestionComponent,\n    DataquestHeaderComponent,\n  ],\n})\nexport class DetailedFormComponent {\n  component = QuestionComponent;\n\n  constructor(\n    private detailedFormService: DetailedFormService,\n    private locationService: LocationService,\n    private toastController: ToastController,\n    private alertController: AlertController\n  ) {}\n\n  ngOnDestroy() {\n    this.detailedFormService.setQuestionsPage(false);\n  }\n\n  getForm(): FormDetail.Form {\n    return this.detailedFormService.getForm();\n  }\n\n  isForm(): boolean {\n    return this.detailedFormService.isForm();\n  }\n\n  isDraft(): boolean {\n    return this.detailedFormService.isDraft();\n  }\n\n  isSurvey(): boolean {\n    return this.detailedFormService.isSurvey();\n  }\n\n  startForm(): void {\n    this.getLocation();\n    this.startDraft();\n  }\n\n  viewSurvey(): void {\n    this.detailedFormService.setQuestionsPage(true);\n  }\n\n  resumeDraft(): void {\n    this.detailedFormService.setQuestionsPage(true);\n  }\n\n  private getLocation(): void {\n    this.locationService\n      .getCurrentLocation()\n      .then((position: Position | undefined) => {\n        if (position) {\n          console.log(position.coords);\n          this.getForm().position = `${position.coords.latitude},${position.coords.longitude}`;\n          this.getForm().altitud = position.coords.altitude ?? 0;\n          console.log(\n            `Position: ${this.getForm().position}, Altitude: ${\n              position.coords.altitude\n            }`\n          );\n          this.presentLocationToast(\n            '¡Ubicación obtenida satisfactoriamente!',\n            position\n          );\n        }\n      });\n  }\n\n  private async presentLocationToast(message: string, position: Position) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 5000,\n      position: 'bottom',\n      icon: 'navigate-circle-outline',\n      buttons: [\n        {\n          side: 'end',\n          text: 'Más info',\n          role: 'info',\n          handler: () => {\n            this.presentLocationAlert(position);\n          },\n        },\n      ],\n    });\n\n    await toast.present();\n  }\n\n  private async presentLocationAlert(position: Position): Promise {\n    const alert = await this.alertController.create({\n      header: 'Coordenadas',\n      message:\n        'Latitud: ' +\n        position.coords.latitude +\n        ', longitud: ' +\n        position.coords.longitude +\n        ', altitud: ' +\n        (position.coords.altitude ?? 0),\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  /*   private async getLocation(): Promise {\n    try {\n      // Check location permissions\n      const permissions = await Geolocation.checkPermissions();\n\n      if (permissions.location !== 'granted') {\n        // Request permissions if not granted\n        const permissionResult = await Geolocation.requestPermissions();\n        if (permissionResult.location !== 'granted') {\n          this.presentPermissionAlert();\n          this.navController.pop();\n        }\n      }\n\n      const position = await Geolocation.getCurrentPosition({\n        enableHighAccuracy: true, // Consider enabling for precision if needed\n        timeout: 30000, // Set a timeout to prevent getting stuck\n      }).catch((error) => {\n        this.presentLocationAlert();\n        this.navController.pop();}\n      );\n\n      if (position) {\n        console.log(position.coords);\n        this.getForm().position = `${position.coords.latitude},${position.coords.longitude}`;\n        this.getForm().altitud = position.coords.altitude ?? 0;\n        console.log(`Position: ${position.coords.latitude},${position.coords.longitude}, Altitude: ${this.getForm().altitud}`);\n        this.startDraft();\n      } else {\n        this.presentLocationAlert();\n        this.navController.pop();\n      }\n    } catch (error) {\n      console.log('Error getting location: ', error);\n      this.presentLocationAlert();\n      this.navController.pop();\n    }\n  }\n\n  private async presentPermissionAlert(): Promise {\n    const alert = await this.alertController.create({\n      header: 'Permiso denegado',\n      message:\n        'Por favor, habilita los permisos de ubicación en los ajustes del dispositivo.',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  private async presentLocationAlert(): Promise {\n    const alert = await this.alertController.create({\n      header: 'No se pudo obtener la ubicación',\n      message:\n        'Por favor, habilita la ubicación en los ajustes del dispositivo y vuelve a intentarlo.',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  } */\n\n  private startDraft(): void {\n    this.detailedFormService.startDraft();\n    this.detailedFormService.setQuestionsPage(true);\n  }\n\n  getTotalQuestions(): number {\n    return this.detailedFormService.getTotalQuestions();\n  }\n\n  getTransformedDownladedDate() {\n    const date = new Date(this.getForm().fechaDescarga);\n\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    };\n    return date.toLocaleDateString('es-ES', options);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Encuesta descargada el {{getTransformedDownladedDate()}}\n      {{getForm().name}}\n      Proyecto iniciado el {{getForm().dateInit}} | Finaliza el {{getForm().dateEnd}}\n      Total preguntas: {{getTotalQuestions()}}\n    \n\n    \n      {{getForm().description}}\n    \n    \n      Comenzar formulario\n      Ver encuesta\n      Reanudar borrador\n    \n  \n\n\n    \n\n    \n                \n                    ./detailed-form.component.scss\n                \n                #container {\n  text-align: center;\n\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n\n  color: #8c8c8c;\n\n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Encuesta descargada el {{getTransformedDownladedDate()}}      {{getForm().name}}      Proyecto iniciado el {{getForm().dateInit}} | Finaliza el {{getForm().dateEnd}}      Total preguntas: {{getTotalQuestions()}}              {{getForm().description}}              Comenzar formulario      Ver encuesta      Reanudar borrador      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailedFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DetailedFormService.html":{"url":"injectables/DetailedFormService.html","title":"injectable - DetailedFormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DetailedFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/detailed-form.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                draft\n                            \n                            \n                                    Private\n                                form\n                            \n                            \n                                    Private\n                                questionsPage\n                            \n                            \n                                    Private\n                                selectedForm\n                            \n                            \n                                    Private\n                                survey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canSetBeneficiary\n                            \n                            \n                                    Private\n                                canSetSpecializedBeneficiary\n                            \n                            \n                                    Private\n                                canSetSupportBeneficiary\n                            \n                            \n                                    Private\n                                existsProducerWithSpecializedForm\n                            \n                            \n                                    Public\n                                getForm\n                            \n                            \n                                    Public\n                                getLocation\n                            \n                            \n                                    Public\n                                getTotalQuestions\n                            \n                            \n                                    Public\n                                isDraft\n                            \n                            \n                                    Public\n                                isForm\n                            \n                            \n                                    Public\n                                isQuestionsPage\n                            \n                            \n                                    Public\n                                isSurvey\n                            \n                            \n                                    Public\n                                saveSurvey\n                            \n                            \n                                    Public\n                                setBeneficiary\n                            \n                            \n                                    Public\n                                setForm\n                            \n                            \n                                    Public\n                                setQuestions\n                            \n                            \n                                    Public\n                                setQuestionsPage\n                            \n                            \n                                    Private\n                                    Async\n                                showAlreadySpecializedBeneficiaryAlert\n                            \n                            \n                                    Private\n                                    Async\n                                showNoSpecializedBeneficiaryAlert\n                            \n                            \n                                    Private\n                                    Async\n                                showNoSupportBeneficiaryAlert\n                            \n                            \n                                    Public\n                                startDraft\n                            \n                            \n                                    Public\n                                updateModifyDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService, draftService: DraftService, surveyService: SurveyService, questionService: QuestionService, alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canSetBeneficiary\n                        \n                    \n                \n            \n            \n                \n                        \n                    canSetBeneficiary(selectedBeneficiary: Beneficiary.Producer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedBeneficiary\n                                            \n                                                            Beneficiary.Producer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canSetSpecializedBeneficiary\n                        \n                    \n                \n            \n            \n                \n                        \n                    canSetSpecializedBeneficiary(selectedBeneficiary: Beneficiary.Producer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedBeneficiary\n                                            \n                                                            Beneficiary.Producer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        canSetSupportBeneficiary\n                        \n                    \n                \n            \n            \n                \n                        \n                    canSetSupportBeneficiary(selectedBeneficiary: Beneficiary.Producer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedBeneficiary\n                                            \n                                                            Beneficiary.Producer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        existsProducerWithSpecializedForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    existsProducerWithSpecializedForm(producerToSearch: Beneficiary.Producer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                producerToSearch\n                                            \n                                                            Beneficiary.Producer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    getForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getTotalQuestions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    isDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    isForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isQuestionsPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    isQuestionsPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isSurvey\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveSurvey\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:214\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setBeneficiary\n                        \n                    \n                \n            \n            \n                \n                        \n                    setBeneficiary(selectedBeneficiary: Beneficiary.Producer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedBeneficiary\n                                            \n                                                            Beneficiary.Producer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    setForm(form: FormDetail.Form, formType: boolean, draftType: boolean, surveyType: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formType\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                draftType\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                surveyType\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setQuestions\n                        \n                    \n                \n            \n            \n                \n                        \n                    setQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setQuestionsPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setQuestionsPage(questionPage: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                questionPage\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        showAlreadySpecializedBeneficiaryAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    showAlreadySpecializedBeneficiaryAlert()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        showNoSpecializedBeneficiaryAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    showNoSpecializedBeneficiaryAlert()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:177\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        showNoSupportBeneficiaryAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    showNoSupportBeneficiaryAlert()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:206\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateModifyDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateModifyDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:225\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        draft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        questionsPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        survey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { FormService } from '../form/form.service';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { v4 as uuidv4 } from 'uuid';\nimport { QuestionService } from './question/question.service';\nimport { DraftService } from '../draft/draft.service';\nimport { SurveyService } from '../survey/survey.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { AlertController } from '@ionic/angular';\nimport _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DetailedFormService {\n  private selectedForm!: FormDetail.Form;\n  private form!: boolean;\n  private draft!: boolean;\n  private survey!: boolean;\n  private questionsPage!: boolean;\n\n  constructor(\n    private formService: FormService,\n    private draftService: DraftService,\n    private surveyService: SurveyService,\n    private questionService: QuestionService,\n    private alertController: AlertController\n  ) {}\n\n  public getForm(): FormDetail.Form {\n    return this.selectedForm;\n  }\n\n  public isForm(): boolean {\n    return this.form;\n  }\n\n  public isDraft(): boolean {\n    return this.draft;\n  }\n\n  public isSurvey(): boolean {\n    return this.survey;\n  }\n\n  public setForm(\n    form: FormDetail.Form,\n    formType: boolean,\n    draftType: boolean,\n    surveyType: boolean\n  ): void {\n    this.selectedForm = form;\n    this.form = formType;\n    this.draft = draftType;\n    this.survey = surveyType;\n    this.setQuestions();\n  }\n\n  public setQuestionsPage(questionPage: boolean): void {\n    this.questionsPage = questionPage;\n  }\n\n  public isQuestionsPage(): boolean {\n    return this.questionsPage;\n  }\n\n  public setBeneficiary(selectedBeneficiary: Beneficiary.Producer): boolean {\n    const previousBeneficiary: Beneficiary.Producer =\n      this.selectedForm.beneficiary;\n    const isSpecializedForm: boolean = this.selectedForm.id === FormDetail.FormType.SPECIALIZED;\n\n    if (this.selectedForm.beneficiary === selectedBeneficiary) {\n      return true;\n    }\n\n    if (isSpecializedForm && previousBeneficiary) {\n      previousBeneficiary.specialized = false;\n    }\n\n    const canSet: boolean | undefined = this.canSetBeneficiary(selectedBeneficiary);\n\n    if (canSet) {\n      this.selectedForm.beneficiary = selectedBeneficiary;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private canSetBeneficiary(selectedBeneficiary: Beneficiary.Producer): boolean | undefined {\n\n    const formId = this.selectedForm.id;\n\n    switch (FormDetail.FormType[formId]) {\n      case 'SPECIALIZED':\n        return this.canSetSpecializedBeneficiary(selectedBeneficiary);\n      case 'SUPPORT':\n        return this.canSetSupportBeneficiary(selectedBeneficiary);\n      default:\n        return false;\n    }\n  }\n\n  private canSetSpecializedBeneficiary(\n    selectedBeneficiary: Beneficiary.Producer\n  ): boolean | undefined {\n    const existsProducerWithSpecializedForm: boolean =\n      this.existsProducerWithSpecializedForm(selectedBeneficiary);\n    const isSpecializedBeneficiary: boolean = selectedBeneficiary.specialized;\n\n    if (!isSpecializedBeneficiary && !existsProducerWithSpecializedForm) {\n      selectedBeneficiary.specialized = true;\n      return true;\n    } else if (isSpecializedBeneficiary || existsProducerWithSpecializedForm) {\n      this.showAlreadySpecializedBeneficiaryAlert();\n      return false;\n    }\n\n    return undefined;\n  }\n\n  private canSetSupportBeneficiary(\n    selectedBeneficiary: Beneficiary.Producer\n  ): boolean | undefined {\n    const isSpecializedBeneficiary: boolean = selectedBeneficiary.specialized;\n    const isSupportCandidate: boolean = selectedBeneficiary.support;\n\n    if (isSpecializedBeneficiary && isSupportCandidate) {\n      return true;\n    } else if (!isSpecializedBeneficiary) {\n      this.showNoSpecializedBeneficiaryAlert();\n      return false;\n    } else if (!isSupportCandidate) {\n      this.showNoSupportBeneficiaryAlert();\n      return false;\n    }\n\n    return undefined;\n  }\n\n  private async showNoSupportBeneficiaryAlert(): Promise {\n    const alert = await this.alertController.create({\n      header: 'Beneficiario no es candidato de asistencia técnica',\n      message: 'Escoge otro beneficiario',\n      buttons: ['OK'],\n    });\n    await alert.present();\n  }\n\n  private existsProducerWithSpecializedForm(\n    producerToSearch: Beneficiary.Producer\n  ): boolean {\n    var exists = false;\n\n    const drafts: FormDetail.Form[] = this.draftService.getDrafts();\n    const surveys: FormDetail.Form[] = this.surveyService.getSurveys();\n\n    const existsOnDrafts = drafts.some((d) => d.beneficiary.id === producerToSearch.id  && d.id === 1);\n\n    const existsOnSurveys = surveys.some((s) => s.beneficiary.id === producerToSearch.id  && s.id === 1);\n\n    exists = existsOnDrafts || existsOnSurveys;\n\n    return exists;\n  }\n\n  private async showAlreadySpecializedBeneficiaryAlert(): Promise {\n    const alert = await this.alertController.create({\n      header: 'Beneficiario ya tiene formulario especializado',\n      message: 'Elimina el formulario respectivo o escoge otro beneficiario',\n      buttons: ['OK'],\n    });\n    await alert.present();\n  }\n\n  private async showNoSpecializedBeneficiaryAlert(): Promise {\n    const alert = await this.alertController.create({\n      header: 'Sin formulario especializado',\n      message:\n        'Debes realizar un formulario especializado primero a este beneficiario',\n      buttons: ['OK'],\n    });\n    await alert.present();\n  }\n\n  public setQuestions(): void {\n    this.questionService.setQuestions(this.selectedForm.questions);\n  }\n\n  public getLocation(): void {\n    Geolocation.getCurrentPosition()\n      .then((position) => {\n        this.selectedForm.position =\n          position.coords.latitude + ',' + position.coords.longitude;\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n\n  public getTotalQuestions(): number {\n    return this.selectedForm.questions.length;\n  }\n\n  public startDraft(): void {\n    const copy: FormDetail.Form = _.cloneDeep(this.selectedForm);\n    copy.uuid = uuidv4();\n    this.draftService.pushDraft(copy);\n    this.selectedForm = copy;\n    this.setQuestions();\n  }\n\n  public saveSurvey(): void {\n    const removedDraft: FormDetail.Form = this.draftService.removeDraft(\n      this.selectedForm\n    );\n    const currentFormId = this.selectedForm.id;\n    const currentFormBeneficiaryName = `${this.selectedForm.beneficiary.firstname}-${this.selectedForm.beneficiary.lastname}`;\n    const currentFormTimestamp = this.selectedForm.fechaInicial;\n    const oldPath = `borradores/${currentFormId}-${currentFormBeneficiaryName}-${currentFormTimestamp}/`;\n    this.surveyService.pushSurvey(removedDraft, oldPath);\n  }\n\n  public updateModifyDate(): void {\n    if (this.isDraft()) {\n      this.draftService.updateModifyDate(this.selectedForm);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DraftService.html":{"url":"injectables/DraftService.html","title":"injectable - DraftService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DraftService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/draft/draft.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drafts\n                            \n                            \n                                    Private\n                                uuidArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeSpecialized\n                            \n                            \n                                    Private\n                                    Async\n                                createDraftsFolder\n                            \n                            \n                                    Public\n                                deleteDraft\n                            \n                            \n                                    Public\n                                generateUUID\n                            \n                            \n                                    Public\n                                getDrafts\n                            \n                            \n                                    Public\n                                getDraftsArrayFromStorage\n                            \n                            \n                                    Public\n                                getLocalDrafts\n                            \n                            \n                                    Private\n                                getUUIDArrayFromStorage\n                            \n                            \n                                    Public\n                                pushDraft\n                            \n                            \n                                    Public\n                                removeDraft\n                            \n                            \n                                    Private\n                                removeOldDrafts\n                            \n                            \n                                    Private\n                                removeUUID\n                            \n                            \n                                    Private\n                                    Async\n                                saveDraftInFile\n                            \n                            \n                                    Public\n                                saveDraftInStorage\n                            \n                            \n                                    Public\n                                saveDrafts\n                            \n                            \n                                    Public\n                                updateModifyDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, producersService: ProducerService, filesystemService: FilesystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/draft/draft.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        producersService\n                                                  \n                                                        \n                                                                        ProducerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesystemService\n                                                  \n                                                        \n                                                                        FilesystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeSpecialized\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeSpecialized(producer: Beneficiary.Producer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                producer\n                                            \n                                                            Beneficiary.Producer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createDraftsFolder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDraftsFolder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDraft(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        generateUUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUUID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getDrafts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getDraftsArrayFromStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDraftsArrayFromStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLocalDrafts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUUIDArrayFromStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUUIDArrayFromStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pushDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    pushDraft(draft: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                draft\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeDraft(draft: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                draft\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormDetail.Form\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeOldDrafts\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOldDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeUUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUUID(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        saveDraftInFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDraftInFile(draft: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:153\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                draft\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveDraftInStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDraftInStorage(draft: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                draft\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveDrafts\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateModifyDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateModifyDate(draft: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                draft\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drafts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/draft/draft.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uuidArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/draft/draft.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { StorageService } from '../storage/storage.service';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { ProducerService } from '@services/producer/producer.service';\nimport { environment } from 'environment';\nimport mockForm from '../../../data/mock-form';\nimport { FilesystemService } from '@services/filesystem/filesystem.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DraftService {\n  private drafts: FormDetail.Form[] = [];\n  private uuidArray: string[] = [];\n\n  constructor(\n    private storageService: StorageService,\n    private producersService: ProducerService,\n    private filesystemService: FilesystemService\n  ) {}\n\n  public pushDraft(draft: FormDetail.Form): void {\n    const currentDate: Date = new Date();\n    const formattedDate: string = currentDate.toISOString();\n    draft.fechaInicial = formattedDate;\n    draft.fechaUltimoCambio = formattedDate;\n    this.drafts.push(draft);\n    this.saveDraftInStorage(draft);\n  }\n\n  public deleteDraft(index: number) {\n    const removedDraft: FormDetail.Form = this.drafts.splice(index, 1).pop()!;\n    const producer: Beneficiary.Producer = removedDraft.beneficiary;\n    if (removedDraft.id === 1 && producer.specialized)\n      this.changeSpecialized(producer);\n    this.storageService.remove(`${DRAFT_STORAGE_KEY}-${removedDraft.uuid}`);\n    this.removeUUID(removedDraft.uuid);\n    this.saveDrafts();\n  }\n\n  private changeSpecialized(producer: Beneficiary.Producer): void {\n    const producers: Beneficiary.Producer[] =\n      this.producersService.getProducers();\n    const beneficiary: Beneficiary.Producer = producers.find(\n      (p) => p.id === producer.id\n    )!;\n    beneficiary.specialized = false;\n  }\n\n  public removeDraft(draft: FormDetail.Form): FormDetail.Form {\n    const index = this.drafts.findIndex((d) => d.uuid === draft.uuid);\n    if (index > -1) {\n      this.storageService.remove(`${DRAFT_STORAGE_KEY}-${draft.uuid}`);\n      this.removeUUID(draft.uuid);\n      return this.drafts.splice(index, 1)[0];\n    }\n    return draft;\n  }\n\n  private removeUUID(uuid: string): void {\n    this.uuidArray = this.uuidArray.filter((id) => id !== uuid);\n    this.storageService.set(UUID_ARRAY_STORAGE_KEY, this.uuidArray);\n  }\n\n  public getLocalDrafts(): void {\n    this.getUUIDArrayFromStorage();\n    this.createDraftsFolder();\n    this.storageService.get('drafts').then((drafts) => {\n      if (drafts) {\n        this.drafts = drafts;\n        this.removeOldDrafts();\n      } else if (this.getDraftsArrayFromStorage()) {\n        this.drafts = this.getDraftsArrayFromStorage();\n      } else {\n        this.drafts = [];\n      }\n      /* if (!environment.production){\n        console.log('Creating mock drafts')\n        this.createMockDrafts()\n        console.log('Drafts:', this.drafts)\n      } */\n    });\n    this.saveDrafts();\n  }\n\n  public getDraftsArrayFromStorage(): FormDetail.Form[] {\n    var drafts: FormDetail.Form[] = [];\n    for (let i = 0; i  {\n          drafts.push(draft);\n        });\n    }\n    return drafts;\n  }\n\n  private getUUIDArrayFromStorage(): void {\n    this.storageService.get(UUID_ARRAY_STORAGE_KEY).then((uuidArray) => {\n      this.uuidArray = uuidArray || [];\n    });\n  }\n\n  public getDrafts(): FormDetail.Form[] {\n    return this.drafts;\n  }\n\n  private removeOldDrafts(): void {\n    const dateThreshold = new Date();\n    dateThreshold.setDate(dateThreshold.getDate() - 7);\n    this.drafts = this.drafts.filter((draft) => {\n      const date = new Date(draft.fechaUltimoCambio);\n      return date >= dateThreshold;\n    });\n  }\n\n  public saveDrafts(): void {\n    for (let i = 0; i  d.id === draft.id);\n    if (index > -1) {\n      const currentDate: Date = new Date();\n      const formattedDate: string = currentDate.toISOString();\n      this.drafts[index].fechaUltimoCambio = formattedDate;\n    }\n  }\n\n  private async createDraftsFolder(): Promise {\n    const path: string = 'borradores';\n    this.filesystemService.createFolder(path);\n  }\n\n  private async saveDraftInFile(draft: FormDetail.Form): Promise {\n    if (draft.beneficiary.cedula === \"\" || draft.beneficiary.id === \"\") return;\n    const draftId = draft.id;\n    const draftBeneficiaryName = `${draft.beneficiary.firstname}-${draft.beneficiary.lastname}`;\n    const timestamp = draft.fechaInicial;\n    const path = `borradores/${draftId}-${draftBeneficiaryName}-${timestamp}/${draftId}-${draftBeneficiaryName}-${timestamp}.txt`;\n    this.filesystemService.writeFile(path, JSON.stringify(draft));\n  }\n\n  /* private createMockDrafts(): void {\n    const mockDrafts: FormDetail.Form[] = [];\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DraftsPage.html":{"url":"components/DraftsPage.html","title":"component - DraftsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DraftsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/drafts/drafts.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drafts\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                drafts.page.scss\n            \n\n\n\n            \n                templateUrl\n                drafts.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteDraft\n                            \n                            \n                                getDrafts\n                            \n                            \n                                    Async\n                                goToDetail\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, detailedFormService: DetailedFormService, router: Router, draftService: DraftService, alertController: AlertController, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/drafts/drafts.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDraft(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/drafts/drafts.page.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDrafts\n                        \n                    \n                \n            \n            \n                \ngetDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/drafts/drafts.page.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        goToDetail\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToDetail(formToSend: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/drafts/drafts.page.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formToSend\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/drafts/drafts.page.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AlertController, IonicModule, Platform, ToastController } from '@ionic/angular';\nimport { DraftService } from '@services/draft/draft.service';\nimport { Router } from '@angular/router';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-drafts',\n  templateUrl: 'drafts.page.html',\n  styleUrls: ['drafts.page.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule],\n})\nexport class DraftsPage {\n  constructor(\n    private platform: Platform,\n    private detailedFormService: DetailedFormService,\n    private router: Router,\n    private draftService: DraftService,\n    private alertController: AlertController,\n    private toastController: ToastController\n  ) {}\n\n  ionViewWillEnter() { }\n\n  getDrafts() {\n    return this.draftService.getDrafts();\n  }\n\n  async deleteDraft(index: number) {\n    const deletionAlert = await this.alertController.create({\n      header: '¿Estás seguro?',\n      message: 'Esta acción no se puede deshacer',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n        },\n        {\n          text: 'Eliminar',\n          handler: async () => {\n            this.draftService.deleteDraft(index);\n            const deletedToast = await this.toastController.create({\n              message: 'Borrador eliminado exitosamente',\n              duration: 2000,\n            });\n            await deletedToast.present();\n          },\n        },\n      ],\n    });\n    await deletionAlert.present();\n  }\n\n  async goToDetail(formToSend: FormDetail.Form) {\n    if (this.platform.is('mobile')) {\n      this.detailedFormService.setForm(formToSend, false, true, false);\n      this.router.navigate(['detail']);\n    } else {\n      const alert = await this.alertController.create({\n        header: 'Dispositivo no compatible',\n        message:\n          'Para acceder al formulario, ingresa desde un dispositivo móvil',\n        buttons: ['OK'],\n      });\n      await alert.present();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      # {{ draft.uuid }}\n      {{ draft.name }}\n      Finaliza el {{ draft.dateEnd }}\n      {{\n        draft.questions[0].answers[0].value\n      }}\n    \n    \n      {{ draft.description }}\n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    drafts.page.scss\n                \n                #uuid {\n  font-size: x-small;\n}\n\nion-icon {\n  font-size: xx-large;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            # {{ draft.uuid }}      {{ draft.name }}      Finaliza el {{ draft.dateEnd }}      {{        draft.questions[0].answers[0].value      }}              {{ draft.description }}                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DraftsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawingPadDataTypeComponent.html":{"url":"components/DrawingPadDataTypeComponent.html","title":"component - DrawingPadDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawingPadDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drawing-pad-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./drawing-pad-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drawing-pad-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvas\n                            \n                            \n                                signatureImg\n                            \n                            \n                                    Private\n                                signaturePad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearPad\n                            \n                            \n                                moved\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                resizeCanvas\n                            \n                            \n                                savePad\n                            \n                            \n                                setSignature\n                            \n                            \n                                startDrawing\n                            \n                            \n                                undoPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:23\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearPad\n                        \n                    \n                \n            \n            \n                \nclearPad()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moved\n                        \n                    \n                \n            \n            \n                \nmoved(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resizeCanvas\n                        \n                    \n                \n            \n            \n                \nresizeCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        savePad\n                        \n                    \n                \n            \n            \n                \nsavePad()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSignature\n                        \n                    \n                \n            \n            \n                \nsetSignature()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDrawing\n                        \n                    \n                \n            \n            \n                \nstartDrawing(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undoPad\n                        \n                    \n                \n            \n            \n                \nundoPad()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signatureImg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        signaturePad\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SignaturePad\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport SignaturePad from 'signature_pad';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-drawing-pad-data-type',\n  templateUrl: './drawing-pad-data-type.component.html',\n  styleUrls: ['./drawing-pad-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule],\n})\nexport class DrawingPadDataTypeComponent {\n  private signaturePad!: SignaturePad;\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  @ViewChild('canvas')\n  canvas!: ElementRef;\n\n  signatureImg!: string;\n\n  constructor() {}\n\n  ngAfterViewInit() {\n    this.signaturePad = new SignaturePad(this.canvas.nativeElement);\n    window.addEventListener('resize', () => this.resizeCanvas());\n    this.resizeCanvas();\n    this.disabled ? this.signaturePad.off() : this.signaturePad.on();\n  }\n\n  resizeCanvas() {\n    this.canvas.nativeElement.style.width = '100%';\n    this.canvas.nativeElement.style.height = '100%';\n    var width = this.canvas.nativeElement.offsetWidth;\n    var height = this.canvas.nativeElement.offsetHeight;\n    var ratio = Math.max(window.devicePixelRatio || 1, 1);\n    this.canvas.nativeElement.width = width * ratio;\n    this.canvas.nativeElement.height = height * ratio;\n    this.canvas.nativeElement.getContext('2d').scale(ratio, ratio);\n    this.setSignature();\n  }\n\n  setSignature() {\n    this.signaturePad.clear();\n    let signature = this.formGroup.get(`${this.question.id}`)?.value;\n    if (signature) {\n      this.signaturePad.fromDataURL(signature)\n      this.signatureImg = signature;\n    }\n  }\n\n  startDrawing(event: Event) {\n    console.log(event);\n    // works in device not in browser\n  }\n\n  moved(event: Event) {\n    // works in device not in browser\n  }\n\n  clearPad() {\n    this.signaturePad.clear();\n  }\n\n  savePad() {\n    const base64Data = this.signaturePad.toDataURL('image/png', 0.5);\n    this.signatureImg = base64Data;\n    this.formGroup.get(`${this.question.id}`)?.setValue(base64Data);\n  }\n\n  undoPad() {\n    const data = this.signaturePad.toData();\n    if (data) {\n      data.pop();\n      this.signaturePad.fromData(data);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Limpiar\n      Guardar\n    \n    \n      Deshacer\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./drawing-pad-data-type.component.scss\n                \n                canvas {\n  border: 2px solid lightgray;\n  border-radius: 20px;\n  background-color: var(--ion-color-success);\n}\n\nimg {\n  border: 2px solid lightgray;\n  border-radius: 20px;\n  width: 100%;\n  height: 100%;\n}\n\nion-button[slot='fixed'] {\n  right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Limpiar      Guardar              Deshacer      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawingPadDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailDataTypeComponent.html":{"url":"components/EmailDataTypeComponent.html","title":"component - EmailDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/email-data-type/email-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./email-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./email-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-email-data-type',\n  templateUrl: './email-data-type.component.html',\n  styleUrls: ['./email-data-type.component.scss'],\n  standalone: true,\n  imports: [ IonicModule, ReactiveFormsModule ],\n})\nexport class EmailDataTypeComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  getValue(): string {\n    return this.formGroup.get(`${this.question.id}`)?.value;\n  }\n\n  setValue(event: any) {\n    this.formGroup.get(`${this.question.id}`)?.setValue(event.target.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./email-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesystemService.html":{"url":"injectables/FilesystemService.html","title":"injectable - FilesystemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesystemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/filesystem.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkFolderExists\n                            \n                            \n                                    Private\n                                    Async\n                                checkPermissions\n                            \n                            \n                                    Public\n                                    Async\n                                copy\n                            \n                            \n                                    Public\n                                    Async\n                                createFolder\n                            \n                            \n                                    Public\n                                    Async\n                                readFile\n                            \n                            \n                                    Public\n                                    Async\n                                readFileAsBase64\n                            \n                            \n                                    Public\n                                    Async\n                                readFolder\n                            \n                            \n                                    Private\n                                    Async\n                                requestPermissions\n                            \n                            \n                                    Public\n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/filesystem.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        checkFolderExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkFolderExists(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/filesystem/filesystem.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkPermissions\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkPermissions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/filesystem/filesystem.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        copy\n                        \n                    \n                \n            \n            \n                \n                        \n                    copy(oldPath: string, newPath: string, useFullPath: boolean, fromDirectory: Directory, toDirectory: Directory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/filesystem/filesystem.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                oldPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                newPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                useFullPath\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                        \n                                                fromDirectory\n                                            \n                                                        Directory\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Directory.External\n                                            \n\n                                        \n                                        \n                                                toDirectory\n                                            \n                                                        Directory\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Directory.External\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createFolder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFolder(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/filesystem/filesystem.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    readFile(path: string, directory: Directory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/filesystem/filesystem.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                directory\n                                            \n                                                        Directory\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Directory.External\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        readFileAsBase64\n                        \n                    \n                \n            \n            \n                \n                        \n                    readFileAsBase64(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/filesystem/filesystem.service.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        readFolder\n                        \n                    \n                \n            \n            \n                \n                        \n                    readFolder(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/filesystem/filesystem.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        requestPermissions\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestPermissions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/filesystem/filesystem.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        writeFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeFile(path: string, data: string, isBase64: boolean, directory: Directory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/filesystem/filesystem.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                isBase64\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                        \n                                                directory\n                                            \n                                                        Directory\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Directory.External\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  Filesystem,\n  Directory,\n  Encoding,\n  WriteFileResult,\n  ReaddirResult,\n  PermissionStatus,\n  CopyResult,\n} from '@capacitor/filesystem';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilesystemService {\n  constructor() {}\n\n  public async createFolder(path: string): Promise {\n    try {\n      const directoryExists = await this.checkFolderExists(path);\n\n      if (directoryExists) {\n        console.log(`${path} folder already exists`);\n        return;\n      }\n\n      console.log(`Creating ${path} folder`);\n      await Filesystem.mkdir({\n        path: path,\n        directory: Directory.External,\n        recursive: true,\n      });\n      console.log(`${path} folder created`);\n    } catch (error) {\n      console.error('Error creating surveys folder', error);\n    }\n  }\n\n  public async readFolder(path: string): Promise {\n    try {\n      console.log(`Reading ${path} folder`);\n      const result: ReaddirResult = await Filesystem.readdir({\n        path: path,\n        directory: Directory.External,\n      });\n      console.log(`${path} folder read`, result);\n      return result;\n    } catch (error) {\n      console.error('Error reading surveys folder', error);\n      return { files: [] };\n    }\n  }\n\n  public async checkFolderExists(path: string): Promise {\n    try {\n      const folder = await this.readFolder('/');\n\n      return folder.files.some((file) => file.name === path);\n    } catch (error) {\n      console.error('Error checking if folder exists', error);\n      return false;\n    }\n  }\n\n  public async writeFile(\n    path: string,\n    data: string,\n    isBase64: boolean = false,\n    directory: Directory = Directory.External\n  ): Promise {\n    try {\n      console.log(`Saving file in ${path}`);\n\n      const permissionStatus: PermissionStatus = await this.checkPermissions();\n\n      if (permissionStatus.publicStorage !== 'granted') {\n        const permissionResult: PermissionStatus = await this.requestPermissions();\n        if (permissionResult.publicStorage !== 'granted') {\n          console.error('Permission not granted');\n          console.log('Error saving in file');\n          return;\n        }\n      }\n      const writeFileResult: WriteFileResult = await Filesystem.writeFile({\n        path: path,\n        data: data,\n        directory: directory,\n        ...(!isBase64 && {\n          encoding: Encoding.UTF8,\n        }),\n        recursive: true,\n      });\n      console.log('File written in ', writeFileResult.uri);\n    } catch (error) {\n      console.error('Error saving survey in file', error);\n    }\n  }\n\n  private async checkPermissions(): Promise {\n    try {\n      const permissionStatus = await Filesystem.checkPermissions();\n      console.log('Permission status: ', permissionStatus);\n      return permissionStatus;\n    } catch (error) {\n      console.error('Error checking permissions', error);\n      return { publicStorage: 'denied' };\n    }\n  }\n\n  private async requestPermissions(): Promise {\n    try {\n      const permissionResult = await Filesystem.requestPermissions();\n      console.log('Permission result: ', permissionResult);\n      return permissionResult;\n    } catch (error) {\n      console.error('Error requesting permissions', error);\n      return { publicStorage: 'denied' };\n    }\n  }\n\n  public async copy(\n    oldPath: string,\n    newPath: string,\n    useFullPath: boolean = false,\n    fromDirectory: Directory = Directory.External,\n    toDirectory: Directory = Directory.External\n  ): Promise {\n    try {\n      console.log(`Copying file from ${oldPath} to ${newPath}`);\n      const copyResult: CopyResult = await Filesystem.copy({\n        from: oldPath,\n        to: newPath,\n        ...(!useFullPath && {\n          directory: fromDirectory\n        }),\n        toDirectory: toDirectory,\n      });\n      console.log('File copied');\n      return copyResult.uri;\n    } catch (error) {\n      console.error('Error copying file', error);\n      return undefined;\n    }\n  }\n\n  public async readFileAsBase64(\n    path: string,\n  ): Promise {\n    try {\n      console.log(`Reading file from ${path}`);\n      const readFileResult = await Filesystem.readFile({\n        path: path,\n      });\n      console.log('File read');\n      return readFileResult.data as string;\n    } catch (error) {\n      console.error('Error reading file', error);\n      return undefined;\n    }\n  }\n\n  public async readFile (\n    path: string,\n    directory: Directory = Directory.External\n  ): Promise {\n    try {\n      console.log(`Reading file from ${path}`);\n      const readFileResult = await Filesystem.readFile({\n        path: path,\n        directory: directory,\n        encoding: Encoding.UTF8,\n      });\n      console.log('File read');\n      return readFileResult.data as string;\n    } catch (error) {\n      console.error('Error reading file', error);\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Form.html":{"url":"interfaces/Form.html","title":"interface - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            altitud\n                                        \n                                \n                                \n                                        \n                                            beneficiary\n                                        \n                                \n                                \n                                        \n                                            dateEnd\n                                        \n                                \n                                \n                                        \n                                            dateInit\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            fechaCarga\n                                        \n                                \n                                \n                                        \n                                            fechaDescarga\n                                        \n                                \n                                \n                                        \n                                            fechaInicial\n                                        \n                                \n                                \n                                        \n                                            fechaUltimoCambio\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            questions\n                                        \n                                \n                                \n                                        \n                                            sync\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        altitud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        altitud:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beneficiary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beneficiary:         Beneficiary.Producer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Beneficiary.Producer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateEnd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateEnd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateInit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateInit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaCarga\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaCarga:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaDescarga\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaDescarga:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaInicial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaInicial:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaUltimoCambio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaUltimoCambio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questions:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sync\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sync:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n\n  export enum FormType {\n    SPECIALIZED = 1,\n    SUPPORT = 5,\n  }\n\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormListComponent.html":{"url":"components/FormListComponent.html","title":"component - FormListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form-list/form-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-list\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./form-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRefresh\n                            \n                            \n                                    Async\n                                navigate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                requestData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                draft\n                            \n                            \n                                form\n                            \n                            \n                                forms\n                            \n                            \n                                survey\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formsService: FormService, draftService: DraftService, surveyService: SurveyService, detailedFormService: DetailedFormService, router: Router, platform: Platform, alertController: AlertController, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/form-list/form-list.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formsService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        draft\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-list/form-list.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-list/form-list.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forms\n                    \n                \n                \n                    \n                        Type :         FormDetail.Form[]\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-list/form-list.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        survey\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-list/form-list.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRefresh\n                        \n                    \n                \n            \n            \n                \nhandleRefresh(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/form-list/form-list.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        navigate\n                        \n                    \n                \n            \n            \n                \n                        \n                    navigate(formToSend: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/form-list/form-list.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formToSend\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/form-list/form-list.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requestData\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/form-list/form-list.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, booleanAttribute } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Platform, AlertController, IonicModule, ToastController } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { DraftService } from '@services/draft/draft.service';\nimport { FormService } from '@services/form/form.service';\nimport { SurveyService } from '@services/survey/survey.service';\n\n@Component({\n  selector: 'app-form-list',\n  templateUrl: './form-list.component.html',\n  styleUrls: ['./form-list.component.scss'],\n  standalone: true,\n  imports: [ CommonModule, IonicModule ],\n})\nexport class FormListComponent {\n\n  @Input({ required: true }) forms!: FormDetail.Form[];\n  @Input({ transform: booleanAttribute }) form: boolean = false;\n  @Input({ transform: booleanAttribute }) draft: boolean = false;\n  @Input({ transform: booleanAttribute }) survey: boolean = false;\n\n  constructor(\n    private formsService: FormService,\n    private draftService: DraftService,\n    private surveyService: SurveyService,\n    private detailedFormService: DetailedFormService,\n    private router: Router,\n    private platform: Platform,\n    private alertController: AlertController,\n    private toastController: ToastController\n  ) {}\n\n  ngOnInit() {\n    this.requestData();\n  }\n\n  async navigate(formToSend: FormDetail.Form) {\n    if (this.platform.is('mobile')) {\n      this.detailedFormService.setForm(formToSend, this.form, this.draft, this.survey);\n      this.router.navigate(['detail']);\n    } else {\n      const alert = await this.alertController.create({\n        header: 'Dispositivo no compatible',\n        message:\n          'Para acceder al formulario, ingresa desde un dispositivo móvil',\n        buttons: ['OK'],\n      });\n      await alert.present();\n    }\n  }\n\n  handleRefresh(event: any) {\n    setTimeout(() => {\n      this.requestData()\n      event.target.complete();\n    }, 2000);\n  }\n\n  private requestData() {\n    if (this.form) {\n      this.formsService.getForms().subscribe((forms) => {\n        this.forms = forms;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n    \n      # {{ form.uuid }}\n      {{ form.name }}\n      Finaliza el {{ form.dateEnd }}\n      {{\n        form.questions[0].answers[0].value\n      }}\n    \n    \n      {{ form.description }}\n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./form-list.component.scss\n                \n                #uuid {\n  font-size: x-small;\n}\n\nion-icon {\n  float: right;\n  font-size: xx-large;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        # {{ form.uuid }}      {{ form.name }}      Finaliza el {{ form.dateEnd }}      {{        form.questions[0].answers[0].value      }}              {{ form.description }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/form/form.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing the forms.\nLocal and remote forms are handled here\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForms\n                            \n                            \n                                    Private\n                                getLocalForms\n                            \n                            \n                                    Private\n                                getQuestionChildren\n                            \n                            \n                                    Private\n                                setLocalForms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/form/form.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor. Dependencies are injected here\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For making requests to the server\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For saving and retrieving forms from the local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getForms\n                        \n                    \n                \n            \n            \n                \n                        \n                    getForms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/form/form.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Retrieves the forms from the server or local storage based on network connectivity.\nIf the device is offline, it retrieves the forms from local storage.\nIf the device is online, it makes a POST request to the server to fetch the forms.\nThe forms are then processed and filtered based on the current date.\nFinally, the forms are stored in local storage and returned as an Observable.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable of FormDetail.Form[] representing the retrieved forms.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLocalForms\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalForms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/form/form.service.ts:120\n                        \n                    \n\n\n            \n                \n                        Retrieves the local forms from the storage service.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of FormDetail.Form type.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getQuestionChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQuestionChildren(question: FormDetail.Question, form: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/form/form.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Retrieves the children questions of a\ngiven question in a form only when its\ntype is \"Tabla\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe parent question.\n\n\n                                            \n                                        \n                                        \n                                                form\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form containing the questions.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                An array of arrays of questions representing the children questions.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLocalForms\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLocalForms(forms: FormDetail.Form[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/form/form.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Sets the local forms in the storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                forms\n                                            \n                                                            FormDetail.Form[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe forms to be stored locally.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApiService } from '@services/api/api.service';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { HttpResponse } from '@capacitor/core';\nimport { StorageService } from '../storage/storage.service';\nimport { Network } from '@capacitor/network';\nimport { Observable, from } from 'rxjs';\nimport { tap, map, switchMap } from 'rxjs/operators';\nimport { formBuilder } from '@utils/builder';\n\n/**\n * Service for managing the forms.\n * Local and remote forms are handled here\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormService {\n\n  /**\n   * Constructor. Dependencies are injected here\n   * @param apiService For making requests to the server\n   * @param storageService For saving and retrieving forms from the local storage\n   */\n  constructor(\n    private apiService: ApiService,\n    private storageService: StorageService\n  ) {}\n\n  /**\n   * Retrieves the forms from the server or local storage based on network connectivity.\n   * If the device is offline, it retrieves the forms from local storage.\n   * If the device is online, it makes a POST request to the server to fetch the forms.\n   * The forms are then processed and filtered based on the current date.\n   * Finally, the forms are stored in local storage and returned as an Observable.\n   *\n   * @returns An Observable of FormDetail.Form[] representing the retrieved forms.\n   */\n  public getForms(): Observable {\n    return from(Network.getStatus()).pipe(\n      switchMap((status) => {\n        if (!status.connected) {\n          return this.getLocalForms();\n        } else {\n          return from(this.apiService.post(ENDPOINT)).pipe(\n            map((response: HttpResponse) => {\n              const formsResponse: FormDetail.FormResponse[] = JSON.parse(\n                response.data\n              );\n              const currentDate: Date = new Date();\n              var forms: FormDetail.Form[] = formsResponse.map(\n                (form: FormDetail.FormResponse) => {\n                  const builtForm: FormDetail.Form = formBuilder(form);\n                  builtForm.questions.forEach((question) => {\n                    if (question.type === 'Tabla') {\n                      let children: FormDetail.Question[][] =\n                        this.getQuestionChildren(question, builtForm);\n                      question.questionChildren = children;\n                    }\n                  });\n                  builtForm.questions = builtForm.questions.filter(\n                    (question) => question.questionParentId === null || question.questionParentId === undefined\n                  );\n                  builtForm.fechaDescarga = currentDate.toISOString(); // Convert Date to string\n\n                  return builtForm;\n                }\n              );\n              forms = forms.filter((form) => {\n                const initialDate: Date = new Date(form.dateInit);\n                const finalDate: Date = new Date(form.dateEnd);\n                return currentDate >= initialDate && currentDate  {\n              this.setLocalForms(forms);\n            })\n          );\n        }\n      })\n    );\n  }\n\n  /**\n   * Retrieves the children questions of a\n   * given question in a form only when its\n   * type is \"Tabla\".\n   *\n   * @param question - The parent question.\n   * @param form - The form containing the questions.\n   * @returns An array of arrays of questions representing the children questions.\n   */\n  private getQuestionChildren(\n    question: FormDetail.Question,\n    form: FormDetail.Form\n  ): FormDetail.Question[][] {\n    let children: FormDetail.Question[][] = [];\n    let base: FormDetail.Question[] = [];\n\n    // Iterate through each question of the form\n    form.questions.forEach((q: FormDetail.Question) => {\n      // If the question is a child of the current question\n      if (q.questionParentId === question.id) {\n        // Add the question to the base array\n        base.push(q);\n      }\n    });\n\n    // Add the base array to the children array\n    children.push(base);\n\n    return children;\n  }\n\n  /**\n   * Retrieves the local forms from the storage service.\n   * @returns A promise that resolves to an array of FormDetail.Form type.\n   */\n  private getLocalForms(): Promise {\n    return this.storageService.get(FORMS_STORAGE_KEY);\n  }\n\n  /**\n   * Sets the local forms in the storage.\n   *\n   * @param forms - The forms to be stored locally.\n   */\n  private setLocalForms(forms: FormDetail.Form[]): void {\n    this.storageService.set(FORMS_STORAGE_KEY, forms);\n  }\n}\n\n/**\n * The key used to store forms in local storage.\n */\nconst FORMS_STORAGE_KEY = 'forms';\n/**\n * The endpoint for form details.\n */\nconst ENDPOINT = 'form-detail';\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormsPage.html":{"url":"components/FormsPage.html","title":"component - FormsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/forms/forms.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forms\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                FormListComponent\n                \n            \n\n            \n                styleUrls\n                forms.page.scss\n            \n\n\n\n            \n                templateUrl\n                forms.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadForms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/forms/forms.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadForms\n                        \n                    \n                \n            \n            \n                \nloadForms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forms/forms.page.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        forms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forms/forms.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { FormService } from '@services/form/form.service';\nimport { FormListComponent } from '@components/form-list/form-list.component';\nimport { FormDetail } from '@models/FormDetail.namespace';\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: 'forms.page.html',\n  styleUrls: ['forms.page.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule, FormListComponent],\n})\nexport class FormsPage {\n  forms!: FormDetail.Form[];\n\n  constructor(private formService: FormService) {}\n\n  loadForms() {\n    this.formService.getForms().subscribe((forms) => {\n      this.forms = forms;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    forms.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                            \n                                    \n                                modal\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppVersion\n                            \n                            \n                                    Private\n                                initializeApp\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Private\n                                loadProducers\n                            \n                            \n                                loadUser\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                uploadSurveys\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(surveyService: SurveyService, alertController: AlertController, authService: AuthService, producerService: ProducerService, platform: Platform, draftService: DraftService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        producerService\n                                                  \n                                                        \n                                                                        ProducerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppVersion\n                        \n                    \n                \n            \n            \n                \ngetAppVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeApp\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewDidEnter\n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadProducers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUser\n                        \n                    \n                \n            \n            \n                \nloadUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLIonModalElement\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Authentication.User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { AlertController, IonicModule, Platform } from '@ionic/angular';\nimport { Authentication } from '@models/Auth.namespace';\nimport { AuthService } from '@services/auth/auth.service';\nimport { SurveyService } from '@services/survey/survey.service';\nimport { App } from '@capacitor/app';\nimport { ProducerService } from '@services/producer/producer.service';\nimport { DraftService } from '@services/draft/draft.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n  standalone: true,\n  imports: [IonicModule],\n})\nexport class HomePage {\n  @ViewChild('modal') modal!: HTMLIonModalElement;\n\n  user!: Authentication.User;\n  appVersion!: string;\n\n  constructor(\n    private surveyService: SurveyService,\n    private alertController: AlertController,\n    private authService: AuthService,\n    private producerService: ProducerService,\n    private platform: Platform,\n    private draftService: DraftService\n  ) {}\n\n  ngOnInit() {\n    App.getInfo().then((info) => {\n      this.appVersion = info.version;\n    });\n  }\n\n  ionViewDidEnter() {\n    this.initializeApp();\n  }\n\n  private initializeApp() {\n    this.platform.ready().then(() => {\n      this.loadProducers();\n      this.loadUser();\n      this.surveyService.getNetworkStatus();\n      this.surveyService.addNetworkChangeListener();\n      this.surveyService.getLocalSurveys();\n      this.draftService.getLocalDrafts();\n    });\n  }\n\n  async uploadSurveys() {\n    const logoutAlert = await this.alertController.create({\n      header: 'Sincronizar',\n      message:\n        'Este proceso puede tardar. ¿Estás seguro que deseas sincronizar?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n        },\n        {\n          text: 'Sincronizar',\n          handler: () => {\n            this.surveyService.syncSurveys();\n          },\n        },\n      ],\n    });\n\n    await logoutAlert.present();\n  }\n\n  async logout() {\n    const logoutAlert = await this.alertController.create({\n      header: 'Cerrar Sesión',\n      message: '¿Estás seguro que deseas cerrar sesión?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n        },\n        {\n          text: 'Cerrar Sesión',\n          cssClass: 'logout',\n          handler: () => {\n            this.authService.logout();\n            this.modal.dismiss();\n          },\n        },\n      ],\n    });\n\n    await logoutAlert.present();\n  }\n\n  loadUser(): void {\n    this.authService.getUser().then((user) => {\n      this.user = user;\n    });\n  }\n\n  private loadProducers(): void {\n    this.producerService.updateProducers();\n  }\n\n  getAppVersion(): string {\n    return this.appVersion;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n        Formularios\n      \n\n      \n        \n        Borradores\n      \n\n      \n        \n        Encuestas\n      \n    \n  \n\n\n\n  \n    \n      \n        Información General\n      \n    \n    \n      \n        Usuario\n        {{ user.name }}\n      \n      \n        Cargo\n        {{ user.type }}\n      \n      \n        App Version\n        {{ getAppVersion() }}\n      \n      Cerrar Sesión\n    \n  \n\n\n    \n\n    \n                \n                    home.page.scss\n                \n                ion-img {\n  width: 60%;\n}\n\n#home-header {\n  ion-toolbar {\n    --background: url('../../../assets/imgs/header-inner.jpg');\n    display: flex;\n    align-content: center;\n    height: 100px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n}\n\n.header-icon {\n  color: white;\n}\n\nion-modal {\n  .modal-content {\n    --height: 10px;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Formularios                            Borradores                            Encuestas                                Información General                            Usuario        {{ user.name }}                    Cargo        {{ user.type }}                    App Version        {{ getAppVersion() }}            Cerrar Sesión      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/location/location.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentLocation\n                            \n                            \n                                    Async\n                                openSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentLocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentLocation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/location/location.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    openSettings(app)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/location/location.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                app\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Geolocation, Position } from '@capacitor/geolocation';\nimport { NativeSettings, AndroidSettings } from 'capacitor-native-settings';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocationService {\n\n  async getCurrentLocation(): Promise {\n    try {\n      const permissionStatus = await Geolocation.checkPermissions();\n      console.log('Permission status: ', permissionStatus);\n\n      if (permissionStatus.location !== 'granted') {\n        const permissionResult = await Geolocation.requestPermissions();\n        console.log('Permission result: ', permissionResult);\n        if (permissionResult.location !== 'granted') {\n          await this.openSettings(true);\n          return this.getCurrentLocation();\n        }\n      }\n\n      let options: PositionOptions = {\n        maximumAge: 3000,\n        timeout: 30000,\n        enableHighAccuracy: true,\n      };\n      const position: Position = await Geolocation.getCurrentPosition(options);\n      console.log(position);\n      return position;\n    } catch (error: any) {\n      console.error('Error getting location', error);\n      if (error?.message == 'Location services are not enabled') {\n        await this.openSettings();\n        return this.getCurrentLocation();\n      }\n      return undefined;\n    }\n  }\n\n  async openSettings(app = false) {\n    console.log('open settings...');\n    return NativeSettings.openAndroid({\n      option: app\n        ? AndroidSettings.ApplicationDetails\n        : AndroidSettings.Location,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                                FormsModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, alertController: AlertController, loadingController: LoadingController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.page.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormsModule,\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { IonicModule } from '@ionic/angular';\nimport { AuthService } from '@services/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule, FormsModule, ReactiveFormsModule],\n})\nexport class LoginPage implements OnInit {\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private alertController: AlertController,\n    private loadingController: LoadingController\n  ) {}\n\n  form: FormGroup = this.fb.group({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n  });\n\n  ngOnInit() {}\n\n  async login() {\n    const loading = await this.loadingController.create({\n      message: 'Cargando...',\n    });\n    await loading.present();\n\n    if (this.form.valid) {\n      try {\n        this.authService.login(this.form.value);\n        await this.loadingController.dismiss();\n      } catch (error: any) {\n        await this.loadingController.dismiss();\n        const alert = await this.alertController.create({\n          header: 'Error',\n          message: error.message,\n          buttons: ['OK'],\n        });\n        await alert.present();\n      }\n    } else {\n      await this.loadingController.dismiss();\n      const alert = await this.alertController.create({\n        header: 'Error',\n        message: 'Por favor, ingrese un email y una contraseña válidos',\n        buttons: ['OK'],\n      });\n      await alert.present();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n          \n        \n        \n          \n          \n        \n        \n          \n            Iniciar Sesión\n            \n          \n        \n      \n      \n        \n          \n          \n          Desarrollado por Blaucast®\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .container {\n  display: grid;\n  place-items: center;\n  height: 100vh;\n  background-color: #999999;\n}\n\n.login-button {\n  margin-top: 2%;\n  width: 100%;\n}\n\n.bottom-info {\n  margin-top: 10%;\n  font-size: 11px;\n  color: #999999;\n}\n\n.center {\n  text-align: center;\n}\n\n.login-input {\n  border-radius: 4%;\n}\n\nion-card {\n  min-width: 200px;\n  max-width: 500px;\n  background-color: white;\n}\n\nion-item {\n  --background: white;\n}\n\nion-input {\n  --color: #999999;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                      Iniciar Sesión                                                                                Desarrollado por Blaucast®                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoneyDataTypeComponent.html":{"url":"components/MoneyDataTypeComponent.html","title":"component - MoneyDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoneyDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/money-data-type/money-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-money-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            MaskitoModule\n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./money-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./money-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                maskPredicate\n                            \n                            \n                                    Readonly\n                                moneyMask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHelperText\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Async\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, currencyPipe: CurrencyPipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currencyPipe\n                                                  \n                                                        \n                                                                    CurrencyPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHelperText\n                        \n                    \n                \n            \n            \n                \ngetHelperText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        maskPredicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MaskitoElementPredicateAsync\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        moneyMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MaskitoOptions\n\n                    \n                \n                \n                    \n                        Default value : maskitoNumberOptionsGenerator({\n    decimalZeroPadding: true,\n    prefix: '$',\n    thousandSeparator: ',',\n    decimalSeparator: '.',\n    precision: 2,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CurrencyPipe } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { maskitoNumberOptionsGenerator, maskitoParseNumber } from '@maskito/kit';\nimport { MaskitoModule } from '@maskito/angular';\nimport { MaskitoElementPredicateAsync, MaskitoOptions } from '@maskito/core';\n\n@Component({\n  selector: 'app-money-data-type',\n  templateUrl: './money-data-type.component.html',\n  styleUrls: ['./money-data-type.component.scss'],\n  standalone: true,\n  imports: [MaskitoModule, IonicModule, ReactiveFormsModule],\n})\nexport class MoneyDataTypeComponent {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  readonly maskPredicate: MaskitoElementPredicateAsync = async (el) =>\n    (el as HTMLIonInputElement).getInputElement();\n\n  readonly moneyMask: MaskitoOptions = maskitoNumberOptionsGenerator({\n    decimalZeroPadding: true,\n    prefix: '$',\n    thousandSeparator: ',',\n    decimalSeparator: '.',\n    precision: 2,\n  });\n\n  constructor(\n    private alertController: AlertController,\n    private currencyPipe: CurrencyPipe\n  ) {}\n\n  ngOnChanges() {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    if (this.question.min)\n      formControl.addValidators(Validators.min(this.question.min));\n    if (this.question.max)\n      formControl.addValidators(Validators.max(this.question.max));\n  }\n\n  getValue(): string {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    const currency: string = this.currencyPipe.transform(\n      formControl.value,\n      'COP',\n      '$',\n    )!;\n\n    return currency;\n  }\n\n  async setValue(event: Event): Promise {\n    const element: HTMLIonInputElement = event.target as HTMLIonInputElement;\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    formControl.setValue(maskitoParseNumber(element.value as string));\n\n    if (formControl.getError('min')) {\n      const minAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor mínimo',\n        message: `El valor mínimo es ${this.question.min}`,\n        buttons: ['OK'],\n      });\n\n      await minAlert.present();\n    } else if (formControl.getError('max')) {\n      const maxAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor máximo',\n        message: `El valor máximo es ${this.question.max}`,\n        buttons: ['OK'],\n      });\n\n      await maxAlert.present();\n    }\n  }\n\n  getHelperText(): string {\n    let message: string = 'Ingrese un valor';\n    const minCurrency: string = this.currencyPipe.transform(\n      this.question.min,\n      'COP',\n      '$',\n      '1.2-2'\n    )!;\n    const maxCurrency: string = this.currencyPipe.transform(\n      this.question.max,\n      'COP',\n      '$',\n      '1.2-2'\n    )!;\n    if (this.question.min && this.question.max)\n      message += ` entre ${minCurrency} y ${maxCurrency}`;\n    else if (this.question.min) message += ` mayor a ${minCurrency}`;\n    else if (this.question.max) message += ` menor a ${maxCurrency}`;\n    return message;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./money-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoneyDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MonthDataTypeComponent.html":{"url":"components/MonthDataTypeComponent.html","title":"component - MonthDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MonthDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/month-data-type/month-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-month-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./month-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./month-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-month-data-type',\n  templateUrl: './month-data-type.component.html',\n  styleUrls: ['./month-data-type.component.scss'],\n  standalone: true,\n  imports: [ IonicModule, ReactiveFormsModule ],\n})\nexport class MonthDataTypeComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  onChange(event: any) {\n    this.formGroup.controls[this.question.id].setValue(event.detail.value)\n  }\n\n  getValue(): string {\n    const control: FormControl = this.formGroup.controls[this.question.id] as FormControl\n\n    const date: Date = control.value ? new Date(control.value) : new Date()\n    return date.toISOString()\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./month-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MonthDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultipleComponent.html":{"url":"components/MultipleComponent.html","title":"component - MultipleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MultipleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/multiple/multiple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-multiple\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./multiple.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./multiple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                other\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeInputState\n                            \n                            \n                                checkAnswer\n                            \n                            \n                                getAnswers\n                            \n                            \n                                getTextValue\n                            \n                            \n                                isChecked\n                            \n                            \n                                    Private\n                                isLastAnswer\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setCheckedValue\n                            \n                            \n                                setTextValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/multiple/multiple.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/multiple/multiple.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/multiple/multiple.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/multiple/multiple.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeInputState\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeInputState(answerGroup: FormGroup, id: string, value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answerGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswer\n                        \n                    \n                \n            \n            \n                \ncheckAnswer(event: Event, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAnswers\n                        \n                    \n                \n            \n            \n                \ngetAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Answer[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTextValue\n                        \n                    \n                \n            \n            \n                \ngetTextValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChecked\n                        \n                    \n                \n            \n            \n                \nisChecked(answer: FormDetail.Answer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answer\n                                            \n                                                        FormDetail.Answer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLastAnswer\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLastAnswer(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCheckedValue\n                        \n                    \n                \n            \n            \n                \nsetCheckedValue(formGroup: FormGroup, value: boolean, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTextValue\n                        \n                    \n                \n            \n            \n                \nsetTextValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        other\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/multiple/multiple.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-multiple',\n  templateUrl: './multiple.component.html',\n  styleUrls: ['./multiple.component.scss'],\n  standalone: true,\n  imports: [ CommonModule, IonicModule, ReactiveFormsModule ]\n})\nexport class MultipleComponent implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  other: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  getAnswers(): FormDetail.Answer[] {\n    return this.question.answers;\n  }\n\n  isChecked(answer: FormDetail.Answer): boolean {\n    const formGroup: FormGroup = this.formGroup.get(`${this.question.id}`) as FormGroup;\n\n    const formControl: AbstractControl | null = formGroup.get(answer.id.toString());\n\n    if (formControl) {\n      const value: boolean = formControl.value;\n      this.changeInputState(formGroup, answer.id.toString(), value);\n      return value;\n    }\n\n    return false;\n  }\n\n  checkAnswer(event: Event, id: number): void {\n    const formGroup: FormGroup = this.formGroup.get(`${this.question.id}`) as FormGroup;\n\n    const element: HTMLInputElement = event.target as HTMLInputElement;\n    const value: boolean = element.checked;\n\n    this.setCheckedValue(formGroup, value, id);\n  }\n\n  setCheckedValue(formGroup: FormGroup, value: boolean, id: number): void {\n    const formControl: AbstractControl | null = formGroup.get(id.toString());\n\n    if (formControl) {\n      this.changeInputState(formGroup, id.toString(), value);\n      formControl.setValue(value);\n    }\n  }\n\n  getTextValue(): string {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherValue: string = answerGroup.get('other')?.value;\n    return otherValue;\n  }\n\n  setTextValue(event: any): void {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherValue: string = event.detail.value;\n    answerGroup.get('other')?.setValue(otherValue);\n  }\n\n  private changeInputState(answerGroup: FormGroup, id: string, value: boolean): void {\n\n    if (this.isLastAnswer(id) && value) {\n      this.other = true;\n      answerGroup.get('other')?.enable();\n    } else if (this.isLastAnswer(id) && !value) {\n      this.other = false;\n      answerGroup.get('other')?.disable();\n    }\n  }\n\n  private isLastAnswer(id: string): boolean {\n    const answers: FormDetail.Answer[] = this.getAnswers();\n    const lastAnswer: FormDetail.Answer = answers[answers.length - 1];\n    return Number(id) === lastAnswer.id;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ answer.value }}\n      \n    \n  \n\n\n\n  \n    \n      \n        {{ isLast ? answer.value.split(\":\")[0] : answer.value }}\n      \n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./multiple.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ answer.value }}                                {{ isLast ? answer.value.split(\":\")[0] : answer.value }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MultipleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NumberDataTypeComponent.html":{"url":"components/NumberDataTypeComponent.html","title":"component - NumberDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NumberDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/number-data-type/number-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-number-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./number-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./number-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlaceholder\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Async\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaceholder\n                        \n                    \n                \n            \n            \n                \ngetPlaceholder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-number-data-type',\n  templateUrl: './number-data-type.component.html',\n  styleUrls: ['./number-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule, ReactiveFormsModule],\n})\nexport class NumberDataTypeComponent {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(private alertController: AlertController) {}\n\n  ngOnChanges() {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    if (this.question.min)\n      formControl.addValidators(Validators.min(this.question.min));\n    if (this.question.max)\n      formControl.addValidators(Validators.max(this.question.max));\n  }\n\n  getValue(): string {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    return formControl.value;\n  }\n\n  async setValue(event: Event): Promise {\n    const element: HTMLInputElement = event.target as HTMLInputElement;\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    formControl.setValue(element.value);\n\n    if (formControl.getError('min')) {\n      const minAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor mínimo',\n        message: `El valor mínimo es ${this.question.min}`,\n        buttons: ['OK'],\n      });\n\n      await minAlert.present();\n    } else if (formControl.getError('max')) {\n      const maxAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor máximo',\n        message: `El valor máximo es ${this.question.max}`,\n        buttons: ['OK'],\n      });\n\n      await maxAlert.present();\n    }\n  }\n\n  getPlaceholder(): string {\n    let message: string = 'Ingrese un valor';\n    if (this.question.min && this.question.max)\n      message += ` entre ${this.question.min} y ${this.question.max}`;\n    else if (this.question.min) message += ` mayor a ${this.question.min}`;\n    else if (this.question.max) message += ` menor a ${this.question.max}`;\n    return message;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./number-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NumberDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OfflineManagerService.html":{"url":"injectables/OfflineManagerService.html","title":"injectable - OfflineManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OfflineManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/offline-manager/offline-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkForEvents\n                            \n                            \n                                    Private\n                                sendRequests\n                            \n                            \n                                    Public\n                                    Async\n                                storeRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, apiService: ApiService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/offline-manager/offline-manager.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        checkForEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkForEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/offline-manager/offline-manager.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sendRequests\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendRequests(operations: StoredRequest[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/offline-manager/offline-manager.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                operations\n                                            \n                                                            StoredRequest[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeRequest(url: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/offline-manager/offline-manager.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@capacitor/core';\nimport { ToastController } from '@ionic/angular';\nimport { ApiService } from '@services/api/api.service';\nimport { StorageService } from '@services/storage/storage.service';\nimport { Observable, from, of, forkJoin } from 'rxjs';\nimport { switchMap, finalize } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OfflineManagerService {\n  constructor(\n    private storageService: StorageService,\n    private apiService: ApiService,\n    private toastController: ToastController\n  ) {}\n\n  public checkForEvents(): Observable {\n    return from(this.storageService.get(STORAGE_REQ_KEY)).pipe(\n      switchMap((storedOperations: StoredRequest[]) => {\n        let storedObj: StoredRequest[] = storedOperations;\n        if (storedObj && storedObj.length > 0) {\n          return this.sendRequests(storedObj).pipe(\n            finalize(() => {\n              let toast = this.toastController.create({\n                message: `Local data succesfully synced to API!`,\n                duration: 3000,\n                position: 'bottom',\n              });\n              toast.then((toast) => toast.present());\n              this.storageService.remove(STORAGE_REQ_KEY);\n            })\n          );\n        } else {\n          console.log('no local events to sync');\n          return of(false);\n        }\n      })\n    );\n  }\n\n  public async storeRequest(url: string, data: any): Promise {\n    let toast = this.toastController.create({\n      message: `Your data is stored locally because you seem to be offline.`,\n      duration: 3000,\n      position: 'bottom',\n    });\n    toast.then((toast) => toast.present());\n\n    const action: StoredRequest = {\n      url: url,\n      data: data,\n      time: new Date().getTime(),\n      id: uuidv4(),\n    };\n\n    return this.storageService.get(STORAGE_REQ_KEY).then((storedOperations) => {\n      let storedObj: StoredRequest[] = JSON.parse(storedOperations);\n      if (storedObj) {\n        storedObj.push(action);\n      } else {\n        storedObj = [action];\n      }\n      return this.storageService.set(\n        STORAGE_REQ_KEY,\n        JSON.stringify(storedObj)\n      );\n    });\n  }\n\n  private sendRequests(\n    operations: StoredRequest[]\n  ): Observable {\n    let obs = [];\n    for (let op of operations) {\n      console.log('Make one request: ', op);\n      let oneObs = this.apiService.post(op.url, op.data);\n      obs.push(oneObs);\n    }\n    return forkJoin(obs);\n  }\n}\n\nconst STORAGE_REQ_KEY: string = 'storedreq';\n\ninterface StoredRequest {\n  url: string;\n  data: any;\n  time: number;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenComponent.html":{"url":"components/OpenComponent.html","title":"component - OpenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/open.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-open\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                AutocompleteComponent\n                                PhotoDataTypeComponent\n                                DrawingPadDataTypeComponent\n                                TextAreaDataTypeComponent\n                                NumberDataTypeComponent\n                                TextDataTypeComponent\n                                DateDataTypeComponent\n                                PercentageDataTypeComponent\n                                MonthDataTypeComponent\n                                EmailDataTypeComponent\n                                MoneyDataTypeComponent\n                                PhoneDataTypeComponent\n                \n            \n\n            \n                styleUrls\n                ./open.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./open.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDataType\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/open.component.ts:46\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/open.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/open.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/open.component.ts:44\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDataType\n                        \n                    \n                \n            \n            \n                \ngetDataType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/open.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/open.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { QuestionService } from '@services/detailed-form/question/question.service';\nimport { AutocompleteComponent } from '../autocomplete/autocomplete.component';\nimport { CommonModule } from '@angular/common';\nimport { PhotoDataTypeComponent } from './photo-data-type/photo-data-type.component';\nimport { DrawingPadDataTypeComponent } from './drawing-pad-data-type/drawing-pad-data-type.component';\nimport { TextAreaDataTypeComponent } from './text-area-data-type/text-area-data-type.component';\nimport { NumberDataTypeComponent } from './number-data-type/number-data-type.component';\nimport { TextDataTypeComponent } from './text-data-type/text-data-type.component';\nimport { DateDataTypeComponent } from './date-data-type/date-data-type.component';\nimport { PercentageDataTypeComponent } from './percentage-data-type/percentage-data-type.component';\nimport { MonthDataTypeComponent } from './month-data-type/month-data-type.component';\nimport { EmailDataTypeComponent } from './email-data-type/email-data-type.component';\nimport { MoneyDataTypeComponent } from './money-data-type/money-data-type.component';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { FormGroup } from '@angular/forms';\nimport { PhoneDataTypeComponent } from './phone-data-type/phone-data-type.component';\n\n@Component({\n  selector: 'app-open',\n  templateUrl: './open.component.html',\n  styleUrls: ['./open.component.scss'],\n  imports: [\n    CommonModule,\n    IonicModule,\n    AutocompleteComponent,\n    PhotoDataTypeComponent,\n    DrawingPadDataTypeComponent,\n    TextAreaDataTypeComponent,\n    NumberDataTypeComponent,\n    TextDataTypeComponent,\n    DateDataTypeComponent,\n    PercentageDataTypeComponent,\n    MonthDataTypeComponent,\n    EmailDataTypeComponent,\n    MoneyDataTypeComponent,\n    PhoneDataTypeComponent\n  ],\n  standalone: true,\n})\nexport class OpenComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  getDataType(): string {\n    return this.question.dataType;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./open.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OpenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PercentageDataTypeComponent.html":{"url":"components/PercentageDataTypeComponent.html","title":"component - PercentageDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PercentageDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-percentage-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./percentage-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./percentage-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlaceholder\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Async\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaceholder\n                        \n                    \n                \n            \n            \n                \ngetPlaceholder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-percentage-data-type',\n  templateUrl: './percentage-data-type.component.html',\n  styleUrls: ['./percentage-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule, ReactiveFormsModule],\n})\nexport class PercentageDataTypeComponent {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(private alertController: AlertController) {}\n\n  ngOnChanges() {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    if (this.question.min)\n      formControl.addValidators(Validators.min(this.question.min));\n    if (this.question.max)\n      formControl.addValidators(Validators.max(this.question.max));\n  }\n\n  getValue(): string {\n    return this.formGroup.get(`${this.question.id}`)?.value;\n  }\n\n  async setValue(event: Event) {\n    const element: HTMLInputElement = event.target as HTMLInputElement;\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    formControl.setValue(element.value);\n\n    if (formControl.getError('min')) {\n      const minAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor mínimo',\n        message: `El valor mínimo es ${this.question.min}`,\n        buttons: ['OK'],\n      });\n\n      await minAlert.present();\n    } else if (formControl.getError('max')) {\n      const maxAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor máximo',\n        message: `El valor máximo es ${this.question.max}`,\n        buttons: ['OK'],\n      });\n\n      await maxAlert.present();\n    }\n  }\n\n  getPlaceholder(): string {\n    let message: string = 'Ingrese un valor';\n    if (this.question.min && this.question.max)\n      message += ` entre ${this.question.min} y ${this.question.max}`;\n    else if (this.question.min) message += ` mayor a ${this.question.min}`;\n    else if (this.question.max) message += ` menor a ${this.question.max}`;\n    return message;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./percentage-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PercentageDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneDataTypeComponent.html":{"url":"components/PhoneDataTypeComponent.html","title":"component - PhoneDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhoneDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-phone-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./phone-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabledRemoveButton\n                            \n                            \n                                phones\n                            \n                            \n                                phonesObserver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPhone\n                            \n                            \n                                    Private\n                                checkPhoneListLength\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removePhone\n                            \n                            \n                                    Async\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPhone\n                        \n                    \n                \n            \n            \n                \naddPhone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkPhoneListLength\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkPhoneListLength(phones: FormDetail.Answer[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phones\n                                            \n                                                        FormDetail.Answer[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(order: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePhone\n                        \n                    \n                \n            \n            \n                \nremovePhone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValue(event: any, order: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                order\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabledRemoveButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormDetail.Answer[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phonesObserver\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-phone-data-type',\n  templateUrl: './phone-data-type.component.html',\n  styleUrls: ['./phone-data-type.component.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule],\n})\nexport class PhoneDataTypeComponent implements OnInit {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n  disabledRemoveButton: boolean = false;\n\n  phones!: FormDetail.Answer[];\n  phonesObserver!: BehaviorSubject;\n\n  constructor(private alertController: AlertController) {}\n\n  ngOnInit() {\n    this.phones = this.question.answers;\n    this.phonesObserver = new BehaviorSubject(this.phones);\n    this.phonesObserver.subscribe((phones) => {\n      this.checkPhoneListLength(phones);\n    });\n  }\n\n  getValue(order: number): string {\n    const formGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const formControl: FormControl = formGroup.get(`${order}`) as FormControl;\n    return formControl.value;\n  }\n\n  async setValue(event: any, order: number) {\n    if (event.target.value.length \n    \n\n    \n        \n  \n  \n\n\n\n  \n    Agregar\n  \n  \n    Eliminar\n  \n\n\n\n  \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n -->\n\n    \n\n    \n                \n                    ./phone-data-type.component.scss\n                \n                div {\n  display: flex;\n  justify-content: flex-end;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Agregar        Eliminar                                           -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhoneDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhotoDataTypeComponent.html":{"url":"components/PhotoDataTypeComponent.html","title":"component - PhotoDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhotoDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-photo-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./photo-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./photo-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createPhotoPath\n                            \n                            \n                                    Private\n                                getFormControl\n                            \n                            \n                                getPhoto\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                presentToast\n                            \n                            \n                                    Private\n                                    Async\n                                savePhoto\n                            \n                            \n                                    Async\n                                takePhoto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(photoService: PhotoService, detailedFormService: DetailedFormService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photoService\n                                                  \n                                                        \n                                                                        PhotoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createPhotoPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPhotoPath()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getFormControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFormControl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormControl\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhoto\n                        \n                    \n                \n            \n            \n                \ngetPhoto()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        presentToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        savePhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    savePhoto(photo: Photo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                photo\n                                            \n                                                        Photo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        takePhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    takePhoto()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { Form, FormControl, FormGroup } from '@angular/forms';\nimport { Photo } from '@capacitor/camera';\nimport { Capacitor } from '@capacitor/core';\nimport { IonicModule, ToastController } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { PhotoService } from '@services/detailed-form/question/photo/photo.service';\n\n@Component({\n  selector: 'app-photo-data-type',\n  templateUrl: './photo-data-type.component.html',\n  styleUrls: ['./photo-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule],\n})\nexport class PhotoDataTypeComponent implements OnInit {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  private currentForm!: FormDetail.Form;\n\n  constructor(\n    private photoService: PhotoService,\n    private detailedFormService: DetailedFormService,\n    private toastController: ToastController\n  ) {}\n\n  async ngOnInit() {\n    this.currentForm = this.detailedFormService.getForm();\n  }\n\n  async takePhoto() {\n    const questionFormControl: FormControl = this.getFormControl();\n    const photo: Photo = await this.photoService.takePhoto();\n    questionFormControl.setValue(photo.base64String);\n    this.savePhoto(photo);\n  }\n\n  private getFormControl(): FormControl {\n    const questionId: string = this.question.id;\n    return this.formGroup.get(questionId) as FormControl;\n  }\n\n  getPhoto(): string {\n    const questionFormControl: FormControl = this.getFormControl();\n    const photoAsBase64: string = questionFormControl.value;\n    return photoAsBase64 === '' ? DEFAULT_PHOTO : PHOTO_PREFIX + photoAsBase64;\n  }\n\n  private async savePhoto(photo: Photo): Promise {\n    const createdPath: string = this.createPhotoPath();\n    const photoAsBase64: string = photo.base64String!;\n\n    try {\n      await this.photoService.savePhoto(createdPath, PHOTO_PREFIX + photoAsBase64);\n    } catch (error) {\n      console.error('Error saving photo', error);\n      this.presentToast(SAVE_PHOTO_ERROR);\n    }\n  }\n\n  private async presentToast(message: string): Promise {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000,\n    });\n    toast.present();\n  }\n\n  private createPhotoPath(): string {\n    const currentFormId = this.currentForm.id;\n    const currentFormBeneficiaryName = `${this.currentForm.beneficiary.firstname}-${this.currentForm.beneficiary.lastname}`;\n    const currentFormTimestamp = this.currentForm.fechaInicial;\n    const currentQuestionId: string = this.question.id;\n    const newPath = `borradores/${currentFormId}-${currentFormBeneficiaryName}-${currentFormTimestamp}/${currentFormId}-${currentQuestionId}-${currentFormBeneficiaryName}-${currentFormTimestamp}.jpeg`;\n    return newPath;\n  }\n}\n\nconst DEFAULT_PHOTO: string = 'assets/imgs/dataquest-icon-2732px.png';\nconst PHOTO_PREFIX: string = 'data:image/jpeg;base64,';\nconst SAVE_PHOTO_ERROR: string = 'Error guardando la foto';\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./photo-data-type.component.scss\n                \n                ion-content {\n  height: 70vh;\n}\n\nion-img::part(image) {\n  border-radius: 5%;\n}\n\nion-img {\n  width: 100%;\n  height: 85%;\n  background-color: lightgray;\n  border-radius: 5%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhotoDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PhotoService.html":{"url":"injectables/PhotoService.html","title":"injectable - PhotoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PhotoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/question/photo/photo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getPhotoAbsolutePath\n                            \n                            \n                                    Public\n                                    Async\n                                readPhoto\n                            \n                            \n                                    Public\n                                    Async\n                                savePhoto\n                            \n                            \n                                    Public\n                                    Async\n                                takePhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filesystemService: FilesystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/question/photo/photo.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filesystemService\n                                                  \n                                                        \n                                                                        FilesystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getPhotoAbsolutePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPhotoAbsolutePath(folderPath: string, photoName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/photo/photo.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                folderPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                photoName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        readPhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    readPhoto(photoPath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/photo/photo.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                photoPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        savePhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    savePhoto(path: string, base64Photo: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/photo/photo.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                base64Photo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        takePhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    takePhoto()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/photo/photo.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  Camera,\n  CameraResultType,\n  CameraSource,\n  Photo,\n} from '@capacitor/camera';\nimport {\n  Filesystem,\n  Directory,\n  ReaddirResult,\n  FileInfo,\n} from '@capacitor/filesystem';\nimport { Preferences } from '@capacitor/preferences';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { FilesystemService } from '@services/filesystem/filesystem.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PhotoService {\n  constructor(private filesystemService: FilesystemService) {}\n\n  public async takePhoto(): Promise {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Base64,\n      source: CameraSource.Camera,\n      quality: 30,\n    });\n\n    return capturedPhoto;\n  }\n\n  public async savePhoto(\n    path: string,\n    base64Photo: string\n  ): Promise {\n    await this.filesystemService.writeFile(path, base64Photo, true);\n  }\n\n  public async readPhoto(photoPath: string): Promise {\n    const photoAsBase64: string | undefined =\n      await this.filesystemService.readFileAsBase64(photoPath);\n    return photoAsBase64;\n  }\n\n  public async getPhotoAbsolutePath(\n    folderPath: string,\n    photoName: string\n  ): Promise {\n    const result: ReaddirResult = await this.filesystemService.readFolder(\n      folderPath\n    );\n    const file: FileInfo | undefined = result.files.find(\n      (file) => file.name === photoName\n    );\n    if (file) {\n      return file.uri;\n    }\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Producer.html":{"url":"interfaces/Producer.html","title":"interface - Producer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Producer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Beneficiary.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            associationId\n                                        \n                                \n                                \n                                        \n                                            cedula\n                                        \n                                \n                                \n                                        \n                                            demonstrationPlot\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            greenhouse\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            middlename\n                                        \n                                \n                                \n                                        \n                                            recommendedActions\n                                        \n                                \n                                \n                                        \n                                            secondLastname\n                                        \n                                \n                                \n                                        \n                                            specialized\n                                        \n                                \n                                \n                                        \n                                            supplies\n                                        \n                                \n                                \n                                        \n                                            support\n                                        \n                                \n                                \n                                        \n                                            technicalAssistance\n                                        \n                                \n                                \n                                        \n                                            transplantDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        associationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        associationId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cedula\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cedula:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        demonstrationPlot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        demonstrationPlot:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        greenhouse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        greenhouse:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middlename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        middlename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recommendedActions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recommendedActions:         SelectedQuestions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectedQuestions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondLastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondLastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        specialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        specialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supplies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        supplies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        support\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        support:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technicalAssistance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technicalAssistance:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transplantDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transplantDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Beneficiary {\n\n  export interface Producer {\n    cedula: string;\n    firstname: string;\n    middlename: string;\n    lastname: string;\n    secondLastname: string;\n    id: string;\n    specialized: boolean;\n    technicalAssistance: boolean;\n    demonstrationPlot: boolean;\n    greenhouse: boolean;\n    supplies: boolean;\n    associationId: number;\n    transplantDate: string;\n    recommendedActions: SelectedQuestions\n    support: boolean; // Support visit / Technical Assistance\n  }\n\n  export const ProducerBaseParams = {\n    cedula: '',\n    firstname: '',\n    middlename: '',\n    lastname: '',\n    secondLastname: '',\n    id: '',\n    specialized: false,\n    technicalAssistance: false,\n    demonstrationPlot: false,\n    greenhouse: false,\n    supplies: false,\n    associationId: 0,\n    transplantDate: '',\n    recommendedActions: {},\n    support: false\n  };\n\n  export type ProducerResponse = {\n    cedula: string;\n    primer_nombre: string;\n    segundo_nombre: string;\n    primer_apellido: string;\n    segundo_apellido: string;\n    identification: string;\n    has_especializada: number;\n    sost_p5: number;        // support visit\n    at_p5: number;          // asistencia técnica\n    pd_p5: number;          // parcela demostrativa\n    cm_p5: number;          // casa malla (invernadero espacial)\n    insumo_p5: number;      // insumos\n    association_id: number; // id de la asociacion\n    transplantDate: string;\n    selectedQuestionIds: SelectedQuestions\n  }\n\n  export type SelectedQuestions = { [questionId: string] : boolean };\n\n  export interface Association {\n    id: number;\n    nit: number;\n    name: string;\n    identification: string;\n    zone: string;\n    farming: string;\n  }\n\n  export type AssociationResponse = {\n    id: number;\n    nit: number;\n    name: string;\n    identification: string;\n    zona: string;\n    farming: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProducerService.html":{"url":"injectables/ProducerService.html","title":"injectable - ProducerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProducerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/producer/producer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                producers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLocalProducers\n                            \n                            \n                                    Public\n                                getProducers\n                            \n                            \n                                    Private\n                                setLocalProducers\n                            \n                            \n                                    Private\n                                syncProducers\n                            \n                            \n                                    Public\n                                updateProducers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/producer/producer.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLocalProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalProducers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProducers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Beneficiary.Producer[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLocalProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLocalProducers(producers: Beneficiary.Producer[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                producers\n                                            \n                                                            Beneficiary.Producer[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncProducers(forceRefresh: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                forceRefresh\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProducers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        producers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Beneficiary.Producer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/producer/producer.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApiService } from '../api/api.service';\nimport { StorageService } from '../storage/storage.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { Network } from '@capacitor/network';\nimport { Observable, from } from 'rxjs';\nimport { tap, map, switchMap } from 'rxjs/operators';\nimport { HttpResponse } from '@capacitor/core';\nimport { producerBuilder } from '@utils/builder';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProducerService {\n\n  producers: Beneficiary.Producer[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private storageService: StorageService,\n  ) { }\n\n  public getProducers(): Beneficiary.Producer[] {\n    return this.producers;\n  }\n\n  public updateProducers(): void {\n    this.syncProducers(true).subscribe((producers) => {\n      this.producers = producers;\n    });\n  }\n\n  private syncProducers(\n    forceRefresh: boolean = false\n  ): Observable {\n    return from(Network.getStatus()).pipe(\n      switchMap((status) => {\n        if (!status.connected || !forceRefresh) {\n          return this.getLocalProducers();\n        } else {\n          return from(this.apiService.post(ENDPOINT)).pipe(\n            map((response: HttpResponse) => {\n              const producerResponse: Beneficiary.ProducerResponse[] =\n                JSON.parse(response.data);\n              const producers: Beneficiary.Producer[] = producerResponse.map(\n                (producer) => producerBuilder(producer)\n              );\n              return producers;\n            }),\n            tap((producers: Beneficiary.Producer[]) => {\n              this.setLocalProducers(producers);\n            })\n          );\n        }\n      })\n    );\n  }\n\n  private getLocalProducers(): Promise {\n    return this.storageService.get(PRODUCERS_STORAGE_KEY);\n  }\n\n  private setLocalProducers(producers: Beneficiary.Producer[]): void {\n    this.storageService.set(ENDPOINT, producers);\n  }\n}\n\nconst PRODUCERS_STORAGE_KEY = 'producers';\nconst ENDPOINT = PRODUCERS_STORAGE_KEY;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Question.html":{"url":"interfaces/Question.html","title":"interface - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            answerLength\n                                        \n                                \n                                \n                                        \n                                            answers\n                                        \n                                \n                                \n                                        \n                                            answersRelation\n                                        \n                                \n                                \n                                        \n                                            dataType\n                                        \n                                \n                                \n                                        \n                                            extendable\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            questionCategory\n                                        \n                                \n                                \n                                        \n                                            questionCategoryId\n                                        \n                                \n                                \n                                        \n                                            questionChildren\n                                        \n                                \n                                \n                                        \n                                            questionParentId\n                                        \n                                \n                                \n                                        \n                                            required\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            userTypeRestriction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answerLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answerLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        answers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answers:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        answersRelation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answersRelation:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extendable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extendable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionCategory:         QuestionCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionCategoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionCategoryId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionChildren\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionChildren:         Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionParentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionParentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userTypeRestriction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userTypeRestriction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n\n  export enum FormType {\n    SPECIALIZED = 1,\n    SUPPORT = 5,\n  }\n\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionCategory.html":{"url":"interfaces/QuestionCategory.html","title":"interface - QuestionCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuestionCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n\n  export enum FormType {\n    SPECIALIZED = 1,\n    SUPPORT = 5,\n  }\n\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionComponent.html":{"url":"components/QuestionComponent.html","title":"component - QuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/question.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                TypeComponent\n                                TableComponent\n                                DataquestHeaderComponent\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./question.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertShown\n                            \n                            \n                                    Private\n                                backButtonSubscription\n                            \n                            \n                                currentForm\n                            \n                            \n                                currentQuestion\n                            \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                confirmExit\n                            \n                            \n                                getCategory\n                            \n                            \n                                getType\n                            \n                            \n                                isDraft\n                            \n                            \n                                isFirstQuestion\n                            \n                            \n                                isForm\n                            \n                            \n                                isLastQuestion\n                            \n                            \n                                    Private\n                                isQuestionValid\n                            \n                            \n                                isSurvey\n                            \n                            \n                                    Private\n                                isValid\n                            \n                            \n                                    Async\n                                nextQuestion\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Async\n                                presentAlert\n                            \n                            \n                                previousQuestion\n                            \n                            \n                                    Private\n                                saveOpenResponse\n                            \n                            \n                                    Private\n                                saveResponse\n                            \n                            \n                                    Private\n                                saveSelection\n                            \n                            \n                                    Private\n                                saveTableResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(draftService: DraftService, detailedFormService: DetailedFormService, questionService: QuestionService, navCtrl: NavController, alertController: AlertController, loadingController: LoadingController, platform: Platform, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/question.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        confirmExit\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmExit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:185\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getType\n                        \n                    \n                \n            \n            \n                \ngetType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:189\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:308\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFirstQuestion\n                        \n                    \n                \n            \n            \n                \nisFirstQuestion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:212\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isForm\n                        \n                    \n                \n            \n            \n                \nisForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:304\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLastQuestion\n                        \n                    \n                \n            \n            \n                \nisLastQuestion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:201\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isQuestionValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isQuestionValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:193\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSurvey\n                        \n                    \n                \n            \n            \n                \nisSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:312\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:197\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        nextQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextQuestion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentAlert(isTable: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isTable\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousQuestion\n                        \n                    \n                \n            \n            \n                \npreviousQuestion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveOpenResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveOpenResponse(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:285\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveResponse(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:218\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveSelection\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSelection(question: FormDetail.Question, answersFormGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:257\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveTableResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveTableResponse(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:240\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alertShown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        backButtonSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  AlertController,\n  IonicModule,\n  LoadingController,\n  NavController,\n} from '@ionic/angular';\nimport { QuestionService } from '@services/detailed-form/question/question.service';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DataquestHeaderComponent } from '../header/dataquest-header/dataquest-header.component';\nimport { CommonModule, Location } from '@angular/common';\nimport { TableComponent } from './type/table/table.component';\nimport { TypeComponent } from './type/type.component';\nimport { FormArray, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { DraftService } from '@services/draft/draft.service';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { Platform } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss'],\n  imports: [\n    CommonModule,\n    IonicModule,\n    TypeComponent,\n    TableComponent,\n    DataquestHeaderComponent,\n    ReactiveFormsModule,\n  ],\n  standalone: true,\n})\nexport class QuestionComponent {\n  currentForm!: FormDetail.Form\n  currentQuestion!: FormDetail.Question;\n  formGroup!: FormGroup;\n  disabled: boolean = false;\n  alertShown: boolean = false;\n  private backButtonSubscription!: Subscription;\n\n  constructor(\n    private draftService: DraftService,\n    private detailedFormService: DetailedFormService,\n    private questionService: QuestionService,\n    private navCtrl: NavController,\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    private platform: Platform,\n    private location: Location\n  ) {}\n\n  ngOnInit() {\n    this.currentForm = this.detailedFormService.getForm();\n    this.formGroup = this.questionService.getFormGroup();\n    this.currentQuestion = this.questionService.getFirst();\n    if (this.isSurvey()) {\n      this.disabled = true;\n    }\n    this.backButtonSubscription = this.platform.backButton.subscribeWithPriority(10, () => {\n      this.confirmExit();\n    });\n  }\n\n  ngOnDestroy() {\n    this.backButtonSubscription.unsubscribe();\n  }\n\n  private async confirmExit() {\n    var message: string = ''\n    if (this.isForm())\n      message = 'Si sale, su progreso se guardará como borrador. ¿Desea salir?';\n    else if (this.isDraft())\n      message = 'Si sale, se guardará el borrador. ¿Desea salir?';\n\n    const alert = await this.alertController.create({\n      header: '¿Desea salir?',\n      message: message,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n        },\n        {\n          text: 'Salir',\n          role: 'confirm',\n          cssClass: 'danger',\n          handler: () => {\n            this.saveResponse(this.currentQuestion, this.formGroup);\n            this.location.back();\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async nextQuestion() {\n    const loading = await this.loadingController.create({\n      message: 'Cargando...',\n    });\n    await loading.present();\n    if (this.isQuestionValid()) {\n      this.saveResponse(this.currentQuestion, this.formGroup);\n      const nextQuestion = this.questionService.toggleNextQuestionFrom(\n        this.currentQuestion,\n        this.formGroup\n      );\n      if (nextQuestion) {\n        this.currentQuestion = nextQuestion;\n        if (\n          this.currentQuestion.questionCategory.name ===\n            'Capital social individual' &&\n          !this.alertShown\n        ) {\n          this.alertShown = true;\n          this.alertController\n            .create({\n              header: 'Atención',\n              subHeader: 'Capital social individual',\n              message:\n                'A continuación, pasamos a las preguntas que corresponden al componente del capital social individual del índice de desarrollo socio-organizacional.',\n              buttons: ['OK'],\n            })\n            .then((alert) => alert.present());\n        }\n      }\n    } else {\n      const type: string = this.currentQuestion.type;\n      const isTable: boolean = type === 'Tabla';\n      this.presentAlert(isTable);\n    }\n    await loading.dismiss();\n  }\n\n  // private getLastAnsweredQuestion(): FormDetail.Question {\n  //   let lastAnsweredQuestion: FormDetail.Question =\n  //     this.questionService.getFirst();\n  //   const formGroup: FormGroup = this.formGroup;\n  //   while (formGroup.controls[lastAnsweredQuestion.id.toString()].valid) {\n  //     lastAnsweredQuestion = this.questionService.getNextValidQuestionFrom(\n  //       lastAnsweredQuestion,\n  //       this.formGroup\n  //     )!;\n  //   }\n  //   return lastAnsweredQuestion;\n  // }\n\n  previousQuestion(): void {\n    const previousQuestion = this.questionService.getPreviousValidQuestionFrom(\n      this.currentQuestion,\n      this.formGroup\n    );\n    if (previousQuestion) {\n      this.currentQuestion = previousQuestion;\n    }\n  }\n\n  async presentAlert(isTable: boolean) {\n    const tableMessage: string =\n      'Por favor, responda todas las preguntas de las secciones para continuar.';\n    const genericMessage: string =\n      'Por favor, responda la pregunta para continuar.';\n    const alert = await this.alertController.create({\n      header: 'Pregunta requerida',\n      message: isTable ? tableMessage : genericMessage,\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  onSubmit() {\n    if (this.isValid()) {\n      this.saveResponse(this.currentQuestion, this.formGroup);\n      this.detailedFormService.saveSurvey();\n      this.navCtrl.pop();\n    } else {\n      this.presentAlert(false);\n    }\n  }\n\n  getCategory(): string {\n    return this.currentQuestion?.questionCategory.name;\n  }\n\n  getType(): string {\n    return this.currentQuestion?.type;\n  }\n\n  private isQuestionValid() {\n    return this.isSurvey() || this.formGroup.controls[this.currentQuestion.id].valid;\n  }\n\n  private isValid() {\n    return this.formGroup.valid;\n  }\n\n  isLastQuestion(): boolean {\n    let question: FormDetail.Question = this.currentQuestion;\n    const nextQuestion: FormDetail.Question | null =\n      this.questionService.toggleNextQuestionFrom(question, this.formGroup);\n    if (!nextQuestion) {\n      return true;\n    }\n\n    return this.formGroup.controls[nextQuestion.id]!.disabled;\n  }\n\n  isFirstQuestion(): boolean {\n    let question: FormDetail.Question = this.currentQuestion;\n    let firstQuestion: FormDetail.Question = this.questionService.getFirst();\n    return question?.id === firstQuestion.id;\n  }\n\n  private saveResponse(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): void {\n    switch (question.type) {\n      case 'Abierta':\n        this.saveOpenResponse(question, formGroup);\n        break;\n      case 'Tabla':\n        this.saveTableResponse(question, formGroup);\n        break;\n      default:\n        const questionFormGroup: FormGroup = formGroup.controls[\n          question.id\n        ] as FormGroup;\n        this.saveSelection(question, questionFormGroup);\n    }\n    this.detailedFormService.updateModifyDate();\n    if (this.isForm() || this.isDraft())\n      this.draftService.saveDraftInStorage(this.currentForm);\n  }\n\n  private saveTableResponse(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ) {\n    let questionFormArray: FormArray = formGroup.controls[\n      question.id\n    ] as FormArray;\n    this.currentQuestion.questionChildren.forEach((section, index) => {\n      let sectionFormGroup: FormGroup = questionFormArray.at(\n        index\n      ) as FormGroup;\n      section.forEach((child) => {\n        this.saveResponse(child, sectionFormGroup);\n      });\n    });\n  }\n\n  private saveSelection(\n    question: FormDetail.Question,\n    answersFormGroup: FormGroup\n  ) {\n    question.answers.forEach((answer) => {\n      const value: boolean =\n        answersFormGroup.controls[answer.id.toString()].value;\n      answer.checked = value;\n    });\n    if (\n      question.type === 'Múltiple respuesta con otro' ||\n      question.type === 'Única respuesta con otro'\n    ) {\n      const textAnswered: string = answersFormGroup.controls['other'].value;\n      const fullSavedString: string =\n        question.answers[question.answers.length - 1].value;\n      const savedStringArray: string[] = fullSavedString.split(':');\n\n      if (savedStringArray.length === 2) {\n        savedStringArray[1] = textAnswered;\n      } else {\n        savedStringArray.push(textAnswered);\n      }\n      question.answers[question.answers.length - 1].value =\n        savedStringArray.join(':');\n    }\n  }\n\n  private saveOpenResponse(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ) {\n    if (question.dataType === 'tel') {\n      let answersGroup: FormGroup = formGroup.controls[\n        question.id\n      ] as FormGroup;\n      question.answers.forEach((answer) => {\n        const value: string = answersGroup.controls[answer.order].value;\n        answer.value = value;\n      });\n    } else {\n      let formResponse = formGroup.controls[question.id].value;\n      let answer = question.answers[0];\n      answer.value = formResponse;\n    }\n  }\n\n  isForm(): boolean {\n    return this.detailedFormService.isForm();\n  }\n\n  isDraft(): boolean {\n    return this.detailedFormService.isDraft();\n  }\n\n  isSurvey(): boolean {\n    return this.detailedFormService.isSurvey();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n\n  \n    \n      \n        Anterior\n      \n    \n    \n      \n        Guardar\n      \n    \n    \n      \n        Siguiente\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./question.component.scss\n                \n                ion-icon {\n  font-size: 2.5em;\n  color: gray;\n  margin: 0 0.5em;\n  cursor: pointer;\n  transition: 0.3s;\n  &:hover {\n    color: #f4f4f4;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Anterior                            Guardar                            Siguiente            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionControlService.html":{"url":"injectables/QuestionControlService.html","title":"injectable - QuestionControlService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuestionControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/control/question-control.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assignFormControls\n                            \n                            \n                                    Private\n                                atLeastOneChecked\n                            \n                            \n                                    Private\n                                generateFormArray\n                            \n                            \n                                    Private\n                                generateFormControl\n                            \n                            \n                                    Private\n                                generateFormGroup\n                            \n                            \n                                    Private\n                                getFormControl\n                            \n                            \n                                    Private\n                                requiredChildrenResponse\n                            \n                            \n                                    Private\n                                requiredTableResponse\n                            \n                            \n                                    Public\n                                toFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/control/question-control.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        assignFormControls\n                        \n                    \n                \n            \n            \n                \n                        \n                    assignFormControls(question: FormDetail.Question, required: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                required\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormControl | FormArray | FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        atLeastOneChecked\n                        \n                    \n                \n            \n            \n                \n                        \n                    atLeastOneChecked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFormArray\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFormArray(question: FormDetail.Question, required: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                required\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormArray\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFormControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFormControl(question: FormDetail.Question, required: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                required\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormControl | FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFormGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFormGroup(question: FormDetail.Question, required: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                required\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getFormControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFormControl(question: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormControl | FormGroup | FormArray\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requiredChildrenResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    requiredChildrenResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requiredTableResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    requiredTableResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toFormGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    toFormGroup(questions: FormDetail.Question[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                questions\n                                            \n                                                        FormDetail.Question[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionControlService {\n  constructor() {}\n\n  public toFormGroup(questions: FormDetail.Question[]): FormGroup {\n    const group: { [key: string]: FormControl | FormGroup | FormArray } = {};\n    questions.forEach((question) => {\n      group[question.id] = this.getFormControl(question);\n    });\n\n    return new FormGroup(group);\n  }\n\n  private getFormControl(\n    question: FormDetail.Question\n  ): FormControl | FormGroup | FormArray {\n    if (question.required === 1) {\n      return this.assignFormControls(question, true);\n    } else {\n      return this.assignFormControls(question, false);\n    }\n  }\n\n  private assignFormControls(\n    question: FormDetail.Question,\n    required: boolean\n  ): FormControl | FormArray | FormGroup {\n    switch (question.type) {\n      case 'Abierta':\n        return this.generateFormControl(question, required);\n      case 'Tabla':\n        return this.generateFormArray(question, required);\n      default:\n        return this.generateFormGroup(question, required);\n    }\n  }\n\n  private generateFormControl(\n    question: FormDetail.Question,\n    required: boolean\n  ): FormControl | FormGroup {\n    if (question.dataType === 'tel') {\n      const group: { [key: string]: FormControl } = {};\n      question.answers.forEach((answer) => {\n        group[answer.order] = new FormControl(answer.value, [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(10),\n        ]);\n      });\n      const formGroup: FormGroup = new FormGroup(\n        group,\n        required ? this.requiredChildrenResponse() : null\n      );\n      return formGroup;\n    }\n    return new FormControl(\n      question.answers[0].value || '',\n      required ? Validators.required : null\n    );\n  }\n\n  private generateFormGroup(question: FormDetail.Question, required: boolean): any {\n    const group: { [key: string]: FormControl } = {};\n    question.answers.forEach((answer) => {\n      group[answer.id] = new FormControl(answer.checked);\n    });\n\n    const formGroup: FormGroup = new FormGroup(\n      group,\n      required ? this.atLeastOneChecked() : null\n    );\n\n    if (\n      question.type === 'Múltiple respuesta con otro' ||\n      question.type === 'Única respuesta con otro'\n    ) {\n      let value: string =\n        question.answers[question.answers.length - 1].value.split(':')[1] || '';\n      formGroup.addControl(\n        'other',\n        new FormControl(value, Validators.required)\n      );\n    }\n    return formGroup;\n  }\n\n  private generateFormArray(question: FormDetail.Question, required: boolean): FormArray {\n    const array: FormGroup[] = [];\n    question.questionChildren.forEach((section) => {\n      const group: { [key: string]: FormControl | FormGroup | FormArray } = {};\n      section.forEach((child) => {\n        group[child.id] = this.getFormControl(child);\n      });\n\n      const formGroup: FormGroup = new FormGroup(\n        group,\n        required ? this.requiredChildrenResponse() : null\n      );\n\n      array.push(formGroup);\n    });\n\n    const formArray: FormArray = new FormArray(\n      array,\n      required ? this.requiredTableResponse() : null\n    );\n\n    return formArray;\n  }\n\n  private atLeastOneChecked(): ValidatorFn {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n      if (formGroup instanceof FormGroup) {\n        const checkboxValues = Object.values(formGroup.value);\n\n        if (checkboxValues.includes(true)) {\n          return null; // At least one checkbox is checked, validation passes\n        }\n      }\n      return { atLeastOneChecked: true }; // No checkboxes are checked, validation fails\n    };\n  }\n\n  private requiredChildrenResponse(): ValidatorFn {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n      if (formGroup instanceof FormGroup) {\n        const invalidControls = Object.keys(formGroup.controls).filter(\n          (key) => formGroup.controls[key].invalid\n        );\n\n        if (invalidControls.length > 0) {\n          return { requiredChildrenResponse: true };\n        }\n      }\n      return null;\n    };\n  }\n\n  private requiredTableResponse(): ValidatorFn {\n    return (formArray: AbstractControl): ValidationErrors | null => {\n      if (formArray instanceof FormArray) {\n        for (const formGroup of formArray.controls) {\n          if (formGroup instanceof FormGroup && !formGroup.valid) {\n            return { requiredTableResponse: true };\n          }\n        }\n      }\n      return null;\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/question/question.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filteredQuestions\n                            \n                            \n                                    Private\n                                originalQuestions\n                            \n                            \n                                    Private\n                                progress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                disableQuestion\n                            \n                            \n                                    Private\n                                enableQuestion\n                            \n                            \n                                getCurrentIndex\n                            \n                            \n                                getFilteredLength\n                            \n                            \n                                getFirst\n                            \n                            \n                                getFormGroup\n                            \n                            \n                                getLast\n                            \n                            \n                                    Private\n                                getNextQuestion\n                            \n                            \n                                getOriginalLength\n                            \n                            \n                                getOriginalQuestions\n                            \n                            \n                                    Private\n                                getPreviousQuestion\n                            \n                            \n                                getPreviousValidQuestionFrom\n                            \n                            \n                                getProgress\n                            \n                            \n                                    Async\n                                setQuestions\n                            \n                            \n                                toggleNextQuestionFrom\n                            \n                            \n                                updateProgress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(questionControlService: QuestionControlService, answerRelationService: AnswerRelationService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/question/question.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionControlService\n                                                  \n                                                        \n                                                                        QuestionControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerRelationService\n                                                  \n                                                        \n                                                                        AnswerRelationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        disableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentIndex\n                        \n                    \n                \n            \n            \n                \ngetCurrentIndex(current: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredLength\n                        \n                    \n                \n            \n            \n                \ngetFilteredLength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirst\n                        \n                    \n                \n            \n            \n                \ngetFirst()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Question\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormGroup\n                        \n                    \n                \n            \n            \n                \ngetFormGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormGroup\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLast\n                        \n                    \n                \n            \n            \n                \ngetLast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Question\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNextQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNextQuestion(current: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOriginalLength\n                        \n                    \n                \n            \n            \n                \ngetOriginalLength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOriginalQuestions\n                        \n                    \n                \n            \n            \n                \ngetOriginalQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Question[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getPreviousQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPreviousQuestion(current: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPreviousValidQuestionFrom\n                        \n                    \n                \n            \n            \n                \ngetPreviousValidQuestionFrom(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProgress\n                        \n                    \n                \n            \n            \n                \ngetProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setQuestions\n                        \n                    \n                \n            \n            \n                \n                        \n                    setQuestions(questions: FormDetail.Question[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                questions\n                                            \n                                                        FormDetail.Question[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleNextQuestionFrom\n                        \n                    \n                \n            \n            \n                \ntoggleNextQuestionFrom(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProgress\n                        \n                    \n                \n            \n            \n                \nupdateProgress(currentQuestion: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentQuestion\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filteredQuestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormDetail.Question[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/question/question.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        originalQuestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormDetail.Question[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/question/question.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        progress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/question/question.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { FormGroup } from '@angular/forms';\nimport { QuestionControlService } from '../control/question-control.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { AnswerRelationService } from './answer-relation/answer-relation.service';\nimport { Authentication } from '@models/Auth.namespace';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionService {\n  private filteredQuestions!: FormDetail.Question[];\n  private originalQuestions!: FormDetail.Question[];\n  private progress: number = 0;\n\n  constructor(\n    private questionControlService: QuestionControlService,\n    private answerRelationService: AnswerRelationService,\n    private authService: AuthService\n  ) {}\n\n  /*   getFilteredQuestions(): FormDetail.Question[] {\n    let filteredQuestions: FormDetail.Question[] = this.originalQuestions.filter(\n      (question) => question.questionParentId === null\n    );\n    return filteredQuestions;\n  } */\n\n  getOriginalQuestions(): FormDetail.Question[] {\n    return this.originalQuestions;\n  }\n\n  async setQuestions(questions: FormDetail.Question[]): Promise {\n    var userType = '';\n    const user: Authentication.User = await this.authService.getUser()\n    userType = user.type;\n    this.originalQuestions = questions;\n    this.filteredQuestions = this.originalQuestions.filter(\n      (question) =>\n        question.userTypeRestriction === userType ||\n        question.userTypeRestriction === null\n    );\n  }\n\n  getOriginalLength(): number {\n    return this.originalQuestions.length;\n  }\n\n  getFilteredLength(): number {\n    return this.filteredQuestions.length;\n  }\n\n  getFirst(): FormDetail.Question {\n    let firstQuestion: FormDetail.Question = this.filteredQuestions[0];\n    return firstQuestion;\n  }\n\n  getLast(): FormDetail.Question {\n    let lastIndex: number = this.filteredQuestions.length - 1;\n    let lastQuestion: FormDetail.Question = this.filteredQuestions[lastIndex];\n    return lastQuestion;\n  }\n\n  private getNextQuestion(\n    current: FormDetail.Question\n  ): FormDetail.Question | null {\n    if (current !== this.getLast()) {\n      let next: FormDetail.Question =\n        this.filteredQuestions[this.getCurrentIndex(current) + 1];\n      return next;\n    }\n    return null;\n  }\n\n  toggleNextQuestionFrom(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): FormDetail.Question | null {\n    const nextQuestion: FormDetail.Question | null =\n      this.getNextQuestion(question);\n    if (!nextQuestion) {\n      return null;\n    }\n    const checkedAnswersRelation: boolean =\n      this.answerRelationService.checkAnswerRelation(nextQuestion, formGroup);\n\n    if (checkedAnswersRelation) {\n      this.enableQuestion(nextQuestion, formGroup);\n      this.updateProgress(nextQuestion);\n      return nextQuestion;\n    } else {\n      this.disableQuestion(nextQuestion, formGroup);\n      return this.toggleNextQuestionFrom(nextQuestion, formGroup);\n    }\n  }\n\n  getCurrentIndex(current: FormDetail.Question): number {\n    let currentIndex: number = this.filteredQuestions.indexOf(current);\n    return currentIndex;\n  }\n\n  private getPreviousQuestion(\n    current: FormDetail.Question\n  ): FormDetail.Question | null {\n    if (current !== this.getFirst()) {\n      let previous: FormDetail.Question =\n        this.filteredQuestions[this.getCurrentIndex(current) - 1];\n      return previous;\n    }\n    return null;\n  }\n\n  getPreviousValidQuestionFrom(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): FormDetail.Question | null {\n    const previousQuestion: FormDetail.Question | null =\n      this.getPreviousQuestion(question);\n    if (!previousQuestion) {\n      return null;\n    }\n    const id: string = previousQuestion.id.toString();\n    const disabled: boolean = formGroup.get(id)!.disabled;\n\n    if (disabled) {\n      return this.getPreviousValidQuestionFrom(previousQuestion, formGroup);\n    } else {\n      this.updateProgress(previousQuestion);\n      return previousQuestion;\n    }\n  }\n\n  getProgress(): number {\n    return this.progress;\n  }\n\n  updateProgress(currentQuestion: FormDetail.Question): void {\n    let currentPosition: number = this.getCurrentIndex(currentQuestion) + 1;\n    let length: number = this.getFilteredLength();\n    let currentProgress: number = currentPosition / length;\n    this.progress = currentProgress;\n  }\n\n  getFormGroup(): FormGroup {\n    return this.questionControlService.toFormGroup(this.filteredQuestions);\n  }\n\n  private enableQuestion(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): void {\n    this.answerRelationService.enableQuestion(question, formGroup);\n  }\n\n  private disableQuestion(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): void {\n    this.answerRelationService.disableQuestion(question, formGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SecureInnerPagesGuard.html":{"url":"injectables/SecureInnerPagesGuard.html","title":"injectable - SecureInnerPagesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SecureInnerPagesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/guards/secure-inner-pages/secure-inner-pages.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/secure-inner-pages/secure-inner-pages.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/secure-inner-pages/secure-inner-pages.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SecureInnerPagesGuard {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate() {\n\n    const logged = this.authService.isLogged();\n\n    if (!logged) {\n      this.authService.logout();\n      this.router.navigate(['/login']);\n    }\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/storage/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clear\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                keys\n                            \n                            \n                                    Async\n                                length\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                set\n                            \n                            \n                                    Private\n                                showStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/storage/storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        keys\n                        \n                    \n                \n            \n            \n                \n                        \n                    keys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        length\n                        \n                    \n                \n            \n            \n                \n                        \n                    length()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    showStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/storage/storage.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage-angular';\nimport CordovaSQLiteDriver from 'localforage-cordovasqlitedriver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  private _storage: Storage | null = null;\n\n  constructor(private storage: Storage) {\n    this.init();\n  }\n\n  async init() {\n    await this.storage.defineDriver(CordovaSQLiteDriver);\n    const storage = await this.storage.create();\n    this._storage = storage;\n  }\n\n  async set(key: string, value: any) {\n    await this._storage?.set(key, value);\n  }\n\n  async get(key: string) {\n    return await this._storage?.get(key);\n  }\n\n  async remove(key: string){\n    return await this._storage?.remove(key);\n  }\n\n  async clear() {\n    return await this._storage?.clear();\n  }\n\n  async length() {\n    return await this._storage?.length();\n  }\n\n  async keys() {\n    return await this._storage?.keys();\n  }\n\n  private showStorage() {\n    this._storage?.forEach((value, key, index) => {\n      console.log('Key:', key);\n      console.log('Index:', index);\n      console.log('Value:', value);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoredRequest.html":{"url":"interfaces/StoredRequest.html","title":"interface - StoredRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoredRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/offline-manager/offline-manager.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@capacitor/core';\nimport { ToastController } from '@ionic/angular';\nimport { ApiService } from '@services/api/api.service';\nimport { StorageService } from '@services/storage/storage.service';\nimport { Observable, from, of, forkJoin } from 'rxjs';\nimport { switchMap, finalize } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OfflineManagerService {\n  constructor(\n    private storageService: StorageService,\n    private apiService: ApiService,\n    private toastController: ToastController\n  ) {}\n\n  public checkForEvents(): Observable {\n    return from(this.storageService.get(STORAGE_REQ_KEY)).pipe(\n      switchMap((storedOperations: StoredRequest[]) => {\n        let storedObj: StoredRequest[] = storedOperations;\n        if (storedObj && storedObj.length > 0) {\n          return this.sendRequests(storedObj).pipe(\n            finalize(() => {\n              let toast = this.toastController.create({\n                message: `Local data succesfully synced to API!`,\n                duration: 3000,\n                position: 'bottom',\n              });\n              toast.then((toast) => toast.present());\n              this.storageService.remove(STORAGE_REQ_KEY);\n            })\n          );\n        } else {\n          console.log('no local events to sync');\n          return of(false);\n        }\n      })\n    );\n  }\n\n  public async storeRequest(url: string, data: any): Promise {\n    let toast = this.toastController.create({\n      message: `Your data is stored locally because you seem to be offline.`,\n      duration: 3000,\n      position: 'bottom',\n    });\n    toast.then((toast) => toast.present());\n\n    const action: StoredRequest = {\n      url: url,\n      data: data,\n      time: new Date().getTime(),\n      id: uuidv4(),\n    };\n\n    return this.storageService.get(STORAGE_REQ_KEY).then((storedOperations) => {\n      let storedObj: StoredRequest[] = JSON.parse(storedOperations);\n      if (storedObj) {\n        storedObj.push(action);\n      } else {\n        storedObj = [action];\n      }\n      return this.storageService.set(\n        STORAGE_REQ_KEY,\n        JSON.stringify(storedObj)\n      );\n    });\n  }\n\n  private sendRequests(\n    operations: StoredRequest[]\n  ): Observable {\n    let obs = [];\n    for (let op of operations) {\n      console.log('Make one request: ', op);\n      let oneObs = this.apiService.post(op.url, op.data);\n      obs.push(oneObs);\n    }\n    return forkJoin(obs);\n  }\n}\n\nconst STORAGE_REQ_KEY: string = 'storedreq';\n\ninterface StoredRequest {\n  url: string;\n  data: any;\n  time: number;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SurveyService.html":{"url":"injectables/SurveyService.html","title":"injectable - SurveyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SurveyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/survey/survey.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing surveys.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                counter\n                            \n                            \n                                    Private\n                                online\n                            \n                            \n                                    Private\n                                surveys\n                            \n                            \n                                    Private\n                                uuidArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addNetworkChangeListener\n                            \n                            \n                                    Private\n                                changeSyncStatus\n                            \n                            \n                                    Private\n                                    Async\n                                createLoading\n                            \n                            \n                                    Private\n                                    Async\n                                createSurveysFolder\n                            \n                            \n                                    Public\n                                getLocalSurveys\n                            \n                            \n                                    Public\n                                getNetworkStatus\n                            \n                            \n                                    Public\n                                getSurveys\n                            \n                            \n                                    Public\n                                getSurveysArrayFromStorage\n                            \n                            \n                                    Private\n                                getUUIDArrayFromLocalStorage\n                            \n                            \n                                    Private\n                                    Async\n                                presentAlert\n                            \n                            \n                                    Public\n                                pushSurvey\n                            \n                            \n                                    Public\n                                removeAllListeners\n                            \n                            \n                                    Private\n                                    Async\n                                saveSurveyInFile\n                            \n                            \n                                    Private\n                                saveSurveyInStorage\n                            \n                            \n                                    Private\n                                saveSurveys\n                            \n                            \n                                    Public\n                                    Async\n                                syncSurveys\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, alertController: AlertController, loadingController: LoadingController, storageService: StorageService, filesystemService: FilesystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/survey/survey.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesystemService\n                                                  \n                                                        \n                                                                        FilesystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addNetworkChangeListener\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNetworkChangeListener()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Adds a network change listener to update the online status.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeSyncStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeSyncStatus(survey: FormDetail.Form, status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:228\n                        \n                    \n\n\n            \n                \n                        Changes the sync status of a survey.\nThis method is useful when a survey is synced manually.\nThe sync status is changed when the survey is synced with the server\nso it is not used in the current implementation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                survey\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The survey to change the sync status.\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new sync status.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createLoading\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLoading(length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:199\n                        \n                    \n\n\n            \n                \n                        Creates a loading component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The loading component.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createSurveysFolder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSurveysFolder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:237\n                        \n                    \n\n\n            \n                \n                        Creates the surveys folder in the device.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the folder is created.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLocalSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Retrieves the surveys stored locally.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getNetworkStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNetworkStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the current network status.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Gets the list of surveys.\n\n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                            \n                                The list of surveys.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSurveysArrayFromStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSurveysArrayFromStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Retrieves the surveys stored locally.\n\n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                            \n                                The list of surveys stored locally.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getUUIDArrayFromLocalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUUIDArrayFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:104\n                        \n                    \n\n\n            \n                \n                        Retrieves the list of UUIDs from local storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        presentAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentAlert()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:209\n                        \n                    \n\n\n            \n                \n                        Presents an alert when there is no internet connection.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pushSurvey\n                        \n                    \n                \n            \n            \n                \n                        \n                    pushSurvey(survey: FormDetail.Form, oldPath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Pushes a survey to the list of surveys and saves them.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                survey\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The survey to be pushed.\n\n                                            \n                                        \n                                        \n                                                oldPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeAllListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeAllListeners()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Removes all network change listeners.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        saveSurveyInFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSurveyInFile(survey: FormDetail.Form, oldPath?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:247\n                        \n                    \n\n\n            \n                \n                        Saves a survey to a file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                survey\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The survey to be saved.\n\n                                            \n                                        \n                                        \n                                                oldPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the survey is saved.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveSurveyInStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSurveyInStorage(survey: FormDetail.Form, oldPath?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:131\n                        \n                    \n\n\n            \n                \n                        Saves a survey to the storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                survey\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                oldPath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Saves the surveys to the storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        syncSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Syncs the surveys with the server.\nIf online, it sends the unsynced surveys to the server and updates the sync status.\nIf offline, it presents an alert.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/survey/survey.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        online\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/survey/survey.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        surveys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/survey/survey.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        uuidArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/survey/survey.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { StorageService } from '../storage/storage.service';\nimport { ApiService } from '../api/api.service';\nimport { Network } from '@capacitor/network';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { Observable, catchError, forkJoin, from, mergeMap, of } from 'rxjs';\nimport { environment } from 'environment';\nimport mockForm from '../../../data/mock-form';\nimport { FilesystemService } from '@services/filesystem/filesystem.service';\n\n/**\n * Service for managing surveys.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SurveyService {\n  private online: boolean = false;\n  private surveys: FormDetail.Form[] = [];\n  private uuidArray: string[] = [];\n  private counter: number = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    private storageService: StorageService,\n    private filesystemService: FilesystemService\n  ) {}\n\n  /**\n   * Pushes a survey to the list of surveys and saves them.\n   * @param survey The survey to be pushed.\n   */\n  public pushSurvey(survey: FormDetail.Form, oldPath: string): void {\n    const copy = JSON.parse(JSON.stringify(survey));\n    this.surveys.push(copy);\n    this.saveSurveyInStorage(copy, oldPath);\n  }\n\n  /**\n   * Adds a network change listener to update the online status.\n   */\n  public addNetworkChangeListener(): void {\n    Network.addListener('networkStatusChange', (status) => {\n      console.log('Network status changed', status);\n      this.online = status.connected;\n      console.log('Online status is:', this.online);\n    });\n  }\n\n  /**\n   * Gets the current network status.\n   */\n  public getNetworkStatus(): void {\n    Network.getStatus().then((status) => {\n      console.log('Network status:', status.connected);\n      this.online = status.connected;\n      console.log('Online status is:', this.online);\n    });\n  }\n\n  /**\n   * Removes all network change listeners.\n   */\n  public removeAllListeners(): void {\n    Network.removeAllListeners();\n  }\n\n  /**\n   * Retrieves the surveys stored locally.\n   */\n  public getLocalSurveys(): void {\n    this.getUUIDArrayFromLocalStorage();\n    // this.createSurveysFolder();\n    this.storageService.get(SURVEYS_STORAGE_KEY).then((surveys) => {\n      this.surveys = surveys || this.getSurveysArrayFromStorage() || [];\n      /* if (!environment.production && this.surveys.length === 0)\n        this.createMockSurveys(); */\n    });\n    // this.saveSurveys();\n  }\n\n  /**\n   * Retrieves the surveys stored locally.\n   * @returns The list of surveys stored locally.\n   */\n  public getSurveysArrayFromStorage(): FormDetail.Form[] {\n    var surveys: FormDetail.Form[] = [];\n    for (let i = 0; i  {\n          if (survey) surveys.push(survey);\n        });\n    }\n    return surveys;\n  }\n\n  /**\n   * Retrieves the list of UUIDs from local storage.\n   */\n  private getUUIDArrayFromLocalStorage(): void {\n    this.storageService.get(UUID_ARRAY_STORAGE_KEY).then((uuidArray) => {\n      this.uuidArray = uuidArray || [];\n    });\n  }\n\n  /**\n   * Gets the list of surveys.\n   * @returns The list of surveys.\n   */\n  public getSurveys(): FormDetail.Form[] {\n    return this.surveys;\n  }\n\n  /**\n   * Saves the surveys to the storage.\n   */\n  private saveSurveys(): void {\n    for (let i = 0; i  {\n    this.counter = 0;\n    if (this.online) {\n      const surveysToSync: FormDetail.Form[] = this.surveys.filter(\n        (survey) => !survey.sync\n      );\n      const loading: HTMLIonLoadingElement = await this.createLoading(surveysToSync.length);\n      loading.present();\n      const syncRequests: Observable[] =\n        surveysToSync.map((survey) => {\n          return from(this.apiService.post(ENDPOINT, survey)).pipe(\n            mergeMap((response) => {\n              console.log(response);\n              return of(response.status === 200 ? survey : undefined);\n            }),\n            catchError((error) => {\n              console.error(error);\n              return of(undefined);\n            })\n          );\n        });\n\n      forkJoin(syncRequests).subscribe(\n        (syncResults: (FormDetail.Form | undefined)[]) => {\n          const updatedSurveys: FormDetail.Form[] = this.surveys.map(\n            (survey) => {\n              const syncedSurvey = syncResults.find(\n                (syncResult) => syncResult?.uuid === survey.uuid\n              );\n              if (syncedSurvey) {\n                this.counter++;\n                survey.sync = true;\n              }\n\n              return survey;\n            }\n          );\n          console.log(updatedSurveys);\n          this.surveys = updatedSurveys;\n          this.saveSurveys();\n        }\n      );\n      setTimeout(() => {\n        loading.dismiss();\n      }, 3000);\n    } else {\n      this.presentAlert();\n    }\n  }\n\n  /**\n   * Creates a loading component.\n   * @returns The loading component.\n   */\n  private async createLoading(length: number): Promise {\n    const loading = await this.loadingController.create({\n      message: `Sincronizando encuestas... ${this.counter} de ${length}`,\n    });\n    return loading;\n  }\n\n  /**\n   * Presents an alert when there is no internet connection.\n   */\n  private async presentAlert(): Promise {\n    const alert = await this.alertController.create({\n      header: 'No hay conexión a internet',\n      message: 'Por favor, conéctese a internet para sincronizar las encuestas',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  /**\n   * Changes the sync status of a survey.\n   * This method is useful when a survey is synced manually.\n   * The sync status is changed when the survey is synced with the server\n   * so it is not used in the current implementation.\n   *\n   * @param survey The survey to change the sync status.\n   * @param status The new sync status.\n   */\n  private changeSyncStatus(survey: FormDetail.Form, status: boolean): void {\n    const index = this.surveys.indexOf(survey);\n    this.surveys[index].sync = status; //TODO save into storage\n  }\n\n  /**\n   * Creates the surveys folder in the device.\n   * @returns A promise that resolves when the folder is created.\n   */\n  private async createSurveysFolder(): Promise {\n    const path = 'encuestas';\n    this.filesystemService.createFolder(path);\n  }\n\n  /**\n   * Saves a survey to a file.\n   * @param survey The survey to be saved.\n   * @returns A promise that resolves when the survey is saved.\n   */\n  private async saveSurveyInFile(\n    survey: FormDetail.Form,\n    oldPath?: string\n  ): Promise {\n    const surveyId = survey.id;\n    const surveyBeneficiaryName = `${survey.beneficiary.firstname}-${survey.beneficiary.lastname}`;\n    const timestamp = survey.fechaInicial;\n    const path = `encuestas/${surveyId}-${surveyBeneficiaryName}-${timestamp}`;\n    if (oldPath) await this.filesystemService.copy(oldPath, path);\n    else\n      this.filesystemService.writeFile(\n        `${path}/${surveyId}-${surveyBeneficiaryName}-${timestamp}.txt`,\n        JSON.stringify(survey)\n      );\n  }\n\n  /* private createMockSurveys(): void {\n    const mockSurveys: FormDetail.Form[] = [];\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SurveysPage.html":{"url":"components/SurveysPage.html","title":"component - SurveysPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SurveysPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/surveys/surveys.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-surveys\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                surveys.page.scss\n            \n\n\n\n            \n                templateUrl\n                surveys.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSurveys\n                            \n                            \n                                getSyncedRatio\n                            \n                            \n                                getSyncedSurveys\n                            \n                            \n                                getUnsyncedRatio\n                            \n                            \n                                getUnsyncedSurveys\n                            \n                            \n                                goToDetail\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(surveyService: SurveyService, detailedFormService: DetailedFormService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/surveys/surveys.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSyncedRatio\n                        \n                    \n                \n            \n            \n                \ngetSyncedRatio()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSyncedSurveys\n                        \n                    \n                \n            \n            \n                \ngetSyncedSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUnsyncedRatio\n                        \n                    \n                \n            \n            \n                \ngetUnsyncedRatio()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUnsyncedSurveys\n                        \n                    \n                \n            \n            \n                \ngetUnsyncedSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToDetail\n                        \n                    \n                \n            \n            \n                \ngoToDetail(survey: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                survey\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { FormListComponent } from '@components/form-list/form-list.component';\nimport { SurveyService } from '@services/survey/survey.service';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-surveys',\n  templateUrl: 'surveys.page.html',\n  styleUrls: ['surveys.page.scss'],\n  standalone: true,\n  imports: [ IonicModule, CommonModule ],\n})\nexport class SurveysPage {\n\n  constructor(\n    private surveyService: SurveyService,\n    private detailedFormService: DetailedFormService,\n    private router: Router\n  ) {}\n\n  ionViewWillEnter() { }\n\n  private getSurveys(): FormDetail.Form[] {\n    return this.surveyService.getSurveys();\n  }\n\n  getSyncedSurveys(): FormDetail.Form[] {\n    const surveys: FormDetail.Form[] = this.getSurveys();\n    return surveys.filter((survey) => survey.sync);\n  }\n\n  getUnsyncedSurveys(): FormDetail.Form[] {\n    const surveys: FormDetail.Form[] = this.getSurveys();\n    return surveys.filter((survey) => !survey.sync);\n  }\n\n  goToDetail(survey: FormDetail.Form): void {\n    this.detailedFormService.setForm(survey, false, false, true);\n    this.router.navigate(['detail']);\n  }\n\n  getSyncedRatio(): string {\n    const surveys: FormDetail.Form[] = this.getSurveys();\n    const syncedSurveys: FormDetail.Form[] = this.getSyncedSurveys();\n    return `${syncedSurveys.length} / ${surveys.length}`;\n  }\n\n  getUnsyncedRatio(): string {\n    const surveys: FormDetail.Form[] = this.getSurveys();\n    const unsyncedSurveys: FormDetail.Form[] = this.getUnsyncedSurveys();\n    return `${unsyncedSurveys.length} / ${surveys.length}`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Sincronizadas {{ getSyncedRatio() }}\n        \n      \n    \n    \n      \n      \n        # {{ syncedSurvey.uuid }}\n        {{ syncedSurvey.name }}\n        Finaliza el {{ syncedSurvey.dateEnd }}\n        {{ syncedSurvey.questions[0].answers[0].value }}\n      \n       {{ syncedSurvey.description }} \n      \n        \n      \n    \n  \n  \n    \n      \n        \n          Sin sincronizar {{ getUnsyncedRatio() }}\n        \n      \n    \n    \n      \n      \n        # {{ unsyncedSurvey.uuid }}\n        {{ unsyncedSurvey.name }}\n        Finaliza el {{ unsyncedSurvey.dateEnd }}\n        {{ unsyncedSurvey.questions[0].answers[0].value }}\n      \n       {{ unsyncedSurvey.description }} \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    surveys.page.scss\n                \n                #uuid {\n  font-size: x-small;\n}\n\nion-icon {\n  float: right;\n  font-size: xx-large;\n}\n\nion-accordion::part(content) {\n  min-height: fit-content;\n  max-height: 67vh;\n  overflow-y: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Sincronizadas {{ getSyncedRatio() }}                                          # {{ syncedSurvey.uuid }}        {{ syncedSurvey.name }}        Finaliza el {{ syncedSurvey.dateEnd }}        {{ syncedSurvey.questions[0].answers[0].value }}             {{ syncedSurvey.description }}                                                         Sin sincronizar {{ getUnsyncedRatio() }}                                          # {{ unsyncedSurvey.uuid }}        {{ unsyncedSurvey.name }}        Finaliza el {{ unsyncedSurvey.dateEnd }}        {{ unsyncedSurvey.questions[0].answers[0].value }}             {{ unsyncedSurvey.description }}                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SurveysPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/table/table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                TypeComponent\n                            RxFor\n                \n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSection\n                            \n                            \n                                    Private\n                                changeQuestionId\n                            \n                            \n                                    Private\n                                disableQuestion\n                            \n                            \n                                    Private\n                                enableQuestion\n                            \n                            \n                                getCategory\n                            \n                            \n                                getChildQuestion\n                            \n                            \n                                getFormGroup\n                            \n                            \n                                getOrder\n                            \n                            \n                                getQuestionChildren\n                            \n                            \n                                getText\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preloadSelectedAnswers\n                            \n                            \n                                removeSection\n                            \n                            \n                                showQuestion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(answerRelationService: AnswerRelationService, questionControlService: QuestionControlService, detailedFormService: DetailedFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/table/table.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerRelationService\n                                                  \n                                                        \n                                                                        AnswerRelationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionControlService\n                                                  \n                                                        \n                                                                        QuestionControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/table/table.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/table/table.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/table/table.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSection\n                        \n                    \n                \n            \n            \n                \naddSection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeQuestionId\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeQuestionId(base: FormDetail.Question[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                base\n                                            \n                                                        FormDetail.Question[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        disableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChildQuestion\n                        \n                    \n                \n            \n            \n                \ngetChildQuestion(sectionIndex: number, childIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sectionIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                childIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormGroup\n                        \n                    \n                \n            \n            \n                \ngetFormGroup(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrder\n                        \n                    \n                \n            \n            \n                \ngetOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQuestionChildren\n                        \n                    \n                \n            \n            \n                \ngetQuestionChildren()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     [][]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getText\n                        \n                    \n                \n            \n            \n                \ngetText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        preloadSelectedAnswers\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadSelectedAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSection\n                        \n                    \n                \n            \n            \n                \nremoveSection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showQuestion\n                        \n                    \n                \n            \n            \n                \nshowQuestion(childIndex: number, sectionIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                childIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sectionIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { TypeComponent } from '../type.component';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { AnswerRelationService } from '@services/detailed-form/question/answer-relation/answer-relation.service';\nimport { QuestionControlService } from '@services/detailed-form/control/question-control.service';\nimport { RxFor } from '@rx-angular/template/for';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule, TypeComponent, RxFor],\n})\nexport class TableComponent {\n  @Input({ required: true }) question!: any;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(\n    private answerRelationService: AnswerRelationService,\n    private questionControlService: QuestionControlService,\n    private detailedFormService: DetailedFormService\n  ) {}\n\n  ngOnInit() {\n    if (this.question.text === RECOMMENDED_ACTIONS_QUESTION_TEXT) {\n      this.disabled = true;\n      this.preloadSelectedAnswers();\n    }\n  }\n\n  private preloadSelectedAnswers() {\n    const selectedAnswers: Beneficiary.SelectedQuestions =\n      this.detailedFormService.getForm().beneficiary.recommendedActions;\n    const formArray: FormArray = this.formGroup.controls[\n      this.question.id\n    ] as FormArray;\n    const sectionFormGroup: FormGroup = formArray.at(0) as FormGroup;\n    console.log('selectedAnswers', selectedAnswers);\n    Object.keys(sectionFormGroup.controls).forEach((key) => {\n      const answersFormGroup: FormGroup = sectionFormGroup.get(\n        key\n      ) as FormGroup;\n      const answersControls: string[] = Object.keys(answersFormGroup.controls);\n      const answerFormGroupKey: string = selectedAnswers[key]\n        ? answersControls[0]\n        : answersControls[1];\n      answersFormGroup.get(answerFormGroupKey)?.setValue(true);\n      console.log('selectedAnswer', selectedAnswers[key]);\n    });\n  }\n\n  addSection() {\n    const formArray: FormArray = this.formGroup.controls[\n      this.question.id\n    ] as FormArray;\n    let baseArrayCopy: FormDetail.Question[] = JSON.parse(\n      JSON.stringify(this.question.questionChildren[0])\n    );\n    this.changeQuestionId(baseArrayCopy);\n    const newFormGroup: FormGroup =\n      this.questionControlService.toFormGroup(baseArrayCopy);\n    newFormGroup.reset();\n    formArray.push(newFormGroup);\n    this.question.questionChildren.push(baseArrayCopy);\n  }\n\n  private changeQuestionId(base: FormDetail.Question[]) {\n    base.forEach((question) => {\n      const newId: string = `${this.question.questionChildren.length}-${question.id}`;\n      base.forEach((q) => {\n        q.answersRelation.forEach((ar) => {\n          if (ar.questionId === question.id) {\n            ar.questionId = newId;\n          }\n        });\n      });\n      question.id = newId;\n    });\n  }\n\n  removeSection() {\n    if (this.question.questionChildren.length > 1) {\n      const formArray: FormArray = this.formGroup.controls[\n        this.question.id\n      ] as FormArray;\n      formArray.removeAt(formArray.length - 1);\n      this.question.questionChildren.pop();\n    }\n  }\n\n  getQuestionChildren(): FormDetail.Question[][] {\n    return this.question.questionChildren;\n  }\n\n  getText(): string {\n    return this.question.text;\n  }\n\n  getOrder(): number {\n    return this.question.order;\n  }\n\n  getCategory(): string {\n    return this.question.questionCategory.name;\n  }\n\n  getFormGroup(index: number): FormGroup {\n    const formArray: FormArray = this.formGroup.controls[\n      this.question.id\n    ] as FormArray;\n    return formArray.at(index) as FormGroup;\n  }\n\n  getChildQuestion(\n    sectionIndex: number,\n    childIndex: number\n  ): FormDetail.Question {\n    const questionChildren: FormDetail.Question[][] =\n      this.question.questionChildren;\n    return questionChildren[sectionIndex][childIndex];\n  }\n\n  showQuestion(childIndex: number, sectionIndex: number) {\n    const childQuestion: FormDetail.Question = this.getChildQuestion(\n      sectionIndex,\n      childIndex\n    );\n    const sectionFormGroup: FormGroup = this.getFormGroup(sectionIndex);\n    let checkedAnswersRelation: boolean = false;\n    if (childQuestion) {\n      checkedAnswersRelation = this.answerRelationService.checkAnswerRelation(\n        childQuestion,\n        sectionFormGroup\n      );\n\n      checkedAnswersRelation\n        ? this.enableQuestion(childQuestion, sectionFormGroup)\n        : this.disableQuestion(childQuestion, sectionFormGroup);\n    }\n\n    return checkedAnswersRelation;\n  }\n\n  /*   showQuestion(id: number, i: number): boolean {\n    const questionId: string = id.toString();\n    const enabled: boolean = this.getFormGroup(i).get(questionId)!.enabled;\n    console.log('enabled: ', enabled)\n    return enabled\n  } */\n\n  private enableQuestion(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): void {\n    this.answerRelationService.enableQuestion(question, formGroup);\n  }\n\n  private disableQuestion(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): void {\n    this.answerRelationService.disableQuestion(question, formGroup);\n  }\n}\n\nconst RECOMMENDED_ACTIONS_QUESTION_TEXT = \"Actividades recomendadas visita anterior\";\n\n    \n\n    \n        \n  \n    \n      {{ getCategory() }}\n      \n        {{ getOrder() }}. {{ getText() }}\n      \n    \n    \n      \n        \n          \n            Sección {{ sectionIndex + 1 }}\n          \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      \n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ getCategory() }}              {{ getOrder() }}. {{ getText() }}                                                  Sección {{ sectionIndex + 1 }}                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextAreaDataTypeComponent.html":{"url":"components/TextAreaDataTypeComponent.html","title":"component - TextAreaDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextAreaDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-area-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./text-area-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-area-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-text-area-data-type',\n  templateUrl: './text-area-data-type.component.html',\n  styleUrls: ['./text-area-data-type.component.scss'],\n  standalone : true,\n  imports: [ IonicModule, ReactiveFormsModule ],\n})\nexport class TextAreaDataTypeComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  getValue(): string {\n    return this.formGroup.get(`${this.question.id}`)?.value;\n  }\n\n  setValue(event: any) {\n    this.formGroup.get(`${this.question.id}`)?.setValue(event.target.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./text-area-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextAreaDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextDataTypeComponent.html":{"url":"components/TextDataTypeComponent.html","title":"component - TextDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/text-data-type/text-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./text-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAssociation\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preloadValue\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detailedFormService: DetailedFormService, associationService: AssociationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAssociation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssociation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Beneficiary.Association | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        preloadValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { AssociationService } from '@services/association/association.service';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\n\n@Component({\n  selector: 'app-text-data-type',\n  templateUrl: './text-data-type.component.html',\n  styleUrls: ['./text-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule, ReactiveFormsModule],\n})\nexport class TextDataTypeComponent implements OnInit {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(\n    private detailedFormService: DetailedFormService,\n    private associationService: AssociationService\n  ) {}\n\n  ngOnInit() {}\n\n  getValue(): string {\n    this.preloadValue();\n    return this.formGroup.get(`${this.question.id}`)?.value;\n  }\n\n  setValue(event: any) {\n    this.formGroup.get(`${this.question.id}`)?.setValue(event.target.value);\n  }\n\n  private preloadValue(): void {\n    const isAssociationQuestion: boolean =\n      this.question.text === 'Asociación a la que pertenece';\n\n    const association: Beneficiary.Association | undefined = this.getAssociation();\n\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n    if (isAssociationQuestion) {\n      if (association) {\n        formControl.setValue(association.name);\n        this.disabled = true;\n      }\n    }\n  }\n\n  private getAssociation(): Beneficiary.Association | undefined {\n    const associationId: number =\n      this.detailedFormService.getForm().beneficiary.associationId;\n\n    const association: Beneficiary.Association | undefined =\n      this.associationService.getAssociationById(associationId);\n\n    return association;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./text-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeComponent.html":{"url":"components/TypeComponent.html","title":"component - TypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                AutocompleteComponent\n                                OpenComponent\n                                MultipleComponent\n                                UniqueComponent\n                \n            \n\n            \n                styleUrls\n                ./type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCategory\n                            \n                            \n                                getDataType\n                            \n                            \n                                getOrder\n                            \n                            \n                                getText\n                            \n                            \n                                getType\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/type.component.ts:29\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/type.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/type.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/type.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataType\n                        \n                    \n                \n            \n            \n                \ngetDataType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrder\n                        \n                    \n                \n            \n            \n                \ngetOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getText\n                        \n                    \n                \n            \n            \n                \ngetText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getType\n                        \n                    \n                \n            \n            \n                \ngetType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { OpenComponent } from './open/open.component';\nimport { MultipleComponent } from './multiple/multiple.component';\nimport { UniqueComponent } from './unique/unique.component';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-type',\n  templateUrl: './type.component.html',\n  styleUrls: ['./type.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    IonicModule,\n    AutocompleteComponent,\n    OpenComponent,\n    MultipleComponent,\n    UniqueComponent\n  ]\n})\nexport class TypeComponent implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getCategory(): string {\n    return this.question?.questionCategory.name;\n  }\n\n  getType(): string {\n    return this.question?.type;\n  }\n\n  getDataType(): string { // TODO move this method to open component\n    return this.question?.dataType;\n  }\n\n  getText(): string {\n    return this.question?.text;\n  }\n\n  getOrder(): number {\n    return this.question?.order;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ getCategory() }}\n    \n      {{ getOrder() }}. {{ getText() }}\n    \n  \n\n  \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ getCategory() }}          {{ getOrder() }}. {{ getText() }}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeaheadComponent.html":{"url":"components/TypeaheadComponent.html","title":"component - TypeaheadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TypeaheadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/typeahead/typeahead.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-typeahead\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                            RxFor\n                \n            \n\n            \n                styleUrls\n                ./typeahead.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./typeahead.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredItems\n                            \n                            \n                                workingSelectedValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelChanges\n                            \n                            \n                                confirmChanges\n                            \n                            \n                                filterList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchbarInput\n                            \n                            \n                                select\n                            \n                            \n                                trackItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                selectedItem\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionCancel\n                            \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/typeahead/typeahead.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedItem\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Selecciona uno'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionCancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelChanges\n                        \n                    \n                \n            \n            \n                \ncancelChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmChanges\n                        \n                    \n                \n            \n            \n                \nconfirmChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterList\n                        \n                    \n                \n            \n            \n                \nfilterList(searchQuery: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Update the rendered view with\nthe provided search query. If no\nquery is provided, all data\nwill be rendered.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchQuery\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchbarInput\n                        \n                    \n                \n            \n            \n                \nsearchbarInput(ev: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n            \n                \nselect(item: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackItems\n                        \n                    \n                \n            \n            \n                \ntrackItems(index: number, item: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                item\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/typeahead/typeahead.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workingSelectedValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/typeahead/typeahead.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IonicModule, Platform } from '@ionic/angular';\nimport { RxFor } from \"@rx-angular/template/for\";\n\n@Component({\n  selector: 'app-typeahead',\n  templateUrl: './typeahead.component.html',\n  styleUrls: ['./typeahead.component.scss'],\n  standalone: true,\n  imports: [ CommonModule, IonicModule, RxFor],\n})\nexport class TypeaheadComponent {\n  @Input() items: string[] = [];\n  @Input() selectedItem: string = '';\n  @Input() title = 'Selecciona uno';\n\n  @Output() selectionCancel = new EventEmitter();\n  @Output() selectionChange = new EventEmitter();\n\n  filteredItems: string[] = [];\n  workingSelectedValue: string = '';\n\n  constructor(private platform: Platform) {}\n\n  ngOnInit() {\n    this.filteredItems = [...this.items];\n  }\n\n  select(item: string) {\n    this.workingSelectedValue = item;\n    this.confirmChanges();\n  }\n\n  trackItems(index: number, item: string) {\n    return item;\n  }\n\n  cancelChanges() {\n    this.selectionCancel.emit();\n  }\n\n  confirmChanges() {\n    this.selectionChange.emit(this.workingSelectedValue);\n  }\n\n  searchbarInput(ev: any) {\n    this.filterList(ev.target.value);\n  }\n\n  /**\n   * Update the rendered view with\n   * the provided search query. If no\n   * query is provided, all data\n   * will be rendered.\n   */\n  filterList(searchQuery: string | undefined) {\n    /**\n     * If no search query is defined,\n     * return all options.\n     */\n    if (searchQuery === undefined) {\n      this.filteredItems = [...this.items];\n    } else {\n      /**\n       * Otherwise, normalize the search\n       * query and check to see which items\n       * contain the search query as a substring.\n       */\n      const normalizedQuery = searchQuery.toLowerCase();\n      this.filteredItems = this.items.filter((item) => {\n        return item.toLowerCase().includes(normalizedQuery);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Cancelar\n    \n    {{ title }}\n    \n      Hecho\n    \n  \n  \n    \n  \n\n\n\n  \n    \n      {{ item }}\n    \n  \n\n\n    \n\n    \n                \n                    ./typeahead.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Cancelar        {{ title }}          Hecho                          {{ item }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TypeaheadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UniqueComponent.html":{"url":"components/UniqueComponent.html","title":"component - UniqueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UniqueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/unique/unique.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-unique\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                ReactiveFormsModule\n                                AutocompleteComponent\n                \n            \n\n            \n                styleUrls\n                ./unique.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./unique.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                farming\n                            \n                            \n                                other\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeInputState\n                            \n                            \n                                getAnswers\n                            \n                            \n                                    Private\n                                getCheckedAnswerId\n                            \n                            \n                                getOtherErrorMessage\n                            \n                            \n                                getOtherPlaceholder\n                            \n                            \n                                getOtherValue\n                            \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                isLastAnswer\n                            \n                            \n                                isOtherInvalid\n                            \n                            \n                                    Private\n                                loadOtherControl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preloadFarmingValue\n                            \n                            \n                                    Private\n                                searchAnswerIdByFarming\n                            \n                            \n                                    Private\n                                setCheckedValue\n                            \n                            \n                                setOtherValue\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detailedFormService: DetailedFormService, questionService: QuestionService, assoaciationService: AssociationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/unique/unique.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assoaciationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/unique/unique.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/unique/unique.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/unique/unique.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeInputState\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeInputState(answerGroup: FormGroup, id: string, value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answerGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAnswers\n                        \n                    \n                \n            \n            \n                \ngetAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Answer[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCheckedAnswerId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCheckedAnswerId(answersFormGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetOtherErrorMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherPlaceholder\n                        \n                    \n                \n            \n            \n                \ngetOtherPlaceholder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:183\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherValue\n                        \n                    \n                \n            \n            \n                \ngetOtherValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLastAnswer\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLastAnswer(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOtherInvalid\n                        \n                    \n                \n            \n            \n                \nisOtherInvalid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadOtherControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadOtherControl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        preloadFarmingValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadFarmingValue(answersFormGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        searchAnswerIdByFarming\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAnswerIdByFarming()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setCheckedValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCheckedValue(answersFormGroup: FormGroup, id: string, value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOtherValue\n                        \n                    \n                \n            \n            \n                \nsetOtherValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        farming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/unique/unique.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        other\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/unique/unique.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { InputChangeEventDetail, InputCustomEvent, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { AutocompleteComponent } from '../autocomplete/autocomplete.component';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { AssociationService } from '@services/association/association.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { QuestionService } from '@services/detailed-form/question/question.service';\n\n@Component({\n  selector: 'app-unique',\n  templateUrl: './unique.component.html',\n  styleUrls: ['./unique.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    AutocompleteComponent,\n  ],\n})\nexport class UniqueComponent implements OnInit {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  other: boolean = false;\n  farming: boolean = false;\n\n  constructor(\n    private detailedFormService: DetailedFormService,\n    private questionService: QuestionService,\n    private assoaciationService: AssociationService\n  ) {}\n\n  ngOnInit() {}\n\n  getAnswers(): FormDetail.Answer[] {\n    return this.question.answers;\n  }\n\n  setValue(event: any): void {\n    const formGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n\n    const id: string = event.detail.value;\n\n    this.setCheckedValue(formGroup, id, true);\n    this.questionService.toggleNextQuestionFrom(this.question, this.formGroup);\n  }\n\n  getValue(): string {\n    const answersFormGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n\n    this.preloadFarmingValue(answersFormGroup);\n\n    const { answerId, answerValue } = this.getCheckedAnswerId(answersFormGroup);\n    if (answerId !== 'other')\n      this.changeInputState(answersFormGroup, answerId, answerValue);\n\n    return answerId;\n  }\n\n  private getCheckedAnswerId(answersFormGroup: FormGroup): {\n    answerId: string;\n    answerValue: boolean;\n  } {\n    let answerId: string = '';\n    let answerValue: boolean = false;\n\n    for (const key in answersFormGroup.controls) {\n      const value = answersFormGroup.controls[key].value;\n      if (value && key !== 'other') {\n        answerId = key;\n        answerValue = value;\n      }\n    }\n\n    return { answerId, answerValue };\n  }\n\n  private setCheckedValue(\n    answersFormGroup: FormGroup,\n    id: string,\n    value: boolean\n  ): void {\n    for (const key in answersFormGroup.controls) {\n      if (key === id && key !== 'other') {\n        this.changeInputState(answersFormGroup, id, value);\n        answersFormGroup.controls[key].setValue(value);\n      } else if (key !== 'other') {\n        answersFormGroup.controls[key].setValue(!value);\n      }\n    }\n  }\n\n  private preloadFarmingValue(answersFormGroup: FormGroup): void {\n    const isFarmingQuestion: boolean =\n      this.question.text === 'Cultivo Priorizado';\n        if (isFarmingQuestion) {\n      const answerIdToCheck: string = this.searchAnswerIdByFarming();\n      this.setCheckedValue(answersFormGroup, answerIdToCheck, true);\n      this.farming = true;\n    } else {\n      this.farming = false;\n    }\n  }\n\n  private searchAnswerIdByFarming(): string {\n    const associationId: number =\n      this.detailedFormService.getForm().beneficiary.associationId;\n\n    const association: Beneficiary.Association | undefined =\n      this.assoaciationService.getAssociationById(associationId);\n\n    const associationFarming: string =\n      association!.farming;\n\n    const answer: FormDetail.Answer = this.question.answers.find(\n      (answer) => answer.value.toLowerCase() === associationFarming.toLowerCase()\n    )!;\n\n    return answer.id.toString();\n  }\n\n  getOtherValue(): string {\n    this.loadOtherControl();\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherValue: string = answerGroup.get('other')?.value;\n    return otherValue;\n  }\n\n  setOtherValue(event: Event): void {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherControl: FormControl = answerGroup.get('other') as FormControl;\n    const eventTarget: HTMLIonInputElement = event.target as HTMLIonInputElement;\n    const otherValue: string | number = eventTarget.value!;\n    otherControl.setValue(otherValue);\n  }\n\n  isOtherInvalid(): boolean {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherControl: FormControl = answerGroup.get('other') as FormControl;\n    const invalid: boolean = otherControl?.invalid;\n    return invalid\n  }\n\n/*   isOtherTouched(): boolean {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherControl: FormControl = answerGroup.get('other') as FormControl;\n    return otherControl?.touched;\n  } */\n\n  getOtherErrorMessage(): string {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherControl: FormControl = answerGroup.get('other') as FormControl;\n    const errors: any = otherControl?.errors;\n    if (errors?.required) {\n      return 'Este campo es requerido';\n    } else if (errors?.min) {\n      return `El valor mínimo es ${this.question.min}`;\n    } else if (errors?.max) {\n      return `El valor máximo es ${this.question.max}`;\n    }\n    return '';\n  }\n\n  getOtherPlaceholder(): string {\n    let message: string = 'Ingrese un valor';\n    if (this.question.min && this.question.max)\n      message += ` entre ${this.question.min} y ${this.question.max}`;\n    else if (this.question.min) message += ` mayor a ${this.question.min}`;\n    else if (this.question.max) message += ` menor a ${this.question.max}`;\n    return message;\n  }\n\n  private loadOtherControl(): void {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherFormControl: FormControl = answerGroup.get(\n      'other'\n    ) as FormControl;\n    if (this.question.min)\n      otherFormControl.addValidators(Validators.min(this.question.min));\n    if (this.question.max)\n      otherFormControl.addValidators(Validators.max(this.question.max));\n  }\n\n  private changeInputState(\n    answerGroup: FormGroup,\n    id: string,\n    value: boolean\n  ): void {\n    if (this.isLastAnswer(id) && value) {\n      this.other = true;\n      answerGroup.get('other')?.enable();\n    } else {\n      this.other = false;\n      answerGroup.get('other')?.disable();\n    }\n  }\n\n  private isLastAnswer(id: string): boolean {\n    const answers: FormDetail.Answer[] = this.getAnswers();\n    const lastAnswer: FormDetail.Answer = answers[answers.length - 1];\n    return Number(id) === lastAnswer.id;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ answer.value }}\n      \n    \n  \n\n\n\n  \n    \n      \n        \n          {{ isLast ? answer.value.split(\":\")[0] : answer.value }}\n        \n      \n    \n  \n  \n    \n    \n  \n  \n    \n      \n        Valor\n        ({{ getOtherErrorMessage() }})\n      \n    \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./unique.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ answer.value }}                                          {{ isLast ? answer.value.split(\":\")[0] : answer.value }}                                                    Valor        ({{ getOtherErrorMessage() }})                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UniqueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Auth.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            creationDate\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            emailVerifiedAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            idCard\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedDate\n                                        \n                                \n                                \n                                        \n                                            zone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creationDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailVerifiedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailVerifiedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idCard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idCard:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Authentication {\n  export interface User {\n    id: number;\n    name: string;\n    email: string;\n    emailVerifiedAt: string;\n    idCard: string;\n    role: string;\n    type: string;\n    zone: string;\n    creationDate: string;\n    updatedDate: string;\n  }\n\n  export type AuthResponse = {\n    token: string;\n    user: UserResponse;\n  };\n\n  export type UserResponse = {\n    id: number;\n    name: string;\n    email: string;\n    email_verified_at: string;\n    cedula: string;\n    roles: string;\n    types: string;\n    zone: string;\n    created_at: string;\n    updated_at: string;\n  };\n\n  export type AuthParams = {\n    email: string;\n    password: string;\n  };\n\n  export interface AuthManagement {\n    login: (credentials: AuthParams) => Promise;\n    logout: () => void;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/detailed-form/detailed-form.component.ts\n            \n            component\n            DetailedFormComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/form-list/form-list.component.ts\n            \n            component\n            FormListComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/header/dataquest-header/dataquest-header.component.ts\n            \n            component\n            DataquestHeaderComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/question/question.component.ts\n            \n            component\n            QuestionComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/components/question/type/autocomplete/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/question/type/multiple/multiple.component.ts\n            \n            component\n            MultipleComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/date-data-type/date-data-type.component.ts\n            \n            component\n            DateDataTypeComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts\n            \n            component\n            DrawingPadDataTypeComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/email-data-type/email-data-type.component.ts\n            \n            component\n            EmailDataTypeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/money-data-type/money-data-type.component.ts\n            \n            component\n            MoneyDataTypeComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/month-data-type/month-data-type.component.ts\n            \n            component\n            MonthDataTypeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/number-data-type/number-data-type.component.ts\n            \n            component\n            NumberDataTypeComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/open.component.ts\n            \n            component\n            OpenComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts\n            \n            component\n            PercentageDataTypeComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts\n            \n            component\n            PhoneDataTypeComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts\n            \n            component\n            PhotoDataTypeComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts\n            \n            variable\n            DEFAULT_PHOTO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts\n            \n            variable\n            PHOTO_PREFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts\n            \n            variable\n            SAVE_PHOTO_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts\n            \n            component\n            TextAreaDataTypeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/text-data-type/text-data-type.component.ts\n            \n            component\n            TextDataTypeComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/question/type/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/question/type/table/table.component.ts\n            \n            variable\n            RECOMMENDED_ACTIONS_QUESTION_TEXT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/question/type/type.component.ts\n            \n            component\n            TypeComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/question/type/unique/unique.component.ts\n            \n            component\n            UniqueComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/typeahead/typeahead.component.ts\n            \n            component\n            TypeaheadComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/guards/auth/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/guards/details/details.guard.ts\n            \n            variable\n            DetailsGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/secure-inner-pages/secure-inner-pages.guard.ts\n            \n            injectable\n            SecureInnerPagesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/Auth.namespace.ts\n            \n            interface\n            AuthManagement\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/Auth.namespace.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/Beneficiary.namespace.ts\n            \n            interface\n            Association\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/Beneficiary.namespace.ts\n            \n            interface\n            Producer\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/models/Beneficiary.namespace.ts\n            \n            variable\n            ProducerBaseParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            Answer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            AnswerPivot\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            AnswerRelation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            Form\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            Question\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            QuestionCategory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/detail/detail.page.ts\n            \n            component\n            DetailPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/drafts/drafts.page.ts\n            \n            component\n            DraftsPage\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/forms/forms.page.ts\n            \n            component\n            FormsPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/surveys/surveys.page.ts\n            \n            component\n            SurveysPage\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/association/association.service.ts\n            \n            injectable\n            AssociationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/association/association.service.ts\n            \n            variable\n            ASSOCIATIONS_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/association/association.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            TOKEN_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            USER_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/control/question-control.service.ts\n            \n            injectable\n            QuestionControlService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/detailed-form.service.ts\n            \n            injectable\n            DetailedFormService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts\n            \n            injectable\n            AnswerRelationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/question/photo/photo.service.ts\n            \n            injectable\n            PhotoService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/question/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/draft/draft.service.ts\n            \n            injectable\n            DraftService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/services/draft/draft.service.ts\n            \n            variable\n            DRAFT_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/draft/draft.service.ts\n            \n            variable\n            UUID_ARRAY_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/filesystem/filesystem.service.ts\n            \n            injectable\n            FilesystemService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/form/form.service.ts\n            \n            injectable\n            FormService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/form/form.service.ts\n            \n            variable\n            ENDPOINT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/form/form.service.ts\n            \n            variable\n            FORMS_STORAGE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/location/location.service.ts\n            \n            injectable\n            LocationService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/offline-manager/offline-manager.service.ts\n            \n            injectable\n            OfflineManagerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/offline-manager/offline-manager.service.ts\n            \n            interface\n            StoredRequest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/offline-manager/offline-manager.service.ts\n            \n            variable\n            STORAGE_REQ_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/producer/producer.service.ts\n            \n            injectable\n            ProducerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/producer/producer.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/producer/producer.service.ts\n            \n            variable\n            PRODUCERS_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/survey/survey.service.ts\n            \n            injectable\n            SurveyService\n            \n                77 %\n                (17/22)\n            \n        \n        \n            \n                \n                src/app/services/survey/survey.service.ts\n            \n            variable\n            ENDPOINT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/survey/survey.service.ts\n            \n            variable\n            SURVEY_STORAGE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/survey/survey.service.ts\n            \n            variable\n            SURVEYS_STORAGE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/survey/survey.service.ts\n            \n            variable\n            UUID_ARRAY_STORAGE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            answerBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            answerPivotBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            answerRelationBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            associationBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            formBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            producerBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            questionBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            questionCategoryBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            userBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/data/mock-form.ts\n            \n            variable\n            mockForm\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.mobile.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            tokenGetter\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.0\n        \n            @angular/common : ^16.0.0\n        \n            @angular/compiler : ^16.0.0\n        \n            @angular/core : ^16.0.0\n        \n            @angular/forms : ^16.0.0\n        \n            @angular/platform-browser : ^16.0.0\n        \n            @angular/platform-browser-dynamic : ^16.0.0\n        \n            @angular/router : ^16.2.12\n        \n            @auth0/angular-jwt : ^5.1.2\n        \n            @capacitor/android : 5.5.1\n        \n            @capacitor/app : 5.0.6\n        \n            @capacitor/camera : ^5.0.7\n        \n            @capacitor/core : 5.5.1\n        \n            @capacitor/filesystem : ^5.2.1\n        \n            @capacitor/geolocation : ^5.0.6\n        \n            @capacitor/haptics : 5.0.6\n        \n            @capacitor/ios : 5.5.1\n        \n            @capacitor/keyboard : 5.0.6\n        \n            @capacitor/network : ^5.0.6\n        \n            @capacitor/preferences : ^5.0.6\n        \n            @capacitor/splash-screen : ^5.0.6\n        \n            @capacitor/status-bar : 5.0.6\n        \n            @ionic/angular : ^7.5.5\n        \n            @ionic/storage-angular : ^4.0.0\n        \n            @maskito/angular : ^1.8.1\n        \n            @maskito/core : ^1.8.1\n        \n            @maskito/kit : ^1.8.1\n        \n            @rx-angular/template : ^16.1.1\n        \n            capacitor-native-settings : ^5.0.1\n        \n            cordova-sqlite-storage : ^6.1.0\n        \n            date-fns : ^2.30.0\n        \n            ionicons : ^7.0.0\n        \n            json-server : ^0.17.3\n        \n            jwt-decode : ^3.1.2\n        \n            localforage-cordovasqlitedriver : ^1.8.0\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            signature_pad : ^4.1.6\n        \n            tslib : ^2.3.0\n        \n            uuid : ^9.0.1\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FormType   (src/.../FormDetail.namespace.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/FormDetail.namespace.ts\n    \n        \n            \n                \n                    \n                        \n                        FormType\n                    \n                \n                        \n                            \n                                 SPECIALIZED\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SUPPORT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            answerBuilder   (src/.../builder.ts)\n                        \n                        \n                            answerPivotBuilder   (src/.../builder.ts)\n                        \n                        \n                            answerRelationBuilder   (src/.../builder.ts)\n                        \n                        \n                            associationBuilder   (src/.../builder.ts)\n                        \n                        \n                            formBuilder   (src/.../builder.ts)\n                        \n                        \n                            producerBuilder   (src/.../builder.ts)\n                        \n                        \n                            questionBuilder   (src/.../builder.ts)\n                        \n                        \n                            questionCategoryBuilder   (src/.../builder.ts)\n                        \n                        \n                            tokenGetter   (src/.../main.ts)\n                        \n                        \n                            userBuilder   (src/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        answerBuilder\n                        \n                    \n                \n            \n            \n                \nanswerBuilder(answer)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answer\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Answer\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answerPivotBuilder\n                        \n                    \n                \n            \n            \n                \nanswerPivotBuilder(pivot)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pivot\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormDetail.AnswerPivot\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answerRelationBuilder\n                        \n                    \n                \n            \n            \n                \nanswerRelationBuilder(relation)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.AnswerRelation\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associationBuilder\n                        \n                    \n                \n            \n            \n                \nassociationBuilder(association)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                association\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Beneficiary.Association\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formBuilder\n                        \n                    \n                \n            \n            \n                \nformBuilder(form)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormDetail.Form\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        producerBuilder\n                        \n                    \n                \n            \n            \n                \nproducerBuilder(producer)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                producer\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Beneficiary.Producer\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionBuilder\n                        \n                    \n                \n            \n            \n                \nquestionBuilder(question)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionCategoryBuilder\n                        \n                    \n                \n            \n            \n                \nquestionCategoryBuilder(category)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.QuestionCategory\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userBuilder\n                        \n                    \n                \n            \n            \n                \nuserBuilder(user)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Authentication.User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tokenGetter\n                        \n                    \n                \n            \n            \n                \ntokenGetter()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.1.2\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnswerPivotResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            AnswerRelationResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            AnswerResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            AssociationResponse   (src/.../Beneficiary.namespace.ts)\n                        \n                        \n                            AuthParams   (src/.../Auth.namespace.ts)\n                        \n                        \n                            AuthResponse   (src/.../Auth.namespace.ts)\n                        \n                        \n                            FormResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            Pivot   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            ProducerResponse   (src/.../Beneficiary.namespace.ts)\n                        \n                        \n                            QuestionCategoryResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            QuestionResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            SelectedQuestions   (src/.../Beneficiary.namespace.ts)\n                        \n                        \n                            UserResponse   (src/.../Auth.namespace.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/FormDetail.namespace.ts\n    \n    \n        \n            \n                \n                    \n                    AnswerPivotResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AnswerRelationResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AnswerResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FormResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pivot\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QuestionCategoryResponse\n                \n            \n            \n                \n                            QuestionCategory\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QuestionResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/models/Beneficiary.namespace.ts\n    \n    \n        \n            \n                \n                    \n                    AssociationResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ProducerResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectedQuestions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/models/Auth.namespace.ts\n    \n    \n        \n            \n                \n                    \n                    AuthParams\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
