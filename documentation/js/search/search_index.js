var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Answer.html",[0,0.991,1,1.524]],["body/interfaces/Answer.html",[0,1.863,1,2.266,2,1.896,3,0.161,4,0.161,5,0.141,6,2.34,7,0.083,8,0.831,9,3.868,10,2.461,11,4.203,12,3.481,13,1.348,14,0.974,15,0.255,16,0.017,17,0.719,18,0.912,19,0.246,20,2.071,21,2.648,22,0.289,23,2.097,24,0.664,25,0.516,26,1.725,27,0.267,28,2.648,29,2.648,30,2.648,31,2.648,32,2.34,33,2.212,34,2.648,35,3.478,36,3.478,37,2.905,38,3.959,39,3.073,40,1.992,41,2.34,42,2.648,43,3.644,44,2.648,45,2.648,46,0.833,47,0.914,48,1.413,49,3.478,50,2.648,51,2.648,52,3.478,53,2.905,54,2.648,55,3.445,56,2.648,57,2.484,58,2.648,59,3.073,60,2.905,61,2.484,62,2.648,63,2.648,64,2.648,65,2.648,66,2.648,67,2.648,68,3.262,69,2.484,70,3.884,71,2.212,72,3.431,73,2.484,74,3.262,75,2.212,76,2.648,77,0.012,78,0.012]],["title/interfaces/AnswerPivot.html",[0,0.991,72,2.066]],["body/interfaces/AnswerPivot.html",[0,1.871,1,1.752,2,1.926,3,0.164,4,0.164,5,0.143,6,2.376,7,0.084,8,0.839,9,2.522,10,2.412,11,3.891,12,3.496,13,1.105,14,0.89,15,0.256,16,0.017,17,0.719,18,0.912,19,0.249,20,2.092,21,2.689,22,0.29,23,2.129,24,0.674,25,0.524,26,1.752,27,0.269,28,2.689,29,2.689,30,2.689,31,2.689,32,2.376,33,2.246,34,2.689,35,3.513,36,3.513,37,2.934,38,3.974,39,3.104,40,2.023,41,2.376,42,2.689,43,3.666,44,2.689,45,2.689,46,0.846,47,0.923,48,1.428,49,3.513,50,2.689,51,2.689,52,3.513,53,2.934,54,2.689,55,3.465,56,2.689,57,2.522,58,2.689,59,3.104,60,2.934,61,2.522,62,2.689,63,2.689,64,2.689,65,2.689,66,2.689,67,2.689,68,3.295,69,2.522,70,3.913,71,2.246,72,3.666,73,2.522,74,3.295,75,3.465,76,2.689,77,0.012,78,0.012]],["title/interfaces/AnswerRelation.html",[0,0.991,71,1.953]],["body/interfaces/AnswerRelation.html",[0,1.871,1,1.752,2,1.926,3,0.164,4,0.164,5,0.143,6,2.376,7,0.084,8,0.839,9,2.522,10,2.467,11,3.891,12,3.496,13,1.105,14,0.89,15,0.254,16,0.017,17,0.719,18,0.911,19,0.249,20,2.092,21,2.689,22,0.29,23,2.129,24,0.674,25,0.524,26,1.752,27,0.269,28,2.689,29,2.689,30,2.689,31,2.689,32,2.376,33,2.246,34,2.689,35,3.513,36,3.513,37,2.934,38,3.974,39,3.104,40,2.023,41,2.376,42,2.689,43,3.666,44,2.689,45,2.689,46,0.846,47,0.923,48,1.428,49,3.513,50,2.689,51,2.689,52,3.513,53,2.934,54,2.689,55,3.465,56,2.689,57,2.522,58,2.689,59,3.104,60,2.934,61,2.522,62,2.689,63,2.689,64,2.689,65,2.689,66,2.689,67,2.689,68,3.295,69,2.522,70,3.913,71,2.934,72,4.03,73,2.522,74,3.295,75,2.246,76,2.689,77,0.012,78,0.012]],["title/injectables/AnswerRelationService.html",[79,0.643,80,2.508]],["body/injectables/AnswerRelationService.html",[3,0.153,4,0.153,5,0.134,7,0.078,12,2.995,13,1.056,14,1.055,15,0.231,16,0.017,17,0.365,18,0.745,19,0.351,22,0.153,24,0.629,27,0.297,46,1.27,71,3.159,75,2.097,77,0.011,78,0.011,79,0.924,80,3.601,81,1.431,82,4.494,83,5.702,84,5.212,85,3.553,86,0.52,87,1.31,88,5.496,89,5.496,90,2.71,91,6.192,92,5.496,93,4.26,94,4.26,95,0.55,96,0.685,97,4.11,98,5.496,99,6.608,100,2.279,101,4.11,102,0.799,103,0.755,104,5.352,105,0.63,106,5.496,107,4.11,108,4.11,109,2.011,110,4.11,111,5.496,112,4.11,113,4.26,114,4.11,115,0.787,116,4.26,117,4.11,118,0.342,119,1.064,120,0.825,121,1.431,122,1.37,123,0.365,124,0.876,125,4.11,126,0.756,127,6.192,128,4.11,129,0.923,130,4.11,131,4.11,132,0.629,133,5.496,134,4.11,135,5.496,136,5.496,137,4.11,138,4.11,139,4.11,140,4.11,141,4.11,142,5.496,143,4.11,144,4.11,145,4.11]],["title/injectables/ApiService.html",[79,0.643,146,1.851]],["body/injectables/ApiService.html",[3,0.171,4,0.171,5,0.15,7,0.088,8,0.864,10,2.09,13,0.884,15,0.242,16,0.017,18,0.887,19,0.414,22,0.171,27,0.29,77,0.012,78,0.012,79,0.995,81,1.602,86,0.56,87,1.215,90,2.792,95,0.526,96,0.676,102,0.825,103,0.736,105,0.581,118,0.383,121,1.602,122,1.534,123,0.409,124,0.779,129,0.867,146,2.863,147,3.978,148,5.656,149,4.893,150,6.542,151,1.92,152,5.971,153,4.601,154,7.314,155,5.918,156,4.601,157,4.601,158,5.918,159,4.015,160,3.948,161,4.601,162,4.601,163,4.601,164,7.145,165,4.601,166,4.601,167,2.251,168,1.295,169,5.918,170,4.601,171,2.115,172,4.601,173,2.636,174,2.484,175,4.588,176,3.567,177,3.26,178,4.601,179,4.601,180,0.846,181,3.26,182,4.601,183,3.978,184,1.534,185,3.978,186,2.348,187,3.567,188,4.193,189,4.601,190,3.015,191,4.601,192,4.601,193,2.811,194,4.601,195,4.601,196,4.601,197,0.809,198,4.601,199,4.601]],["title/components/AppComponent.html",[200,0.09,201,0.736]],["body/components/AppComponent.html",[3,0.157,4,0.157,5,0.137,7,0.08,8,0.816,13,0.81,15,0.137,16,0.017,17,0.375,19,0.394,22,0.157,25,0.502,27,0.263,47,0.897,77,0.011,78,0.011,86,0.529,87,1.256,90,2.281,95,0.497,96,0.593,102,0.475,103,0.449,105,0.375,115,0.502,118,0.351,122,1.863,123,0.375,126,1.228,132,0.856,168,1.186,180,0.775,197,1.34,200,0.147,201,1.283,202,1.122,203,0.883,204,0.883,205,0.883,206,0.883,207,3.643,208,0.883,209,1.685,210,1.685,211,1.171,212,1.171,213,1.314,214,2.091,215,1.171,216,6.27,217,1.171,218,5.589,219,6.677,220,6.677,221,3.267,222,3.854,223,3.932,224,4.774,225,5.589,226,4.215,227,5.589,228,4.215,229,0.708,230,1.29,231,2.986,232,2.986,233,4.215,234,4.215,235,4.215,236,3.643,237,3.643,238,0.883,239,1.171,240,1.171,241,0.883,242,0.883,243,0.883,244,0.81,245,0.883,246,0.81,247,0.883,248,0.883,249,0.81,250,0.775,251,1.608,252,0.81,253,0.883,254,0.883,255,0.81,256,0.883,257,0.81,258,0.883,259,0.81,260,0.883,261,0.846,262,0.81,263,0.81,264,0.883,265,0.81,266,0.883,267,0.775,268,0.883,269,0.81,270,0.883,271,0.81,272,0.883,273,0.81,274,0.883,275,0.81,276,0.883,277,0.81,278,0.81,279,0.883,280,0.81,281,0.883,282,0.81,283,0.883,284,0.81,285,0.846,286,0.81,287,0.883,288,0.81,289,0.883,290,0.81,291,0.883,292,0.81,293,0.846,294,0.81,295,0.81,296,0.883,297,0.81,298,0.81,299,0.883,300,0.883,301,0.883]],["title/interfaces/Association.html",[0,0.991,302,2.066]],["body/interfaces/Association.html",[0,1.548,2,2.046,3,0.174,4,0.174,5,0.152,7,0.089,8,0.873,10,2.415,12,2.262,14,1.021,15,0.248,16,0.017,17,0.701,18,0.912,20,1.701,22,0.278,23,2.262,27,0.301,77,0.012,78,0.012,124,0.557,302,3.228,303,3.065,304,5.567,305,6.35,306,6.208,307,4.924,308,2.525,309,4.32,310,4.636,311,4.636,312,4.636,313,4.636,314,4.636,315,4.636,316,4.636,317,4.636,318,4.636,319,3.919,320,4.671,321,4.636,322,5.111,323,3.314,324,2.199,325,2.262,326,3.314,327,4.043,328,4.043,329,4.043,330,4.043,331,4.043,332,4.043,333,4.043,334,4.043,335,4.043,336,4.043,337,4.043,338,4.043,339,4.043,340,4.043,341,4.043,342,4.043,343,4.043,344,4.043,345,4.043,346,3.314,347,3.065,348,4.043,349,4.043,350,3.314,351,4.043]],["title/injectables/AssociationService.html",[79,0.643,352,2.339]],["body/injectables/AssociationService.html",[3,0.159,4,0.159,5,0.139,7,0.082,8,0.825,10,1.806,13,1.086,14,0.879,15,0.227,16,0.017,17,0.562,19,0.421,20,1.56,22,0.159,27,0.282,77,0.012,78,0.012,79,0.95,81,1.493,86,0.535,87,1.344,90,2.61,95,0.502,96,0.692,102,0.758,103,0.716,105,0.621,115,0.673,118,0.357,121,1.493,122,1.43,123,0.381,124,0.8,129,0.918,146,3.47,159,2.314,160,3.413,167,2.15,168,1.591,171,1.97,173,3.239,174,2.314,302,2.314,324,1.731,350,3.038,352,3.453,353,3.324,354,6.494,355,5.652,356,6.722,357,6.722,358,5.652,359,5.652,360,3.038,361,3.539,362,5.652,363,5.652,364,4.288,365,5.451,366,3.051,367,4.288,368,4.288,369,5.652,370,4.288,371,5.652,372,4.288,373,4.886,374,3.038,375,2.314,376,2.81,377,3.038,378,2.81,379,3.038,380,2.81,381,3.324,382,3.324,383,3.038,384,4.288,385,5.652,386,4.288,387,3.324,388,3.324,389,4.288,390,4.288,391,3.038,392,4.288,393,4.288,394,3.324,395,3.324,396,4.288,397,3.324,398,3.324,399,4.288,400,4.288,401,4.288,402,3.707,403,4.288,404,4.288,405,4.288,406,4.288,407,4.288,408,4.288,409,4.382]],["title/injectables/AuthGuard.html",[79,0.643,410,2.967]],["body/injectables/AuthGuard.html",[3,0.202,4,0.202,5,0.177,7,0.104,8,0.959,15,0.23,16,0.017,19,0.4,22,0.202,27,0.228,77,0.013,78,0.013,79,1.104,81,1.894,86,0.622,90,2.73,95,0.484,96,0.694,102,0.613,103,0.58,105,0.484,118,0.453,121,1.894,122,1.814,123,0.484,124,0.648,129,0.683,132,0.833,151,2.072,184,1.814,410,5.094,411,4.704,412,4.229,413,4.514,414,6.338,415,4.704,416,5.441,417,5.441,418,4.704,419,6.571,420,3.118,421,3.855,422,5.441,423,5.68,424,4.704,425,4.704]],["title/interfaces/AuthManagement.html",[0,0.991,426,2.712]],["body/interfaces/AuthManagement.html",[0,1.684,2,2.342,3,0.199,4,0.199,5,0.174,7,0.102,8,0.949,10,2.078,15,0.247,16,0.017,17,0.578,18,0.911,22,0.282,23,2.589,27,0.273,77,0.013,78,0.013,115,0.637,167,2.036,180,1.289,181,3.793,188,3.793,307,4.61,309,3.508,426,4.61,427,3.793,428,5.166,429,5.166,430,6.303,431,3.793,432,3.728,433,4.628,434,4.628,435,3.27,436,4.628,437,4.628,438,3.793,439,5.043,440,4.628,441,4.628,442,4.628,443,4.628,444,4.628,445,4.61,446,4.628]],["title/injectables/AuthService.html",[79,0.643,412,2.066]],["body/injectables/AuthService.html",[3,0.136,4,0.136,5,0.119,7,0.07,13,1.122,14,0.707,15,0.223,16,0.017,18,0.83,19,0.417,22,0.136,27,0.287,77,0.01,78,0.01,79,0.855,81,1.277,86,0.481,87,1.345,90,2.846,95,0.452,96,0.71,102,0.772,103,0.73,105,0.661,115,0.816,118,0.305,121,1.277,122,1.223,123,0.326,124,0.893,129,0.882,146,3.399,151,2.245,159,2.746,160,1.98,167,2.801,171,1.686,173,2.914,174,1.98,176,2.844,177,2.599,184,2.208,185,4.397,186,3.496,187,2.844,188,4.978,190,3.333,324,1.123,374,2.599,379,2.599,383,2.599,398,2.844,412,2.746,413,3.926,420,2.102,425,3.171,428,4.137,429,4.467,431,2.599,432,3.346,438,2.599,445,4.137,447,2.844,448,5.087,449,6.305,450,6.305,451,6.305,452,5.087,453,6.305,454,6.305,455,5.087,456,5.087,457,3.669,458,7.027,459,3.669,460,5.087,461,3.669,462,3.669,463,3.669,464,3.669,465,5.087,466,3.669,467,3.669,468,5.839,469,3.669,470,3.669,471,3.669,472,3.669,473,5.087,474,3.669,475,5.087,476,5.134,477,3.669,478,3.669,479,4.397,480,3.171,481,3.171,482,3.171,483,2.844,484,4.888,485,4.888,486,3.171,487,3.171,488,1.395,489,3.669,490,3.669,491,2.102,492,3.669,493,3.669,494,3.669,495,5.087,496,5.087,497,5.087,498,3.669,499,3.669,500,3.669,501,3.171,502,3.669,503,3.171,504,3.171,505,1.46,506,3.669,507,5.087,508,3.669,509,3.669,510,3.669,511,3.171,512,3.669,513,5.087,514,3.669,515,3.669,516,3.669]],["title/components/AutocompleteComponent.html",[200,0.09,244,0.736]],["body/components/AutocompleteComponent.html",[1,1.961,3,0.101,4,0.101,5,0.088,7,0.052,8,0.598,10,1.975,13,1.298,14,0.859,15,0.235,16,0.017,17,0.242,18,0.875,19,0.39,20,1.49,22,0.101,24,0.416,25,0.324,27,0.277,40,2.264,46,0.947,47,0.657,48,1.535,53,2.09,75,2.09,77,0.008,78,0.008,86,0.388,87,1.329,90,1.792,95,0.364,96,0.708,100,2.083,102,0.697,103,0.659,105,0.612,109,1.106,115,0.736,118,0.226,119,0.704,120,0.546,123,0.242,124,0.843,126,1.008,129,0.805,132,1.054,168,1.153,180,0.5,183,4.74,186,2.798,197,1.272,200,0.116,201,0.523,202,0.822,203,0.57,204,0.57,205,0.57,206,0.57,208,0.57,209,1.63,210,1.63,211,0.859,212,0.859,213,1.033,214,1.643,215,0.859,217,0.859,229,0.457,230,0.833,238,0.57,239,0.859,240,0.859,241,0.57,242,0.57,243,0.57,244,1.054,245,0.57,246,0.523,247,0.57,248,0.57,249,0.523,250,0.5,251,1.485,252,0.523,253,0.57,254,0.57,255,0.523,256,0.57,257,0.523,258,0.57,259,0.523,260,0.57,261,0.546,262,0.523,263,0.523,264,0.57,265,0.523,266,0.57,267,0.5,268,0.57,269,0.523,270,0.57,271,0.523,272,0.57,273,0.523,274,0.57,275,0.523,276,0.57,277,0.523,278,0.523,279,0.57,280,0.523,281,0.57,282,0.523,283,0.57,284,0.523,285,0.546,286,0.523,287,0.57,288,0.523,289,0.57,290,0.523,291,0.57,292,0.523,293,0.546,294,0.523,295,1.054,296,0.57,297,0.523,298,0.523,299,0.57,300,0.57,301,0.57,308,1.468,352,1.662,375,1.468,488,1.558,517,2.351,518,1.792,519,4.096,520,4.927,521,4.096,522,4.259,523,6.414,524,4.096,525,4.096,526,4.25,527,5.483,528,5.483,529,4.096,530,1.679,531,5.483,532,4.096,533,3.175,534,1.254,535,1.574,536,3.819,537,5.084,538,2.72,539,3.35,540,2.553,541,2.44,542,4.096,543,3.541,544,2.72,545,2.72,546,2.72,547,2.72,548,3.541,549,3.541,550,2.72,551,4.096,552,2.72,553,4.096,554,2.72,555,2.72,556,2.72,557,2.72,558,4.096,559,2.72,560,2.902,561,2.72,562,2.72,563,4.096,564,2.72,565,3.541,566,2.72,567,4.927,568,2.108,569,3.541,570,4.096,571,2.72,572,2.72,573,1.74,574,2.108,575,3.175,576,1.662,577,2.806,578,2.72,579,2.72,580,2.108,581,1.134,582,1.083,583,1.25,584,2.108,585,1.927,586,4.096,587,2.72,588,2.72,589,2.72,590,2.72,591,2.798,592,2.652,593,4.927,594,1.782,595,2.72,596,4.927,597,3.541,598,2.351,599,2.351,600,3.175,601,2.902,602,3.541,603,2.72,604,3.541,605,2.108,606,2.72,607,2.902,608,1.927,609,2.72,610,2.72,611,2.72,612,2.108,613,2.351,614,2.72,615,2.72,616,2.351,617,2.72,618,2.72,619,1.315,620,2.72,621,3.491,622,1.558,623,2.108,624,1.662,625,2.351,626,1.927,627,2.108]],["title/components/DataquestHeaderComponent.html",[200,0.09,246,0.736]],["body/components/DataquestHeaderComponent.html",[3,0.123,4,0.123,5,0.108,7,0.063,8,0.691,13,0.637,14,0.921,15,0.18,16,0.017,17,0.567,18,0.373,19,0.361,22,0.123,25,0.394,27,0.232,47,0.967,60,2.416,77,0.01,78,0.01,86,0.448,87,1.201,95,0.421,96,0.672,102,0.373,103,0.353,105,0.589,115,0.564,118,0.276,123,0.294,124,0.394,126,1.173,129,0.693,132,0.725,151,1.622,168,0.933,180,0.609,184,1.578,193,2.024,197,1.283,200,0.13,201,0.637,202,0.95,203,0.694,204,0.694,205,0.694,206,0.694,208,0.694,209,1.658,210,1.658,211,0.992,212,0.992,213,1.158,214,1.842,215,0.992,217,0.992,229,0.557,230,1.014,238,0.694,239,0.992,240,0.992,241,0.694,242,0.694,243,0.694,244,0.637,245,0.694,246,1.158,247,1.463,248,0.694,249,0.637,250,0.609,251,1.545,252,0.637,253,0.694,254,0.694,255,0.637,256,0.694,257,0.637,258,0.694,259,0.637,260,0.694,261,0.665,262,0.637,263,0.637,264,0.694,265,0.637,266,0.694,267,0.609,268,0.694,269,0.637,270,0.694,271,0.637,272,0.694,273,0.637,274,0.694,275,0.637,276,0.694,277,0.637,278,0.637,279,0.694,280,0.637,281,0.694,282,0.637,283,0.694,284,0.637,285,0.665,286,0.637,287,0.694,288,0.637,289,0.694,290,0.637,291,0.694,292,0.637,293,0.665,294,0.637,295,0.637,296,0.694,297,0.637,298,0.637,299,0.694,300,0.694,301,0.694,324,1.45,435,2.892,488,1.801,518,2.01,530,1.845,534,1.45,540,2.717,541,2.596,573,1.333,575,3.67,581,1.974,582,1.319,583,1.522,585,2.347,619,2.29,624,3.375,628,6.231,629,5.107,630,2.864,631,2.417,632,5.524,633,4.734,634,4.776,635,6.027,636,5.21,637,5.21,638,4.27,639,4.27,640,5.524,641,3.313,642,3.579,643,5.901,644,4.734,645,3.313,646,3.313,647,3.313,648,3.313,649,3.313,650,3.313,651,3.313,652,2.347,653,2.864,654,3.313,655,3.313,656,3.313,657,2.864,658,4.093,659,2.425,660,2.864,661,4.093,662,4.093,663,2.864,664,2.864,665,3.354,666,3.67,667,2.864,668,3.354,669,4.776,670,5.21,671,2.568,672,1.522,673,1.898,674,1.449,675,1.449,676,2.171,677,2.347,678,3.67,679,2.864,680,2.864,681,2.864,682,2.347,683,1.898,684,2.568,685,2.568,686,3.354,687,3.67,688,3.313,689,2.347,690,2.568,691,2.864,692,4.27,693,3.313,694,2.347,695,2.568,696,3.313,697,3.453,698,3.62,699,5.524,700,3.313,701,3.313,702,3.313,703,2.864,704,4.734,705,4.734,706,4.734,707,4.734,708,2.024,709,1.898,710,1.898,711,2.347,712,2.347]],["title/components/DateDataTypeComponent.html",[200,0.09,249,0.736]],["body/components/DateDataTypeComponent.html",[3,0.113,4,0.113,5,0.099,7,0.058,13,0.584,14,0.856,15,0.226,16,0.017,17,0.548,18,0.853,19,0.349,22,0.113,24,0.466,25,0.362,27,0.27,46,1.012,47,0.714,48,1.599,77,0.009,78,0.009,86,0.421,87,1.132,95,0.27,96,0.678,100,1.812,102,0.653,103,0.617,105,0.591,109,1.201,115,0.689,118,0.253,119,0.787,120,0.611,123,0.27,124,0.901,126,1.065,129,0.774,132,1.083,180,0.559,190,2.916,197,1.401,200,0.123,201,0.584,202,0.893,203,0.637,204,0.637,205,0.637,206,0.637,208,0.637,209,1.646,210,1.646,211,0.933,212,0.933,213,1.103,215,0.933,217,0.933,229,0.511,238,0.637,239,0.933,240,0.933,241,0.637,242,0.637,243,0.637,244,0.584,245,0.637,246,0.584,247,0.637,248,0.637,249,1.113,250,1.384,251,1.519,252,0.584,253,0.637,254,0.637,255,0.584,256,0.637,257,0.584,258,0.637,259,0.584,260,0.637,261,0.611,262,0.584,263,0.584,264,0.637,265,0.584,266,0.637,267,0.559,268,0.637,269,0.584,270,0.637,271,0.584,272,0.637,273,0.584,274,1.103,275,0.584,276,0.637,277,0.584,278,0.584,279,0.637,280,0.584,281,0.637,282,0.584,283,0.637,284,0.584,285,0.611,286,0.584,287,0.637,288,0.584,289,0.637,290,0.584,291,0.637,292,0.584,293,0.611,294,0.584,295,0.584,296,0.637,297,0.584,298,0.584,299,0.637,300,0.637,301,0.637,320,3.729,324,0.931,366,3.681,505,2.305,530,1.773,534,1.362,535,1.681,541,2.449,573,1.63,577,3.093,581,1.268,582,1.21,583,1.397,591,2.271,592,2.546,713,6.266,714,5.619,715,1.33,716,2.302,717,2.302,718,1.947,719,5.792,720,5.792,721,4.45,722,2.801,723,4.45,724,2.271,725,2.155,726,2.402,727,1.641,728,1.858,729,2.629,730,3.041,731,4.45,732,6.163,733,3.041,734,5.263,735,2.357,736,1.742,737,4.45,738,3.041,739,2.271,740,2.415,741,2.629,742,1.552,743,3.041,744,3.041,745,1.993,746,3.041,747,2.629,748,3.041,749,3.041,750,5.792,751,1.742,752,3.041,753,3.041,754,3.041,755,3.847,756,3.847,757,3.041,758,3.041,759,3.041,760,3.041,761,1.552,762,3.041,763,3.041,764,4.45,765,3.041,766,3.041,767,1.858,768,2.155,769,3.041,770,3.041,771,2.629,772,4.549,773,2.629,774,1.858,775,3.041,776,4.45,777,1.993,778,3.041,779,4.45,780,1.993,781,3.041,782,3.041,783,3.041,784,4.45,785,3.041,786,3.847,787,2.629]],["title/components/DetailPage.html",[200,0.09,255,0.736]],["body/components/DetailPage.html",[3,0.163,4,0.163,5,0.142,7,0.083,8,0.836,13,0.841,16,0.016,17,0.389,19,0.399,22,0.163,25,0.521,27,0.24,47,0.92,77,0.012,78,0.012,86,0.542,95,0.568,96,0.605,105,0.389,115,0.521,118,0.364,119,1.133,123,0.389,126,1.246,132,0.877,168,1.232,180,0.805,197,1.349,200,0.169,201,0.841,202,1.15,203,0.918,204,0.918,205,0.918,206,0.918,208,0.918,209,1.689,210,1.689,211,1.201,212,1.201,213,1.339,214,2.13,215,1.201,217,1.201,229,0.736,230,1.34,238,0.918,239,1.201,240,1.201,241,0.918,242,0.918,243,0.918,244,0.841,245,0.918,246,0.841,247,0.918,248,0.918,249,0.841,250,0.805,251,1.617,252,1.303,253,0.918,254,0.918,255,1.303,256,0.918,257,0.841,258,0.918,259,0.841,260,0.918,261,0.879,262,0.841,263,0.841,264,0.918,265,0.841,266,0.918,267,0.805,268,0.918,269,0.841,270,0.918,271,0.841,272,0.918,273,0.841,274,0.918,275,0.841,276,0.918,277,0.841,278,0.841,279,0.918,280,0.841,281,0.918,282,0.841,283,0.918,284,0.841,285,0.879,286,0.841,287,0.918,288,0.841,289,0.918,290,0.841,291,0.918,292,0.841,293,0.879,294,0.841,295,0.841,296,0.918,297,0.841,298,0.841,299,0.918,300,0.918,301,0.918,488,2.179,518,2.324,530,2.075,582,1.743,788,3.784,789,4.442,790,5.522,791,6.388,792,5.73,793,5.73,794,4.378,795,4.378,796,4.378]],["title/components/DetailedFormComponent.html",[200,0.09,252,0.736]],["body/components/DetailedFormComponent.html",[3,0.104,4,0.104,5,0.091,7,0.053,8,0.609,13,0.536,14,0.867,15,0.091,16,0.017,17,0.444,19,0.385,22,0.104,24,0.427,25,0.595,27,0.21,33,3.183,47,0.891,77,0.009,78,0.009,86,0.395,87,1.137,95,0.371,96,0.681,102,0.314,103,0.297,105,0.625,115,0.77,118,0.232,120,0.559,123,0.248,124,0.792,126,1.021,129,0.812,132,0.639,151,1.468,167,1.587,168,0.784,180,0.512,184,2.08,190,2.733,197,1.236,200,0.146,201,0.536,202,0.837,203,0.584,204,0.584,205,0.584,206,0.584,208,0.584,209,1.634,210,1.634,211,0.874,212,0.874,213,1.048,214,1.667,215,0.874,217,0.874,229,0.468,230,0.853,238,0.584,239,0.874,240,0.874,241,0.584,242,0.584,243,0.584,244,0.536,245,0.584,246,1.067,247,0.584,248,0.584,249,0.536,250,0.767,251,1.492,252,1.067,253,1.394,254,0.584,255,0.536,256,0.584,257,0.536,258,0.584,259,0.536,260,0.584,261,0.559,262,0.536,263,0.536,264,0.584,265,0.536,266,0.584,267,0.512,268,0.584,269,0.536,270,0.584,271,0.536,272,0.584,273,0.536,274,0.874,275,0.536,276,0.584,277,0.536,278,0.536,279,0.584,280,0.536,281,0.584,282,0.536,283,0.584,284,0.536,285,0.559,286,1.199,287,0.584,288,0.536,289,0.584,290,0.536,291,0.584,292,0.536,293,0.559,294,0.536,295,0.536,296,0.584,297,0.536,298,0.536,299,0.584,300,0.584,301,0.584,325,2.685,346,3.542,347,3.894,505,1.109,540,2.574,541,2.373,573,0.784,581,1.162,582,2.916,583,1.281,585,1.974,622,1.597,627,2.16,629,1.974,631,2.187,638,3.932,639,3.932,659,1.902,665,3.542,668,2.955,672,2.867,674,2.187,675,2.187,684,2.16,685,2.16,687,4.303,692,1.974,694,1.974,697,2.39,709,2.39,710,2.39,725,1.974,755,2.409,756,2.409,771,2.409,772,3.606,773,2.409,774,1.702,797,6.281,798,2.409,799,4.999,800,4.171,801,4.798,802,4.798,803,5.392,804,6.238,805,4.303,806,4.798,807,5.55,808,5.55,809,5.55,810,3.705,811,5.59,812,4.171,813,2.787,814,2.018,815,2.787,816,2.787,817,2.787,818,2.787,819,2.787,820,2.787,821,2.787,822,2.787,823,2.787,824,2.787,825,2.16,826,2.409,827,2.16,828,2.787,829,2.787,830,2.409,831,2.787,832,2.787,833,2.409,834,2.787,835,2.787,836,4.999,837,2.409,838,2.787,839,2.787,840,2.787,841,4.171,842,2.787,843,4.171,844,3.234,845,6.238,846,4.999,847,4.999,848,4.999,849,6.65,850,5.392,851,4.835,852,3.542,853,3.542,854,4.999,855,4.999,856,4.999,857,2.864,858,4.999,859,4.999,860,2.418,861,2.787,862,2.787,863,2.787,864,2.787,865,4.171,866,2.409,867,2.787,868,2.787,869,2.409,870,2.409,871,4.171,872,2.787,873,2.787,874,2.787,875,4.171,876,2.409,877,2.409,878,2.787,879,2.787,880,2.787,881,2.787,882,2.787,883,2.787,884,5.55,885,4.171,886,4.171,887,4.171,888,4.171,889,4.171,890,2.955,891,4.171,892,4.171,893,3.606,894,4.171,895,4.171,896,2.955,897,4.171,898,4.171,899,2.787,900,2.409,901,1.826,902,2.409,903,3.606,904,2.787,905,2.787,906,4.171,907,2.787,908,2.409,909,2.787,910,2.787,911,2.787,912,2.16,913,2.787,914,2.787]],["title/injectables/DetailedFormService.html",[79,0.643,541,1.456]],["body/injectables/DetailedFormService.html",[3,0.104,4,0.104,5,0.091,7,0.053,8,0.61,14,1.087,15,0.225,16,0.017,17,0.371,19,0.399,20,1.016,22,0.104,24,0.428,25,0.743,26,1.112,27,0.249,40,2.974,77,0.009,78,0.009,79,0.702,81,0.972,82,4.682,86,0.395,87,1.366,90,2.881,95,0.371,96,0.723,102,0.671,103,0.634,105,0.66,115,0.865,118,0.232,120,0.561,121,0.972,122,0.931,123,0.248,124,0.81,126,0.514,129,0.92,132,0.991,151,1.832,167,2.113,184,1.853,222,3.493,223,3.493,229,0.469,324,1.911,375,1.507,504,2.414,540,2.576,541,1.589,582,3.05,631,1.828,638,3.937,639,3.937,642,3.493,659,1.589,671,3.239,672,1.283,673,2.394,674,1.828,675,1.828,683,2.394,761,2.554,801,4.803,802,4.803,803,4.803,805,4.307,810,3.577,814,3.402,826,2.414,827,2.165,860,2.021,866,2.414,869,2.414,870,2.414,896,3.937,915,2.414,916,3.88,917,5.006,918,5.006,919,3.547,920,5.006,921,5.556,922,5.556,923,4.178,924,5.006,925,4.803,926,4.178,927,5.556,928,5.556,929,5.556,930,4.803,931,2.414,932,4.178,933,2.792,934,2.792,935,4.178,936,2.792,937,2.792,938,2.792,939,2.792,940,2.792,941,2.792,942,2.792,943,2.792,944,4.178,945,2.792,946,5.006,947,2.792,948,5.556,949,5.556,950,5.556,951,2.792,952,2.792,953,4.178,954,2.792,955,4.178,956,2.792,957,2.792,958,2.792,959,2.792,960,2.792,961,2.792,962,2.792,963,2.792,964,2.792,965,1.978,966,2.96,967,2.792,968,2.792,969,2.792,970,2.792,971,2.414,972,5.556,973,3.612,974,3.612,975,3.612,976,2.414,977,4.178,978,4.178,979,4.178,980,5.006,981,5.949,982,5.006,983,2.792,984,4.178,985,2.792,986,5.006,987,2.792,988,2.792,989,5.556,990,2.165,991,2.414,992,2.165,993,2.414,994,2.792,995,2.792,996,4.178,997,2.792,998,2.792,999,5.006,1000,2.792,1001,2.792,1002,5.006,1003,2.792,1004,2.792,1005,2.792,1006,2.792,1007,2.165,1008,2.414,1009,2.792,1010,2.792,1011,1.507,1012,2.792,1013,2.165,1014,2.792,1015,2.792,1016,2.792,1017,2.792,1018,2.792,1019,2.792,1020,3.612,1021,2.792,1022,2.792,1023,2.792,1024,3.612,1025,2.414,1026,2.792,1027,2.792,1028,2.792]],["title/injectables/DraftService.html",[79,0.643,223,2.066]],["body/injectables/DraftService.html",[3,0.14,4,0.14,5,0.122,7,0.131,8,0.754,13,0.721,15,0.23,16,0.017,17,0.525,18,0.718,19,0.391,20,1.879,22,0.14,24,0.574,26,1.493,27,0.289,40,3.171,77,0.011,78,0.011,79,0.868,81,1.306,86,0.489,87,1.314,90,2.871,95,0.459,96,0.713,102,0.778,103,0.735,105,0.657,115,0.903,118,0.312,120,0.753,121,1.306,122,1.251,123,0.333,124,0.897,129,0.838,168,1.056,223,2.789,250,1.3,308,2.789,324,1.149,361,3.338,375,2.025,376,2.458,505,2.534,539,3.889,543,5.108,584,2.908,601,2.658,602,3.243,604,3.243,616,3.243,761,3.015,786,5.771,814,3.729,908,3.243,916,4.935,930,4.466,965,2.658,966,3.66,990,5.175,1025,3.243,1029,3.243,1030,5.166,1031,4.466,1032,6.366,1033,5.503,1034,6.366,1035,5.166,1036,5.166,1037,6.366,1038,6.366,1039,3.243,1040,5.166,1041,5.166,1042,3.752,1043,4.466,1044,3.752,1045,3.752,1046,3.752,1047,3.752,1048,5.166,1049,3.752,1050,5.166,1051,3.752,1052,3.752,1053,3.752,1054,5.166,1055,3.752,1056,3.752,1057,4.466,1058,4.466,1059,3.752,1060,3.752,1061,3.752,1062,5.166,1063,3.752,1064,3.752,1065,3.752,1066,3.752,1067,3.752,1068,3.752,1069,3.752,1070,3.752,1071,5.166,1072,3.752,1073,3.243,1074,3.752,1075,3.752,1076,6.366,1077,3.752,1078,5.166,1079,3.752,1080,3.752,1081,3.752,1082,3.752,1083,3.752,1084,3.752,1085,3.752,1086,3.752]],["title/components/DraftsPage.html",[200,0.09,257,0.736]],["body/components/DraftsPage.html",[3,0.13,4,0.13,5,0.113,7,0.093,15,0.185,16,0.017,17,0.548,19,0.393,22,0.13,24,0.534,25,0.415,26,1.387,27,0.272,47,0.989,77,0.01,78,0.01,86,0.464,87,1.186,95,0.436,96,0.615,102,0.64,103,0.605,105,0.548,115,0.415,118,0.29,120,0.7,123,0.31,124,0.676,126,1.134,129,0.437,132,0.87,151,2.033,180,0.641,184,2.248,197,1.296,200,0.133,201,0.67,202,0.985,203,0.73,204,0.73,205,0.73,206,0.73,208,0.73,209,1.664,210,1.664,211,1.029,212,1.029,213,1.191,214,1.894,215,1.029,217,1.029,223,3.739,224,4.418,229,0.586,230,1.067,232,2.469,237,3.012,238,0.73,239,1.029,240,1.029,241,0.73,242,0.73,243,0.73,244,0.67,245,0.73,246,0.67,247,0.73,248,0.73,249,0.67,250,0.641,251,1.559,252,0.67,253,0.73,254,0.73,255,0.67,256,0.73,257,1.185,258,0.73,259,0.67,260,0.73,261,0.7,262,0.67,263,0.67,264,0.73,265,0.67,266,0.73,267,0.641,268,0.73,269,0.67,270,0.73,271,0.67,272,0.73,273,0.67,274,0.73,275,0.67,276,0.73,277,0.67,278,0.67,279,0.73,280,0.67,281,0.73,282,0.67,283,0.73,284,0.67,285,0.7,286,0.67,287,0.73,288,0.67,289,0.73,290,0.67,291,0.73,292,0.67,293,0.7,294,0.67,295,0.67,296,0.73,297,0.67,298,0.67,299,0.73,300,0.73,301,0.73,324,1.502,413,3.969,420,1.997,435,2.129,540,2.757,541,2.635,581,1.453,582,1.387,583,1.601,619,1.686,631,2.147,659,2.16,665,2.469,668,2.469,672,2.255,673,1.997,674,2.147,675,2.147,676,2.283,677,2.469,682,2.469,683,1.997,708,2.129,709,2.812,710,2.812,711,2.469,712,2.469,814,2.747,851,3.804,860,1.686,890,3.477,896,2.469,990,3.804,991,3.012,1011,1.881,1031,4.242,1033,5.33,1043,4.242,1073,4.242,1087,3.012,1088,5.68,1089,4.907,1090,4.242,1091,5.33,1092,3.012,1093,4.908,1094,3.485,1095,3.485,1096,3.485,1097,4.907,1098,3.485,1099,3.012,1100,3.485,1101,3.485,1102,3.012,1103,3.012,1104,3.485,1105,3.485,1106,3.012,1107,3.012,1108,3.012,1109,3.485,1110,3.485,1111,2.701,1112,3.485,1113,3.485,1114,2.701,1115,3.012,1116,3.485,1117,3.485,1118,3.012,1119,3.012,1120,2.701,1121,3.012,1122,2.469,1123,3.012,1124,2.701,1125,3.012,1126,3.012,1127,3.012,1128,4.907,1129,4.907,1130,4.907,1131,4.907,1132,2.701,1133,2.701]],["title/components/DrawingPadDataTypeComponent.html",[200,0.09,259,0.736]],["body/components/DrawingPadDataTypeComponent.html",[3,0.113,4,0.113,5,0.098,7,0.058,8,0.647,14,0.616,15,0.23,16,0.017,17,0.269,18,0.5,19,0.349,22,0.113,24,0.463,25,0.36,27,0.242,46,1.009,47,0.712,48,1.596,77,0.009,78,0.009,86,0.42,87,0.923,95,0.466,96,0.703,100,1.809,102,0.5,103,0.473,105,0.605,109,1.197,115,0.811,118,0.252,119,0.784,120,0.608,123,0.269,124,0.528,126,1.253,132,1.043,180,0.557,197,1.411,200,0.123,201,0.582,202,0.89,203,0.634,204,0.634,205,0.634,206,0.634,208,0.634,209,1.646,210,1.646,211,0.93,212,0.93,213,1.1,215,0.93,217,0.93,229,0.509,238,0.634,239,0.93,240,0.93,241,0.634,242,0.634,243,0.634,244,0.582,245,0.634,246,0.582,247,0.634,248,0.634,249,0.582,250,0.557,251,1.518,252,0.582,253,0.634,254,0.634,255,0.582,256,0.634,257,0.582,258,0.634,259,1.111,260,1.428,261,1.595,262,0.582,263,0.582,264,0.634,265,0.582,266,0.634,267,0.557,268,0.634,269,0.582,270,0.634,271,0.582,272,0.634,273,0.582,274,0.634,275,0.582,276,0.634,277,0.582,278,0.582,279,0.634,280,0.582,281,0.634,282,0.582,283,0.634,284,0.582,285,0.608,286,0.582,287,0.634,288,0.582,289,0.634,290,0.582,291,0.634,292,0.582,293,0.608,294,0.582,295,0.582,296,0.634,297,0.582,298,0.582,299,0.634,300,0.634,301,0.634,505,1.205,534,1.358,535,1.677,568,2.347,573,1.627,574,2.347,619,2.145,621,4.094,622,2.541,623,3.438,624,3.207,625,3.834,626,3.142,627,4.069,666,3.438,686,2.145,697,3.007,698,3.787,715,1.324,717,2.296,718,1.94,726,1.634,727,1.634,728,1.849,735,2.347,736,1.734,740,2.84,741,2.617,745,1.983,751,1.734,761,2.263,901,1.983,1107,3.834,1134,6.465,1135,5.797,1136,5.779,1137,5.249,1138,6.428,1139,5.779,1140,4.435,1141,5.779,1142,5.779,1143,5.779,1144,5.779,1145,4.435,1146,5.779,1147,2.906,1148,2.145,1149,3.027,1150,4.435,1151,3.027,1152,1.983,1153,2.617,1154,3.027,1155,4.435,1156,3.027,1157,5.249,1158,4.435,1159,2.617,1160,3.027,1161,3.027,1162,3.027,1163,4.435,1164,3.027,1165,3.027,1166,3.027,1167,3.027,1168,3.027,1169,3.027,1170,5.779,1171,3.027,1172,3.027,1173,3.027,1174,3.027,1175,3.027,1176,4.435,1177,5.249,1178,3.027,1179,4.435,1180,3.027,1181,4.435,1182,3.834,1183,3.834,1184,4.435,1185,3.027,1186,3.027,1187,3.027,1188,3.027,1189,3.027,1190,3.027,1191,4.435,1192,4.435,1193,2.145,1194,3.027,1195,3.027]],["title/components/EmailDataTypeComponent.html",[200,0.09,262,0.736]],["body/components/EmailDataTypeComponent.html",[3,0.145,4,0.145,5,0.127,7,0.074,14,0.738,15,0.227,16,0.017,17,0.347,18,0.598,19,0.367,22,0.145,24,0.598,25,0.465,27,0.253,46,1.159,47,0.852,48,1.734,77,0.011,78,0.011,86,0.502,95,0.536,96,0.676,100,1.966,102,0.44,103,0.416,105,0.536,109,1.433,115,0.632,118,0.325,119,1.011,120,0.784,123,0.347,126,1.19,129,0.49,132,1.113,180,1.337,197,1.412,200,0.141,201,0.75,202,1.066,203,0.818,204,0.818,205,0.818,206,0.818,208,0.818,209,1.677,210,1.677,211,1.113,212,1.113,213,1.264,215,1.113,217,1.113,229,0.656,238,0.818,239,1.113,240,1.113,241,0.818,242,0.818,243,0.818,244,0.75,245,0.818,246,0.75,247,0.818,248,0.818,249,0.75,250,0.718,251,1.589,252,0.75,253,0.818,254,0.818,255,0.75,256,0.818,257,0.75,258,0.818,259,0.75,260,0.818,261,0.784,262,1.244,263,0.75,264,0.818,265,0.75,266,0.818,267,0.718,268,0.818,269,0.75,270,0.818,271,0.75,272,0.818,273,0.75,274,0.818,275,0.75,276,0.818,277,0.75,278,0.75,279,0.818,280,0.75,281,0.818,282,0.75,283,0.818,284,0.75,285,0.784,286,0.75,287,0.818,288,0.75,289,0.818,290,0.75,291,0.818,292,0.75,293,0.784,294,0.75,295,0.75,296,0.818,297,0.75,298,0.75,299,0.818,300,0.818,301,0.818,488,2.019,518,2.194,530,1.982,534,1.625,535,1.927,573,1.822,715,1.707,716,2.638,717,2.638,718,2.322,722,3.131,724,2.708,726,2.865,727,2.107,728,2.385,736,2.237,739,2.708,740,1.628,751,2.237,1147,2.558,1152,2.558,1196,6.285,1197,5.636,1198,3.026]],["title/interfaces/Form.html",[0,0.991,25,0.456]],["body/interfaces/Form.html",[0,1.824,1,1.603,2,1.761,3,0.15,4,0.15,5,0.131,6,2.173,7,0.077,8,0.791,9,2.307,10,2.434,11,3.756,12,2.964,13,1.042,14,0.951,15,0.259,16,0.017,17,0.716,18,0.916,19,0.228,20,2.489,21,2.46,22,0.287,23,1.948,24,0.616,25,0.645,26,2.609,27,0.295,28,4.005,29,4.005,30,4.005,31,4.005,32,3.538,33,3.345,34,4.005,35,4.18,36,4.18,37,3.491,38,4.004,39,3.693,40,2.816,41,2.173,42,2.46,43,3.538,44,2.46,45,2.46,46,0.774,47,0.87,48,1.346,49,3.312,50,2.46,51,2.46,52,3.312,53,2.766,54,2.46,55,3.345,56,2.46,57,2.307,58,2.46,59,2.926,60,2.766,61,2.307,62,2.46,63,2.46,64,2.46,65,2.46,66,2.46,67,2.46,68,3.106,69,2.307,70,3.744,71,2.054,72,3.308,73,2.307,74,3.106,75,2.054,76,2.46,77,0.011,78,0.011]],["title/components/FormListComponent.html",[200,0.09,263,0.736]],["body/components/FormListComponent.html",[3,0.12,4,0.12,5,0.105,7,0.061,13,1.044,14,0.912,15,0.22,16,0.017,17,0.286,19,0.4,22,0.12,24,0.492,25,0.863,26,1.28,27,0.264,47,0.744,48,1.151,77,0.009,78,0.009,86,0.439,87,1.275,95,0.412,96,0.668,102,0.613,103,0.579,105,0.528,115,0.647,118,0.268,120,0.646,123,0.286,124,0.383,126,1.093,132,0.91,151,1.595,168,1.529,180,0.591,184,1.545,197,1.275,200,0.127,201,0.618,202,0.93,203,0.674,204,0.674,205,0.674,206,0.674,208,0.674,209,1.654,210,1.654,211,0.971,212,0.971,213,1.139,214,1.812,215,0.971,217,0.971,222,3.652,223,3.652,224,4.434,229,0.541,230,0.985,231,2.279,232,2.279,238,0.674,239,0.971,240,0.971,241,0.674,242,0.674,243,0.674,244,0.618,245,0.674,246,0.618,247,0.674,248,0.674,249,0.618,250,0.591,251,1.536,252,0.618,253,0.674,254,0.674,255,0.618,256,0.674,257,0.618,258,0.674,259,0.618,260,0.674,261,0.646,262,0.618,263,1.143,264,0.674,265,0.618,266,0.674,267,0.591,268,0.674,269,0.618,270,0.674,271,0.618,272,0.674,273,0.618,274,0.674,275,0.618,276,0.674,277,0.618,278,0.618,279,0.674,280,0.618,281,0.674,282,0.618,283,0.674,284,0.618,285,0.646,286,0.618,287,0.674,288,0.618,289,0.674,290,0.618,291,0.674,292,0.618,293,0.646,294,0.618,295,0.618,296,0.674,297,0.618,298,0.618,299,0.674,300,0.674,301,0.674,324,2.01,413,3.877,420,1.843,530,1.82,534,1.419,540,2.693,541,2.574,573,1.774,575,4.609,581,1.341,582,1.28,583,1.478,585,3.85,619,1.556,631,1.407,659,1.223,672,2.13,673,1.843,674,1.407,675,1.407,683,1.843,708,1.965,709,2.655,710,2.655,711,2.279,712,2.279,740,1.341,810,3.407,814,3.048,825,2.493,851,3.593,860,1.556,890,3.284,896,2.279,901,2.107,916,4.212,919,3.85,973,4.006,974,2.78,975,2.78,1011,1.736,1093,4.794,1099,2.78,1115,2.78,1118,2.78,1119,2.78,1120,2.493,1121,2.78,1122,2.279,1123,2.78,1124,2.493,1125,2.78,1126,2.78,1127,2.78,1132,2.493,1133,2.493,1199,6.191,1200,5.074,1201,2.78,1202,4.635,1203,5.433,1204,4.635,1205,4.635,1206,4.635,1207,5.946,1208,4.213,1209,3.216,1210,4.635,1211,4.635,1212,3.216,1213,3.216,1214,3.216,1215,4.635,1216,3.216,1217,4.635,1218,3.216,1219,3.216,1220,3.216,1221,4.635,1222,3.216,1223,3.216,1224,3.216,1225,2.78,1226,4.635,1227,4.635,1228,4.635,1229,4.635,1230,4.635,1231,2.78]],["title/injectables/FormService.html",[79,0.643,810,2.193]],["body/injectables/FormService.html",[3,0.119,4,0.119,5,0.104,7,0.061,15,0.22,16,0.017,18,0.362,19,0.4,22,0.119,24,0.491,25,0.872,27,0.227,37,3.531,38,3.649,39,3.206,46,1.408,77,0.009,78,0.009,79,0.778,81,1.117,86,0.438,87,1.275,90,1.974,95,0.528,96,0.596,102,0.612,103,0.578,105,0.601,109,1.868,115,0.551,118,0.267,120,0.644,121,1.117,122,1.07,123,0.285,124,0.805,126,0.59,129,0.849,146,3.27,152,3.999,159,2.497,160,3.649,167,2.259,171,1.474,173,2.651,174,1.732,186,1.637,250,1.243,360,2.273,361,3.348,366,1.732,376,2.102,377,3.844,378,2.102,379,2.273,380,2.102,381,2.487,383,2.273,387,2.487,388,2.487,391,2.273,394,2.487,395,2.487,397,2.487,398,2.487,491,1.838,505,2.16,576,1.96,789,2.487,810,2.651,814,3.543,1057,4.691,1058,2.773,1182,5.134,1208,5.589,1232,2.487,1233,5.939,1234,4.626,1235,5.313,1236,4.626,1237,4.626,1238,5.939,1239,5.939,1240,5.939,1241,4.691,1242,4.626,1243,3.208,1244,3.586,1245,4.626,1246,4.626,1247,4.626,1248,5.67,1249,4.626,1250,4.626,1251,4.843,1252,3.208,1253,6.921,1254,5.939,1255,4.626,1256,3.586,1257,3.999,1258,4.626,1259,3.586,1260,4.626,1261,4.626,1262,4.626,1263,4.691,1264,4.626,1265,4.604,1266,4.626,1267,5.939,1268,4.626,1269,3.208,1270,4.626,1271,3.208,1272,3.208,1273,7.05,1274,4.626,1275,4.206,1276,4.626,1277,4.626,1278,4.626,1279,4.626,1280,3.208,1281,4.626,1282,3.586,1283,2.487,1284,2.273,1285,6.296,1286,3.208,1287,3.208,1288,4.626,1289,3.208,1290,5.426,1291,2.773,1292,3.208,1293,2.487,1294,3.208,1295,3.208,1296,3.208,1297,3.208,1298,3.999,1299,3.208,1300,3.208,1301,3.208,1302,4.626,1303,3.208,1304,3.208,1305,3.208,1306,3.208,1307,4.691,1308,3.208,1309,3.208,1310,3.208,1311,3.208,1312,3.208,1313,3.208,1314,2.487,1315,4.626,1316,3.208,1317,3.208,1318,3.208,1319,3.208,1320,2.773,1321,2.773,1322,2.487,1323,2.773]],["title/components/FormsPage.html",[200,0.09,265,0.736]],["body/components/FormsPage.html",[3,0.16,4,0.16,5,0.14,7,0.082,8,0.827,15,0.184,16,0.017,17,0.383,19,0.407,22,0.16,24,0.659,25,0.513,27,0.266,47,0.91,77,0.012,78,0.012,86,0.536,95,0.383,96,0.6,102,0.485,103,0.459,105,0.383,115,0.513,118,0.358,120,0.865,123,0.383,126,1.238,132,0.868,180,0.792,197,1.345,200,0.149,201,0.828,202,1.138,203,0.903,204,0.903,205,0.903,206,0.903,208,0.903,209,1.688,210,1.688,211,1.188,212,1.188,213,1.328,214,2.113,215,1.188,217,1.188,229,0.724,230,1.318,238,0.903,239,1.188,240,1.188,241,0.903,242,0.903,243,0.903,244,0.828,245,0.903,246,0.828,247,0.903,248,0.903,249,0.828,250,0.792,251,1.614,252,0.828,253,0.903,254,0.903,255,0.828,256,0.903,257,0.828,258,0.903,259,0.828,260,0.903,261,0.865,262,0.828,263,1.294,264,0.903,265,1.294,266,0.903,267,0.792,268,0.903,269,0.828,270,0.903,271,0.828,272,0.903,273,0.828,274,0.903,275,0.828,276,0.903,277,0.828,278,0.828,279,0.903,280,0.828,281,0.903,282,0.828,283,0.903,284,0.828,285,0.865,286,0.828,287,0.903,288,0.828,289,0.903,290,0.828,291,0.903,292,0.828,293,0.865,294,0.828,295,0.828,296,0.903,297,0.828,298,0.828,299,0.903,300,0.903,301,0.903,742,2.197,810,4.116,814,2.742,825,3.338,931,3.723,1200,3.051,1208,5.09,1225,3.723,1324,3.723,1325,6.337,1326,5.669,1327,6.734,1328,5.669,1329,4.306,1330,3.723,1331,3.723,1332,4.306]],["title/components/HomePage.html",[200,0.09,267,0.704]],["body/components/HomePage.html",[3,0.122,4,0.122,5,0.107,7,0.062,8,0.686,15,0.195,16,0.017,17,0.291,18,0.676,19,0.386,22,0.122,25,0.39,27,0.23,47,1.06,77,0.01,78,0.01,86,0.445,87,1.197,95,0.417,96,0.681,102,0.369,103,0.349,105,0.587,115,0.756,118,0.273,123,0.291,124,0.559,126,1.103,129,0.411,132,0.719,151,1.939,180,0.603,184,2,193,2.87,197,1.28,200,0.129,201,0.63,202,0.943,203,0.687,204,0.687,205,0.687,206,0.687,208,0.687,209,1.656,210,1.663,211,0.985,212,0.985,213,1.151,215,0.985,217,0.985,221,2.541,222,3.566,229,0.551,231,2.322,238,0.687,239,0.985,240,0.985,241,0.687,242,0.687,243,0.687,244,0.63,245,0.687,246,0.63,247,0.687,248,0.687,249,0.63,250,0.603,251,1.541,252,0.63,253,0.687,254,0.687,255,0.63,256,0.687,257,0.63,258,0.687,259,0.63,260,0.687,261,0.658,262,0.63,263,0.63,264,0.687,265,0.63,266,0.687,267,1.103,268,0.687,269,0.63,270,0.687,271,0.63,272,0.687,273,0.63,274,0.687,275,0.63,276,0.687,277,0.63,278,0.63,279,0.687,280,0.63,281,0.687,282,0.63,283,0.687,284,0.63,285,0.658,286,0.63,287,0.687,288,0.63,289,0.687,290,0.63,291,0.687,292,0.63,293,0.658,294,0.63,295,0.63,296,0.687,297,0.63,298,0.63,299,0.687,300,0.687,301,0.687,412,3.673,421,2.322,429,4.498,431,2.322,432,3.436,435,2.87,476,3.642,482,2.833,522,5.488,530,1.836,539,4.157,540,2.709,568,2.541,569,4.061,574,2.541,584,2.541,613,2.833,619,2.656,622,1.878,624,2.002,631,2.624,659,1.787,674,2.055,675,2.055,676,3.078,677,3.328,678,2.541,682,3.328,686,2.322,689,2.322,690,2.541,692,2.322,694,2.322,697,2.692,703,2.833,708,2.002,900,2.833,901,2.147,1013,2.541,1102,4.061,1103,4.061,1106,2.833,1193,2.322,1333,2.833,1334,5.491,1335,5.491,1336,4.698,1337,4.747,1338,6.607,1339,5.998,1340,5.998,1341,4.649,1342,4.698,1343,3.277,1344,3.277,1345,3.277,1346,3.277,1347,3.277,1348,3.277,1349,4.698,1350,3.277,1351,3.277,1352,2.833,1353,3.277,1354,3.277,1355,3.277,1356,4.698,1357,3.277,1358,4.698,1359,4.257,1360,3.277,1361,3.277,1362,3.642,1363,4.698,1364,3.277,1365,4.698,1366,6.349,1367,5.488,1368,2.833,1369,3.277,1370,3.277,1371,3.277,1372,4.698,1373,4.698,1374,4.061,1375,4.698,1376,4.698,1377,4.698,1378,4.698,1379,4.698,1380,4.698,1381,4.061,1382,3.277,1383,3.277,1384,3.277,1385,3.277,1386,4.698,1387,5.491,1388,2.833]],["title/components/LoginPage.html",[200,0.09,269,0.736]],["body/components/LoginPage.html",[3,0.182,4,0.129,5,0.113,7,0.066,8,0.716,13,0.669,15,0.16,16,0.017,17,0.309,19,0.382,22,0.129,25,0.734,27,0.238,47,0.911,59,1.879,60,1.777,77,0.01,78,0.01,86,0.464,87,1.084,95,0.436,96,0.583,100,1.598,102,0.393,103,0.371,105,0.436,115,0.414,118,0.29,119,0.901,123,0.309,124,0.676,126,1.133,132,0.751,151,1.667,168,0.98,180,1.133,181,3.475,184,2.397,197,1.296,200,0.133,201,0.669,202,0.985,203,0.73,204,0.73,205,0.73,206,0.73,208,0.73,209,1.664,210,1.664,211,1.028,212,1.028,213,1.19,214,1.893,215,1.028,217,1.028,229,0.824,230,1.066,238,0.73,239,1.028,240,1.028,241,0.73,242,0.73,243,0.73,244,0.669,245,0.73,246,0.669,247,0.73,248,0.73,249,0.669,250,0.64,251,1.559,252,0.669,253,0.73,254,0.73,255,0.669,256,0.73,257,0.669,258,0.73,259,0.669,260,0.73,261,0.699,262,0.669,263,0.669,264,0.73,265,0.669,266,0.73,267,0.64,268,0.73,269,1.185,270,0.73,271,0.669,272,0.73,273,0.669,274,0.73,275,0.669,276,0.73,277,0.669,278,0.669,279,0.73,280,0.669,281,0.73,282,0.669,283,0.73,284,0.669,285,0.699,286,0.669,287,0.73,288,0.669,289,0.73,290,0.669,291,0.73,292,0.669,293,0.699,294,0.669,295,0.669,296,0.73,297,0.669,298,0.669,299,0.73,300,0.73,301,0.73,412,3.738,421,2.467,428,5.01,488,1.865,505,2.453,518,2.065,530,1.887,540,2.757,573,1.38,576,3.765,577,2.842,619,2.746,621,2.467,622,3.531,624,3.468,626,2.467,631,2.145,659,2.159,673,2.81,674,2.145,675,2.145,683,2.81,687,2.699,689,2.467,692,4.022,694,2.467,695,2.699,697,1.995,698,2.281,709,1.995,710,1.995,716,2.483,790,4.908,837,3.01,852,4.022,853,2.467,857,1.995,860,2.372,876,3.01,877,4.908,902,4.239,912,3.802,1011,1.879,1193,4.022,1367,4.239,1388,4.239,1389,3.01,1390,5.677,1391,4.904,1392,3.482,1393,5.986,1394,3.482,1395,4.904,1396,3.482,1397,3.482,1398,4.904,1399,5.328,1400,4.904,1401,4.904,1402,3.482,1403,1.995,1404,3.01,1405,3.01,1406,3.01,1407,3.01,1408,3.482,1409,3.482,1410,5.677,1411,3.482,1412,2.281,1413,3.482,1414,3.482,1415,3.482,1416,4.904,1417,4.904,1418,4.904,1419,3.482,1420,3.482,1421,3.482,1422,5.677,1423,3.482,1424,2.699,1425,2.699,1426,3.482,1427,3.482,1428,3.482,1429,3.482,1430,3.482,1431,3.482,1432,3.01]],["title/components/MoneyDataTypeComponent.html",[200,0.09,271,0.736]],["body/components/MoneyDataTypeComponent.html",[3,0.114,4,0.114,5,0.1,7,0.058,8,0.653,13,0.86,14,0.622,15,0.227,16,0.017,17,0.272,18,0.786,19,0.387,22,0.114,24,0.469,25,0.365,27,0.244,46,1.016,47,0.718,48,1.603,77,0.009,78,0.009,86,0.423,87,0.787,95,0.398,96,0.67,100,1.817,102,0.504,103,0.477,105,0.517,109,1.208,115,0.365,118,0.255,119,0.793,120,0.615,123,0.272,124,0.83,126,1.069,129,0.562,132,1.085,148,5.581,151,1.706,167,1.702,168,1.26,180,0.564,184,1.938,197,1.399,200,0.124,201,0.589,202,0.898,203,0.642,204,0.642,205,0.642,206,0.642,208,0.642,209,1.647,210,1.647,211,0.938,212,0.938,213,1.108,215,0.938,217,0.938,229,0.515,230,0.938,238,0.642,239,0.938,240,1.108,241,0.642,242,0.642,243,0.642,244,0.589,245,0.642,246,0.589,247,0.642,248,0.642,249,0.589,250,0.564,251,1.522,252,0.589,253,0.642,254,0.642,255,0.589,256,0.642,257,0.589,258,0.642,259,0.589,260,0.642,261,0.615,262,0.589,263,0.589,264,0.642,265,0.589,266,0.642,267,0.564,268,0.642,269,0.589,270,0.642,271,1.117,272,1.433,273,0.589,274,0.642,275,0.589,276,0.642,277,0.589,278,0.589,279,0.642,280,0.589,281,0.642,282,0.589,283,0.642,284,0.589,285,0.615,286,0.589,287,0.642,288,0.589,289,0.642,290,0.589,291,0.642,292,0.589,293,0.615,294,0.589,295,0.589,296,0.642,297,0.589,298,0.589,299,0.642,300,0.642,301,0.642,534,1.37,535,1.689,540,2.57,573,1.636,577,3.099,591,2.697,592,2.557,594,2.008,631,1.958,659,2.536,672,2.671,674,1.958,675,1.958,715,1.34,716,2.312,717,2.312,718,1.958,722,2.812,724,2.283,739,2.283,740,2.424,767,1.872,774,2.734,777,4.051,780,4.051,857,1.756,860,2.165,1011,1.654,1147,2.008,1152,2.008,1153,2.649,1403,1.756,1412,2.008,1424,4.506,1433,6.206,1434,5.565,1435,5.286,1436,5.286,1437,5.286,1438,5.813,1439,4.506,1440,2.171,1441,6.667,1442,2.649,1443,2.649,1444,2.649,1445,3.064,1446,2.649,1447,3.064,1448,5.286,1449,5.286,1450,5.286,1451,4.475,1452,4.475,1453,4.475,1454,4.475,1455,4.475,1456,2.649,1457,3.064,1458,2.649,1459,2.649,1460,2.649,1461,3.064,1462,2.376,1463,2.376,1464,4.475,1465,5.286,1466,5.286,1467,3.868,1468,3.064,1469,2.376,1470,2.376,1471,3.469,1472,4.38,1473,3.171,1474,2.376,1475,2.376,1476,2.376,1477,3.171,1478,2.376,1479,5.286,1480,4.475,1481,5.286,1482,2.171,1483,2.171,1484,2.171]],["title/components/MonthDataTypeComponent.html",[200,0.09,273,0.736]],["body/components/MonthDataTypeComponent.html",[3,0.143,4,0.143,5,0.125,7,0.073,14,0.729,15,0.226,16,0.017,17,0.341,18,0.591,19,0.364,22,0.143,24,0.587,25,0.457,27,0.251,46,1.149,47,0.842,48,1.725,77,0.011,78,0.011,86,0.496,95,0.531,96,0.673,100,1.955,102,0.432,103,0.409,105,0.531,109,1.416,115,0.624,118,0.319,119,0.993,120,0.77,123,0.341,124,0.624,126,1.182,129,0.481,132,1.109,180,0.705,197,1.41,200,0.14,201,0.737,202,1.053,203,0.804,204,0.804,205,0.804,206,0.804,208,0.804,209,1.675,210,1.675,211,1.099,212,1.099,213,1.253,215,1.099,217,1.099,229,0.645,238,0.804,239,1.099,240,1.099,241,0.804,242,0.804,243,0.804,244,0.737,245,0.804,246,0.737,247,0.804,248,0.804,249,0.737,250,1.182,251,1.585,252,0.737,253,0.804,254,0.804,255,0.737,256,0.804,257,0.737,258,0.804,259,0.737,260,0.804,261,0.77,262,0.737,263,0.737,264,0.804,265,0.737,266,0.804,267,0.705,268,0.804,269,0.737,270,0.804,271,0.737,272,0.804,273,1.235,274,1.518,275,0.737,276,0.804,277,0.737,278,0.737,279,0.804,280,0.737,281,0.804,282,0.737,283,0.804,284,0.737,285,0.77,286,0.737,287,0.804,288,0.737,289,0.804,290,0.737,291,0.804,292,0.737,293,0.77,294,0.737,295,0.737,296,0.804,297,0.737,298,0.737,299,0.804,300,0.804,301,0.804,488,1.995,505,2.088,518,2.174,530,1.967,534,1.606,535,1.909,573,1.809,577,2.614,715,1.678,716,2.614,717,2.614,718,2.294,722,3.108,726,2.831,727,2.07,728,2.343,736,2.198,740,1.599,787,3.316,1147,2.513,1152,2.513,1485,6.259,1486,5.612,1487,5.245,1488,5.245,1489,3.835,1490,3.835,1491,3.835,1492,3.835,1493,3.835]],["title/components/MultipleComponent.html",[200,0.09,275,0.736]],["body/components/MultipleComponent.html",[1,1.225,3,0.114,4,0.114,5,0.1,7,0.059,8,0.655,10,2.295,13,1.432,14,1.042,15,0.231,16,0.017,17,0.593,18,0.799,19,0.351,22,0.114,24,0.471,25,0.366,27,0.287,46,1.018,47,0.72,48,1.605,53,1.57,77,0.009,78,0.009,86,0.425,87,1.137,95,0.471,96,0.7,100,2.174,102,0.729,103,0.689,105,0.62,109,1.211,115,0.831,118,0.256,119,0.796,120,0.618,123,0.273,124,0.873,126,1.071,129,0.777,132,1.068,168,0.866,180,0.566,197,1.264,200,0.124,201,0.591,202,0.901,203,0.645,204,0.645,205,0.645,206,0.645,208,0.645,209,1.648,210,1.648,211,0.941,212,0.941,213,1.11,214,1.766,215,0.941,217,0.941,229,0.517,230,0.942,238,0.645,239,0.941,240,1.11,241,0.645,242,0.645,243,0.645,244,0.591,245,0.645,246,0.591,247,0.645,248,0.645,249,0.591,250,0.566,251,1.523,252,0.591,253,0.645,254,0.645,255,0.591,256,0.645,257,0.591,258,0.645,259,0.591,260,0.645,261,0.618,262,0.591,263,0.591,264,0.645,265,0.591,266,0.645,267,0.566,268,0.645,269,0.591,270,0.645,271,0.591,272,0.645,273,0.591,274,0.645,275,1.119,276,0.645,277,0.591,278,0.591,279,0.645,280,0.591,281,0.645,282,0.591,283,0.645,284,0.591,285,0.618,286,0.591,287,0.645,288,0.591,289,0.645,290,0.591,291,0.645,292,0.591,293,0.618,294,0.591,295,0.591,296,0.645,297,0.591,298,0.591,299,0.645,300,0.645,301,0.645,324,1.783,488,1.707,491,2.571,518,1.927,526,4.514,530,1.783,533,3.479,534,1.374,535,1.692,573,1.639,577,2.547,591,2.29,592,2.171,594,2.016,600,2.385,605,2.385,607,4.126,608,2.18,612,2.385,716,2.317,740,2.582,747,3.879,761,1.57,767,1.879,768,3.18,1494,2.659,1495,4.488,1496,5.298,1497,4.488,1498,3.879,1499,4.488,1500,5.824,1501,4.488,1502,3.879,1503,4.488,1504,4.488,1505,3.076,1506,3.076,1507,3.076,1508,3.879,1509,3.076,1510,4.58,1511,4.488,1512,3.076,1513,3.076,1514,4.729,1515,3.076,1516,4.488,1517,3.076,1518,3.879,1519,3.076,1520,3.076,1521,4.488,1522,3.076,1523,4.488,1524,3.076,1525,4.58,1526,3.076,1527,4.488,1528,3.076,1529,3.076,1530,2.659,1531,3.076,1532,4.58,1533,2.659,1534,2.659,1535,3.076,1536,3.879,1537,3.879,1538,2.659,1539,2.659,1540,2.659,1541,2.659,1542,2.659,1543,2.659,1544,3.879,1545,3.879]],["title/components/NumberDataTypeComponent.html",[200,0.09,277,0.736]],["body/components/NumberDataTypeComponent.html",[3,0.128,4,0.128,5,0.112,7,0.065,14,0.674,15,0.224,16,0.017,17,0.626,18,0.728,19,0.347,22,0.128,24,0.525,25,0.408,27,0.257,46,1.082,47,0.779,48,1.665,77,0.01,78,0.01,86,0.459,95,0.305,96,0.667,100,1.888,102,0.547,103,0.517,105,0.544,109,1.31,115,0.408,118,0.285,119,0.888,120,0.689,123,0.305,124,0.799,126,1.126,129,0.609,132,1.079,151,1.653,167,1.846,180,0.631,184,2.041,197,1.403,200,0.132,201,0.659,202,0.974,203,0.719,204,0.719,205,0.719,206,0.719,208,0.719,209,1.662,210,1.662,211,1.017,212,1.017,213,1.18,215,1.017,217,1.017,229,0.577,238,0.719,239,1.017,240,1.18,241,0.719,242,0.719,243,0.719,244,0.659,245,0.719,246,0.659,247,0.719,248,0.719,249,0.659,250,0.631,251,1.554,252,0.659,253,0.719,254,0.719,255,0.659,256,0.719,257,0.659,258,0.719,259,0.659,260,0.719,261,0.689,262,0.659,263,0.659,264,0.719,265,0.659,266,0.719,267,0.631,268,0.719,269,0.659,270,0.719,271,0.659,272,0.719,273,0.659,274,0.719,275,0.659,276,0.719,277,1.177,278,0.659,279,0.719,280,0.659,281,0.719,282,0.659,283,0.719,284,0.659,285,0.689,286,0.659,287,0.719,288,0.659,289,0.719,290,0.659,291,0.719,292,0.659,293,0.689,294,0.659,295,0.659,296,0.719,297,0.659,298,0.659,299,0.719,300,0.719,301,0.719,518,1.248,534,1.486,535,1.799,540,2.67,573,1.723,577,3.177,591,2.873,592,2.724,594,2.248,631,2.123,659,2.623,672,2.23,674,2.123,675,2.123,715,1.501,716,2.463,717,2.463,718,2.123,722,2.961,724,2.476,729,2.966,736,2.781,739,2.476,740,2.553,742,1.75,767,2.096,768,3.438,774,2.965,777,4.395,780,4.395,857,1.966,860,2.347,1011,1.852,1403,1.966,1412,2.248,1439,4.746,1440,2.431,1442,2.966,1443,2.966,1462,2.659,1463,2.659,1469,2.659,1470,2.659,1471,3.762,1472,4.577,1473,3.438,1474,2.659,1475,2.659,1476,2.659,1477,3.438,1478,2.659,1482,2.431,1483,2.431,1484,2.431,1546,6.193,1547,5.553,1548,5.293,1549,2.966,1550,2.659,1551,3.43,1552,2.966]],["title/injectables/OfflineManagerService.html",[79,0.643,1553,2.712]],["body/injectables/OfflineManagerService.html",[0,1.088,3,0.156,4,0.156,5,0.137,7,0.08,10,1.782,15,0.204,16,0.017,17,0.373,18,0.804,19,0.419,22,0.156,26,1.672,27,0.262,32,2.268,33,2.846,77,0.011,78,0.011,79,0.937,81,1.463,86,0.528,87,1.255,90,2.595,95,0.496,96,0.631,102,0.706,103,0.667,105,0.556,118,0.35,121,1.463,122,1.401,123,0.373,124,0.664,129,0.895,146,3.521,149,4.725,151,1.838,160,3.746,167,2.121,171,1.931,173,2.407,174,2.268,197,1.3,229,0.706,325,2.032,361,3.451,380,2.753,505,1.672,659,2.121,965,2.977,966,3.951,1039,3.632,1093,5.157,1111,4.323,1114,4.323,1235,3.951,1256,3.257,1259,3.257,1265,3.257,1282,3.257,1283,3.257,1284,2.977,1425,4.323,1553,3.951,1554,4.917,1555,4.917,1556,2.977,1557,5.765,1558,5.412,1559,5.577,1560,4.201,1561,4.201,1562,4.201,1563,5.237,1564,4.201,1565,5.412,1566,4.821,1567,4.201,1568,3.632,1569,3.257,1570,4.821,1571,3.632,1572,3.632,1573,6,1574,3.632,1575,3.632,1576,3.632,1577,4.821,1578,3.632,1579,3.632,1580,3.632,1581,4.821,1582,4.821,1583,4.821,1584,3.632,1585,3.632,1586,3.632,1587,3.632,1588,3.632,1589,4.821,1590,4.821,1591,3.632,1592,3.632,1593,3.632,1594,3.632,1595,3.632,1596,3.951,1597,3.632,1598,3.632,1599,4.821,1600,3.632,1601,3.257,1602,3.632,1603,3.632,1604,3.632,1605,3.632,1606,3.632,1607,3.257]],["title/components/OpenComponent.html",[200,0.09,278,0.736]],["body/components/OpenComponent.html",[3,0.135,4,0.135,5,0.118,7,0.069,14,0.701,15,0.189,16,0.017,17,0.449,18,0.569,19,0.439,22,0.135,24,0.556,25,0.432,27,0.212,46,1.116,47,1.007,48,1.695,77,0.01,78,0.01,86,0.478,95,0.516,96,0.646,100,1.922,105,0.449,109,1.363,115,0.432,118,0.302,119,0.939,120,0.728,123,0.322,126,1.154,129,0.455,132,1.094,180,0.928,197,1.404,200,0.136,201,0.697,202,1.013,203,0.761,204,0.761,205,0.761,206,0.761,208,0.761,209,1.669,210,1.669,211,1.058,212,1.058,213,1.217,214,1.935,215,1.058,217,1.058,229,0.61,230,1.111,238,0.761,239,1.058,240,1.058,241,0.761,242,0.761,243,0.761,244,1.206,245,0.761,246,0.697,247,0.761,248,0.761,249,1.206,250,0.928,251,1.57,252,0.697,253,0.761,254,0.761,255,0.697,256,0.761,257,0.697,258,0.761,259,1.206,260,1.058,261,1.165,262,1.206,263,0.697,264,0.761,265,0.697,266,0.761,267,0.667,268,0.761,269,0.697,270,0.761,271,1.206,272,1.058,273,1.206,274,1.058,275,0.697,276,0.761,277,1.206,278,1.206,279,0.761,280,1.206,281,1.058,282,1.206,283,1.058,284,1.206,285,1.013,286,0.697,287,0.761,288,0.697,289,0.761,290,0.697,291,0.761,292,1.206,293,1.165,294,1.206,295,0.697,296,0.761,297,0.697,298,0.697,299,0.761,300,0.761,301,0.761,488,1.92,518,2.112,530,1.921,534,1.546,535,1.854,536,3.913,573,1.766,581,1.513,642,1.958,652,2.571,714,2.813,1135,2.813,1197,2.813,1434,2.813,1486,2.813,1547,2.813,1608,3.137,1609,5.805,1610,5.048,1611,5.425,1612,5.048,1613,3.628,1614,3.628,1615,3.628,1616,3.628,1617,2.813,1618,2.813,1619,6.418,1620,3.576,1621,2.813,1622,2.813,1623,3.628]],["title/components/PercentageDataTypeComponent.html",[200,0.09,280,0.736]],["body/components/PercentageDataTypeComponent.html",[3,0.129,4,0.129,5,0.113,7,0.066,14,0.679,15,0.225,16,0.017,17,0.308,18,0.731,19,0.348,22,0.129,24,0.53,25,0.412,27,0.258,46,1.088,47,0.784,48,1.67,77,0.01,78,0.01,86,0.462,95,0.308,96,0.668,100,1.893,102,0.55,103,0.52,105,0.546,109,1.318,115,0.412,118,0.288,119,0.896,120,0.695,123,0.308,124,0.772,126,1.13,129,0.613,132,1.081,151,1.661,180,0.636,184,2.049,197,1.404,200,0.133,201,0.665,202,0.98,203,0.725,204,0.725,205,0.725,206,0.725,208,0.725,209,1.663,210,1.663,211,1.024,212,1.024,213,1.186,215,1.024,217,1.024,229,0.582,238,0.725,239,1.024,240,1.186,241,0.725,242,0.725,243,0.725,244,0.665,245,0.725,246,0.665,247,0.725,248,0.725,249,0.665,250,0.636,251,1.557,252,0.665,253,0.725,254,0.725,255,0.665,256,0.725,257,0.665,258,0.725,259,0.665,260,0.725,261,0.695,262,0.665,263,0.665,264,0.725,265,0.665,266,0.725,267,0.636,268,0.725,269,0.665,270,0.725,271,0.665,272,0.725,273,0.665,274,0.725,275,0.665,276,0.725,277,0.665,278,0.665,279,0.725,280,1.181,281,1.48,282,0.665,283,0.725,284,0.665,285,0.695,286,0.665,287,0.725,288,0.665,289,0.725,290,0.665,291,0.725,292,0.665,293,0.695,294,0.665,295,0.665,296,0.725,297,0.665,298,0.665,299,0.725,300,0.725,301,0.725,518,1.259,534,1.495,535,1.808,540,2.677,573,1.73,577,3.024,591,2.492,592,2.362,631,2.136,659,2.629,672,2.244,674,2.136,675,2.136,715,1.514,716,2.475,717,2.475,718,2.136,722,2.973,724,2.492,727,2.636,728,2.114,739,2.492,740,2.563,742,1.766,751,1.983,767,2.114,768,3.46,774,2.983,777,4.408,780,4.408,857,1.983,860,2.362,1011,1.868,1403,1.983,1412,2.267,1439,4.765,1440,2.452,1462,2.682,1463,2.682,1469,2.682,1470,2.682,1471,3.785,1472,4.592,1473,3.46,1474,2.682,1475,2.682,1476,2.682,1477,3.46,1478,2.682,1482,2.452,1483,2.452,1484,2.452,1548,5.313,1549,2.991,1552,2.991,1621,5.564,1624,6.205,1625,3.46,1626,3.46,1627,3.46,1628,3.46]],["title/components/PhoneDataTypeComponent.html",[200,0.09,282,0.736]],["body/components/PhoneDataTypeComponent.html",[3,0.125,4,0.125,5,0.109,7,0.064,8,0.696,11,3.471,13,0.644,14,0.842,15,0.24,16,0.017,17,0.609,18,0.538,19,0.377,22,0.125,24,0.513,25,0.399,27,0.279,46,1.068,47,0.766,48,1.652,77,0.01,78,0.01,86,0.452,87,0.839,95,0.298,96,0.705,100,2.005,102,0.683,103,0.645,105,0.591,109,1.288,115,0.721,118,0.279,119,0.867,120,0.672,123,0.298,124,0.568,126,1.114,129,0.42,132,1.072,151,1.631,168,0.943,171,1.539,180,0.616,193,2.046,197,1.413,200,0.13,201,0.644,202,0.958,203,0.702,204,0.702,205,0.702,206,0.702,208,0.702,209,1.659,210,1.659,211,1,212,1,213,1.165,214,1.853,215,1,217,1,229,0.563,230,1.025,238,0.702,239,1,240,1,241,0.702,242,0.702,243,0.702,244,0.644,245,0.702,246,0.644,247,0.702,248,0.702,249,0.644,250,0.616,251,1.548,252,0.644,253,0.702,254,0.702,255,0.644,256,0.702,257,0.644,258,0.702,259,0.644,260,0.702,261,0.672,262,0.644,263,0.644,264,0.702,265,0.644,266,0.702,267,0.616,268,0.702,269,0.644,270,0.702,271,0.644,272,0.702,273,0.644,274,0.702,275,0.644,276,0.702,277,0.644,278,0.644,279,0.702,280,0.644,281,0.702,282,1.164,283,1.467,284,0.644,285,0.672,286,0.644,287,0.702,288,0.644,289,0.702,290,0.644,291,0.702,292,0.644,293,0.672,294,0.644,295,0.644,296,0.702,297,0.644,298,0.644,299,0.702,300,0.702,301,0.702,324,1.461,488,1.815,505,1.333,518,2.022,530,1.855,534,1.461,535,1.775,540,2.649,573,1.705,577,2.65,591,1.709,592,1.62,594,2.195,608,2.373,689,2.373,690,3.699,691,2.895,715,1.465,717,2.431,718,2.087,722,2.308,724,2.435,726,1.808,727,1.808,735,2.596,736,1.919,739,2.435,740,1.397,742,1.709,1108,4.125,1148,2.373,1403,1.919,1440,2.373,1514,4.292,1550,2.596,1622,5.815,1629,6.484,1630,5.558,1631,6.057,1632,5.558,1633,5.558,1634,4.771,1635,5.558,1636,4.125,1637,3.349,1638,3.349,1639,3.349,1640,4.771,1641,2.895,1642,3.349,1643,3.349,1644,5.558,1645,3.349,1646,3.349,1647,3.349,1648,3.349,1649,3.349,1650,3.349,1651,3.349,1652,4.771,1653,3.349,1654,3.349]],["title/components/PhotoDataTypeComponent.html",[200,0.09,284,0.736]],["body/components/PhotoDataTypeComponent.html",[3,0.139,4,0.139,5,0.122,7,0.071,14,0.717,15,0.224,16,0.017,17,0.333,19,0.378,22,0.139,24,0.573,25,0.446,27,0.247,46,1.135,47,0.828,48,1.712,77,0.011,78,0.011,86,0.488,95,0.333,96,0.669,100,1.941,102,0.422,103,0.399,105,0.525,109,1.393,115,0.614,118,0.312,119,0.969,120,0.752,123,0.333,126,1.17,129,0.47,132,1.102,180,0.689,193,2.288,197,1.408,200,0.138,201,0.72,202,1.036,203,0.785,204,0.785,205,0.785,206,0.785,208,0.785,209,1.672,210,1.672,211,1.081,212,1.081,213,1.237,215,1.081,217,1.081,229,0.629,238,0.785,239,1.081,240,1.081,241,0.785,242,0.785,243,0.785,244,0.72,245,0.785,246,0.72,247,0.785,248,0.785,249,0.72,250,0.689,251,1.578,252,0.72,253,0.785,254,0.785,255,0.72,256,0.785,257,0.72,258,0.785,259,0.72,260,0.785,261,0.752,262,0.72,263,0.72,264,0.785,265,0.72,266,0.785,267,0.689,268,0.785,269,0.72,270,0.785,271,0.72,272,0.785,273,0.72,274,0.785,275,0.72,276,0.785,277,0.72,278,0.72,279,0.785,280,0.72,281,0.785,282,0.72,283,0.785,284,1.223,285,1.484,286,0.72,287,0.785,288,0.72,289,0.785,290,0.72,291,0.785,292,0.72,293,0.752,294,0.72,295,0.72,296,0.785,297,0.72,298,0.72,299,0.785,300,0.785,301,0.785,488,1.962,518,2.147,530,1.948,534,1.58,535,1.886,573,1.79,581,1.562,619,2.855,621,3.656,622,2.146,623,2.903,624,2.288,626,3.656,686,2.653,697,2.956,698,2.454,715,1.638,717,2.582,718,2.257,726,2.021,727,2.021,742,1.911,751,2.146,1148,3.656,1193,2.653,1444,3.237,1456,3.237,1618,5.581,1636,3.237,1655,6.223,1656,6.361,1657,5.499,1658,3.745,1659,4.886,1660,3.745,1661,3.745,1662,3.745,1663,3.745,1664,3.745,1665,3.745,1666,3.745,1667,4.46,1668,3.745]],["title/injectables/PhotoService.html",[79,0.643,1659,2.712]],["body/injectables/PhotoService.html",[3,0.205,4,0.246,5,0.179,7,0.105,16,0.017,19,0.417,22,0.205,77,0.014,78,0.014,79,1.114,81,1.921,82,4.338,86,0.627,90,2.583,95,0.631,96,0.627,105,0.49,118,0.459,121,1.921,122,1.839,123,0.49,124,0.789,129,0.693,151,2.084,167,2.52,176,4.277,177,3.909,184,1.839,285,1.479,903,4.769,1657,6.367,1659,4.694,1669,4.769,1670,5.517,1671,5.517,1672,5.517,1673,5.517,1674,5.517,1675,4.769,1676,5.517,1677,5.517,1678,4.769,1679,5.517,1680,5.517,1681,5.517,1682,5.517,1683,5.517,1684,5.517,1685,5.517,1686,5.517]],["title/interfaces/Producer.html",[0,0.991,308,2.066]],["body/interfaces/Producer.html",[0,1.486,2,1.919,3,0.163,4,0.163,5,0.143,7,0.084,8,0.837,10,2.384,12,2.122,14,1.091,15,0.256,16,0.017,17,0.69,18,0.913,20,1.596,22,0.274,23,2.122,27,0.241,77,0.012,78,0.012,124,0.522,302,2.368,303,2.875,304,4.448,305,5.528,306,4.961,307,3.108,308,3.097,309,4.731,310,5.456,311,5.456,312,5.456,313,5.456,314,5.456,315,5.456,316,5.456,317,5.456,318,5.456,319,4.612,320,5.116,321,5.456,322,5.456,323,3.108,324,2.155,325,2.122,326,3.108,327,3.793,328,3.793,329,3.793,330,3.793,331,3.793,332,3.793,333,3.793,334,3.793,335,3.793,336,3.793,337,3.793,338,3.793,339,3.793,340,3.793,341,3.793,342,3.793,343,3.793,344,3.793,345,3.793,346,3.108,347,2.875,348,3.793,349,3.793,350,3.108,351,3.793]],["title/injectables/ProducerService.html",[79,0.643,539,2.339]],["body/injectables/ProducerService.html",[3,0.163,4,0.163,5,0.143,7,0.084,8,0.838,13,1.104,14,0.889,15,0.221,16,0.017,19,0.428,20,1.598,22,0.163,27,0.268,40,3.468,77,0.012,78,0.012,79,0.965,81,1.529,86,0.543,87,1.349,90,2.627,95,0.51,96,0.696,102,0.721,103,0.682,105,0.626,115,0.808,118,0.366,121,1.529,122,1.464,123,0.39,124,0.808,129,0.907,146,3.494,159,2.371,160,3.453,167,2.184,168,1.616,171,2.018,173,3.29,174,2.371,308,2.371,324,1.758,326,3.112,360,3.112,361,3.559,373,5.531,374,3.112,375,2.371,376,2.878,377,3.112,378,2.878,379,3.112,380,2.878,381,3.405,383,3.112,387,3.405,388,3.405,391,3.112,394,3.405,395,3.405,539,3.508,601,5.347,1284,3.112,1687,3.405,1688,6.786,1689,6.786,1690,5.742,1691,6.398,1692,6.786,1693,5.742,1694,4.392,1695,4.392,1696,5.742,1697,4.392,1698,4.392,1699,4.392,1700,4.392,1701,3.405,1702,5.742,1703,4.392,1704,4.392,1705,4.392,1706,4.392,1707,4.392,1708,3.797,1709,4.392,1710,4.392,1711,4.392,1712,4.392,1713,4.452]],["title/interfaces/Question.html",[0,0.991,46,0.736]],["body/interfaces/Question.html",[0,1.815,1,1.574,2,1.73,3,0.147,4,0.147,5,0.129,6,2.134,7,0.075,8,0.781,9,2.266,10,2.427,11,4.107,12,2.937,13,1.029,14,0.945,15,0.261,16,0.017,17,0.719,18,0.912,19,0.224,20,1.948,21,2.416,22,0.286,23,1.913,24,0.605,25,0.471,26,1.574,27,0.255,28,2.416,29,2.416,30,2.416,31,2.416,32,2.134,33,2.018,34,2.416,35,3.271,36,3.271,37,2.732,38,4.127,39,2.89,40,1.817,41,2.134,42,2.416,43,3.512,44,2.416,45,2.416,46,1.029,47,1.091,48,1.688,49,4.154,50,3.975,51,3.975,52,4.154,53,3.47,54,3.975,55,3.771,56,3.975,57,3.728,58,3.975,59,3.67,60,3.47,61,2.266,62,2.416,63,2.416,64,2.416,65,2.416,66,2.416,67,2.416,68,3.068,69,2.266,70,3.709,71,2.018,72,3.277,73,2.266,74,3.068,75,2.018,76,2.416,77,0.011,78,0.011,103,0.693]],["title/interfaces/QuestionCategory.html",[0,0.991,55,1.953]],["body/interfaces/QuestionCategory.html",[0,1.875,1,1.766,2,1.941,3,0.165,4,0.165,5,0.144,6,2.395,7,0.084,8,0.844,9,2.542,10,2.47,11,3.903,12,3.11,13,1.111,14,0.893,15,0.253,16,0.017,17,0.719,18,0.911,19,0.251,20,2.103,21,2.71,22,0.29,23,2.146,24,0.679,25,0.528,26,1.766,27,0.304,28,2.71,29,2.71,30,2.71,31,2.71,32,2.395,33,2.264,34,2.71,35,3.531,36,3.531,37,2.949,38,3.981,39,3.12,40,2.039,41,2.395,42,2.71,43,3.677,44,2.71,45,2.71,46,0.853,47,0.928,48,1.435,49,3.531,50,2.71,51,2.71,52,3.531,53,2.949,54,2.71,55,3.604,56,2.71,57,2.542,58,2.71,59,3.12,60,2.949,61,2.542,62,2.71,63,2.71,64,2.71,65,2.71,66,2.71,67,2.71,68,3.312,69,2.542,70,3.928,71,2.264,72,3.47,73,2.542,74,3.312,75,2.264,76,2.71,77,0.012,78,0.012]],["title/components/QuestionComponent.html",[200,0.09,286,0.736]],["body/components/QuestionComponent.html",[1,0.834,3,0.078,4,0.078,5,0.068,7,0.079,8,0.488,13,1.068,14,0.997,15,0.22,16,0.017,17,0.186,18,0.75,19,0.383,22,0.078,24,0.321,25,0.249,27,0.254,41,1.806,46,1.279,47,0.765,77,0.007,78,0.007,86,0.317,87,1.338,95,0.297,96,0.705,100,2.161,102,0.626,103,0.592,105,0.642,109,1.95,115,0.762,118,0.174,119,0.543,120,0.421,123,0.186,124,0.841,126,0.958,129,0.82,132,0.798,151,1.832,168,1.175,171,0.963,180,0.385,184,1.944,197,1.149,200,0.098,201,0.403,202,0.672,203,0.439,204,0.439,205,0.439,206,0.439,208,0.439,209,1.587,210,1.587,211,0.701,212,0.701,213,0.875,214,1.392,215,0.701,217,0.701,223,2.998,224,3.82,229,0.562,230,0.642,232,1.485,238,0.439,239,0.701,240,0.701,241,0.439,242,0.439,243,0.439,244,0.403,245,0.439,246,0.916,247,0.439,248,0.439,249,0.403,250,0.385,251,1.394,252,0.403,253,0.439,254,0.439,255,0.403,256,0.439,257,0.403,258,0.439,259,0.403,260,0.439,261,0.421,262,0.403,263,0.403,264,0.439,265,0.403,266,0.439,267,0.385,268,0.439,269,0.403,270,0.439,271,0.403,272,0.439,273,0.403,274,0.439,275,0.403,276,0.439,277,0.403,278,0.403,279,0.439,280,0.403,281,0.439,282,0.403,283,0.439,284,0.403,285,0.421,286,0.916,287,0.439,288,0.403,289,0.439,290,0.916,291,0.439,292,0.403,293,0.421,294,0.403,295,0.403,296,0.439,297,0.916,298,0.403,299,0.439,300,0.439,301,0.439,324,1.46,325,1.014,346,2.37,347,1.373,435,2.044,491,1.201,530,1.46,535,1.334,540,2.32,541,2.217,560,2.959,581,1.395,582,0.834,583,0.963,607,2.37,619,1.014,622,1.917,629,2.37,631,1.827,636,4.121,638,3.378,639,3.378,642,3.146,643,5.039,652,1.485,657,1.812,658,1.812,659,2.303,660,1.812,661,2.892,662,2.892,663,1.812,664,1.812,665,2.37,666,3.696,667,1.812,668,2.37,669,3.61,670,4.121,671,1.624,672,0.963,673,1.917,674,1.463,675,1.827,676,1.373,677,1.485,678,2.593,679,1.812,680,1.812,681,1.812,682,1.485,683,2.393,684,1.624,685,1.624,708,1.28,709,1.201,710,1.201,716,1.827,745,1.373,805,3.696,806,4.121,811,4.121,830,1.812,833,1.812,844,2.593,850,2.892,852,2.37,853,2.37,860,1.618,893,2.892,912,1.624,976,1.812,1007,2.593,1024,1.812,1122,2.37,1124,1.624,1275,2.593,1293,3.237,1314,3.237,1362,1.624,1393,5.039,1404,1.812,1405,1.812,1406,1.812,1407,1.812,1424,1.624,1714,1.812,1715,4.176,1716,3.346,1717,4.176,1718,4.176,1719,3.61,1720,3.696,1721,4.121,1722,4.768,1723,4.768,1724,4.768,1725,4.768,1726,5.395,1727,4.768,1728,2.892,1729,5.039,1730,4.176,1731,4.176,1732,4.176,1733,4.176,1734,2.096,1735,4.176,1736,3.346,1737,2.096,1738,2.096,1739,2.096,1740,2.096,1741,2.096,1742,2.096,1743,2.096,1744,2.096,1745,2.096,1746,2.096,1747,2.096,1748,2.096,1749,2.096,1750,2.096,1751,3.346,1752,2.096,1753,4.176,1754,2.096,1755,2.096,1756,2.096,1757,2.096,1758,2.096,1759,2.096,1760,2.096,1761,2.096,1762,2.096,1763,2.096,1764,4.176,1765,2.096,1766,2.096,1767,2.096,1768,2.096,1769,2.096,1770,3.237,1771,5.234,1772,2.096,1773,5.829,1774,4.176,1775,2.096,1776,2.096,1777,2.096,1778,2.096,1779,3.346,1780,2.096,1781,2.096,1782,4.176,1783,4.176,1784,4.176,1785,3.346,1786,2.096,1787,2.096,1788,2.096,1789,2.096,1790,2.096,1791,2.096,1792,3.61,1793,2.096,1794,2.096,1795,2.096,1796,2.096,1797,2.096,1798,2.096,1799,2.096,1800,2.096,1801,2.096,1802,2.096,1803,2.096,1804,4.768,1805,2.096,1806,2.096,1807,2.096,1808,3.346,1809,3.346,1810,2.096,1811,2.096,1812,3.346,1813,3.346,1814,3.346,1815,2.096,1816,2.096,1817,2.096,1818,2.096,1819,2.096,1820,2.096,1821,2.096,1822,2.096,1823,2.096,1824,2.096,1825,2.096,1826,1.812,1827,2.096,1828,2.096,1829,1.812,1830,2.892,1831,1.812,1832,2.096,1833,3.346,1834,2.096,1835,3.346,1836,4.176,1837,2.096,1838,2.096,1839,2.096,1840,2.096,1841,2.892,1842,2.096,1843,1.812,1844,2.096,1845,2.892,1846,2.096,1847,2.096,1848,1.812,1849,2.892,1850,1.812,1851,3.346,1852,2.096,1853,2.096,1854,2.892,1855,3.346,1856,2.096,1857,2.096,1858,2.096,1859,2.096,1860,2.096,1861,2.096,1862,1.812,1863,1.812,1864,2.096,1865,2.096,1866,2.096,1867,2.096,1868,3.346,1869,3.346,1870,2.096,1871,2.096,1872,2.096,1873,2.096,1874,2.096,1875,2.096,1876,2.096,1877,2.096,1878,2.096]],["title/injectables/QuestionControlService.html",[79,0.643,1879,2.508]],["body/injectables/QuestionControlService.html",[3,0.116,4,0.116,5,0.102,7,0.06,9,2.605,13,0.602,14,1.013,15,0.212,16,0.017,18,0.703,19,0.303,22,0.116,24,0.48,27,0.273,37,1.598,38,2.454,46,1.322,48,1.902,77,0.009,78,0.009,79,0.764,81,1.091,82,4.406,86,0.43,87,1.365,90,1.947,95,0.476,96,0.674,100,2.22,102,0.733,103,0.693,105,0.623,109,2.051,118,0.261,119,0.811,120,0.629,121,1.091,122,1.044,123,0.278,124,0.868,129,0.958,132,0.899,168,0.882,186,3.182,324,0.959,325,1.515,491,4.132,505,2.79,576,1.914,577,3.189,761,1.598,844,3.525,1007,3.525,1275,2.428,1293,4.149,1399,4.627,1403,1.795,1525,5.077,1601,2.428,1770,5.828,1829,2.708,1830,3.931,1831,2.708,1843,2.708,1845,3.931,1848,2.708,1849,3.931,1850,2.708,1854,2.708,1862,2.708,1863,2.708,1879,2.979,1880,5.59,1881,2.708,1882,5.353,1883,6.237,1884,4.547,1885,5.353,1886,4.547,1887,5.353,1888,6.237,1889,6.237,1890,4.547,1891,3.132,1892,3.132,1893,3.132,1894,3.132,1895,6.712,1896,4.547,1897,3.132,1898,3.132,1899,3.132,1900,4.547,1901,3.132,1902,3.132,1903,3.132,1904,3.132,1905,3.132,1906,4.547,1907,3.132,1908,5.873,1909,6.712,1910,3.132,1911,3.132,1912,3.132,1913,3.132,1914,3.132,1915,4.547,1916,3.132,1917,3.132,1918,3.132,1919,3.132,1920,3.132,1921,3.132,1922,3.132,1923,4.547,1924,3.132,1925,3.132,1926,3.132,1927,3.132,1928,3.132,1929,3.132,1930,3.132,1931,3.132,1932,3.132,1933,3.132,1934,3.132,1935,3.132,1936,5.873,1937,3.132,1938,3.132,1939,3.132,1940,3.132,1941,4.547,1942,3.132,1943,3.132,1944,3.132,1945,3.132,1946,3.132,1947,3.132,1948,3.132,1949,3.132,1950,3.132]],["title/injectables/QuestionService.html",[79,0.643,642,2.066]],["body/injectables/QuestionService.html",[1,1.21,3,0.113,4,0.113,5,0.099,7,0.058,8,0.649,10,0.971,13,0.584,14,0.618,15,0.238,16,0.017,17,0.661,18,0.343,19,0.365,22,0.113,24,0.466,27,0.296,37,2.271,46,1.311,77,0.009,78,0.009,79,0.748,80,4.358,81,1.059,82,4.681,84,2.155,86,0.421,87,1.36,93,3.45,94,3.45,95,0.395,96,0.722,100,2.221,102,0.797,103,0.753,105,0.665,109,2.168,113,3.45,115,0.812,116,3.45,118,0.253,119,0.787,120,0.611,121,1.059,122,1.014,123,0.27,124,0.734,129,0.954,151,0.893,168,0.856,184,1.014,325,2.152,366,1.641,412,3.59,491,4.313,535,1.422,634,4.549,637,5.007,642,2.402,653,3.847,761,2.955,925,3.847,1263,5.328,1298,4.549,1719,2.629,1726,4.549,1729,4.549,1826,3.847,1879,4.219,1951,2.629,1952,6.163,1953,5.263,1954,4.45,1955,5.792,1956,5.792,1957,5.007,1958,5.792,1959,4.45,1960,5.792,1961,5.792,1962,4.45,1963,5.263,1964,4.45,1965,4.45,1966,3.041,1967,4.45,1968,3.041,1969,3.041,1970,4.45,1971,3.041,1972,3.041,1973,3.041,1974,3.041,1975,3.041,1976,4.45,1977,3.041,1978,3.041,1979,3.041,1980,4.45,1981,3.041,1982,3.041,1983,3.041,1984,3.041,1985,4.45,1986,3.041,1987,4.45,1988,3.041,1989,4.45,1990,3.041,1991,3.041,1992,3.041,1993,3.041,1994,2.629,1995,3.041,1996,2.629,1997,3.041,1998,4.45,1999,4.45,2000,4.45,2001,3.041,2002,4.45,2003,3.041,2004,3.041,2005,3.041,2006,4.45,2007,3.041,2008,3.041,2009,4.45,2010,3.041,2011,3.041,2012,4.45,2013,4.45,2014,3.041,2015,3.847,2016,3.041,2017,3.041,2018,3.041,2019,3.041,2020,3.041,2021,4.45,2022,3.041,2023,3.041,2024,4.45,2025,3.041,2026,3.041,2027,3.041,2028,3.041,2029,3.041,2030,4.45,2031,3.041,2032,3.847,2033,3.041,2034,4.45,2035,3.041,2036,2.629,2037,2.629]],["title/injectables/SecureInnerPagesGuard.html",[79,0.643,2038,2.967]],["body/injectables/SecureInnerPagesGuard.html",[3,0.205,4,0.205,5,0.18,7,0.105,14,0.768,15,0.18,16,0.017,19,0.403,22,0.205,27,0.232,77,0.014,78,0.014,79,1.114,81,1.923,86,0.628,87,0.972,95,0.491,96,0.628,102,0.623,103,0.589,105,0.491,118,0.46,121,1.923,122,1.842,123,0.491,124,0.658,129,0.693,132,0.846,412,4.131,413,4.434,414,6.37,415,4.776,420,3.166,421,3.914,423,5.732,424,4.776,511,4.776,742,2.819,1368,4.776,2038,5.14,2039,6.142,2040,6.616,2041,6.142,2042,4.776,2043,5.525,2044,5.525]],["title/injectables/StorageService.html",[79,0.643,361,1.851]],["body/injectables/StorageService.html",[3,0.169,4,0.169,5,0.147,7,0.124,8,0.855,13,1.4,15,0.231,16,0.017,18,0.856,19,0.368,22,0.169,27,0.288,77,0.012,78,0.012,79,0.985,81,1.578,86,0.555,87,1.142,95,0.403,96,0.718,102,0.774,103,0.732,105,0.659,115,0.54,118,0.377,121,1.578,122,1.511,123,0.403,124,0.54,129,0.862,151,2.327,168,1.276,184,2.472,186,3.629,361,2.835,418,5.937,491,3.935,742,2.313,1251,5.017,2032,6.297,2045,3.918,2046,6.496,2047,6.868,2048,7.285,2049,5.861,2050,5.861,2051,6.868,2052,4.533,2053,5.861,2054,5.861,2055,4.533,2056,4.533,2057,4.533,2058,4.533,2059,5.861,2060,4.533,2061,5.861,2062,4.533,2063,4.533,2064,3.918,2065,3.918,2066,5.067,2067,3.918,2068,4.533,2069,4.533,2070,4.533,2071,4.533,2072,4.533,2073,5.861,2074,4.533,2075,4.533,2076,4.533,2077,4.533,2078,4.533,2079,4.533,2080,4.533,2081,4.533,2082,4.533,2083,4.533,2084,4.533]],["title/interfaces/StoredRequest.html",[0,0.991,1563,2.712]],["body/interfaces/StoredRequest.html",[0,1.151,2,1.945,3,0.165,4,0.165,5,0.145,7,0.085,8,0.845,10,2.258,15,0.222,16,0.017,17,0.572,18,0.844,19,0.424,22,0.165,26,1.77,32,2.4,33,2.954,77,0.012,78,0.012,79,0.973,87,1.199,90,2.106,95,0.395,118,0.37,121,1.548,122,1.482,123,0.395,124,0.689,129,0.91,146,3.113,149,5.135,151,1.305,160,3.474,167,1.691,171,2.043,173,2.548,174,2.4,197,1.33,229,0.747,325,2.151,361,3.113,380,2.914,505,1.77,659,2.202,965,3.15,966,4.101,1093,4.56,1111,4.487,1114,4.487,1235,4.101,1256,3.447,1259,3.447,1265,3.447,1282,3.447,1283,3.447,1284,3.15,1425,4.487,1553,3.15,1554,3.15,1555,3.15,1556,3.15,1557,3.844,1558,3.844,1563,5.229,1565,5.004,1566,3.844,1568,3.844,1569,3.447,1570,5.004,1571,3.844,1572,3.844,1573,6.111,1574,3.844,1575,3.844,1576,3.844,1577,5.004,1578,3.844,1579,3.844,1580,3.844,1581,5.004,1582,5.004,1583,5.004,1584,3.844,1585,3.844,1586,3.844,1587,3.844,1588,3.844,1589,5.004,1590,6.111,1591,3.844,1592,3.844,1593,3.844,1594,3.844,1595,3.844,1596,4.101,1597,3.844,1598,3.844,1599,5.004,1600,3.844,1601,3.447,1602,3.844,1603,3.844,1604,3.844,1605,3.844,1606,3.844,1607,3.447]],["title/injectables/SurveyService.html",[79,0.643,222,2.066]],["body/injectables/SurveyService.html",[3,0.134,4,0.134,5,0.117,7,0.096,8,0.732,13,0.965,14,0.914,15,0.214,16,0.017,19,0.396,22,0.134,24,0.551,27,0.242,77,0.01,78,0.01,79,0.844,81,1.253,86,0.475,87,1.36,90,2.84,95,0.446,96,0.713,102,0.652,103,0.616,105,0.652,115,0.913,118,0.299,120,0.722,121,1.253,122,1.2,123,0.32,124,0.862,129,0.825,132,0.551,146,3.295,151,1.696,159,1.942,160,2.709,167,1.909,168,1.413,171,1.654,184,1.673,222,2.709,229,0.605,324,1.537,360,2.55,361,3.381,366,2.709,374,2.55,376,2.358,377,2.55,378,2.358,391,4.095,501,3.111,503,3.111,540,2.782,631,1.574,659,1.369,673,2.062,674,1.574,675,1.574,683,2.062,814,3.645,852,2.55,853,2.55,860,1.741,919,4.43,992,4.847,1020,3.111,1122,2.55,1251,2.358,1257,4.996,1341,2.79,1359,2.79,1374,3.111,1569,2.79,1728,5.405,1792,3.111,2085,2.79,2086,6.253,2087,5.019,2088,6.253,2089,6.253,2090,5.405,2091,5.019,2092,6.253,2093,6.253,2094,6.253,2095,5.019,2096,3.599,2097,5.019,2098,7.335,2099,3.599,2100,3.599,2101,3.599,2102,3.599,2103,3.599,2104,5.019,2105,3.599,2106,3.599,2107,3.599,2108,3.599,2109,3.599,2110,3.599,2111,3.599,2112,3.599,2113,3.599,2114,5.019,2115,3.599,2116,5.019,2117,3.599,2118,6.576,2119,5.019,2120,3.599,2121,3.599,2122,3.599,2123,6.253,2124,3.599,2125,3.599,2126,3.599,2127,4.339,2128,3.599,2129,3.599,2130,3.599,2131,3.599,2132,3.599,2133,3.599,2134,3.599,2135,3.599,2136,3.599,2137,3.599,2138,5.019,2139,3.599,2140,5.019,2141,3.599,2142,3.599,2143,3.599,2144,3.599,2145,3.599,2146,3.599,2147,3.599,2148,5.019,2149,3.599,2150,3.599,2151,3.599,2152,3.111,2153,3.599,2154,3.891]],["title/components/SurveysPage.html",[200,0.09,288,0.736]],["body/components/SurveysPage.html",[3,0.124,4,0.124,5,0.108,7,0.063,15,0.155,16,0.017,17,0.296,18,0.681,19,0.396,22,0.124,24,0.51,25,0.397,26,1.326,27,0.253,47,0.763,59,1.799,60,1.7,77,0.01,78,0.01,86,0.45,87,1.168,95,0.422,96,0.662,102,0.536,103,0.507,105,0.608,115,0.66,118,0.277,120,0.669,123,0.296,124,0.791,126,1.111,129,0.802,132,0.849,180,0.613,193,2.036,197,1.284,200,0.13,201,0.64,202,0.954,203,0.698,204,0.698,205,0.698,206,0.698,208,0.698,209,1.658,210,1.658,211,0.997,212,0.997,213,1.162,214,1.848,215,0.997,217,0.997,221,2.583,222,3.586,229,0.56,230,1.02,231,2.361,236,2.881,238,0.698,239,0.997,240,0.997,241,0.698,242,0.698,243,0.698,244,0.64,245,0.698,246,0.64,247,0.698,248,0.698,249,0.64,250,0.613,251,1.546,252,0.64,253,0.698,254,0.698,255,0.64,256,0.698,257,0.64,258,0.698,259,0.64,260,0.698,261,0.669,262,0.64,263,0.914,264,0.698,265,0.64,266,0.698,267,0.613,268,0.698,269,0.64,270,0.698,271,0.64,272,0.698,273,0.64,274,0.698,275,0.64,276,0.698,277,0.64,278,0.64,279,0.698,280,0.64,281,0.698,282,0.64,283,0.698,284,0.64,285,0.669,286,0.64,287,0.698,288,1.162,289,0.698,290,0.64,291,0.698,292,0.64,293,0.669,294,0.64,295,0.64,296,0.698,297,0.64,298,0.64,299,0.698,300,0.698,301,0.698,324,1.456,413,3.918,420,1.909,541,2.601,581,1.39,582,1.326,583,1.531,619,2.3,672,2.777,697,2.724,708,2.036,709,2.724,710,2.724,711,2.361,712,2.361,814,3.649,857,1.909,890,4.282,901,2.184,919,2.361,992,5.15,993,2.881,1008,4.11,1090,4.11,1091,5.224,1120,2.583,1132,2.583,1133,2.583,1200,2.361,1231,2.881,1330,2.881,1331,2.881,1359,3.685,2090,5.224,2127,4.11,2155,2.881,2156,5.542,2157,4.754,2158,6.644,2159,6.043,2160,6.644,2161,6.043,2162,3.332,2163,3.332,2164,3.332,2165,3.332,2166,3.332,2167,3.332,2168,4.754,2169,3.332,2170,3.332,2171,6.043,2172,4.754,2173,3.332,2174,3.332,2175,3.332,2176,3.332,2177,4.754,2178,3.332,2179,3.332,2180,3.332,2181,4.754,2182,4.754,2183,4.754,2184,4.754,2185,4.754,2186,4.754,2187,4.754,2188,4.754,2189,4.754,2190,4.754,2191,4.754,2192,3.332,2193,3.332,2194,3.332,2195,3.332,2196,3.332]],["title/components/TableComponent.html",[200,0.09,290,0.736]],["body/components/TableComponent.html",[3,0.099,4,0.099,5,0.086,7,0.077,12,1.284,14,0.851,15,0.222,16,0.017,17,0.666,18,0.739,19,0.394,20,0.965,22,0.099,24,0.406,25,0.316,27,0.281,46,1.223,47,0.645,48,1.52,57,1.521,77,0.008,78,0.008,80,4.013,83,2.057,84,1.88,86,0.381,87,1.277,93,3.763,94,3.763,95,0.357,96,0.702,100,2.175,102,0.717,103,0.678,105,0.64,109,1.961,113,2.057,115,0.799,116,2.057,118,0.221,119,0.687,120,0.533,123,0.236,124,0.871,126,0.996,129,0.822,132,1.027,180,0.488,186,1.354,197,1.222,200,0.114,201,0.51,202,0.807,203,0.556,204,0.556,205,0.556,206,0.556,208,0.556,209,1.627,210,1.627,211,0.843,212,0.843,213,1.018,214,1.619,215,0.843,217,0.843,229,0.446,230,0.813,238,0.556,239,0.843,240,0.843,241,0.556,242,0.556,243,0.556,244,0.51,245,0.556,246,0.51,247,0.556,248,0.556,249,0.51,250,0.488,251,1.477,252,0.51,253,0.556,254,0.556,255,0.51,256,0.556,257,0.51,258,0.556,259,0.51,260,0.556,261,0.533,262,0.51,263,0.51,264,0.556,265,0.51,266,0.556,267,0.488,268,0.556,269,0.51,270,0.556,271,0.51,272,0.556,273,0.51,274,0.556,275,0.51,276,0.556,277,0.51,278,0.51,279,0.556,280,0.51,281,0.556,282,0.51,283,0.556,284,0.51,285,0.533,286,0.51,287,0.556,288,0.51,289,0.556,290,1.041,291,0.556,292,0.51,293,0.533,294,0.51,295,0.51,296,0.556,297,1.041,298,0.51,299,0.556,300,0.556,301,0.556,324,0.813,375,1.433,397,2.057,530,1.658,534,1.231,535,1.551,541,2.42,560,1.88,573,1.524,581,2.024,582,1.056,583,1.22,592,2.62,745,1.739,761,2.763,1241,4.682,1307,2.294,1314,3.763,1530,2.294,1619,2.294,1667,2.294,1720,4.747,1770,5.525,1841,5.031,1879,4.168,1880,2.057,1957,3.476,1994,2.294,1996,2.294,2015,4.682,2036,2.294,2037,2.294,2197,2.294,2198,3.476,2199,4.197,2200,4.854,2201,4.021,2202,5.416,2203,4.021,2204,4.854,2205,5.294,2206,5.294,2207,5.416,2208,5.416,2209,4.021,2210,2.654,2211,4.021,2212,2.654,2213,2.654,2214,2.654,2215,4.021,2216,2.654,2217,2.654,2218,2.654,2219,2.654,2220,2.654,2221,5.819,2222,2.654,2223,6.552,2224,4.021,2225,2.654,2226,2.654,2227,2.654,2228,2.654,2229,2.654,2230,2.654,2231,2.654,2232,4.021,2233,2.654,2234,2.057,2235,2.294,2236,4.021,2237,2.654,2238,4.021,2239,2.654,2240,2.654,2241,5.416,2242,2.654,2243,2.654,2244,2.654,2245,2.654,2246,2.654,2247,2.654,2248,2.654,2249,4.021,2250,2.654,2251,2.654,2252,2.654,2253,2.654,2254,2.654,2255,2.654,2256,2.654,2257,2.654,2258,2.654,2259,2.654,2260,2.654,2261,2.654,2262,2.654,2263,4.854,2264,4.021,2265,2.654,2266,2.654,2267,4.021,2268,2.654,2269,2.654,2270,4.021,2271,2.057,2272,2.654,2273,2.654,2274,2.654,2275,4.854,2276,2.654,2277,2.654,2278,2.654,2279,2.654,2280,2.654,2281,2.654,2282,4.854,2283,2.654,2284,2.654,2285,4.021]],["title/components/TextAreaDataTypeComponent.html",[200,0.09,292,0.736]],["body/components/TextAreaDataTypeComponent.html",[3,0.142,4,0.142,5,0.124,7,0.073,14,0.726,15,0.226,16,0.017,17,0.339,18,0.589,19,0.363,22,0.142,24,0.584,25,0.454,27,0.25,46,1.145,47,1.177,48,1.722,77,0.011,78,0.011,86,0.494,95,0.53,96,0.672,100,1.952,102,0.43,103,0.406,105,0.53,109,1.41,115,0.622,118,0.317,119,0.987,120,0.766,123,0.339,126,1.179,129,0.479,132,1.107,180,0.701,197,1.41,200,0.14,201,0.733,202,1.049,203,0.799,204,0.799,205,0.799,206,0.799,208,0.799,209,1.675,210,1.675,211,1.095,212,1.095,213,1.249,215,1.095,217,1.095,229,0.641,238,0.799,239,1.095,240,1.095,241,0.799,242,0.799,243,0.799,244,0.733,245,0.799,246,0.733,247,0.799,248,0.799,249,0.733,250,0.701,251,1.583,252,0.733,253,0.799,254,0.799,255,0.733,256,0.799,257,0.733,258,0.799,259,0.733,260,0.799,261,0.766,262,0.733,263,0.733,264,0.799,265,0.733,266,0.799,267,0.701,268,0.799,269,0.733,270,0.799,271,0.733,272,0.799,273,0.733,274,0.799,275,0.733,276,0.799,277,0.733,278,0.733,279,0.799,280,0.733,281,0.799,282,0.733,283,0.799,284,0.733,285,0.766,286,0.733,287,0.799,288,0.733,289,0.799,290,0.733,291,0.799,292,1.232,293,1.587,294,0.733,295,0.733,296,0.799,297,0.733,298,0.733,299,0.799,300,0.799,301,0.799,488,1.987,518,2.168,530,1.963,534,1.599,535,1.904,573,1.804,715,1.668,716,2.607,717,2.607,718,2.285,722,3.1,724,2.666,726,2.82,727,2.058,728,2.33,736,2.185,739,2.666,740,1.59,751,2.185,1147,2.499,1152,2.499,1198,2.956,1620,5.123,2286,5.605]],["title/components/TextDataTypeComponent.html",[200,0.09,294,0.736]],["body/components/TextDataTypeComponent.html",[3,0.129,4,0.129,5,0.113,7,0.066,14,0.788,15,0.225,16,0.017,17,0.435,18,0.552,19,0.392,20,1.263,22,0.129,24,0.532,25,0.413,27,0.258,46,1.09,47,1.153,48,1.672,77,0.01,78,0.01,86,0.463,87,1.243,95,0.435,96,0.68,100,1.895,102,0.552,103,0.522,105,0.577,109,1.321,115,0.733,118,0.289,119,0.899,120,0.697,123,0.309,124,0.773,126,1.132,129,0.614,132,1.1,180,0.639,197,1.407,200,0.133,201,0.667,202,0.983,203,0.728,204,0.728,205,0.728,206,0.728,208,0.728,209,1.664,210,1.664,211,1.026,212,1.026,213,1.188,215,1.026,217,1.026,229,0.584,238,0.728,239,1.026,240,1.026,241,0.728,242,0.728,243,0.728,244,0.667,245,0.728,246,0.667,247,0.728,248,0.728,249,0.667,250,0.639,251,1.558,252,0.667,253,0.728,254,0.728,255,0.667,256,0.728,257,0.667,258,0.728,259,0.667,260,0.728,261,0.697,262,0.667,263,0.667,264,0.728,265,0.667,266,0.728,267,0.639,268,0.728,269,0.667,270,0.728,271,0.667,272,0.728,273,0.667,274,0.728,275,0.667,276,0.728,277,0.667,278,0.667,279,0.728,280,0.667,281,0.728,282,0.667,283,0.728,284,0.667,285,0.697,286,0.667,287,0.728,288,0.667,289,0.728,290,0.667,291,0.728,292,0.667,293,0.697,294,1.183,295,0.667,296,0.728,297,0.667,298,0.667,299,0.728,300,0.728,301,0.728,302,3.323,319,2.275,347,2.275,352,4.228,365,4.361,366,3.323,375,1.874,488,1.862,518,2.062,530,1.885,534,1.499,535,1.811,541,2.561,573,1.733,577,2.693,580,2.692,581,1.448,582,1.382,583,1.596,591,1.772,592,1.68,715,1.519,716,2.48,717,2.48,718,2.141,722,2.978,724,2.498,725,2.46,726,1.874,739,2.498,740,1.448,745,2.275,751,1.99,1148,2.46,1198,2.692,1362,2.692,1446,3.002,1550,3.795,1620,5.159,1641,3.002,2271,2.692,2286,5.644,2287,6.156,2288,6.156,2289,3.473,2290,3.473,2291,3.473,2292,3.473,2293,4.895,2294,3.473,2295,3.473,2296,3.473,2297,3.473,2298,3.002,2299,3.473]],["title/components/TypeComponent.html",[200,0.09,297,0.736]],["body/components/TypeComponent.html",[3,0.138,4,0.138,5,0.121,7,0.071,14,0.714,15,0.217,16,0.017,17,0.523,18,0.81,19,0.414,22,0.138,24,0.57,25,0.443,27,0.215,46,1.131,47,0.825,48,1.709,77,0.011,78,0.011,86,0.486,95,0.523,96,0.699,100,1.938,105,0.612,109,1.387,115,0.443,118,0.31,119,0.964,120,0.748,123,0.331,126,1.167,129,0.836,132,1.101,180,0.685,197,1.312,200,0.149,201,0.716,202,1.032,203,0.781,204,0.781,205,0.781,206,0.781,208,0.781,209,1.672,210,1.672,211,1.077,212,1.077,213,1.234,214,1.962,215,1.077,217,1.077,229,0.626,230,1.14,238,0.781,239,1.077,240,1.077,241,0.781,242,0.781,243,0.781,244,1.22,245,0.781,246,0.716,247,0.781,248,0.781,249,0.716,250,0.685,251,1.577,252,0.716,253,0.781,254,0.781,255,0.716,256,0.781,257,0.716,258,0.781,259,0.716,260,0.781,261,0.748,262,0.716,263,0.716,264,0.781,265,0.716,266,0.781,267,0.685,268,0.781,269,0.716,270,0.781,271,0.716,272,0.781,273,0.716,274,0.781,275,1.22,276,0.781,277,0.716,278,1.22,279,0.781,280,0.716,281,0.781,282,0.716,283,0.781,284,0.716,285,0.748,286,0.716,287,0.781,288,0.716,289,0.781,290,0.716,291,0.781,292,0.716,293,0.748,294,0.716,295,0.716,296,0.781,297,1.22,298,1.22,299,0.781,300,0.781,301,0.781,488,1.955,518,2.141,530,1.943,534,1.574,535,1.88,536,2.887,573,1.786,717,2.574,718,2.248,1611,5.486,1617,2.887,1720,5.337,1721,5.486,2152,3.219,2205,5.951,2206,5.951,2300,3.219,2301,5.139,2302,3.724,2303,3.724,2304,3.724,2305,3.724,2306,3.724,2307,3.724,2308,3.724,2309,3.724,2310,3.724,2311,3.724,2312,3.724,2313,3.724,2314,3.724,2315,3.724,2316,3.724,2317,3.724,2318,3.724,2319,3.724]],["title/components/TypeaheadComponent.html",[200,0.09,295,0.736]],["body/components/TypeaheadComponent.html",[3,0.121,4,0.121,5,0.106,7,0.089,8,0.682,13,1.217,15,0.239,16,0.017,17,0.531,18,0.864,19,0.339,22,0.121,25,0.388,27,0.285,47,0.75,77,0.01,78,0.01,86,0.442,95,0.289,96,0.716,102,0.714,103,0.675,105,0.604,115,0.785,118,0.271,123,0.289,124,0.388,126,1.1,129,0.687,132,0.716,168,1.782,180,0.599,190,2.133,197,1.303,200,0.128,201,0.626,202,0.939,203,0.682,204,0.682,205,0.682,206,0.682,208,0.682,209,1.655,210,1.655,211,0.98,212,0.98,213,1.147,214,1.824,215,0.98,217,0.98,224,4.32,229,0.547,230,0.997,238,0.682,239,0.98,240,0.98,241,0.682,242,0.682,243,0.682,244,0.626,245,0.682,246,0.626,247,0.682,248,0.682,249,0.626,250,0.599,251,1.54,252,0.626,253,0.682,254,0.682,255,0.626,256,0.682,257,0.626,258,0.682,259,0.626,260,0.682,261,0.654,262,0.626,263,0.626,264,0.682,265,0.626,266,0.682,267,0.599,268,0.682,269,0.626,270,0.682,271,0.626,272,0.682,273,0.626,274,0.682,275,0.626,276,0.682,277,0.626,278,0.626,279,0.682,280,0.626,281,0.682,282,0.626,283,0.682,284,0.626,285,0.654,286,0.626,287,0.682,288,0.626,289,0.682,290,0.626,291,0.682,292,0.626,293,0.654,294,0.626,295,1.149,296,0.682,297,0.626,298,0.626,299,0.682,300,0.682,301,0.682,366,3.227,505,1.861,530,1.831,534,1.432,537,5.474,548,4.042,549,4.042,573,1.683,676,3.064,695,4.635,742,1.661,1092,2.814,1432,6.006,2199,4.729,2234,2.524,2235,2.814,2320,2.814,2321,4.676,2322,5.471,2323,4.676,2324,5.471,2325,5.471,2326,5.979,2327,5.979,2328,4.676,2329,4.676,2330,4.676,2331,4.676,2332,5.471,2333,4.676,2334,5.471,2335,5.471,2336,4.676,2337,3.256,2338,3.256,2339,3.256,2340,6.333,2341,3.256,2342,3.256,2343,3.256,2344,3.256,2345,4.676,2346,3.256,2347,4.676,2348,5.979,2349,4.676,2350,5.979,2351,6.333,2352,6.791,2353,4.676,2354,3.256,2355,4.676,2356,3.256,2357,3.256,2358,4.676,2359,3.256,2360,4.676,2361,3.256,2362,3.256,2363,5.471,2364,5.471,2365,4.676,2366,3.256,2367,3.256,2368,3.256,2369,3.256,2370,3.256,2371,3.256,2372,3.256,2373,3.256,2374,3.256,2375,3.256,2376,3.256,2377,3.256,2378,3.256,2379,3.256,2380,3.256,2381,4.676]],["title/components/UniqueComponent.html",[200,0.09,298,0.736]],["body/components/UniqueComponent.html",[1,1.433,3,0.086,4,0.086,5,0.075,7,0.044,8,0.526,10,2.142,13,1.328,14,1.025,15,0.227,16,0.017,17,0.394,18,0.852,19,0.373,20,0.837,22,0.086,24,0.352,25,0.274,27,0.276,46,0.853,47,0.578,48,1.435,53,1.174,75,3.191,77,0.007,78,0.007,86,0.341,87,1.315,95,0.32,96,0.702,100,2.172,102,0.705,103,0.667,105,0.634,109,0.972,115,0.822,118,0.191,119,0.595,120,0.462,123,0.204,124,0.911,126,0.923,129,0.867,132,1.043,168,1.014,180,0.423,186,3.083,197,1.179,200,0.104,201,0.442,202,0.723,203,0.482,204,0.482,205,0.482,206,0.482,208,0.482,209,1.603,210,1.603,211,0.755,212,0.755,213,0.93,214,1.48,215,0.755,217,0.755,229,0.387,230,0.704,238,0.482,239,0.755,240,0.755,241,0.482,242,0.482,243,0.482,244,0.965,245,0.482,246,0.442,247,0.482,248,0.482,249,0.442,250,0.423,251,1.428,252,0.442,253,0.482,254,0.482,255,0.442,256,0.482,257,0.442,258,0.482,259,0.442,260,0.482,261,0.462,262,0.442,263,0.442,264,0.482,265,0.442,266,0.482,267,0.423,268,0.482,269,0.442,270,0.482,271,0.442,272,0.482,273,0.442,274,0.482,275,0.442,276,0.482,277,0.442,278,0.442,279,0.482,280,0.442,281,0.482,282,0.442,283,0.482,284,0.442,285,0.462,286,0.442,287,0.482,288,0.442,289,0.482,290,0.442,291,0.482,292,0.442,293,0.462,294,0.442,295,0.442,296,0.482,297,0.442,298,0.965,299,0.93,300,0.482,301,0.482,302,1.241,304,3.44,319,1.507,324,1.85,352,3.068,365,1.629,366,1.241,375,1.241,488,1.37,518,1.614,526,3.892,530,1.537,533,3.44,534,1.103,535,1.418,541,2.199,560,3.862,565,1.988,573,1.413,577,2.933,580,1.783,581,1.502,582,0.915,583,1.057,591,3.191,592,3.025,597,3.113,598,1.988,599,1.988,600,1.783,605,1.783,607,3.558,608,1.629,612,1.783,642,3.262,652,1.629,659,2.073,672,1.655,716,1.941,722,2.429,724,1.837,725,1.629,739,1.837,740,2.273,761,1.174,767,1.405,774,2.711,777,3.788,780,3.788,857,1.318,1011,1.241,1013,1.783,1403,1.318,1412,1.507,1467,3.113,1472,3.862,1473,1.629,1477,1.629,1482,1.629,1483,1.629,1484,1.629,1498,3.836,1502,3.113,1508,1.988,1510,5.407,1514,3.862,1518,3.113,1532,3.836,1533,1.988,1534,1.988,1536,1.988,1537,3.113,1538,1.988,1539,1.988,1540,1.988,1541,1.988,1542,1.988,1543,1.988,1544,3.113,1545,3.113,1617,1.783,1771,1.988,2271,1.783,2298,1.988,2382,1.988,2383,4.438,2384,3.601,2385,3.601,2386,5.781,2387,5.021,2388,5.021,2389,5.021,2390,5.021,2391,3.601,2392,5.021,2393,3.601,2394,4.438,2395,3.601,2396,2.3,2397,2.3,2398,2.3,2399,2.3,2400,2.3,2401,3.601,2402,2.3,2403,1.988,2404,2.3,2405,2.3,2406,2.3,2407,2.3,2408,2.3,2409,2.3,2410,2.3,2411,2.3,2412,3.601,2413,2.3,2414,2.3,2415,2.3,2416,3.601,2417,2.3,2418,2.3,2419,2.3,2420,2.3,2421,2.3,2422,2.3,2423,2.3,2424,5.781,2425,2.3,2426,3.601,2427,2.3,2428,2.3,2429,3.601,2430,2.3,2431,2.3,2432,3.601,2433,2.3,2434,2.3,2435,3.601,2436,2.3,2437,2.3,2438,2.3,2439,2.3,2440,2.3,2441,2.3,2442,5.021,2443,5.021,2444,2.3,2445,2.3,2446,2.3,2447,3.601,2448,2.3,2449,2.3,2450,2.3,2451,2.3,2452,2.3,2453,2.3,2454,2.3,2455,2.3,2456,2.3,2457,2.3,2458,2.3,2459,2.3,2460,2.3,2461,2.3]],["title/interfaces/User.html",[0,0.991,432,2.193]],["body/interfaces/User.html",[0,1.61,2,2.177,3,0.185,4,0.185,5,0.162,7,0.095,8,0.908,10,2.337,15,0.26,16,0.017,17,0.632,18,0.919,22,0.278,23,2.407,27,0.307,77,0.013,78,0.013,115,0.592,167,1.893,180,1.373,181,3.526,188,3.526,307,5.184,309,3.261,426,3.526,427,3.526,428,3.526,429,3.526,431,3.526,432,3.888,433,6.145,434,6.145,435,4.343,436,6.145,437,6.145,438,3.526,439,4.822,440,4.302,441,4.302,442,4.302,443,4.302,444,4.302,445,4.407,446,4.302]],["title/coverage.html",[2462,4.528]],["body/coverage.html",[0,1.883,1,1.3,5,0.106,6,3.562,15,0.106,16,0.017,25,0.389,46,0.628,55,1.667,71,1.667,72,1.763,77,0.01,78,0.01,79,1.271,80,2.14,82,3.874,83,2.532,84,2.314,85,2.824,146,1.58,147,2.824,159,3.422,175,4.642,197,1.363,200,0.185,201,0.628,207,2.824,222,1.763,223,1.763,244,0.628,246,0.628,249,0.628,252,0.628,255,0.628,257,0.628,259,0.628,261,0.941,262,0.628,263,0.628,265,0.628,267,0.601,269,0.628,271,0.628,273,0.628,275,0.628,277,0.628,278,0.628,280,0.628,282,0.628,284,0.628,286,0.628,288,0.628,290,0.628,292,0.628,293,0.941,294,0.628,295,0.628,297,0.628,298,0.628,302,1.763,303,3.591,308,1.763,323,2.314,325,3.935,352,1.996,353,4.249,361,1.58,382,2.532,409,2.532,410,2.532,411,2.824,412,1.763,426,2.314,427,3.321,430,6.212,432,1.872,447,4.642,483,2.532,484,2.532,485,2.532,505,1.3,517,2.824,539,1.996,541,1.242,576,1.996,582,1.866,628,2.824,629,2.314,630,2.824,642,1.763,698,3.591,713,2.824,714,2.532,715,3.182,788,2.824,797,2.824,798,2.824,810,1.872,915,2.824,1029,2.824,1087,2.824,1134,2.824,1135,2.532,1196,2.824,1197,2.532,1199,2.824,1200,2.314,1201,2.824,1232,4.249,1322,2.532,1324,2.824,1333,2.824,1389,2.824,1433,2.824,1434,2.532,1485,2.824,1486,2.532,1494,2.824,1546,2.824,1547,2.532,1553,2.314,1554,3.883,1555,3.883,1556,3.883,1563,2.314,1596,2.314,1608,2.824,1618,2.532,1620,3.321,1621,2.532,1622,2.532,1624,2.824,1629,2.824,1655,2.824,1659,2.314,1669,2.824,1687,4.249,1701,2.532,1713,2.532,1714,2.824,1879,2.14,1880,2.532,1881,2.824,1951,2.824,2038,2.532,2039,2.824,2040,4.051,2041,2.824,2042,2.824,2045,2.824,2085,4.249,2154,2.532,2155,2.824,2197,2.824,2198,2.824,2286,3.633,2300,2.824,2320,2.824,2382,2.824,2462,2.824,2463,3.266,2464,3.266,2465,3.266,2466,6.341,2467,5.481,2468,5.988,2469,3.266,2470,3.266,2471,4.687,2472,3.266,2473,4.687,2474,6.798,2475,6.341,2476,5.481,2477,4.687,2478,3.266,2479,3.266,2480,3.266,2481,3.266,2482,5.988,2483,2.824,2484,7.639,2485,2.824,2486,7.828,2487,5.988,2488,5.481,2489,3.266,2490,4.687,2491,3.266,2492,3.266,2493,3.266,2494,4.687,2495,6.121,2496,2.824,2497,2.824,2498,2.824,2499,2.824,2500,2.824,2501,2.824,2502,2.824,2503,2.824,2504,2.824,2505,2.824,2506,2.824,2507,3.266]],["title/dependencies.html",[1244,3.572,2508,2.758]],["body/dependencies.html",[16,0.017,26,2.069,77,0.013,78,0.013,118,0.433,119,1.346,171,2.389,174,2.806,177,3.683,229,0.874,230,1.592,250,0.956,378,3.406,420,2.979,479,5.524,480,4.494,481,4.494,827,4.03,971,4.494,1159,4.494,1183,5.524,1244,4.03,1248,4.494,1251,3.406,1352,4.494,1458,4.494,1459,4.494,1460,4.494,1675,4.494,1678,4.494,2064,4.494,2065,4.494,2066,4.494,2067,4.494,2234,4.03,2509,5.199,2510,7.642,2511,5.199,2512,6.391,2513,5.199,2514,5.199,2515,5.199,2516,5.199,2517,6.919,2518,7.718,2519,5.199,2520,5.199,2521,5.199,2522,5.199,2523,5.199,2524,5.199,2525,5.199,2526,5.199,2527,5.199,2528,5.199,2529,5.199,2530,6.919,2531,5.199,2532,5.199,2533,5.199,2534,5.199,2535,5.199,2536,5.199,2537,5.199,2538,5.199,2539,5.199,2540,5.199,2541,5.199,2542,5.199,2543,5.199,2544,5.199,2545,5.199,2546,5.199,2547,5.199,2548,5.199,2549,5.199,2550,5.199,2551,5.199]],["title/miscellaneous/functions.html",[2552,1.949,2553,3.983]],["body/miscellaneous/functions.html",[1,2.119,7,0.101,16,0.017,25,0.634,27,0.327,40,2.447,43,2.874,46,1.023,77,0.013,78,0.013,99,4.603,102,0.88,103,0.832,104,4.603,105,0.694,109,1.437,302,2.874,308,2.874,365,3.772,382,5.027,402,4.603,432,3.051,476,4.127,483,5.027,576,3.962,814,2.575,1291,4.603,1514,3.772,1701,5.027,1708,4.603,2495,4.603,2496,5.606,2497,5.606,2498,5.606,2499,5.606,2500,5.606,2505,4.603,2506,6.045,2552,3.253,2553,4.603,2554,7.808,2555,5.324,2556,5.324,2557,5.324,2558,5.324,2559,5.324,2560,5.324,2561,5.324,2562,5.324,2563,5.324,2564,5.324]],["title/index.html",[7,0.073,2565,3.309]],["body/index.html",[2,2.733,16,0.015,77,0.015,78,0.015,81,2.175,202,1.254,2565,5.401,2566,6.247,2567,6.247,2568,6.247]],["title/modules.html",[2569,4.528]],["body/modules.html",[16,0.015,77,0.015,78,0.015,2569,5.452]],["title/properties.html",[8,0.672,2508,2.758]],["body/properties.html",[8,0.9,16,0.016,39,3.33,77,0.014,78,0.014,267,1.135,1381,5.333,2570,6.17,2571,7.075,2572,6.17,2573,6.17,2574,6.17,2575,6.17]],["title/miscellaneous/typealiases.html",[2552,1.949,2576,4.607]],["body/miscellaneous/typealiases.html",[6,3.063,7,0.108,15,0.26,16,0.014,41,3.637,43,3.637,55,2.896,61,3.861,68,3.861,69,3.861,73,3.861,74,3.861,77,0.014,78,0.014,303,3.719,322,5.223,326,4.774,350,4.774,427,4.021,438,4.774,439,5.223,445,4.774,2403,6.903,2552,3.467,2577,5.675,2578,7.779,2579,6.213,2580,7.187]],["title/miscellaneous/variables.html",[2552,1.949,2581,3.983]],["body/miscellaneous/variables.html",[7,0.083,10,1.389,13,1.517,15,0.253,16,0.017,18,0.849,25,0.805,77,0.012,78,0.012,124,0.679,132,0.666,149,4.789,159,4.135,168,2.222,175,5.773,186,2.219,187,3.371,303,2.85,309,2.85,310,3.371,311,3.371,312,3.371,313,3.371,314,3.371,315,3.371,316,3.371,317,3.371,318,3.371,319,2.85,320,3.081,321,3.371,323,4.042,324,2.28,325,2.103,353,3.371,354,5.504,409,4.936,413,2.492,447,3.371,484,4.423,485,4.423,486,3.759,487,5.504,541,1.654,601,4.511,789,4.936,1208,4.042,1232,3.371,1235,3.081,1251,2.85,1320,3.759,1321,3.759,1322,4.423,1323,3.759,1337,3.759,1341,3.371,1554,3.081,1555,3.081,1556,4.042,1596,4.042,1607,3.371,1687,3.371,1713,4.936,2085,3.371,2154,4.936,2483,3.759,2485,4.932,2501,3.759,2502,3.759,2503,3.759,2504,3.759,2552,2.657,2579,3.759,2581,3.759,2582,5.705,2583,4.349,2584,6.367,2585,5.705,2586,5.705,2587,5.705,2588,4.349,2589,4.349,2590,4.349,2591,4.349,2592,4.349,2593,4.349,2594,4.349,2595,4.349,2596,4.349,2597,7.019,2598,6.76,2599,4.349,2600,5.705,2601,5.705,2602,5.705,2603,5.705,2604,5.705,2605,5.705,2606,5.705,2607,4.349,2608,4.349]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":325,"title":{},"body":{"interfaces/Association.html":{},"components/DetailedFormComponent.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Producer.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.13.0",{"_index":2551,"title":{},"body":{"dependencies.html":{}}}],["0.17.3",{"_index":2541,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":1876,"title":{},"body":{"components/QuestionComponent.html":{}}}],["0.5",{"_index":1186,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["0.5em",{"_index":1872,"title":{},"body":{"components/QuestionComponent.html":{}}}],["0/1",{"_index":2486,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2468,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2475,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2472,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2490,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2467,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2471,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2473,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2489,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2478,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2470,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2492,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2479,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2491,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2469,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2487,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2482,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2488,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2477,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2474,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2476,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":761,"title":{},"body":{"components/DateDataTypeComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/MultipleComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/UniqueComponent.html":{}}}],["1).pop",{"_index":1063,"title":{},"body":{"injectables/DraftService.html":{}}}],["1)[0",{"_index":1074,"title":{},"body":{"injectables/DraftService.html":{}}}],["1.0.0",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.1.2",{"_index":2570,"title":{},"body":{"properties.html":{}}}],["1.2",{"_index":1480,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["1.8.0",{"_index":2543,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":2530,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2494,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":2481,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1426,"title":{},"body":{"components/LoginPage.html":{}}}],["100",{"_index":698,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{},"coverage.html":{}}}],["100px",{"_index":1385,"title":{},"body":{"components/HomePage.html":{}}}],["100vh",{"_index":1421,"title":{},"body":{"components/LoginPage.html":{}}}],["10px",{"_index":1387,"title":{},"body":{"components/HomePage.html":{}}}],["11",{"_index":2568,"title":{},"body":{"index.html":{}}}],["11px",{"_index":1427,"title":{},"body":{"components/LoginPage.html":{}}}],["16",{"_index":2567,"title":{},"body":{"index.html":{}}}],["16.0.0",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["16.1.1",{"_index":2532,"title":{},"body":{"dependencies.html":{}}}],["16.2.12",{"_index":2514,"title":{},"body":{"dependencies.html":{}}}],["16px",{"_index":909,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["170",{"_index":744,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["1].value",{"_index":1855,"title":{},"body":{"components/QuestionComponent.html":{}}}],["1].value.split(':')[1",{"_index":1928,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["2",{"_index":1424,"title":{},"body":{"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/QuestionComponent.html":{}}}],["2.3.0",{"_index":2548,"title":{},"body":{"dependencies.html":{}}}],["2.30.0",{"_index":2537,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":1870,"title":{},"body":{"components/QuestionComponent.html":{}}}],["200",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SurveyService.html":{}}}],["2000",{"_index":1115,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["200px",{"_index":1430,"title":{},"body":{"components/LoginPage.html":{}}}],["20px",{"_index":627,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{}}}],["22px",{"_index":910,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["26px",{"_index":907,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["29",{"_index":2566,"title":{},"body":{"index.html":{}}}],["2px",{"_index":625,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{}}}],["3.1.2",{"_index":2542,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1581,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["4",{"_index":1428,"title":{},"body":{"components/LoginPage.html":{}}}],["4.0.0",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":2546,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2544,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1667,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"components/TableComponent.html":{}}}],["5.0.6",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["5.0.7",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["5.5.1",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":903,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/PhotoService.html":{}}}],["500px",{"_index":1431,"title":{},"body":{"components/LoginPage.html":{}}}],["6",{"_index":2480,"title":{},"body":{"coverage.html":{}}}],["6.1.0",{"_index":2535,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2493,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1382,"title":{},"body":{"components/HomePage.html":{}}}],["67vh",{"_index":2194,"title":{},"body":{"components/SurveysPage.html":{}}}],["7",{"_index":1080,"title":{},"body":{"injectables/DraftService.html":{}}}],["7.0.0",{"_index":2539,"title":{},"body":{"dependencies.html":{}}}],["7.5.5",{"_index":2528,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2545,"title":{},"body":{"dependencies.html":{}}}],["70vh",{"_index":1665,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["85",{"_index":1668,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["8c8c8c",{"_index":911,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["9.0.1",{"_index":2549,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":688,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["999999",{"_index":1422,"title":{},"body":{"components/LoginPage.html":{}}}],["_",{"_index":970,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["_.clonedeep(this.selectedform",{"_index":1021,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["_storage",{"_index":2046,"title":{},"body":{"injectables/StorageService.html":{}}}],["abierta",{"_index":1831,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["absolute",{"_index":899,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["abstractcontrol",{"_index":1525,"title":{},"body":{"components/MultipleComponent.html":{},"injectables/QuestionControlService.html":{}}}],["acceder",{"_index":1123,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["acción",{"_index":1105,"title":{},"body":{"components/DraftsPage.html":{}}}],["accordion::part(content",{"_index":2192,"title":{},"body":{"components/SurveysPage.html":{}}}],["action",{"_index":1589,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["actual_component",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["add",{"_index":1315,"title":{},"body":{"injectables/FormService.html":{}}}],["addnetworkchangelistener",{"_index":2086,"title":{},"body":{"injectables/SurveyService.html":{}}}],["addphone",{"_index":1633,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["addsection",{"_index":2202,"title":{},"body":{"components/TableComponent.html":{}}}],["agregar",{"_index":1652,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["ajustes",{"_index":856,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["al",{"_index":1124,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{}}}],["alert",{"_index":673,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["alert.present",{"_index":683,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["alertcontroller",{"_index":540,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["alertshown",{"_index":1717,"title":{},"body":{"components/QuestionComponent.html":{}}}],["aliases",{"_index":2577,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":694,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{}}}],["altitud",{"_index":34,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["altitude",{"_index":874,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["angular",{"_index":2065,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2509,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":170,"title":{},"body":{"injectables/ApiService.html":{}}}],["angular/compiler",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":118,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":119,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":420,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"injectables/SecureInnerPagesGuard.html":{},"components/SurveysPage.html":{},"dependencies.html":{}}}],["angular/template",{"_index":2531,"title":{},"body":{"dependencies.html":{}}}],["angular/template/for",{"_index":2235,"title":{},"body":{"components/TableComponent.html":{},"components/TypeaheadComponent.html":{}}}],["answer",{"_index":1,"title":{"interfaces/Answer.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AutocompleteComponent.html":{},"interfaces/Form.html":{},"components/MultipleComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["answer.checked",{"_index":1847,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answer.id.tostring",{"_index":600,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answer.value",{"_index":607,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/QuestionComponent.html":{},"components/UniqueComponent.html":{}}}],["answer.value.split(\":\")[0",{"_index":1545,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answer.value.tolowercase",{"_index":2439,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answer_id",{"_index":76,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["answerbuilder",{"_index":2496,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["answerbuilder(answer",{"_index":2556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["answerformgroupkey",{"_index":2248,"title":{},"body":{"components/TableComponent.html":{}}}],["answergroup",{"_index":1510,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answergroup.get",{"_index":2459,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answergroup.get('other",{"_index":2443,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answergroup.get('other')?.disable",{"_index":1539,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answergroup.get('other')?.enable",{"_index":1538,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answergroup.get('other')?.setvalue(othervalue",{"_index":1535,"title":{},"body":{"components/MultipleComponent.html":{}}}],["answergroup.get('other')?.value",{"_index":1533,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answerid",{"_index":75,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/UniqueComponent.html":{}}}],["answeridtocheck",{"_index":2432,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answerlength",{"_index":50,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["answerpivot",{"_index":72,"title":{"interfaces/AnswerPivot.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"coverage.html":{}}}],["answerpivotbuilder",{"_index":2497,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["answerpivotbuilder(pivot",{"_index":2557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["answerpivotresponse",{"_index":74,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["answerrelation",{"_index":71,"title":{"interfaces/AnswerRelation.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"coverage.html":{}}}],["answerrelation.every",{"_index":134,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["answerrelation.some",{"_index":137,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["answerrelation[0]?.answerpivot.type",{"_index":128,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["answerrelationbuilder",{"_index":2498,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["answerrelationbuilder(relation",{"_index":2559,"title":{},"body":{"miscellaneous/functions.html":{}}}],["answerrelationresponse",{"_index":73,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["answerrelationservice",{"_index":80,"title":{"injectables/AnswerRelationService.html":{}},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["answerrelationtype",{"_index":127,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["answerresponse",{"_index":69,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["answers",{"_index":53,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AutocompleteComponent.html":{},"interfaces/Form.html":{},"components/MultipleComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/UniqueComponent.html":{}}}],["answers.map((answer",{"_index":606,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["answers[answers.length",{"_index":1541,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["answers_relation",{"_index":66,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["answerscontrols",{"_index":2246,"title":{},"body":{"components/TableComponent.html":{}}}],["answerscontrols[0",{"_index":2250,"title":{},"body":{"components/TableComponent.html":{}}}],["answerscontrols[1",{"_index":2251,"title":{},"body":{"components/TableComponent.html":{}}}],["answersformgroup",{"_index":560,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/QuestionComponent.html":{},"components/TableComponent.html":{},"components/UniqueComponent.html":{}}}],["answersformgroup.controls",{"_index":597,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/UniqueComponent.html":{}}}],["answersformgroup.controls['other'].value",{"_index":1852,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answersformgroup.controls[answer.id.tostring()].value",{"_index":1846,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answersformgroup.controls[key].setvalue(!value",{"_index":2428,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answersformgroup.controls[key].setvalue(false",{"_index":615,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["answersformgroup.controls[key].setvalue(true",{"_index":614,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["answersformgroup.controls[key].setvalue(value",{"_index":2427,"title":{},"body":{"components/UniqueComponent.html":{}}}],["answersformgroup.controls[key].value",{"_index":598,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/UniqueComponent.html":{}}}],["answersformgroup.get(answerformgroupkey)?.setvalue(true",{"_index":2252,"title":{},"body":{"components/TableComponent.html":{}}}],["answersgroup",{"_index":1864,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answersgroup.controls[answer.order].value",{"_index":1865,"title":{},"body":{"components/QuestionComponent.html":{}}}],["answersrelation",{"_index":56,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["answervalue",{"_index":2424,"title":{},"body":{"components/UniqueComponent.html":{}}}],["anterior",{"_index":1868,"title":{},"body":{"components/QuestionComponent.html":{}}}],["api",{"_index":1580,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["api/api.service",{"_index":374,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["apiservice",{"_index":146,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["app",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["app.component.html",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["app.getinfo().then((info",{"_index":1355,"title":{},"body":{"components/HomePage.html":{}}}],["appcomponent",{"_index":201,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["application/json",{"_index":194,"title":{},"body":{"injectables/ApiService.html":{}}}],["appversion",{"_index":1337,"title":{},"body":{"components/HomePage.html":{},"miscellaneous/variables.html":{}}}],["ar.questionid",{"_index":2267,"title":{},"body":{"components/TableComponent.html":{}}}],["area",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["areselected",{"_index":88,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["areselected(relation",{"_index":98,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["array",{"_index":38,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{}}}],["array.push(formgroup",{"_index":1934,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["arrays",{"_index":1278,"title":{},"body":{"injectables/FormService.html":{}}}],["asistencia",{"_index":333,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["asociacion",{"_index":348,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["asociación",{"_index":2294,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["assignbeneficiary",{"_index":524,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["assignbeneficiary(id",{"_index":551,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["assignformcontrols",{"_index":1882,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["assignformcontrols(question",{"_index":1892,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["assoaciationservice",{"_index":2394,"title":{},"body":{"components/UniqueComponent.html":{}}}],["association",{"_index":302,"title":{"interfaces/Association.html":{}},"body":{"interfaces/Association.html":{},"injectables/AssociationService.html":{},"interfaces/Producer.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["association!.farming",{"_index":2438,"title":{},"body":{"components/UniqueComponent.html":{}}}],["association.id",{"_index":408,"title":{},"body":{"injectables/AssociationService.html":{}}}],["association_id",{"_index":345,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["associationbuilder",{"_index":382,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["associationbuilder(association",{"_index":402,"title":{},"body":{"injectables/AssociationService.html":{},"miscellaneous/functions.html":{}}}],["associationfarming",{"_index":2437,"title":{},"body":{"components/UniqueComponent.html":{}}}],["associationfarming.tolowercase",{"_index":2440,"title":{},"body":{"components/UniqueComponent.html":{}}}],["associationid",{"_index":319,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["associationresponse",{"_index":350,"title":{},"body":{"interfaces/Association.html":{},"injectables/AssociationService.html":{},"interfaces/Producer.html":{},"miscellaneous/typealiases.html":{}}}],["associationresponse.map",{"_index":401,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associations",{"_index":354,"title":{},"body":{"injectables/AssociationService.html":{},"miscellaneous/variables.html":{}}}],["associations_storage_key",{"_index":409,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["associationsendpoint",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associationservice",{"_index":352,"title":{"injectables/AssociationService.html":{}},"body":{"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["async",{"_index":151,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/PhotoService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["at_p5",{"_index":332,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["atención",{"_index":1788,"title":{},"body":{"components/QuestionComponent.html":{}}}],["atleastonechecked",{"_index":1883,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["auth/auth.service",{"_index":1995,"title":{},"body":{"injectables/QuestionService.html":{}}}],["auth/login",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth0/angular",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["authendpoint",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":431,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"interfaces/User.html":{}}}],["authentication.authmanagement",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication.authparams",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication.authresponse",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication.user",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{},"miscellaneous/functions.html":{}}}],["authguard",{"_index":410,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["authmanagement",{"_index":426,"title":{"interfaces/AuthManagement.html":{}},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["author",{"_index":2574,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":195,"title":{},"body":{"injectables/ApiService.html":{}}}],["authparams",{"_index":445,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["authresponse",{"_index":438,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["authservice",{"_index":412,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["autocomplete",{"_index":519,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["autocomplete'},{'name",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["autocomplete.component.html",{"_index":521,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["autocomplete.component.scss",{"_index":520,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["autocomplete/autocomplete.component",{"_index":1617,"title":{},"body":{"components/OpenComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["autocompletecomponent",{"_index":244,"title":{"components/AutocompleteComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["await",{"_index":184,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"injectables/PhotoService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{}}}],["back",{"_index":635,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["backbuttonsubscription",{"_index":1718,"title":{},"body":{"components/QuestionComponent.html":{}}}],["background",{"_index":1193,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["bar",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["base",{"_index":1307,"title":{},"body":{"injectables/FormService.html":{},"components/TableComponent.html":{}}}],["base.foreach((q",{"_index":2265,"title":{},"body":{"components/TableComponent.html":{}}}],["base.foreach((question",{"_index":2262,"title":{},"body":{"components/TableComponent.html":{}}}],["base.push(q",{"_index":1316,"title":{},"body":{"injectables/FormService.html":{}}}],["base64data",{"_index":1184,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["basearraycopy",{"_index":2254,"title":{},"body":{"components/TableComponent.html":{}}}],["based",{"_index":1254,"title":{},"body":{"injectables/FormService.html":{}}}],["bearer",{"_index":196,"title":{},"body":{"injectables/ApiService.html":{}}}],["behaviorsubject",{"_index":1644,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["behaviorsubject(this.phones",{"_index":1647,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["beneficiario",{"_index":999,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["beneficiary",{"_index":20,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["beneficiary.association",{"_index":365,"title":{},"body":{"injectables/AssociationService.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["beneficiary.associationresponse",{"_index":396,"title":{},"body":{"injectables/AssociationService.html":{}}}],["beneficiary.namespace",{"_index":21,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["beneficiary.producer",{"_index":40,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AutocompleteComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"interfaces/Form.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/functions.html":{}}}],["beneficiary.producerresponse",{"_index":1705,"title":{},"body":{"injectables/ProducerService.html":{}}}],["beneficiary.selectedquestions",{"_index":2239,"title":{},"body":{"components/TableComponent.html":{}}}],["beneficiary.specialized",{"_index":1070,"title":{},"body":{"injectables/DraftService.html":{}}}],["blaucast",{"_index":1418,"title":{},"body":{"components/LoginPage.html":{}}}],["boolean",{"_index":14,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/SurveyService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["booleanattribute",{"_index":575,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/FormListComponent.html":{}}}],["border",{"_index":621,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["borrador",{"_index":668,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/QuestionComponent.html":{}}}],["borradores",{"_index":1373,"title":{},"body":{"components/HomePage.html":{}}}],["bottom",{"_index":1425,"title":{},"body":{"components/LoginPage.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["break",{"_index":1833,"title":{},"body":{"components/QuestionComponent.html":{}}}],["browser",{"_index":1183,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"dependencies.html":{}}}],["builtform",{"_index":1290,"title":{},"body":{"injectables/FormService.html":{}}}],["builtform.fechadescarga",{"_index":1299,"title":{},"body":{"injectables/FormService.html":{}}}],["builtform.questions",{"_index":1296,"title":{},"body":{"injectables/FormService.html":{}}}],["builtform.questions.filter",{"_index":1297,"title":{},"body":{"injectables/FormService.html":{}}}],["builtform.questions.foreach((question",{"_index":1292,"title":{},"body":{"injectables/FormService.html":{}}}],["button",{"_index":1423,"title":{},"body":{"components/LoginPage.html":{}}}],["button[slot='fixed",{"_index":1195,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["buttons",{"_index":675,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["camera",{"_index":1672,"title":{},"body":{"injectables/PhotoService.html":{}}}],["camera.getphoto",{"_index":1681,"title":{},"body":{"injectables/PhotoService.html":{}}}],["cameraresulttype",{"_index":1673,"title":{},"body":{"injectables/PhotoService.html":{}}}],["cameraresulttype.base64",{"_index":1683,"title":{},"body":{"injectables/PhotoService.html":{}}}],["camerasource",{"_index":1674,"title":{},"body":{"injectables/PhotoService.html":{}}}],["camerasource.camera",{"_index":1684,"title":{},"body":{"injectables/PhotoService.html":{}}}],["campo",{"_index":2454,"title":{},"body":{"components/UniqueComponent.html":{}}}],["canactivate",{"_index":414,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["cancel",{"_index":677,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{}}}],["cancelar",{"_index":676,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{},"components/TypeaheadComponent.html":{}}}],["cancelchanges",{"_index":2326,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["canset",{"_index":984,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["canvas",{"_index":1136,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["capacitor/android",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":1352,"title":{},"body":{"components/HomePage.html":{},"dependencies.html":{}}}],["capacitor/camera",{"_index":1675,"title":{},"body":{"injectables/PhotoService.html":{},"dependencies.html":{}}}],["capacitor/core",{"_index":174,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{},"dependencies.html":{}}}],["capacitor/filesystem",{"_index":1678,"title":{},"body":{"injectables/PhotoService.html":{},"dependencies.html":{}}}],["capacitor/geolocation",{"_index":827,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"dependencies.html":{}}}],["capacitor/haptics",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["capacitor/ios",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["capacitor/network",{"_index":378,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{},"dependencies.html":{}}}],["capacitor/preferences",{"_index":177,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/PhotoService.html":{},"dependencies.html":{}}}],["capacitor/splash",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":2526,"title":{},"body":{"dependencies.html":{}}}],["capacitorhttp",{"_index":172,"title":{},"body":{"injectables/ApiService.html":{}}}],["capacitorhttp.post(options",{"_index":199,"title":{},"body":{"injectables/ApiService.html":{}}}],["capital",{"_index":1782,"title":{},"body":{"components/QuestionComponent.html":{}}}],["capturedphoto",{"_index":1680,"title":{},"body":{"injectables/PhotoService.html":{}}}],["capturedphoto.base64string",{"_index":1686,"title":{},"body":{"injectables/PhotoService.html":{}}}],["card",{"_index":1429,"title":{},"body":{"components/LoginPage.html":{}}}],["cargando",{"_index":1406,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["cargo",{"_index":1379,"title":{},"body":{"components/HomePage.html":{}}}],["casa",{"_index":339,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["case",{"_index":1830,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["catch",{"_index":876,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{}}}],["catch((err",{"_index":1017,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["catcherror",{"_index":2110,"title":{},"body":{"injectables/SurveyService.html":{}}}],["catcherror((error",{"_index":2134,"title":{},"body":{"injectables/SurveyService.html":{}}}],["category",{"_index":2562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cedula",{"_index":309,"title":{},"body":{"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Producer.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["center",{"_index":692,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{}}}],["cerrar",{"_index":1366,"title":{},"body":{"components/HomePage.html":{}}}],["changed",{"_index":2117,"title":{},"body":{"injectables/SurveyService.html":{}}}],["changeinputstate",{"_index":1498,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["changeinputstate(answergroup",{"_index":1508,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["changequestionid",{"_index":2203,"title":{},"body":{"components/TableComponent.html":{}}}],["changequestionid(base",{"_index":2215,"title":{},"body":{"components/TableComponent.html":{}}}],["changespecialized",{"_index":1030,"title":{},"body":{"injectables/DraftService.html":{}}}],["changespecialized(producer",{"_index":1041,"title":{},"body":{"injectables/DraftService.html":{}}}],["changesyncstatus",{"_index":2087,"title":{},"body":{"injectables/SurveyService.html":{}}}],["changesyncstatus(survey",{"_index":2097,"title":{},"body":{"injectables/SurveyService.html":{}}}],["check",{"_index":2373,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["checkandrelation",{"_index":89,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkandrelation(answerrelation",{"_index":106,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkanswer",{"_index":1499,"title":{},"body":{"components/MultipleComponent.html":{}}}],["checkanswer(event",{"_index":1511,"title":{},"body":{"components/MultipleComponent.html":{}}}],["checkanswerrelation",{"_index":91,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkanswerrelation(question",{"_index":108,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkbox",{"_index":1940,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["checkboxes",{"_index":1943,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["checkboxvalues",{"_index":1937,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["checkboxvalues.includes(true",{"_index":1939,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["checked",{"_index":9,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{}}}],["checkedanswersrelation",{"_index":2015,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["checkforevents",{"_index":1557,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["checkorrelation",{"_index":92,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkorrelation(answerrelation",{"_index":111,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["checkphonelistlength",{"_index":1634,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["checkphonelistlength(phones",{"_index":1638,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["child",{"_index":1312,"title":{},"body":{"injectables/FormService.html":{}}}],["childindex",{"_index":2221,"title":{},"body":{"components/TableComponent.html":{}}}],["childquestion",{"_index":2275,"title":{},"body":{"components/TableComponent.html":{}}}],["children",{"_index":1273,"title":{},"body":{"injectables/FormService.html":{}}}],["children.push(base",{"_index":1317,"title":{},"body":{"injectables/FormService.html":{}}}],["class",{"_index":123,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["clearpad",{"_index":1139,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["cm_p5",{"_index":338,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["color",{"_index":622,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{}}}],["comenzar",{"_index":895,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["commonmodule",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/LoginPage.html":{},"components/MultipleComponent.html":{},"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["como",{"_index":667,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["compatible",{"_index":1121,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["component",{"_index":200,"title":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["componente",{"_index":1794,"title":{},"body":{"components/QuestionComponent.html":{}}}],["components",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"index.html":{}}}],["components/detailed",{"_index":795,"title":{},"body":{"components/DetailPage.html":{}}}],["components/form",{"_index":1330,"title":{},"body":{"components/FormsPage.html":{},"components/SurveysPage.html":{}}}],["components/header/dataquest",{"_index":829,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["components/question/question.component",{"_index":828,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["components/typeahead/typeahead.component",{"_index":579,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["con",{"_index":844,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["conexión",{"_index":2147,"title":{},"body":{"injectables/SurveyService.html":{}}}],["confirm",{"_index":680,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["confirmchanges",{"_index":2327,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["confirmexit",{"_index":636,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["connectivity",{"_index":1255,"title":{},"body":{"injectables/FormService.html":{}}}],["console.error(error",{"_index":2135,"title":{},"body":{"injectables/SurveyService.html":{}}}],["console.log",{"_index":873,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["console.log('associationresponse",{"_index":399,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log('date",{"_index":763,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["console.log('enabled",{"_index":2284,"title":{},"body":{"components/TableComponent.html":{}}}],["console.log('formcontrol",{"_index":749,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["console.log('index",{"_index":2083,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('key",{"_index":2082,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('make",{"_index":1600,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["console.log('network",{"_index":2116,"title":{},"body":{"injectables/SurveyService.html":{}}}],["console.log('no",{"_index":1585,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["console.log('online",{"_index":2119,"title":{},"body":{"injectables/SurveyService.html":{}}}],["console.log('selectedanswer",{"_index":2253,"title":{},"body":{"components/TableComponent.html":{}}}],["console.log('selectedanswers",{"_index":2243,"title":{},"body":{"components/TableComponent.html":{}}}],["console.log('status",{"_index":389,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log('storage",{"_index":2073,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('stringdate",{"_index":752,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["console.log('syncassociations",{"_index":393,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log('value",{"_index":2084,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log(associationresponse",{"_index":400,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log(event",{"_index":1180,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["console.log(position.coords",{"_index":867,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["console.log(response",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SurveyService.html":{}}}],["console.log(status.connected",{"_index":390,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log(this.associations",{"_index":386,"title":{},"body":{"injectables/AssociationService.html":{}}}],["console.log(this.filteredquestions",{"_index":2004,"title":{},"body":{"injectables/QuestionService.html":{}}}],["console.log(updatedsurveys",{"_index":2144,"title":{},"body":{"injectables/SurveyService.html":{}}}],["console.log(years",{"_index":782,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["const",{"_index":124,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":95,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["constructor(alertcontroller",{"_index":1440,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{}}}],["constructor(answerrelationservice",{"_index":2210,"title":{},"body":{"components/TableComponent.html":{}}}],["constructor(apiservice",{"_index":360,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["constructor(authservice",{"_index":415,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["constructor(detailedformservice",{"_index":725,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["constructor(draftservice",{"_index":1734,"title":{},"body":{"components/QuestionComponent.html":{}}}],["constructor(fb",{"_index":1392,"title":{},"body":{"components/LoginPage.html":{}}}],["constructor(formservice",{"_index":931,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormsPage.html":{}}}],["constructor(formsservice",{"_index":1209,"title":{},"body":{"components/FormListComponent.html":{}}}],["constructor(httpclient",{"_index":153,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(photoservice",{"_index":1658,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["constructor(platform",{"_index":1092,"title":{},"body":{"components/DraftsPage.html":{},"components/TypeaheadComponent.html":{}}}],["constructor(private",{"_index":742,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/FormsPage.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"components/TypeaheadComponent.html":{}}}],["constructor(producersservice",{"_index":538,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["constructor(public",{"_index":422,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(questioncontrolservice",{"_index":1966,"title":{},"body":{"injectables/QuestionService.html":{}}}],["constructor(questionservice",{"_index":641,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["constructor(router",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(storage",{"_index":2052,"title":{},"body":{"injectables/StorageService.html":{}}}],["constructor(storageservice",{"_index":1039,"title":{},"body":{"injectables/DraftService.html":{},"injectables/OfflineManagerService.html":{}}}],["constructor(surveyservice",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/SurveysPage.html":{}}}],["contain",{"_index":2375,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["container",{"_index":687,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/LoginPage.html":{}}}],["container's",{"_index":707,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["containing",{"_index":1277,"title":{},"body":{"injectables/FormService.html":{}}}],["content",{"_index":193,"title":{},"body":{"injectables/ApiService.html":{},"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/SurveysPage.html":{}}}],["continuación",{"_index":1790,"title":{},"body":{"components/QuestionComponent.html":{}}}],["continuar",{"_index":1812,"title":{},"body":{"components/QuestionComponent.html":{}}}],["contraseña",{"_index":1414,"title":{},"body":{"components/LoginPage.html":{}}}],["control",{"_index":1490,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["control.service",{"_index":1994,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["control.service.ts",{"_index":1881,"title":{},"body":{"injectables/QuestionControlService.html":{},"coverage.html":{}}}],["control.service.ts:103",{"_index":1897,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:127",{"_index":1894,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:140",{"_index":1904,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:155",{"_index":1905,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:17",{"_index":1891,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:20",{"_index":1907,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:29",{"_index":1903,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:39",{"_index":1893,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:53",{"_index":1899,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.service.ts:78",{"_index":1901,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["control.value",{"_index":1492,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["control/question",{"_index":1993,"title":{},"body":{"injectables/QuestionService.html":{}}}],["convert",{"_index":1300,"title":{},"body":{"injectables/FormService.html":{}}}],["conéctese",{"_index":2149,"title":{},"body":{"injectables/SurveyService.html":{}}}],["cop",{"_index":1466,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["copy",{"_index":1020,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/SurveyService.html":{}}}],["copy.uuid",{"_index":1022,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["cordova",{"_index":2533,"title":{},"body":{"dependencies.html":{}}}],["cordovasqlitedriver",{"_index":2066,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["corresponden",{"_index":1793,"title":{},"body":{"components/QuestionComponent.html":{}}}],["coverage",{"_index":2462,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1787,"title":{},"body":{"components/QuestionComponent.html":{}}}],["created_at",{"_index":443,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["creationdate",{"_index":436,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["credentials",{"_index":446,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["cssclass",{"_index":678,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{}}}],["cultivo",{"_index":2430,"title":{},"body":{"components/UniqueComponent.html":{}}}],["currency",{"_index":1464,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["currencypipe",{"_index":1441,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["current",{"_index":1263,"title":{},"body":{"injectables/FormService.html":{},"injectables/QuestionService.html":{}}}],["currentdate",{"_index":1057,"title":{},"body":{"injectables/DraftService.html":{},"injectables/FormService.html":{}}}],["currentdate.toisostring",{"_index":1058,"title":{},"body":{"injectables/DraftService.html":{},"injectables/FormService.html":{}}}],["currentindex",{"_index":2021,"title":{},"body":{"injectables/QuestionService.html":{}}}],["currentposition",{"_index":2030,"title":{},"body":{"injectables/QuestionService.html":{}}}],["currentprogress",{"_index":2034,"title":{},"body":{"injectables/QuestionService.html":{}}}],["currentquestion",{"_index":1719,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["cursor",{"_index":1873,"title":{},"body":{"components/QuestionComponent.html":{}}}],["d.id",{"_index":1084,"title":{},"body":{"injectables/DraftService.html":{}}}],["d.uuid",{"_index":1072,"title":{},"body":{"injectables/DraftService.html":{}}}],["danger",{"_index":681,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["data",{"_index":197,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"interfaces/StoredRequest.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["data.pop",{"_index":1189,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["data:image/jpeg;base64,${photobase64",{"_index":1664,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["dataquest",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["dataquestheadercomponent",{"_index":246,"title":{"components/DataquestHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["datatype",{"_index":49,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["date",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["date().gettime",{"_index":1591,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["date(control.value",{"_index":1493,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["date(draft.fechaultimocambio",{"_index":1082,"title":{},"body":{"injectables/DraftService.html":{}}}],["date(form.dateend",{"_index":1305,"title":{},"body":{"injectables/FormService.html":{}}}],["date(form.dateinit",{"_index":1303,"title":{},"body":{"injectables/FormService.html":{}}}],["date(this.getform().fechadescarga",{"_index":882,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["date(value",{"_index":770,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["date.getfullyear",{"_index":784,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["date.setfullyear(newyear",{"_index":785,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["date.toisostring",{"_index":787,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{}}}],["date.tolocaledatestring('es",{"_index":773,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["datedatatypecomponent",{"_index":249,"title":{"components/DateDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["dateend",{"_index":36,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["dateinit",{"_index":35,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["datethreshold",{"_index":1078,"title":{},"body":{"injectables/DraftService.html":{}}}],["datethreshold.setdate(datethreshold.getdate",{"_index":1079,"title":{},"body":{"injectables/DraftService.html":{}}}],["datetimeelement",{"_index":766,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["datetimeelement.value",{"_index":769,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["day",{"_index":755,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["de",{"_index":346,"title":{},"body":{"interfaces/Association.html":{},"components/DetailedFormComponent.html":{},"interfaces/Producer.html":{},"components/QuestionComponent.html":{}}}],["debes",{"_index":1009,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["decimalseparator",{"_index":1454,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["decimalzeropadding",{"_index":1451,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["decode",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodetoken",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodetoken(token",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoration",{"_index":913,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["decorators",{"_index":568,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{}}}],["default",{"_index":168,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":96,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["del",{"_index":850,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["deletedraft",{"_index":1031,"title":{},"body":{"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["deletedraft(index",{"_index":1043,"title":{},"body":{"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["deletedtoast",{"_index":1110,"title":{},"body":{"components/DraftsPage.html":{}}}],["deletedtoast.present",{"_index":1116,"title":{},"body":{"components/DraftsPage.html":{}}}],["deletionalert",{"_index":1101,"title":{},"body":{"components/DraftsPage.html":{}}}],["deletionalert.present",{"_index":1117,"title":{},"body":{"components/DraftsPage.html":{}}}],["demonstrationplot",{"_index":316,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["demostrativa",{"_index":337,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["dependencies",{"_index":1244,"title":{"dependencies.html":{}},"body":{"injectables/FormService.html":{},"dependencies.html":{}}}],["desarrollado",{"_index":1417,"title":{},"body":{"components/LoginPage.html":{}}}],["desarrollo",{"_index":1796,"title":{},"body":{"components/QuestionComponent.html":{}}}],["descargada",{"_index":885,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["description",{"_index":39,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"properties.html":{}}}],["desde",{"_index":1126,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["desea",{"_index":669,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["deseas",{"_index":1363,"title":{},"body":{"components/HomePage.html":{}}}],["deshabilitados",{"_index":879,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["deshacer",{"_index":1107,"title":{},"body":{"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{}}}],["detail",{"_index":789,"title":{},"body":{"components/DetailPage.html":{},"injectables/FormService.html":{},"miscellaneous/variables.html":{}}}],["detail'},{'name",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["detail.page.html",{"_index":792,"title":{},"body":{"components/DetailPage.html":{}}}],["detail.page.scss",{"_index":791,"title":{},"body":{"components/DetailPage.html":{}}}],["detailed",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["detailedformcomponent",{"_index":252,"title":{"components/DetailedFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["detailedformservice",{"_index":541,"title":{"injectables/DetailedFormService.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["detailedformservice.getform",{"_index":2595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detailpage",{"_index":255,"title":{"components/DetailPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["details",{"_index":1323,"title":{},"body":{"injectables/FormService.html":{},"miscellaneous/variables.html":{}}}],["detailsguard",{"_index":2485,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":1182,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"injectables/FormService.html":{}}}],["directive",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["directives",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["directory",{"_index":1677,"title":{},"body":{"injectables/PhotoService.html":{}}}],["disabled",{"_index":535,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["disabledremovebutton",{"_index":1630,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["disablequestion",{"_index":93,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["disablequestion(question",{"_index":113,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["display",{"_index":689,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhoneDataTypeComponent.html":{}}}],["dispositivo",{"_index":851,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["div",{"_index":1653,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["documentation",{"_index":2463,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":705,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["dom",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["draft",{"_index":916,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/FormListComponent.html":{}}}],["draft.beneficiary.id",{"_index":995,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["draft.dateend",{"_index":1129,"title":{},"body":{"components/DraftsPage.html":{}}}],["draft.description",{"_index":1131,"title":{},"body":{"components/DraftsPage.html":{}}}],["draft.fechainicial",{"_index":1059,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.fechaultimocambio",{"_index":1060,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.id",{"_index":1085,"title":{},"body":{"injectables/DraftService.html":{}}}],["draft.name",{"_index":1128,"title":{},"body":{"components/DraftsPage.html":{}}}],["draft.questions[0].answers[0].value",{"_index":1130,"title":{},"body":{"components/DraftsPage.html":{}}}],["draft.uuid",{"_index":1073,"title":{},"body":{"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["draft/draft.service",{"_index":968,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["drafts",{"_index":990,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["drafts'},{'name",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["drafts.page.html",{"_index":1089,"title":{},"body":{"components/DraftsPage.html":{}}}],["drafts.page.scss",{"_index":1088,"title":{},"body":{"components/DraftsPage.html":{}}}],["drafts.some((draft",{"_index":994,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["draftservice",{"_index":223,"title":{"injectables/DraftService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"coverage.html":{}}}],["draftspage",{"_index":257,"title":{"components/DraftsPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["drafttype",{"_index":949,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["drawing",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["drawingpaddatatypecomponent",{"_index":259,"title":{"components/DrawingPadDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["duration",{"_index":1114,"title":{},"body":{"components/DraftsPage.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["dynamic",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":1310,"title":{},"body":{"injectables/FormService.html":{}}}],["el",{"_index":672,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/UniqueComponent.html":{}}}],["element",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["element.checked",{"_index":1528,"title":{},"body":{"components/MultipleComponent.html":{}}}],["elementref",{"_index":1157,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["elimina",{"_index":1003,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["eliminado",{"_index":1112,"title":{},"body":{"components/DraftsPage.html":{}}}],["eliminar",{"_index":1108,"title":{},"body":{"components/DraftsPage.html":{},"components/PhoneDataTypeComponent.html":{}}}],["email",{"_index":180,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["email_verified_at",{"_index":440,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["emaildatatypecomponent",{"_index":262,"title":{"components/EmailDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["emailverifiedat",{"_index":433,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["en",{"_index":855,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["enabled",{"_index":2282,"title":{},"body":{"components/TableComponent.html":{}}}],["enablequestion",{"_index":94,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["enablequestion(question",{"_index":116,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["encuesta",{"_index":884,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["encuestas",{"_index":1374,"title":{},"body":{"components/HomePage.html":{},"injectables/SurveyService.html":{}}}],["end",{"_index":1654,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["endpoint",{"_index":159,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":699,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["entre",{"_index":1482,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["environment",{"_index":175,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.url",{"_index":169,"title":{},"body":{"injectables/ApiService.html":{}}}],["environmentinjector",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["err",{"_index":1018,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["error",{"_index":877,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{}}}],["error(response.data.error",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.message",{"_index":1411,"title":{},"body":{"components/LoginPage.html":{}}}],["errors",{"_index":2451,"title":{},"body":{"components/UniqueComponent.html":{}}}],["errors?.max",{"_index":2457,"title":{},"body":{"components/UniqueComponent.html":{}}}],["errors?.min",{"_index":2456,"title":{},"body":{"components/UniqueComponent.html":{}}}],["errors?.required",{"_index":2453,"title":{},"body":{"components/UniqueComponent.html":{}}}],["es",{"_index":774,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["escoge",{"_index":1006,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["espacial",{"_index":342,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["especializado",{"_index":1002,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["esta",{"_index":1104,"title":{},"body":{"components/DraftsPage.html":{}}}],["este",{"_index":1013,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/HomePage.html":{},"components/UniqueComponent.html":{}}}],["estás",{"_index":1102,"title":{},"body":{"components/DraftsPage.html":{},"components/HomePage.html":{}}}],["ev",{"_index":2357,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["event",{"_index":740,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["event.detail.value",{"_index":1534,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["event.target",{"_index":767,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["event.target.complete",{"_index":1223,"title":{},"body":{"components/FormListComponent.html":{}}}],["event.target.value.length",{"_index":1651,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["eventemitter",{"_index":2340,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["events",{"_index":1586,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["eventtarget",{"_index":2444,"title":{},"body":{"components/UniqueComponent.html":{}}}],["eventtarget.value",{"_index":2445,"title":{},"body":{"components/UniqueComponent.html":{}}}],["everyanswerisselected",{"_index":133,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["exceed",{"_index":706,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["exists",{"_index":989,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["existsproducerwithspecializedform",{"_index":920,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["existsproducerwithspecializedform(producertosearch",{"_index":933,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["exitosamente",{"_index":1113,"title":{},"body":{"components/DraftsPage.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["extendable",{"_index":51,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["extends",{"_index":62,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["f4f4f4",{"_index":1878,"title":{},"body":{"components/QuestionComponent.html":{}}}],["fails",{"_index":1944,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["false",{"_index":324,"title":{},"body":{"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["farming",{"_index":304,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"components/UniqueComponent.html":{}}}],["favor",{"_index":853,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["fb",{"_index":1395,"title":{},"body":{"components/LoginPage.html":{}}}],["fechacarga",{"_index":31,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["fechadescarga",{"_index":28,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["fechainicial",{"_index":29,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["fechaultimocambio",{"_index":30,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["fetch",{"_index":1260,"title":{},"body":{"injectables/FormService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["filesystem",{"_index":1676,"title":{},"body":{"injectables/PhotoService.html":{}}}],["filtered",{"_index":1262,"title":{},"body":{"injectables/FormService.html":{}}}],["filtereditems",{"_index":2324,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["filteredquestions",{"_index":1952,"title":{},"body":{"injectables/QuestionService.html":{}}}],["filterlist",{"_index":2328,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["filterlist(searchquery",{"_index":2345,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["finaldate",{"_index":1304,"title":{},"body":{"injectables/FormService.html":{}}}],["finaliza",{"_index":890,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["finalize",{"_index":1570,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["finally",{"_index":1264,"title":{},"body":{"injectables/FormService.html":{}}}],["firstname",{"_index":310,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["firstquestion",{"_index":1826,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["firstquestion.id",{"_index":1828,"title":{},"body":{"components/QuestionComponent.html":{}}}],["fit",{"_index":2193,"title":{},"body":{"components/SurveysPage.html":{}}}],["flex",{"_index":690,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{},"components/PhoneDataTypeComponent.html":{}}}],["float",{"_index":1231,"title":{},"body":{"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["fns",{"_index":2536,"title":{},"body":{"dependencies.html":{}}}],["font",{"_index":709,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{}}}],["forcerefresh",{"_index":373,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ProducerService.html":{}}}],["forkjoin",{"_index":1569,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["forkjoin(obs",{"_index":1606,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["forkjoin(syncrequests).subscribe((syncresults",{"_index":2137,"title":{},"body":{"injectables/SurveyService.html":{}}}],["form",{"_index":25,"title":{"interfaces/Form.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["form'},{'name",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["form.component",{"_index":796,"title":{},"body":{"components/DetailPage.html":{}}}],["form.component.html",{"_index":800,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.scss",{"_index":799,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts",{"_index":798,"title":{},"body":{"components/DetailedFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:121",{"_index":816,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:125",{"_index":817,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:24",{"_index":812,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:33",{"_index":821,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:37",{"_index":813,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:41",{"_index":819,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:45",{"_index":818,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:49",{"_index":820,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:53",{"_index":823,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:59",{"_index":824,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:63",{"_index":822,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.component.ts:67",{"_index":815,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["form.dateend",{"_index":1228,"title":{},"body":{"components/FormListComponent.html":{}}}],["form.description",{"_index":1230,"title":{},"body":{"components/FormListComponent.html":{}}}],["form.name",{"_index":1227,"title":{},"body":{"components/FormListComponent.html":{}}}],["form.questions.foreach((q",{"_index":1311,"title":{},"body":{"injectables/FormService.html":{}}}],["form.questions[0].answers[0].value",{"_index":1229,"title":{},"body":{"components/FormListComponent.html":{}}}],["form.service",{"_index":583,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["form.service.ts",{"_index":915,"title":{},"body":{"injectables/DetailedFormService.html":{},"coverage.html":{}}}],["form.service.ts:102",{"_index":934,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:131",{"_index":956,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:140",{"_index":957,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:150",{"_index":952,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:154",{"_index":937,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:165",{"_index":938,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:169",{"_index":958,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:17",{"_index":962,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:178",{"_index":943,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:18",{"_index":961,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:186",{"_index":959,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:19",{"_index":960,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:20",{"_index":963,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:21",{"_index":932,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:31",{"_index":936,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:35",{"_index":940,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:39",{"_index":939,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:43",{"_index":942,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:47",{"_index":951,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:62",{"_index":954,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:66",{"_index":941,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.service.ts:70",{"_index":945,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form.uuid",{"_index":1226,"title":{},"body":{"components/FormListComponent.html":{}}}],["form/control/question",{"_index":1880,"title":{},"body":{"injectables/QuestionControlService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["form/detailed",{"_index":582,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["form/form.service",{"_index":964,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["form/question/answer",{"_index":83,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["form/question/photo/photo.service",{"_index":1660,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["form/question/photo/photo.service.ts",{"_index":1669,"title":{},"body":{"injectables/PhotoService.html":{},"coverage.html":{}}}],["form/question/photo/photo.service.ts:13",{"_index":1671,"title":{},"body":{"injectables/PhotoService.html":{}}}],["form/question/photo/photo.service.ts:9",{"_index":1670,"title":{},"body":{"injectables/PhotoService.html":{}}}],["form/question/question.service",{"_index":652,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/OpenComponent.html":{},"components/QuestionComponent.html":{},"components/UniqueComponent.html":{}}}],["form/question/question.service.ts",{"_index":1951,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["form/question/question.service.ts:108",{"_index":1983,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:12",{"_index":1991,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:128",{"_index":1984,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:13",{"_index":1992,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:132",{"_index":1990,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:139",{"_index":1974,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:14",{"_index":1967,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:143",{"_index":1969,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:147",{"_index":1968,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:29",{"_index":1979,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:33",{"_index":1986,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:47",{"_index":1978,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:51",{"_index":1972,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:55",{"_index":1973,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:60",{"_index":1975,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:66",{"_index":1977,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:75",{"_index":1988,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:94",{"_index":1971,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form/question/question.service.ts:99",{"_index":1981,"title":{},"body":{"injectables/QuestionService.html":{}}}],["form_id",{"_index":45,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["formarray",{"_index":1770,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"components/TableComponent.html":{}}}],["formarray.at(0",{"_index":2242,"title":{},"body":{"components/TableComponent.html":{}}}],["formarray.at(index",{"_index":2273,"title":{},"body":{"components/TableComponent.html":{}}}],["formarray.controls",{"_index":1949,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formarray.push(newformgroup",{"_index":2260,"title":{},"body":{"components/TableComponent.html":{}}}],["formarray.removeat(formarray.length",{"_index":2268,"title":{},"body":{"components/TableComponent.html":{}}}],["formatteddate",{"_index":786,"title":{},"body":{"components/DateDataTypeComponent.html":{},"injectables/DraftService.html":{}}}],["formbuilder",{"_index":576,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/FormService.html":{},"components/LoginPage.html":{},"injectables/QuestionControlService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["formbuilder(form",{"_index":1291,"title":{},"body":{"injectables/FormService.html":{},"miscellaneous/functions.html":{}}}],["formcontrol",{"_index":577,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/QuestionControlService.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["formcontrol(answer.checked",{"_index":1926,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formcontrol(answer.value",{"_index":1920,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formcontrol(value",{"_index":1930,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formcontrol.addvalidators(validators.max(this.question.max",{"_index":1463,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.addvalidators(validators.min(this.question.min",{"_index":1462,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.geterror('max",{"_index":1475,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.geterror('min",{"_index":1469,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.setvalue(association.name",{"_index":2297,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["formcontrol.setvalue(element.value",{"_index":1552,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["formcontrol.setvalue(maskitoparsenumber(element.value",{"_index":1468,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["formcontrol.setvalue(selection",{"_index":610,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["formcontrol.setvalue(transplantdate",{"_index":748,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["formcontrol.setvalue(value",{"_index":1531,"title":{},"body":{"components/MultipleComponent.html":{}}}],["formcontrol.value",{"_index":594,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{}}}],["formdetail",{"_index":24,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["formdetail.answer",{"_index":1514,"title":{},"body":{"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["formdetail.answerpivot",{"_index":2558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formdetail.answerrelation",{"_index":99,"title":{},"body":{"injectables/AnswerRelationService.html":{},"miscellaneous/functions.html":{}}}],["formdetail.form",{"_index":814,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"miscellaneous/functions.html":{}}}],["formdetail.formresponse",{"_index":1288,"title":{},"body":{"injectables/FormService.html":{}}}],["formdetail.question",{"_index":109,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FormService.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["formdetail.questioncategory",{"_index":2563,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formgroup",{"_index":100,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["formgroup(group",{"_index":1913,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formgroup.addcontrol",{"_index":1929,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formgroup.controls",{"_index":1836,"title":{},"body":{"components/QuestionComponent.html":{}}}],["formgroup.controls[key].invalid",{"_index":1947,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formgroup.controls[lastansweredquestion.id.tostring()].valid",{"_index":1805,"title":{},"body":{"components/QuestionComponent.html":{}}}],["formgroup.controls[question.id].value",{"_index":1866,"title":{},"body":{"components/QuestionComponent.html":{}}}],["formgroup.get(`${order",{"_index":1650,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["formgroup.get(answer.id.tostring",{"_index":1526,"title":{},"body":{"components/MultipleComponent.html":{}}}],["formgroup.get(id)!.disabled",{"_index":2027,"title":{},"body":{"injectables/QuestionService.html":{}}}],["formgroup.get(id.tostring",{"_index":1529,"title":{},"body":{"components/MultipleComponent.html":{}}}],["formgroup.get(questionid)?.disable",{"_index":144,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["formgroup.get(questionid)?.enable",{"_index":145,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["formgroup.get(questionid)?.reset",{"_index":143,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["formgroup.valid",{"_index":1950,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["formgroupdirective",{"_index":578,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["formid",{"_index":64,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["formlistcomponent",{"_index":263,"title":{"components/FormListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["formresponse",{"_index":41,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"miscellaneous/typealiases.html":{}}}],["forms",{"_index":1208,"title":{},"body":{"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"miscellaneous/variables.html":{}}}],["forms'},{'name",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["forms.filter((form",{"_index":1301,"title":{},"body":{"injectables/FormService.html":{}}}],["forms.page.html",{"_index":1326,"title":{},"body":{"components/FormsPage.html":{}}}],["forms.page.scss",{"_index":1325,"title":{},"body":{"components/FormsPage.html":{}}}],["forms_storage_key",{"_index":1322,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formsendpoint",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formservice",{"_index":810,"title":{"injectables/FormService.html":{}},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"coverage.html":{}}}],["formsmodule",{"_index":790,"title":{},"body":{"components/DetailPage.html":{},"components/LoginPage.html":{}}}],["formspage",{"_index":265,"title":{"components/FormsPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["formsresponse",{"_index":1287,"title":{},"body":{"injectables/FormService.html":{}}}],["formsresponse.map",{"_index":1289,"title":{},"body":{"injectables/FormService.html":{}}}],["formsservice",{"_index":1211,"title":{},"body":{"components/FormListComponent.html":{}}}],["formtosend",{"_index":1099,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["formtype",{"_index":948,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["formulario",{"_index":896,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["formularios",{"_index":1372,"title":{},"body":{"components/HomePage.html":{}}}],["framework",{"_index":2575,"title":{},"body":{"properties.html":{}}}],["from(network.getstatus()).pipe",{"_index":387,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["from(this.apiservice.post(endpoint",{"_index":2130,"title":{},"body":{"injectables/SurveyService.html":{}}}],["from(this.apiservice.post(endpoint)).pipe",{"_index":394,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["from(this.getlocalassociations",{"_index":392,"title":{},"body":{"injectables/AssociationService.html":{}}}],["from(this.storageservice.get(storage_req_key)).pipe",{"_index":1571,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["full",{"_index":702,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["fullsavedstring",{"_index":1853,"title":{},"body":{"components/QuestionComponent.html":{}}}],["fullsavedstring.split",{"_index":1857,"title":{},"body":{"components/QuestionComponent.html":{}}}],["function",{"_index":430,"title":{},"body":{"interfaces/AuthManagement.html":{},"coverage.html":{}}}],["functions",{"_index":2553,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":1376,"title":{},"body":{"components/HomePage.html":{}}}],["generateformarray",{"_index":1884,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformarray(question",{"_index":1896,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformcontrol",{"_index":1885,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformcontrol(question",{"_index":1898,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformgroup",{"_index":1886,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateformgroup(question",{"_index":1900,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["generateuuid",{"_index":1032,"title":{},"body":{"injectables/DraftService.html":{}}}],["genericmessage",{"_index":1813,"title":{},"body":{"components/QuestionComponent.html":{}}}],["geolocation",{"_index":826,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["geolocation.checkpermissions",{"_index":839,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["geolocation.getcurrentposition",{"_index":866,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["geolocation.requestpermissions",{"_index":862,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["get(answerid.tostring())!.value",{"_index":141,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["get(endpoint",{"_index":156,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(key",{"_index":2054,"title":{},"body":{"injectables/StorageService.html":{}}}],["get(questionid",{"_index":140,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["getall",{"_index":150,"title":{},"body":{"injectables/ApiService.html":{}}}],["getall(endpoint",{"_index":161,"title":{},"body":{"injectables/ApiService.html":{}}}],["getanswerid",{"_index":525,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getanswerid(value",{"_index":553,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getanswers",{"_index":526,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["getappversion",{"_index":1338,"title":{},"body":{"components/HomePage.html":{}}}],["getassociation",{"_index":2287,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["getassociationbyid",{"_index":355,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getassociationbyid(id",{"_index":363,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getassociations",{"_index":356,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getcategory",{"_index":1720,"title":{},"body":{"components/QuestionComponent.html":{},"components/TableComponent.html":{},"components/TypeComponent.html":{}}}],["getcheckedanswerid",{"_index":2385,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getcheckedanswerid(answersformgroup",{"_index":2401,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getchildquestion",{"_index":2204,"title":{},"body":{"components/TableComponent.html":{}}}],["getchildquestion(sectionindex",{"_index":2220,"title":{},"body":{"components/TableComponent.html":{}}}],["getcurrentindex",{"_index":1954,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getcurrentindex(current",{"_index":1970,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getdata",{"_index":527,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getdatatype",{"_index":1611,"title":{},"body":{"components/OpenComponent.html":{},"components/TypeComponent.html":{}}}],["getdrafts",{"_index":1033,"title":{},"body":{"injectables/DraftService.html":{},"components/DraftsPage.html":{}}}],["getfilteredlength",{"_index":1955,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getfilteredquestions",{"_index":1997,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getfirst",{"_index":1956,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getform",{"_index":801,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["getform().dateend",{"_index":891,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["getform().dateinit",{"_index":889,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["getform().description",{"_index":894,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["getform().name",{"_index":886,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["getformcontrol",{"_index":1887,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["getformcontrol(question",{"_index":1902,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["getformgroup",{"_index":1957,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["getformgroup(index",{"_index":2224,"title":{},"body":{"components/TableComponent.html":{}}}],["getforms",{"_index":1239,"title":{},"body":{"injectables/FormService.html":{}}}],["gethelpertext",{"_index":1438,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["getlast",{"_index":1958,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getlastansweredquestion",{"_index":1803,"title":{},"body":{"components/QuestionComponent.html":{}}}],["getlocalassociations",{"_index":357,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getlocaldrafts",{"_index":1034,"title":{},"body":{"injectables/DraftService.html":{}}}],["getlocalforms",{"_index":1240,"title":{},"body":{"injectables/FormService.html":{}}}],["getlocalproducers",{"_index":1688,"title":{},"body":{"injectables/ProducerService.html":{}}}],["getlocalsurveys",{"_index":2088,"title":{},"body":{"injectables/SurveyService.html":{}}}],["getlocation",{"_index":802,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["getmaxdate",{"_index":719,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["getmindate",{"_index":720,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["getnetworkstatus",{"_index":2089,"title":{},"body":{"injectables/SurveyService.html":{}}}],["getnewyear",{"_index":721,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["getnewyear(years",{"_index":731,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["getnextquestion",{"_index":1959,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getnextquestion(current",{"_index":1976,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getorder",{"_index":2205,"title":{},"body":{"components/TableComponent.html":{},"components/TypeComponent.html":{}}}],["getoriginallength",{"_index":1960,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getoriginalquestions",{"_index":1961,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getothererrormessage",{"_index":2386,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getotherplaceholder",{"_index":2387,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getothervalue",{"_index":2388,"title":{},"body":{"components/UniqueComponent.html":{}}}],["getphoto",{"_index":1656,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["getplaceholder",{"_index":1548,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["getpreviousquestion",{"_index":1962,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getpreviousquestion(current",{"_index":1980,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getpreviousvalidquestionfrom",{"_index":1963,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getpreviousvalidquestionfrom(question",{"_index":1982,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getproducers",{"_index":1689,"title":{},"body":{"injectables/ProducerService.html":{}}}],["getprogress",{"_index":637,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/QuestionService.html":{}}}],["getquestionchildren",{"_index":1241,"title":{},"body":{"injectables/FormService.html":{},"components/TableComponent.html":{}}}],["getquestionchildren(question",{"_index":1271,"title":{},"body":{"injectables/FormService.html":{}}}],["getquestionvalue",{"_index":528,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getselectedvalue",{"_index":529,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getselectedvalue(answersformgroup",{"_index":558,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["getsurveys",{"_index":2090,"title":{},"body":{"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["getsyncedratio",{"_index":2158,"title":{},"body":{"components/SurveysPage.html":{}}}],["getsyncedsurveys",{"_index":2159,"title":{},"body":{"components/SurveysPage.html":{}}}],["gettext",{"_index":2206,"title":{},"body":{"components/TableComponent.html":{},"components/TypeComponent.html":{}}}],["gettextvalue",{"_index":1500,"title":{},"body":{"components/MultipleComponent.html":{}}}],["gettoken",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettotalquestions",{"_index":803,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["gettransformeddownladeddate",{"_index":804,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["gettype",{"_index":1721,"title":{},"body":{"components/QuestionComponent.html":{},"components/TypeComponent.html":{}}}],["getunsyncedratio",{"_index":2160,"title":{},"body":{"components/SurveysPage.html":{}}}],["getunsyncedsurveys",{"_index":2161,"title":{},"body":{"components/SurveysPage.html":{}}}],["getuser",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["getvalue",{"_index":722,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["getvalue(order",{"_index":1640,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["given",{"_index":1274,"title":{},"body":{"injectables/FormService.html":{}}}],["gotodetail",{"_index":1090,"title":{},"body":{"components/DraftsPage.html":{},"components/SurveysPage.html":{}}}],["gotodetail(formtosend",{"_index":1097,"title":{},"body":{"components/DraftsPage.html":{}}}],["gotodetail(survey",{"_index":2168,"title":{},"body":{"components/SurveysPage.html":{}}}],["granted",{"_index":841,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["gray",{"_index":1871,"title":{},"body":{"components/QuestionComponent.html":{}}}],["greenhouse",{"_index":317,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["grid",{"_index":1419,"title":{},"body":{"components/LoginPage.html":{}}}],["group",{"_index":1909,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[answer.id",{"_index":1925,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[answer.order",{"_index":1919,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[child.id",{"_index":1932,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["group[question.id",{"_index":1911,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["guardar",{"_index":666,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/QuestionComponent.html":{}}}],["habilita",{"_index":854,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["handled",{"_index":1237,"title":{},"body":{"injectables/FormService.html":{}}}],["handler",{"_index":682,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{}}}],["handlerefresh",{"_index":1205,"title":{},"body":{"components/FormListComponent.html":{}}}],["handlerefresh(event",{"_index":1215,"title":{},"body":{"components/FormListComponent.html":{}}}],["has_especializada",{"_index":331,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["hay",{"_index":2146,"title":{},"body":{"injectables/SurveyService.html":{}}}],["header",{"_index":631,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["header'},{'name",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["header.component",{"_index":830,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["header.component.html",{"_index":633,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.scss",{"_index":632,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts",{"_index":630,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:15",{"_index":645,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":644,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":651,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:30",{"_index":648,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:34",{"_index":646,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:41",{"_index":647,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:71",{"_index":650,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header.component.ts:75",{"_index":649,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["header/dataquest",{"_index":629,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{},"coverage.html":{}}}],["headers",{"_index":192,"title":{},"body":{"injectables/ApiService.html":{}}}],["hecho",{"_index":2381,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["height",{"_index":697,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{},"components/SurveysPage.html":{}}}],["here",{"_index":1238,"title":{},"body":{"injectables/FormService.html":{}}}],["home",{"_index":1334,"title":{},"body":{"components/HomePage.html":{}}}],["home'},{'name",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["home.page.html",{"_index":1336,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1335,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":267,"title":{"components/HomePage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"properties.html":{}}}],["horizontally",{"_index":693,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["hover",{"_index":1877,"title":{},"body":{"components/QuestionComponent.html":{}}}],["html",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["htmlinputelement",{"_index":768,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["htmlionalertelement",{"_index":1471,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["htmlioninputelement",{"_index":1467,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["htmlioninputelement).getinputelement",{"_index":1461,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["htmlionmodalelement",{"_index":1349,"title":{},"body":{"components/HomePage.html":{}}}],["http://192.168.1.18:3000",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":154,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpresponse",{"_index":173,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{}}}],["https://ionicframework.com",{"_index":2573,"title":{},"body":{"properties.html":{}}}],["https://pif5.blaucast.com",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://programaintegraldefruticultura.com.co",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":708,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{}}}],["id",{"_index":10,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/ApiService.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"interfaces/Form.html":{},"components/MultipleComponent.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionService.html":{},"interfaces/StoredRequest.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["id.tostring",{"_index":1530,"title":{},"body":{"components/MultipleComponent.html":{},"components/TableComponent.html":{}}}],["idcard",{"_index":434,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["identification",{"_index":305,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["identifier",{"_index":2464,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":704,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["img",{"_index":686,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["img::part(image",{"_index":1666,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["implements",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["import",{"_index":19,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["imports",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1784,"title":{},"body":{"components/QuestionComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["info.version",{"_index":1357,"title":{},"body":{"components/HomePage.html":{}}}],["información",{"_index":1375,"title":{},"body":{"components/HomePage.html":{}}}],["ingresa",{"_index":1125,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["ingrese",{"_index":1412,"title":{},"body":{"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["iniciado",{"_index":888,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["iniciar",{"_index":1416,"title":{},"body":{"components/LoginPage.html":{}}}],["init",{"_index":2047,"title":{},"body":{"injectables/StorageService.html":{}}}],["initialdate",{"_index":1302,"title":{},"body":{"injectables/FormService.html":{}}}],["initializeapp",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(detailedformservice",{"_index":2593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(environmentinjector",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(router",{"_index":2594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":79,"title":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{}},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["injectables",{"_index":81,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"index.html":{}}}],["injected",{"_index":1245,"title":{},"body":{"injectables/FormService.html":{}}}],["inner",{"_index":2040,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["inner.jpg",{"_index":1384,"title":{},"body":{"components/HomePage.html":{}}}],["input",{"_index":573,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["inputchangeeventdetail",{"_index":2420,"title":{},"body":{"components/UniqueComponent.html":{}}}],["inputcustomevent",{"_index":2421,"title":{},"body":{"components/UniqueComponent.html":{}}}],["inputs",{"_index":534,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["instanceof",{"_index":1936,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["insumo_p5",{"_index":343,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["insumos",{"_index":344,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["intentarlo",{"_index":859,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"interfaces/User.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Form.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"interfaces/User.html":{},"index.html":{}}}],["internet",{"_index":2148,"title":{},"body":{"injectables/SurveyService.html":{}}}],["intl.datetimeformatoptions",{"_index":771,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["invalid",{"_index":2447,"title":{},"body":{"components/UniqueComponent.html":{}}}],["invalidcontrols",{"_index":1945,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["invalidcontrols.length",{"_index":1948,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["invernadero",{"_index":341,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["ion",{"_index":619,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{}}}],["ionic",{"_index":2571,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"dependencies.html":{}}}],["ionic/storage",{"_index":2064,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["ionicons",{"_index":2538,"title":{},"body":{"dependencies.html":{}}}],["ionmodal",{"_index":567,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["ionviewwillenter",{"_index":1091,"title":{},"body":{"components/DraftsPage.html":{},"components/SurveysPage.html":{}}}],["isassociationquestion",{"_index":2293,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["ischecked",{"_index":1501,"title":{},"body":{"components/MultipleComponent.html":{}}}],["ischecked(answer",{"_index":1516,"title":{},"body":{"components/MultipleComponent.html":{}}}],["isdraft",{"_index":638,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["isfarmingquestion",{"_index":2429,"title":{},"body":{"components/UniqueComponent.html":{}}}],["isfirstquestion",{"_index":1722,"title":{},"body":{"components/QuestionComponent.html":{}}}],["isform",{"_index":639,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["islast",{"_index":1544,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["islastanswer",{"_index":1502,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["islastanswer(id",{"_index":1518,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["islastquestion",{"_index":1723,"title":{},"body":{"components/QuestionComponent.html":{}}}],["islogged",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["isotherinvalid",{"_index":2389,"title":{},"body":{"components/UniqueComponent.html":{}}}],["isothertouched",{"_index":2449,"title":{},"body":{"components/UniqueComponent.html":{}}}],["isquestionspage",{"_index":921,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["isquestionvalid",{"_index":1724,"title":{},"body":{"components/QuestionComponent.html":{}}}],["isspecializedform",{"_index":981,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["issurvey",{"_index":805,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["istable",{"_index":1753,"title":{},"body":{"components/QuestionComponent.html":{}}}],["istokenexpired",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["istokenexpired(token",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalid",{"_index":1725,"title":{},"body":{"components/QuestionComponent.html":{}}}],["item",{"_index":1432,"title":{},"body":{"components/LoginPage.html":{},"components/TypeaheadComponent.html":{}}}],["item.tolowercase().includes(normalizedquery",{"_index":2380,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["item::part(native",{"_index":620,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["items",{"_index":695,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/LoginPage.html":{},"components/TypeaheadComponent.html":{}}}],["iterate",{"_index":1308,"title":{},"body":{"injectables/FormService.html":{}}}],["json",{"_index":2540,"title":{},"body":{"dependencies.html":{}}}],["json.parse",{"_index":397,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"components/TableComponent.html":{}}}],["json.parse(json.stringify(survey",{"_index":2112,"title":{},"body":{"injectables/SurveyService.html":{}}}],["json.parse(response.data",{"_index":1706,"title":{},"body":{"injectables/ProducerService.html":{}}}],["json.parse(storedoperations",{"_index":1593,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["json.parse(value",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(resource",{"_index":198,"title":{},"body":{"injectables/ApiService.html":{}}}],["json.stringify(storedobj",{"_index":1597,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["json.stringify(this.question.questionchildren[0",{"_index":2255,"title":{},"body":{"components/TableComponent.html":{}}}],["json.stringify(user",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":691,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/PhoneDataTypeComponent.html":{}}}],["jwt",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt_decode",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_decode(token",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwthelperservice",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":186,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"injectables/FormService.html":{},"injectables/QuestionControlService.html":{},"injectables/StorageService.html":{},"components/TableComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":2048,"title":{},"body":{"injectables/StorageService.html":{}}}],["la",{"_index":347,"title":{},"body":{"interfaces/Association.html":{},"components/DetailedFormComponent.html":{},"interfaces/Producer.html":{},"components/QuestionComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["large",{"_index":712,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["las",{"_index":1792,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["lastanswer",{"_index":1540,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["lastanswer.id",{"_index":1543,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["lastansweredquestion",{"_index":1804,"title":{},"body":{"components/QuestionComponent.html":{}}}],["lastindex",{"_index":2008,"title":{},"body":{"injectables/QuestionService.html":{}}}],["lastname",{"_index":312,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["lastquestion",{"_index":2009,"title":{},"body":{"injectables/QuestionService.html":{}}}],["left",{"_index":900,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/HomePage.html":{}}}],["legend",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["length",{"_index":2032,"title":{},"body":{"injectables/QuestionService.html":{},"injectables/StorageService.html":{}}}],["lightgray",{"_index":623,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["limpiar",{"_index":1191,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["line",{"_index":906,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["list",{"_index":1202,"title":{},"body":{"components/FormListComponent.html":{}}}],["list'},{'name",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["list.component",{"_index":1331,"title":{},"body":{"components/FormsPage.html":{},"components/SurveysPage.html":{}}}],["list.component.html",{"_index":1204,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.scss",{"_index":1203,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts",{"_index":1201,"title":{},"body":{"components/FormListComponent.html":{},"coverage.html":{}}}],["list.component.ts:20",{"_index":1214,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:21",{"_index":1213,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:22",{"_index":1212,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:23",{"_index":1210,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:36",{"_index":1219,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:40",{"_index":1218,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:55",{"_index":1216,"title":{},"body":{"components/FormListComponent.html":{}}}],["list.component.ts:62",{"_index":1220,"title":{},"body":{"components/FormListComponent.html":{}}}],["list/form",{"_index":1200,"title":{},"body":{"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/SurveysPage.html":{},"coverage.html":{}}}],["literal",{"_index":2403,"title":{},"body":{"components/UniqueComponent.html":{},"miscellaneous/typealiases.html":{}}}],["loadforms",{"_index":1327,"title":{},"body":{"components/FormsPage.html":{}}}],["loading",{"_index":1404,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["loading.dismiss",{"_index":1802,"title":{},"body":{"components/QuestionComponent.html":{}}}],["loading.present",{"_index":1407,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["loadingcontroller",{"_index":1393,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["loadothercontrol",{"_index":2390,"title":{},"body":{"components/UniqueComponent.html":{}}}],["loadproducers",{"_index":1339,"title":{},"body":{"components/HomePage.html":{}}}],["loaduser",{"_index":1340,"title":{},"body":{"components/HomePage.html":{}}}],["local",{"_index":1235,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"miscellaneous/variables.html":{}}}],["localforage",{"_index":2067,"title":{},"body":{"injectables/StorageService.html":{},"dependencies.html":{}}}],["locally",{"_index":1282,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["location",{"_index":643,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["locationalert",{"_index":865,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["locationalert.present",{"_index":875,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["lodash",{"_index":971,"title":{},"body":{"injectables/DetailedFormService.html":{},"dependencies.html":{}}}],["logged",{"_index":423,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["login",{"_index":428,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["login(authparams",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.page.html",{"_index":1391,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":1390,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":269,"title":{"components/LoginPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["logout",{"_index":429,"title":{},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"interfaces/User.html":{}}}],["logoutalert",{"_index":1358,"title":{},"body":{"components/HomePage.html":{}}}],["logoutalert.present",{"_index":1365,"title":{},"body":{"components/HomePage.html":{}}}],["los",{"_index":845,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["makes",{"_index":1258,"title":{},"body":{"injectables/FormService.html":{}}}],["making",{"_index":1246,"title":{},"body":{"injectables/FormService.html":{}}}],["malla",{"_index":340,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["manager.service.ts",{"_index":1556,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["manager.service.ts:13",{"_index":1560,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["manager.service.ts:20",{"_index":1561,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["manager.service.ts:44",{"_index":1567,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["manager.service.ts:73",{"_index":1564,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["manager/offline",{"_index":1555,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["managing",{"_index":1234,"title":{},"body":{"injectables/FormService.html":{}}}],["map",{"_index":379,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["map((response",{"_index":395,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["margin",{"_index":912,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["maskito/angular",{"_index":1459,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"dependencies.html":{}}}],["maskito/core",{"_index":1460,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"dependencies.html":{}}}],["maskito/kit",{"_index":1458,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"dependencies.html":{}}}],["maskitoelementpredicateasync",{"_index":1448,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskitomodule",{"_index":1435,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskitonumberoptionsgenerator",{"_index":1450,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskitooptions",{"_index":1449,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskitoparsenumber",{"_index":1457,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maskpredicate",{"_index":1436,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["matching",{"_index":78,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(window.devicepixelratio",{"_index":1171,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["max",{"_index":60,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/DataquestHeaderComponent.html":{},"interfaces/Form.html":{},"components/LoginPage.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/SurveysPage.html":{}}}],["maxalert",{"_index":1476,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["maxalert.present",{"_index":1478,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["maxcurrency",{"_index":1481,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["maxdate",{"_index":776,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["mayor",{"_index":1483,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["menor",{"_index":1484,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["mergemap",{"_index":2111,"title":{},"body":{"injectables/SurveyService.html":{}}}],["mergemap((response",{"_index":2132,"title":{},"body":{"injectables/SurveyService.html":{}}}],["message",{"_index":659,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/UniqueComponent.html":{}}}],["metadata",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["method",{"_index":2316,"title":{},"body":{"components/TypeComponent.html":{}}}],["methods",{"_index":86,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["middlename",{"_index":311,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":59,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"components/LoginPage.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/SurveysPage.html":{}}}],["minalert",{"_index":1470,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["minalert.present",{"_index":1474,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["mincurrency",{"_index":1479,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["mindate",{"_index":779,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["miscellaneous",{"_index":2552,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":522,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/HomePage.html":{}}}],["models/auth.namespace",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"components/HomePage.html":{}}}],["models/beneficiary.namespace",{"_index":375,"title":{},"body":{"injectables/AssociationService.html":{},"components/AutocompleteComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/ProducerService.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["models/formdetail.namespace",{"_index":120,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["modules",{"_index":2569,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["money",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["moneydatatypecomponent",{"_index":271,"title":{"components/MoneyDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["moneymask",{"_index":1437,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["month",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["monthdatatypecomponent",{"_index":273,"title":{"components/MonthDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["move",{"_index":2315,"title":{},"body":{"components/TypeComponent.html":{}}}],["moved",{"_index":1140,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["moved(event",{"_index":1150,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["multiple",{"_index":1495,"title":{},"body":{"components/MultipleComponent.html":{}}}],["multiple'},{'name",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["multiple.component.html",{"_index":1497,"title":{},"body":{"components/MultipleComponent.html":{}}}],["multiple.component.scss",{"_index":1496,"title":{},"body":{"components/MultipleComponent.html":{}}}],["multiple/multiple.component",{"_index":2311,"title":{},"body":{"components/TypeComponent.html":{}}}],["multiplecomponent",{"_index":275,"title":{"components/MultipleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["máximo",{"_index":1477,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["mínimo",{"_index":1473,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["móvil",{"_index":1127,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["múltiple",{"_index":1848,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["name",{"_index":27,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":23,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/User.html":{}}}],["navcontroller",{"_index":811,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["navctrl",{"_index":1735,"title":{},"body":{"components/QuestionComponent.html":{}}}],["navigate",{"_index":1206,"title":{},"body":{"components/FormListComponent.html":{}}}],["navigate(formtosend",{"_index":1217,"title":{},"body":{"components/FormListComponent.html":{}}}],["ndice",{"_index":1795,"title":{},"body":{"components/QuestionComponent.html":{}}}],["network",{"_index":377,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["network.addlistener('networkstatuschange",{"_index":2115,"title":{},"body":{"injectables/SurveyService.html":{}}}],["network.getstatus().then((status",{"_index":2120,"title":{},"body":{"injectables/SurveyService.html":{}}}],["network.removealllisteners",{"_index":2121,"title":{},"body":{"injectables/SurveyService.html":{}}}],["new",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"components/DrawingPadDataTypeComponent.html":{},"injectables/FormService.html":{},"components/LoginPage.html":{},"components/MonthDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/QuestionControlService.html":{},"interfaces/StoredRequest.html":{},"components/TypeaheadComponent.html":{},"coverage.html":{}}}],["newformgroup",{"_index":2257,"title":{},"body":{"components/TableComponent.html":{}}}],["newformgroup.reset",{"_index":2259,"title":{},"body":{"components/TableComponent.html":{}}}],["newid",{"_index":2263,"title":{},"body":{"components/TableComponent.html":{}}}],["newyear",{"_index":783,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["next",{"_index":2012,"title":{},"body":{"injectables/QuestionService.html":{}}}],["nextquestion",{"_index":1726,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["ngafterviewinit",{"_index":1141,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["ngonchanges",{"_index":1439,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["ngondestroy",{"_index":806,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["ngoninit",{"_index":530,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["nica",{"_index":1850,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["nit",{"_index":306,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["none",{"_index":914,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["normalize",{"_index":2372,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["normalizedquery",{"_index":2377,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["null",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FormService.html":{},"components/MultipleComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{}}}],["number",{"_index":17,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"interfaces/StoredRequest.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["number(day",{"_index":762,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["number(id",{"_index":1542,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["number(month",{"_index":760,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["number(year",{"_index":759,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["numberdatatypecomponent",{"_index":277,"title":{"components/NumberDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["numeric",{"_index":772,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["o",{"_index":1005,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["object",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(answersformgroup.controls",{"_index":2247,"title":{},"body":{"components/TableComponent.html":{}}}],["object.keys(formgroup.controls).filter",{"_index":1946,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["object.keys(sectionformgroup.controls).foreach((key",{"_index":2244,"title":{},"body":{"components/TableComponent.html":{}}}],["object.values(formgroup.value",{"_index":1938,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["obs",{"_index":1598,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["obs.push(oneobs",{"_index":1605,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["observable",{"_index":160,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["obtener",{"_index":848,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["of(false",{"_index":1587,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["of(response.status",{"_index":2133,"title":{},"body":{"injectables/SurveyService.html":{}}}],["of(undefined",{"_index":2136,"title":{},"body":{"injectables/SurveyService.html":{}}}],["offline",{"_index":1256,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["offlinemanagerservice",{"_index":1553,"title":{"injectables/OfflineManagerService.html":{}},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{}}}],["ok",{"_index":860,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["onchange",{"_index":1487,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["onchange(event",{"_index":1488,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["one",{"_index":1601,"title":{},"body":{"injectables/OfflineManagerService.html":{},"injectables/QuestionControlService.html":{},"interfaces/StoredRequest.html":{}}}],["oneobs",{"_index":1602,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["oninit",{"_index":518,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["online",{"_index":1257,"title":{},"body":{"injectables/FormService.html":{},"injectables/SurveyService.html":{}}}],["onsubmit",{"_index":1727,"title":{},"body":{"components/QuestionComponent.html":{}}}],["op",{"_index":1599,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["op.data",{"_index":1604,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["open",{"_index":536,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/OpenComponent.html":{},"components/TypeComponent.html":{}}}],["open'},{'name",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["open.component.html",{"_index":1610,"title":{},"body":{"components/OpenComponent.html":{}}}],["open.component.scss",{"_index":1609,"title":{},"body":{"components/OpenComponent.html":{}}}],["open/open.component",{"_index":2310,"title":{},"body":{"components/TypeComponent.html":{}}}],["opencomponent",{"_index":278,"title":{"components/OpenComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["openmodal",{"_index":531,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["operations",{"_index":1565,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["optional",{"_index":103,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":190,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/TypeaheadComponent.html":{}}}],["order",{"_index":11,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"components/PhoneDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["organizacional",{"_index":1798,"title":{},"body":{"components/QuestionComponent.html":{}}}],["originalquestions",{"_index":1953,"title":{},"body":{"injectables/QuestionService.html":{}}}],["othercontrol",{"_index":2442,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othercontrol.setvalue(othervalue",{"_index":2446,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othercontrol?.errors",{"_index":2452,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othercontrol?.invalid",{"_index":2448,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othercontrol?.touched",{"_index":2450,"title":{},"body":{"components/UniqueComponent.html":{}}}],["otherformcontrol",{"_index":2458,"title":{},"body":{"components/UniqueComponent.html":{}}}],["otherformcontrol.addvalidators(validators.max(this.question.max",{"_index":2461,"title":{},"body":{"components/UniqueComponent.html":{}}}],["otherformcontrol.addvalidators(validators.min(this.question.min",{"_index":2460,"title":{},"body":{"components/UniqueComponent.html":{}}}],["othervalue",{"_index":1532,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["otherwise",{"_index":2371,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["otro",{"_index":1007,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["output",{"_index":2363,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["outputs",{"_index":2333,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["overflow",{"_index":2195,"title":{},"body":{"components/SurveysPage.html":{}}}],["overview",{"_index":2565,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":908,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{}}}],["p.id",{"_index":1069,"title":{},"body":{"injectables/DraftService.html":{}}}],["package",{"_index":2508,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pad",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["padding",{"_index":1386,"title":{},"body":{"components/HomePage.html":{}}}],["pages.guard.ts",{"_index":2042,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["pages.guard.ts:11",{"_index":2044,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{}}}],["pages.guard.ts:8",{"_index":2043,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{}}}],["pages/secure",{"_index":2041,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["para",{"_index":1122,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["param",{"_index":1285,"title":{},"body":{"injectables/FormService.html":{}}}],["parameters",{"_index":102,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["parcela",{"_index":336,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["parent",{"_index":1276,"title":{},"body":{"injectables/FormService.html":{}}}],["parseddate",{"_index":758,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["parseddate.toisostring",{"_index":764,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["pasamos",{"_index":1791,"title":{},"body":{"components/QuestionComponent.html":{}}}],["passes",{"_index":1942,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["password",{"_index":181,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthManagement.html":{},"components/LoginPage.html":{},"interfaces/User.html":{}}}],["pd_p5",{"_index":335,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["percentage",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["percentagedatatypecomponent",{"_index":280,"title":{"components/PercentageDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["permisos",{"_index":846,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissionalert",{"_index":842,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissionalert.present",{"_index":864,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissionresult",{"_index":861,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissionresult.location",{"_index":863,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissions",{"_index":838,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["permissions.location",{"_index":840,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["pertenece",{"_index":2295,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["phone",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["phonedatatypecomponent",{"_index":282,"title":{"components/PhoneDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["phones",{"_index":1631,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["phonesobserver",{"_index":1632,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["photo",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["photobase64",{"_index":1663,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["photodatatypecomponent",{"_index":284,"title":{"components/PhotoDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["photoservice",{"_index":1659,"title":{"injectables/PhotoService.html":{}},"body":{"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"coverage.html":{}}}],["pivot",{"_index":43,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["place",{"_index":1420,"title":{},"body":{"components/LoginPage.html":{}}}],["platform",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{},"components/TypeaheadComponent.html":{}}}],["pointer",{"_index":1874,"title":{},"body":{"components/QuestionComponent.html":{}}}],["por",{"_index":852,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["position",{"_index":33,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/DetailedFormComponent.html":{},"interfaces/Form.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{}}}],["position.coords.altitude",{"_index":872,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["position.coords.latitude",{"_index":869,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["position.coords.longitude",{"_index":870,"title":{},"body":{"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{}}}],["post",{"_index":152,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FormService.html":{}}}],["post(endpoint",{"_index":163,"title":{},"body":{"injectables/ApiService.html":{}}}],["precision",{"_index":1455,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["preferences",{"_index":176,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/PhotoService.html":{}}}],["preferences.get",{"_index":185,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["preferences.remove",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["preferences.set(options",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["prefix",{"_index":1452,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["pregunta",{"_index":1814,"title":{},"body":{"components/QuestionComponent.html":{}}}],["preguntas",{"_index":893,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["preloadfarmingvalue",{"_index":2391,"title":{},"body":{"components/UniqueComponent.html":{}}}],["preloadfarmingvalue(answersformgroup",{"_index":2412,"title":{},"body":{"components/UniqueComponent.html":{}}}],["preloadselectedanswers",{"_index":2207,"title":{},"body":{"components/TableComponent.html":{}}}],["preloadtransplantdate",{"_index":723,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["preloadtransplantdate(transplantdate",{"_index":737,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["preloadvalue",{"_index":2288,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["presentalert",{"_index":1728,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["presentalert(istable",{"_index":1751,"title":{},"body":{"components/QuestionComponent.html":{}}}],["previous",{"_index":2024,"title":{},"body":{"injectables/QuestionService.html":{}}}],["previousbeneficiary",{"_index":979,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["previousbeneficiary.specialized",{"_index":983,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["previousquestion",{"_index":1729,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionService.html":{}}}],["previousquestion.id.tostring",{"_index":2026,"title":{},"body":{"injectables/QuestionService.html":{}}}],["primer_apellido",{"_index":329,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["primer_nombre",{"_index":327,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["primero",{"_index":1012,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["priorizado",{"_index":2431,"title":{},"body":{"components/UniqueComponent.html":{}}}],["private",{"_index":87,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"injectables/OfflineManagerService.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["problema",{"_index":843,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["proceso",{"_index":1360,"title":{},"body":{"components/HomePage.html":{}}}],["processed",{"_index":1261,"title":{},"body":{"injectables/FormService.html":{}}}],["producer",{"_index":308,"title":{"interfaces/Producer.html":{}},"body":{"interfaces/Association.html":{},"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["producer.id",{"_index":604,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{}}}],["producer.specialized",{"_index":1066,"title":{},"body":{"injectables/DraftService.html":{}}}],["producerbaseparams",{"_index":323,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["producerbuilder",{"_index":1701,"title":{},"body":{"injectables/ProducerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["producerbuilder(producer",{"_index":1708,"title":{},"body":{"injectables/ProducerService.html":{},"miscellaneous/functions.html":{}}}],["producerresponse",{"_index":326,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"miscellaneous/typealiases.html":{}}}],["producerresponse.map",{"_index":1707,"title":{},"body":{"injectables/ProducerService.html":{}}}],["producers",{"_index":601,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"injectables/ProducerService.html":{},"miscellaneous/variables.html":{}}}],["producers.find",{"_index":616,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{}}}],["producers.map((producer",{"_index":603,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["producers_storage_key",{"_index":1713,"title":{},"body":{"injectables/ProducerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["producersendpoint",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producerservice",{"_index":539,"title":{"injectables/ProducerService.html":{}},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"components/HomePage.html":{},"injectables/ProducerService.html":{},"coverage.html":{}}}],["producersservice",{"_index":543,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{}}}],["producertosearch",{"_index":935,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["producertosearch.id",{"_index":996,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["production",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progreso",{"_index":664,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["progress",{"_index":634,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/QuestionService.html":{}}}],["progressbar",{"_index":640,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["project",{"_index":2572,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":42,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["promise",{"_index":167,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/FormService.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"interfaces/User.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DrawingPadDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provided",{"_index":2350,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["providedin",{"_index":121,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["proyecto",{"_index":887,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["public",{"_index":90,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["pudo",{"_index":847,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["puede",{"_index":1106,"title":{},"body":{"components/DraftsPage.html":{},"components/HomePage.html":{}}}],["pushdraft",{"_index":1035,"title":{},"body":{"injectables/DraftService.html":{}}}],["pushdraft(draft",{"_index":1048,"title":{},"body":{"injectables/DraftService.html":{}}}],["pushsurvey",{"_index":2091,"title":{},"body":{"injectables/SurveyService.html":{}}}],["pushsurvey(survey",{"_index":2104,"title":{},"body":{"injectables/SurveyService.html":{}}}],["q.answersrelation.foreach((ar",{"_index":2266,"title":{},"body":{"components/TableComponent.html":{}}}],["q.questionparentid",{"_index":1313,"title":{},"body":{"injectables/FormService.html":{}}}],["quality",{"_index":1685,"title":{},"body":{"injectables/PhotoService.html":{}}}],["que",{"_index":1362,"title":{},"body":{"components/HomePage.html":{},"components/QuestionComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["query",{"_index":2352,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["question",{"_index":46,"title":{"interfaces/Question.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["question'},{'name",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["question.answers.foreach((answer",{"_index":1845,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["question.answers[0",{"_index":1867,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.answers[0].value",{"_index":1924,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["question.answers[question.answers.length",{"_index":1854,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["question.answersrelation",{"_index":125,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["question.component.html",{"_index":1716,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.component.scss",{"_index":1715,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.datatype",{"_index":1862,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["question.id",{"_index":1314,"title":{},"body":{"injectables/FormService.html":{},"components/QuestionComponent.html":{},"components/TableComponent.html":{}}}],["question.id.tostring",{"_index":142,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["question.questionchildren",{"_index":1295,"title":{},"body":{"injectables/FormService.html":{}}}],["question.questionchildren.foreach((section",{"_index":1931,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["question.questionparentid",{"_index":1298,"title":{},"body":{"injectables/FormService.html":{},"injectables/QuestionService.html":{}}}],["question.required",{"_index":1914,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["question.type",{"_index":1293,"title":{},"body":{"injectables/FormService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["question.usertyperestriction",{"_index":2002,"title":{},"body":{"injectables/QuestionService.html":{}}}],["question/question.service",{"_index":967,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["question?.id",{"_index":1827,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question_category",{"_index":67,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["question_category_id",{"_index":65,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["question_id",{"_index":70,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["questionbuilder",{"_index":2499,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["questionbuilder(question",{"_index":2560,"title":{},"body":{"miscellaneous/functions.html":{}}}],["questioncategory",{"_index":55,"title":{"interfaces/QuestionCategory.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["questioncategorybuilder",{"_index":2500,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["questioncategorybuilder(category",{"_index":2561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["questioncategoryid",{"_index":54,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["questioncategoryresponse",{"_index":68,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["questionchildren",{"_index":57,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/TableComponent.html":{}}}],["questionchildren[sectionindex][childindex",{"_index":2274,"title":{},"body":{"components/TableComponent.html":{}}}],["questioncomponent",{"_index":286,"title":{"components/QuestionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["questioncontrolservice",{"_index":1879,"title":{"injectables/QuestionControlService.html":{}},"body":{"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["questionformarray",{"_index":1839,"title":{},"body":{"components/QuestionComponent.html":{}}}],["questionformarray.at",{"_index":1842,"title":{},"body":{"components/QuestionComponent.html":{}}}],["questionformcontrol",{"_index":765,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["questionformcontrol.setvalue(stringdate",{"_index":775,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["questionformgroup",{"_index":1835,"title":{},"body":{"components/QuestionComponent.html":{}}}],["questionid",{"_index":12,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"interfaces/Association.html":{},"interfaces/Form.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/TableComponent.html":{}}}],["questionpage",{"_index":955,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["questionparentid",{"_index":52,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["questionresponse",{"_index":61,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"miscellaneous/typealiases.html":{}}}],["questions",{"_index":37,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{}}}],["questions.foreach((question",{"_index":1910,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["questionservice",{"_index":642,"title":{"injectables/QuestionService.html":{}},"body":{"components/DataquestHeaderComponent.html":{},"injectables/DetailedFormService.html":{},"components/OpenComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["questionspage",{"_index":917,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["radius",{"_index":626,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["ratio",{"_index":1170,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["reactiveformsmodule",{"_index":716,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["readonly",{"_index":148,"title":{},"body":{"injectables/ApiService.html":{},"components/MoneyDataTypeComponent.html":{}}}],["realizar",{"_index":1010,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["reanudar",{"_index":898,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["recommendedactions",{"_index":321,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["relation",{"_index":104,"title":{},"body":{"injectables/AnswerRelationService.html":{},"miscellaneous/functions.html":{}}}],["relation.answerpivot.answerid",{"_index":139,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.questionid",{"_index":138,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service",{"_index":1996,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["relation.service.ts",{"_index":85,"title":{},"body":{"injectables/AnswerRelationService.html":{},"coverage.html":{}}}],["relation.service.ts:11",{"_index":110,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:26",{"_index":107,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:35",{"_index":112,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:45",{"_index":101,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:55",{"_index":114,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:61",{"_index":117,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation.service.ts:8",{"_index":97,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["relation/answer",{"_index":84,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/QuestionService.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["remote",{"_index":1236,"title":{},"body":{"injectables/FormService.html":{}}}],["remove",{"_index":2049,"title":{},"body":{"injectables/StorageService.html":{}}}],["remove(key",{"_index":2059,"title":{},"body":{"injectables/StorageService.html":{}}}],["removealllisteners",{"_index":2092,"title":{},"body":{"injectables/SurveyService.html":{}}}],["removeddraft",{"_index":1025,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{}}}],["removeddraft.beneficiary",{"_index":1064,"title":{},"body":{"injectables/DraftService.html":{}}}],["removeddraft.id",{"_index":1065,"title":{},"body":{"injectables/DraftService.html":{}}}],["removedraft",{"_index":1036,"title":{},"body":{"injectables/DraftService.html":{}}}],["removedraft(draft",{"_index":1050,"title":{},"body":{"injectables/DraftService.html":{}}}],["removeolddrafts",{"_index":1037,"title":{},"body":{"injectables/DraftService.html":{}}}],["removephone",{"_index":1635,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["removesection",{"_index":2208,"title":{},"body":{"components/TableComponent.html":{}}}],["removetoken",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeuser",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["rendered",{"_index":2348,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["representing",{"_index":1267,"title":{},"body":{"injectables/FormService.html":{}}}],["requerida",{"_index":1815,"title":{},"body":{"components/QuestionComponent.html":{}}}],["requerido",{"_index":2455,"title":{},"body":{"components/UniqueComponent.html":{}}}],["request",{"_index":1259,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["requestdata",{"_index":1207,"title":{},"body":{"components/FormListComponent.html":{}}}],["requests",{"_index":1247,"title":{},"body":{"injectables/FormService.html":{}}}],["required",{"_index":48,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"injectables/QuestionControlService.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/UniqueComponent.html":{}}}],["requiredchildrenresponse",{"_index":1888,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["requiredtableresponse",{"_index":1889,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["resizecanvas",{"_index":1142,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["resolves",{"_index":1270,"title":{},"body":{"injectables/FormService.html":{}}}],["resource",{"_index":164,"title":{},"body":{"injectables/ApiService.html":{}}}],["respectivo",{"_index":1004,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["responda",{"_index":1809,"title":{},"body":{"components/QuestionComponent.html":{}}}],["response",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.data",{"_index":398,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{}}}],["response.status",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["respuesta",{"_index":1849,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["result",{"_index":183,"title":{},"body":{"injectables/ApiService.html":{},"components/AutocompleteComponent.html":{}}}],["result.value",{"_index":189,"title":{},"body":{"injectables/ApiService.html":{}}}],["results",{"_index":77,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resulttype",{"_index":1682,"title":{},"body":{"injectables/PhotoService.html":{}}}],["resumedraft",{"_index":807,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["retrieved",{"_index":1268,"title":{},"body":{"injectables/FormService.html":{}}}],["retrieves",{"_index":1253,"title":{},"body":{"injectables/FormService.html":{}}}],["retrieving",{"_index":1250,"title":{},"body":{"injectables/FormService.html":{}}}],["return",{"_index":129,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/EmailDataTypeComponent.html":{},"injectables/FormService.html":{},"components/HomePage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["returned",{"_index":1266,"title":{},"body":{"injectables/FormService.html":{}}}],["returns",{"_index":105,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":901,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/SurveysPage.html":{}}}],["role",{"_index":435,"title":{},"body":{"interfaces/AuthManagement.html":{},"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/HomePage.html":{},"components/QuestionComponent.html":{},"interfaces/User.html":{}}}],["roles",{"_index":441,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["root",{"_index":122,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/PhotoService.html":{},"injectables/ProducerService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{}}}],["root'},{'name",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["router",{"_index":413,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"injectables/SecureInnerPagesGuard.html":{},"components/SurveysPage.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/home/forms",{"_index":2596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rx",{"_index":2234,"title":{},"body":{"components/TableComponent.html":{},"components/TypeaheadComponent.html":{},"dependencies.html":{}}}],["rxfor",{"_index":2199,"title":{},"body":{"components/TableComponent.html":{},"components/TypeaheadComponent.html":{}}}],["rxjs",{"_index":171,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1284,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{}}}],["sale",{"_index":662,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["salir",{"_index":670,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["save",{"_index":2153,"title":{},"body":{"injectables/SurveyService.html":{}}}],["savedrafts",{"_index":1038,"title":{},"body":{"injectables/DraftService.html":{}}}],["savedstringarray",{"_index":1856,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savedstringarray.join",{"_index":1861,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savedstringarray.length",{"_index":1858,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savedstringarray.push(textanswered",{"_index":1860,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savedstringarray[1",{"_index":1859,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveopenresponse",{"_index":1730,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveopenresponse(question",{"_index":1755,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savepad",{"_index":1143,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["saveresponse",{"_index":1731,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveresponse(question",{"_index":1757,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveselection",{"_index":1732,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saveselection(question",{"_index":1759,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savesurvey",{"_index":922,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["savesurveys",{"_index":2093,"title":{},"body":{"injectables/SurveyService.html":{}}}],["savetableresponse",{"_index":1733,"title":{},"body":{"components/QuestionComponent.html":{}}}],["savetableresponse(question",{"_index":1761,"title":{},"body":{"components/QuestionComponent.html":{}}}],["saving",{"_index":1249,"title":{},"body":{"injectables/FormService.html":{}}}],["screen",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["scroll",{"_index":2196,"title":{},"body":{"components/SurveysPage.html":{}}}],["se",{"_index":665,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/QuestionComponent.html":{}}}],["search",{"_index":2351,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchansweridbyfarming",{"_index":2392,"title":{},"body":{"components/UniqueComponent.html":{}}}],["searchbarinput",{"_index":2329,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchbarinput(ev",{"_index":2355,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchquery",{"_index":2353,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["searchquery.tolowercase",{"_index":2378,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["secciones",{"_index":1811,"title":{},"body":{"components/QuestionComponent.html":{}}}],["sección",{"_index":2285,"title":{},"body":{"components/TableComponent.html":{}}}],["secondary",{"_index":679,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["secondlastname",{"_index":313,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["section.foreach((child",{"_index":1843,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["sectionformgroup",{"_index":1841,"title":{},"body":{"components/QuestionComponent.html":{},"components/TableComponent.html":{}}}],["sectionformgroup.get",{"_index":2245,"title":{},"body":{"components/TableComponent.html":{}}}],["sectionindex",{"_index":2223,"title":{},"body":{"components/TableComponent.html":{}}}],["secureinnerpagesguard",{"_index":2038,"title":{"injectables/SecureInnerPagesGuard.html":{}},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["see",{"_index":2374,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["seem",{"_index":1588,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["segundo_apellido",{"_index":330,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["segundo_nombre",{"_index":328,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["seguro",{"_index":1103,"title":{},"body":{"components/DraftsPage.html":{},"components/HomePage.html":{}}}],["selecciona",{"_index":548,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TypeaheadComponent.html":{}}}],["select",{"_index":2330,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["select(item",{"_index":2358,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selectedanswers",{"_index":2238,"title":{},"body":{"components/TableComponent.html":{}}}],["selectedanswers[key",{"_index":2249,"title":{},"body":{"components/TableComponent.html":{}}}],["selectedbeneficiary",{"_index":946,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["selectedbeneficiary.specialized",{"_index":986,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["selectedform",{"_index":918,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["selecteditem",{"_index":2332,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selectedquestionids",{"_index":349,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["selectedquestions",{"_index":322,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/typealiases.html":{}}}],["selectedvalue",{"_index":596,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selection",{"_index":523,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selectioncancel",{"_index":2334,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selectionchange",{"_index":2335,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["selectionchanged",{"_index":532,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selectionchanged(selection",{"_index":563,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selector",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["sendrequests",{"_index":1558,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["sendrequests(operations",{"_index":1562,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["server",{"_index":1248,"title":{},"body":{"injectables/FormService.html":{},"dependencies.html":{}}}],["service",{"_index":1233,"title":{},"body":{"injectables/FormService.html":{}}}],["services/api/api.service",{"_index":1283,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["services/association/association.service",{"_index":580,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["services/auth/auth.service",{"_index":421,"title":{},"body":{"injectables/AuthGuard.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["services/detailed",{"_index":581,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/OpenComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["services/draft/draft.service",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/QuestionComponent.html":{}}}],["services/form/form.service",{"_index":825,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{}}}],["services/producer/producer.service",{"_index":584,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{},"components/HomePage.html":{}}}],["services/storage/storage.service",{"_index":1568,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["services/survey/survey.service",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/SurveysPage.html":{}}}],["servicios",{"_index":878,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["sesión",{"_index":1367,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["set",{"_index":2050,"title":{},"body":{"injectables/StorageService.html":{}}}],["set(key",{"_index":2061,"title":{},"body":{"injectables/StorageService.html":{}}}],["setbeneficiary",{"_index":923,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setbeneficiary(selectedbeneficiary",{"_index":944,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setcheckedvalue",{"_index":533,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["setcheckedvalue(answersformgroup",{"_index":565,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/UniqueComponent.html":{}}}],["setcheckedvalue(formgroup",{"_index":1521,"title":{},"body":{"components/MultipleComponent.html":{}}}],["setform",{"_index":924,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setform(form",{"_index":947,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setlocalassociations",{"_index":358,"title":{},"body":{"injectables/AssociationService.html":{}}}],["setlocalassociations(associations",{"_index":369,"title":{},"body":{"injectables/AssociationService.html":{}}}],["setlocalforms",{"_index":1242,"title":{},"body":{"injectables/FormService.html":{}}}],["setlocalforms(forms",{"_index":1279,"title":{},"body":{"injectables/FormService.html":{}}}],["setlocalproducers",{"_index":1690,"title":{},"body":{"injectables/ProducerService.html":{}}}],["setlocalproducers(producers",{"_index":1696,"title":{},"body":{"injectables/ProducerService.html":{}}}],["setothervalue",{"_index":2393,"title":{},"body":{"components/UniqueComponent.html":{}}}],["setothervalue(event",{"_index":2416,"title":{},"body":{"components/UniqueComponent.html":{}}}],["setquestions",{"_index":925,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/QuestionService.html":{}}}],["setquestions(questions",{"_index":1985,"title":{},"body":{"injectables/QuestionService.html":{}}}],["setquestionspage",{"_index":926,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["setquestionspage(questionpage",{"_index":953,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["sets",{"_index":1281,"title":{},"body":{"injectables/FormService.html":{}}}],["setsignature",{"_index":1144,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["settextvalue",{"_index":1503,"title":{},"body":{"components/MultipleComponent.html":{}}}],["settextvalue(event",{"_index":1523,"title":{},"body":{"components/MultipleComponent.html":{}}}],["settimeout",{"_index":1222,"title":{},"body":{"components/FormListComponent.html":{}}}],["settoken",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["settoken(token",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuser",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuser(user",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["setvalue",{"_index":724,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["setvalue(event",{"_index":739,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["short",{"_index":883,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["showalreadyspecializedbeneficiaryalert",{"_index":927,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["shownospecializedbeneficiaryalert",{"_index":928,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["showquestion",{"_index":2209,"title":{},"body":{"components/TableComponent.html":{}}}],["showquestion(childindex",{"_index":2232,"title":{},"body":{"components/TableComponent.html":{}}}],["showquestion(id",{"_index":2281,"title":{},"body":{"components/TableComponent.html":{}}}],["showstorage",{"_index":2051,"title":{},"body":{"injectables/StorageService.html":{}}}],["si",{"_index":661,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["signature",{"_index":1177,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["signature_pad",{"_index":1159,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"dependencies.html":{}}}],["signatureimg",{"_index":1137,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["signaturepad",{"_index":1138,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["signaturepad(this.canvas.nativeelement",{"_index":1161,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["siguiente",{"_index":1869,"title":{},"body":{"components/QuestionComponent.html":{}}}],["sin",{"_index":1008,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/SurveysPage.html":{}}}],["sincronizadas",{"_index":2181,"title":{},"body":{"components/SurveysPage.html":{}}}],["sincronizar",{"_index":1359,"title":{},"body":{"components/HomePage.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["size",{"_index":710,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{}}}],["small",{"_index":1132,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["social",{"_index":1783,"title":{},"body":{"components/QuestionComponent.html":{}}}],["socio",{"_index":1797,"title":{},"body":{"components/QuestionComponent.html":{}}}],["solid",{"_index":1192,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["someanswerisselected",{"_index":136,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["specialized",{"_index":314,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["sqlite",{"_index":2534,"title":{},"body":{"dependencies.html":{}}}],["src/.../association.service.ts",{"_index":2582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.namespace.ts",{"_index":2580,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../auth.service.ts",{"_index":2584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../beneficiary.namespace.ts",{"_index":2579,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../builder.ts",{"_index":2554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../details.guard.ts",{"_index":2583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":2588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.mobile.ts",{"_index":2589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../form.service.ts",{"_index":2585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../formdetail.namespace.ts",{"_index":2578,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":2555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../offline",{"_index":2592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../producer.service.ts",{"_index":2586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../survey.service.ts",{"_index":2587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/detailed",{"_index":797,"title":{},"body":{"components/DetailedFormComponent.html":{},"coverage.html":{}}}],["src/app/components/form",{"_index":1199,"title":{},"body":{"components/FormListComponent.html":{},"coverage.html":{}}}],["src/app/components/header/dataquest",{"_index":628,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/question/question.component.ts",{"_index":1714,"title":{},"body":{"components/QuestionComponent.html":{},"coverage.html":{}}}],["src/app/components/question/question.component.ts:149",{"_index":1754,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:159",{"_index":1752,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:173",{"_index":1750,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:183",{"_index":1738,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:187",{"_index":1739,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:191",{"_index":1744,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:195",{"_index":1746,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:199",{"_index":1743,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:210",{"_index":1741,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:216",{"_index":1758,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:236",{"_index":1762,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:253",{"_index":1760,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:281",{"_index":1756,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:300",{"_index":1742,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:304",{"_index":1740,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:308",{"_index":1745,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:35",{"_index":1765,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:36",{"_index":1767,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:37",{"_index":1766,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:38",{"_index":1763,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:39",{"_index":1736,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:52",{"_index":1749,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:63",{"_index":1748,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:67",{"_index":1737,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question.component.ts:97",{"_index":1747,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts",{"_index":517,"title":{},"body":{"components/AutocompleteComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:101",{"_index":564,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:122",{"_index":566,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:132",{"_index":552,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:141",{"_index":554,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:31",{"_index":571,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:32",{"_index":547,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:33",{"_index":545,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:34",{"_index":546,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:35",{"_index":550,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:36",{"_index":544,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:38",{"_index":572,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:40",{"_index":542,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:48",{"_index":561,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:52",{"_index":562,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:57",{"_index":557,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:73",{"_index":559,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:85",{"_index":556,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/autocomplete/autocomplete.component.ts:97",{"_index":555,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts",{"_index":1494,"title":{},"body":{"components/MultipleComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:16",{"_index":1507,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:17",{"_index":1506,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:18",{"_index":1505,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:20",{"_index":1504,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:24",{"_index":1520,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:26",{"_index":1513,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:30",{"_index":1517,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:44",{"_index":1512,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:53",{"_index":1522,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:62",{"_index":1515,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:70",{"_index":1524,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:78",{"_index":1509,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/multiple/multiple.component.ts:89",{"_index":1519,"title":{},"body":{"components/MultipleComponent.html":{}}}],["src/app/components/question/type/open/date",{"_index":713,"title":{},"body":{"components/DateDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/drawing",{"_index":1134,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/email",{"_index":1196,"title":{},"body":{"components/EmailDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/money",{"_index":1433,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/month",{"_index":1485,"title":{},"body":{"components/MonthDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/number",{"_index":1546,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/open.component.ts",{"_index":1608,"title":{},"body":{"components/OpenComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/open.component.ts:44",{"_index":1614,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/open.component.ts:45",{"_index":1613,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/open.component.ts:46",{"_index":1612,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/open.component.ts:50",{"_index":1616,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/open.component.ts:52",{"_index":1615,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/components/question/type/open/percentage",{"_index":1624,"title":{},"body":{"components/PercentageDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/phone",{"_index":1629,"title":{},"body":{"components/PhoneDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/photo",{"_index":1655,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/open/text",{"_index":2286,"title":{},"body":{"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/table/table.component.ts",{"_index":2197,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/table/table.component.ts:102",{"_index":2228,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:106",{"_index":2226,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:110",{"_index":2219,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:114",{"_index":2225,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:121",{"_index":2222,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:130",{"_index":2233,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:158",{"_index":2218,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:165",{"_index":2217,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:21",{"_index":2213,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:22",{"_index":2212,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:23",{"_index":2211,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:31",{"_index":2229,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:38",{"_index":2230,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:59",{"_index":2214,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:74",{"_index":2216,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:88",{"_index":2231,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/table/table.component.ts:98",{"_index":2227,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/question/type/type.component.ts",{"_index":2300,"title":{},"body":{"components/TypeComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/type.component.ts:27",{"_index":2303,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:28",{"_index":2302,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:29",{"_index":2301,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:33",{"_index":2309,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:36",{"_index":2304,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:40",{"_index":2308,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:44",{"_index":2305,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:48",{"_index":2307,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/type.component.ts:52",{"_index":2306,"title":{},"body":{"components/TypeComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts",{"_index":2382,"title":{},"body":{"components/UniqueComponent.html":{},"coverage.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:102",{"_index":2413,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:114",{"_index":2414,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:131",{"_index":2406,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:140",{"_index":2417,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:150",{"_index":2409,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:167",{"_index":2404,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:183",{"_index":2405,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:192",{"_index":2410,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:205",{"_index":2399,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:219",{"_index":2408,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:25",{"_index":2398,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:26",{"_index":2397,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:27",{"_index":2396,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:29",{"_index":2419,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:30",{"_index":2395,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:38",{"_index":2411,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:40",{"_index":2400,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:44",{"_index":2418,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:55",{"_index":2407,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:69",{"_index":2402,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/question/type/unique/unique.component.ts:87",{"_index":2415,"title":{},"body":{"components/UniqueComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts",{"_index":2320,"title":{},"body":{"components/TypeaheadComponent.html":{},"coverage.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:14",{"_index":2337,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:15",{"_index":2338,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:16",{"_index":2339,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:18",{"_index":2341,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:19",{"_index":2342,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:21",{"_index":2362,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:22",{"_index":2336,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:26",{"_index":2354,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:30",{"_index":2359,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:35",{"_index":2361,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:39",{"_index":2343,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:43",{"_index":2344,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:47",{"_index":2356,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/components/typeahead/typeahead.component.ts:57",{"_index":2346,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["src/app/guards/auth/auth.guard.ts",{"_index":411,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth/auth.guard.ts:11",{"_index":417,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/guards/auth/auth.guard.ts:8",{"_index":416,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/guards/auth/auth.guard.ts:9",{"_index":419,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/guards/details/details.guard.ts",{"_index":2483,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/guards/secure",{"_index":2039,"title":{},"body":{"injectables/SecureInnerPagesGuard.html":{},"coverage.html":{}}}],["src/app/models/auth.namespace.ts",{"_index":427,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/models/beneficiary.namespace.ts",{"_index":303,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/formdetail.namespace.ts",{"_index":6,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/pages/detail/detail.page.ts",{"_index":788,"title":{},"body":{"components/DetailPage.html":{},"coverage.html":{}}}],["src/app/pages/detail/detail.page.ts:16",{"_index":793,"title":{},"body":{"components/DetailPage.html":{}}}],["src/app/pages/detail/detail.page.ts:20",{"_index":794,"title":{},"body":{"components/DetailPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts",{"_index":1087,"title":{},"body":{"components/DraftsPage.html":{},"coverage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:16",{"_index":1094,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:26",{"_index":1100,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:30",{"_index":1096,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:34",{"_index":1095,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/drafts/drafts.page.ts:59",{"_index":1098,"title":{},"body":{"components/DraftsPage.html":{}}}],["src/app/pages/forms/forms.page.ts",{"_index":1324,"title":{},"body":{"components/FormsPage.html":{},"coverage.html":{}}}],["src/app/pages/forms/forms.page.ts:16",{"_index":1328,"title":{},"body":{"components/FormsPage.html":{}}}],["src/app/pages/forms/forms.page.ts:20",{"_index":1329,"title":{},"body":{"components/FormsPage.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1333,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:18",{"_index":1350,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:20",{"_index":1351,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:21",{"_index":1342,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:30",{"_index":1347,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:38",{"_index":1348,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:60",{"_index":1346,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:84",{"_index":1345,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:90",{"_index":1344,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:94",{"_index":1343,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/login/login.page.ts",{"_index":1389,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/pages/login/login.page.ts:22",{"_index":1394,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:30",{"_index":1402,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:38",{"_index":1397,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:40",{"_index":1396,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts",{"_index":2155,"title":{},"body":{"components/SurveysPage.html":{},"coverage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:17",{"_index":2162,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:25",{"_index":2170,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:29",{"_index":2163,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:33",{"_index":2165,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:38",{"_index":2167,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:43",{"_index":2169,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:48",{"_index":2164,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/pages/surveys/surveys.page.ts:54",{"_index":2166,"title":{},"body":{"components/SurveysPage.html":{}}}],["src/app/services/api/api.service.ts",{"_index":147,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api/api.service.ts:13",{"_index":155,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:19",{"_index":162,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:23",{"_index":157,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:31",{"_index":165,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/association/association.service.ts",{"_index":353,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/association/association.service.ts:15",{"_index":362,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:26",{"_index":367,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:31",{"_index":372,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:61",{"_index":370,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:65",{"_index":368,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association/association.service.ts:69",{"_index":364,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth/auth.service.ts:19",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:26",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:31",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:36",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:42",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:46",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:52",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:56",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:63",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:83",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:88",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:94",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/detailed",{"_index":82,"title":{},"body":{"injectables/AnswerRelationService.html":{},"injectables/DetailedFormService.html":{},"injectables/PhotoService.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["src/app/services/draft/draft.service.ts",{"_index":1029,"title":{},"body":{"injectables/DraftService.html":{},"coverage.html":{}}}],["src/app/services/draft/draft.service.ts:12",{"_index":1040,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:21",{"_index":1049,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:29",{"_index":1044,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:38",{"_index":1042,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:47",{"_index":1051,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:55",{"_index":1047,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:64",{"_index":1046,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:68",{"_index":1052,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:77",{"_index":1053,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:81",{"_index":1045,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/draft/draft.service.ts:85",{"_index":1055,"title":{},"body":{"injectables/DraftService.html":{}}}],["src/app/services/form/form.service.ts",{"_index":1232,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/form/form.service.ts:120",{"_index":1269,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:129",{"_index":1280,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:18",{"_index":1243,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:39",{"_index":1252,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/form/form.service.ts:94",{"_index":1272,"title":{},"body":{"injectables/FormService.html":{}}}],["src/app/services/offline",{"_index":1554,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/producer/producer.service.ts",{"_index":1687,"title":{},"body":{"injectables/ProducerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/producer/producer.service.ts:16",{"_index":1693,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:23",{"_index":1695,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:27",{"_index":1700,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:33",{"_index":1699,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:59",{"_index":1694,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/producer/producer.service.ts:63",{"_index":1697,"title":{},"body":{"injectables/ProducerService.html":{}}}],["src/app/services/storage/storage.service.ts",{"_index":2045,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/services/storage/storage.service.ts:10",{"_index":2053,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:16",{"_index":2056,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:29",{"_index":2062,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:33",{"_index":2055,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:37",{"_index":2060,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:41",{"_index":2058,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:45",{"_index":2057,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage/storage.service.ts:49",{"_index":2063,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/survey/survey.service.ts",{"_index":2085,"title":{},"body":{"injectables/SurveyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/survey/survey.service.ts:106",{"_index":2099,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:13",{"_index":2109,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:14",{"_index":2095,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:22",{"_index":2105,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:28",{"_index":2096,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:36",{"_index":2101,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:44",{"_index":2106,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:48",{"_index":2100,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:54",{"_index":2102,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:58",{"_index":2107,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:62",{"_index":2108,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/services/survey/survey.service.ts:96",{"_index":2103,"title":{},"body":{"injectables/SurveyService.html":{}}}],["src/app/utils/builder.ts",{"_index":2495,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.development.ts",{"_index":2501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.mobile.ts",{"_index":2502,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2503,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":2505,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["standalone",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["startdraft",{"_index":929,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["startdrawing",{"_index":1145,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["startdrawing(event",{"_index":1155,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["startform",{"_index":808,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["statements",{"_index":2465,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":570,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["status",{"_index":2098,"title":{},"body":{"injectables/SurveyService.html":{}}}],["status.connected",{"_index":391,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["storage",{"_index":1251,"title":{},"body":{"injectables/FormService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["storage/storage.service",{"_index":376,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{},"injectables/SurveyService.html":{}}}],["storage_req_key",{"_index":1596,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storageservice",{"_index":361,"title":{"injectables/StorageService.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/DraftService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"coverage.html":{}}}],["store",{"_index":1321,"title":{},"body":{"injectables/FormService.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":1265,"title":{},"body":{"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedobj",{"_index":1573,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedobj.length",{"_index":1575,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedobj.push(action",{"_index":1594,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedoperations",{"_index":1574,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["storedreq",{"_index":1607,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"miscellaneous/variables.html":{}}}],["storedrequest",{"_index":1563,"title":{"interfaces/StoredRequest.html":{}},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"coverage.html":{}}}],["storerequest",{"_index":1559,"title":{},"body":{"injectables/OfflineManagerService.html":{}}}],["storerequest(url",{"_index":1566,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"injectables/DraftService.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"components/HomePage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"interfaces/Producer.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["stringdate",{"_index":750,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["stringdate.split",{"_index":757,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["strong",{"_index":905,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["styles",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["styleurls",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["su",{"_index":663,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["subheader",{"_index":1789,"title":{},"body":{"components/QuestionComponent.html":{}}}],["subscription",{"_index":1764,"title":{},"body":{"components/QuestionComponent.html":{}}}],["substring",{"_index":2376,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["succesfully",{"_index":1578,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["success",{"_index":1194,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["sum",{"_index":732,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["supplies",{"_index":318,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["survey",{"_index":919,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["survey)).pipe",{"_index":2131,"title":{},"body":{"injectables/SurveyService.html":{}}}],["survey.beneficiary.id",{"_index":998,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["survey.id",{"_index":2143,"title":{},"body":{"injectables/SurveyService.html":{}}}],["survey.sync",{"_index":2127,"title":{},"body":{"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["survey/survey.service",{"_index":969,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["surveys",{"_index":992,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{}}}],["surveys'},{'name",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["surveys.filter((survey",{"_index":2172,"title":{},"body":{"components/SurveysPage.html":{}}}],["surveys.length",{"_index":2177,"title":{},"body":{"components/SurveysPage.html":{}}}],["surveys.page.html",{"_index":2157,"title":{},"body":{"components/SurveysPage.html":{}}}],["surveys.page.scss",{"_index":2156,"title":{},"body":{"components/SurveysPage.html":{}}}],["surveys.some((survey",{"_index":997,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["surveys_storage_key",{"_index":2154,"title":{},"body":{"injectables/SurveyService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["surveyservice",{"_index":222,"title":{"injectables/SurveyService.html":{}},"body":{"components/AppComponent.html":{},"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"coverage.html":{}}}],["surveyspage",{"_index":288,"title":{"components/SurveysPage.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["surveystosync",{"_index":2125,"title":{},"body":{"injectables/SurveyService.html":{}}}],["surveystosync.map((survey",{"_index":2129,"title":{},"body":{"injectables/SurveyService.html":{}}}],["surveytype",{"_index":950,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["switch",{"_index":1829,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["switchmap",{"_index":380,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/OfflineManagerService.html":{},"injectables/ProducerService.html":{},"interfaces/StoredRequest.html":{}}}],["switchmap((status",{"_index":388,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["switchmap((storedoperations",{"_index":1572,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["sync",{"_index":32,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{}}}],["syncassociations",{"_index":359,"title":{},"body":{"injectables/AssociationService.html":{}}}],["syncassociations(forcerefresh",{"_index":371,"title":{},"body":{"injectables/AssociationService.html":{}}}],["synced",{"_index":1579,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["syncedsurvey",{"_index":2140,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncedsurvey.dateend",{"_index":2184,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurvey.description",{"_index":2186,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurvey.name",{"_index":2183,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurvey.questions[0].answers[0].value",{"_index":2185,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurvey.uuid",{"_index":2182,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurveys",{"_index":2174,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncedsurveys.length",{"_index":2176,"title":{},"body":{"components/SurveysPage.html":{}}}],["syncendpoint",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syncproducers",{"_index":1691,"title":{},"body":{"injectables/ProducerService.html":{}}}],["syncproducers(forcerefresh",{"_index":1698,"title":{},"body":{"injectables/ProducerService.html":{}}}],["syncrequests",{"_index":2128,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncresult?.id",{"_index":2142,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncresults.find((syncresult",{"_index":2141,"title":{},"body":{"injectables/SurveyService.html":{}}}],["syncsurveys",{"_index":2094,"title":{},"body":{"injectables/SurveyService.html":{}}}],["t",{"_index":158,"title":{},"body":{"injectables/ApiService.html":{}}}],["tabla",{"_index":1275,"title":{},"body":{"injectables/FormService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["table",{"_index":2198,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["table.component.html",{"_index":2201,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":2200,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecomponent",{"_index":290,"title":{"components/TableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["tablemessage",{"_index":1808,"title":{},"body":{"components/QuestionComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2507,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1679,"title":{},"body":{"injectables/PhotoService.html":{}}}],["takephoto",{"_index":1657,"title":{},"body":{"components/PhotoDataTypeComponent.html":{},"injectables/PhotoService.html":{}}}],["takes",{"_index":700,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["tap",{"_index":381,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["tap((associations",{"_index":403,"title":{},"body":{"injectables/AssociationService.html":{}}}],["tap((producers",{"_index":1709,"title":{},"body":{"injectables/ProducerService.html":{}}}],["tardar",{"_index":1361,"title":{},"body":{"components/HomePage.html":{}}}],["technicalassistance",{"_index":315,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["tel",{"_index":1863,"title":{},"body":{"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{}}}],["template",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["templateurl",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["text",{"_index":47,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["textanswered",{"_index":1851,"title":{},"body":{"components/QuestionComponent.html":{}}}],["textareadatatypecomponent",{"_index":292,"title":{"components/TextAreaDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["textdatatypecomponent",{"_index":294,"title":{"components/TextDataTypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["then((alert",{"_index":1799,"title":{},"body":{"components/QuestionComponent.html":{}}}],["then((position",{"_index":1015,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this._storage",{"_index":2071,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.foreach((value",{"_index":2081,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.get(key",{"_index":2077,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.keys",{"_index":2080,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.length",{"_index":2079,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.remove(key",{"_index":2078,"title":{},"body":{"injectables/StorageService.html":{}}}],["this._storage?.set(key",{"_index":2076,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.alertcontroller",{"_index":1786,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.alertcontroller.create",{"_index":674,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/SurveyService.html":{}}}],["this.alertshown",{"_index":1785,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.answerrelationservice.checkanswerrelation",{"_index":2278,"title":{},"body":{"components/TableComponent.html":{}}}],["this.answerrelationservice.checkanswerrelation(nextquestion",{"_index":2016,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.answerrelationservice.disablequestion(question",{"_index":2037,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["this.answerrelationservice.enablequestion(question",{"_index":2036,"title":{},"body":{"injectables/QuestionService.html":{},"components/TableComponent.html":{}}}],["this.apiservice.post",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(op.url",{"_index":1603,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.appversion",{"_index":1356,"title":{},"body":{"components/HomePage.html":{}}}],["this.areselected(relation",{"_index":135,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["this.assignbeneficiary(selection",{"_index":609,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.assignformcontrols(question",{"_index":1915,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.assoaciationservice.getassociationbyid(associationid",{"_index":2436,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.associations",{"_index":385,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associations.find((association",{"_index":407,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associationservice.getassociationbyid(associationid",{"_index":2299,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["this.atleastonechecked",{"_index":1927,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.authservice.getuser()).type",{"_index":2003,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.authservice.getuser().then((user",{"_index":1369,"title":{},"body":{"components/HomePage.html":{}}}],["this.authservice.islogged",{"_index":424,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["this.authservice.login(this.form.value",{"_index":1409,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authservice.logout",{"_index":1368,"title":{},"body":{"components/HomePage.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["this.backbuttonsubscription",{"_index":1775,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.backbuttonsubscription.unsubscribe",{"_index":1777,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.canvas.nativeelement.getcontext('2d').scale(ratio",{"_index":1174,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.height",{"_index":1173,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.offsetheight",{"_index":1169,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.offsetwidth",{"_index":1168,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.style.height",{"_index":1167,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.style.width",{"_index":1166,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.canvas.nativeelement.width",{"_index":1172,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.changeinputstate(answersformgroup",{"_index":2426,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.changeinputstate(formgroup",{"_index":1527,"title":{},"body":{"components/MultipleComponent.html":{}}}],["this.changequestionid(basearraycopy",{"_index":2256,"title":{},"body":{"components/TableComponent.html":{}}}],["this.changespecialized(producer",{"_index":1067,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.checkandrelation(answerrelation",{"_index":130,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["this.checkorrelation(answerrelation",{"_index":131,"title":{},"body":{"injectables/AnswerRelationService.html":{}}}],["this.checkphonelistlength(phones",{"_index":1649,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["this.confirmchanges",{"_index":2367,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.confirmexit",{"_index":657,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["this.currencypipe.transform",{"_index":1465,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["this.currentquestion",{"_index":1773,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion.questioncategory.name",{"_index":1781,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion.questionchildren.foreach((section",{"_index":1840,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion.type",{"_index":1800,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion?.questioncategory.name",{"_index":1820,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.currentquestion?.type",{"_index":1821,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.data",{"_index":588,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.decodetoken(token",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.detailedformservice.getform",{"_index":832,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.getform().beneficiary.associationid",{"_index":2298,"title":{},"body":{"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.detailedformservice.getform().beneficiary.recommendedactions",{"_index":2240,"title":{},"body":{"components/TableComponent.html":{}}}],["this.detailedformservice.getform().beneficiary.transplantdate",{"_index":743,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["this.detailedformservice.gettotalquestions",{"_index":881,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.isdraft",{"_index":685,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["this.detailedformservice.isform",{"_index":684,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["this.detailedformservice.isquestionspage",{"_index":656,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["this.detailedformservice.issurvey",{"_index":833,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/QuestionComponent.html":{}}}],["this.detailedformservice.savesurvey",{"_index":1817,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.detailedformservice.setbeneficiary(beneficiary",{"_index":617,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.detailedformservice.setform(formtosend",{"_index":1119,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["this.detailedformservice.setform(survey",{"_index":2173,"title":{},"body":{"components/SurveysPage.html":{}}}],["this.detailedformservice.setquestionspage(false",{"_index":831,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.setquestionspage(true",{"_index":836,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.startdraft",{"_index":835,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.detailedformservice.updatemodifydate",{"_index":1838,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.disabled",{"_index":745,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["this.disablequestion(childquestion",{"_index":2280,"title":{},"body":{"components/TableComponent.html":{}}}],["this.disablequestion(nextquestion",{"_index":2019,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.draft",{"_index":974,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{}}}],["this.drafts",{"_index":1076,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts.filter((draft",{"_index":1081,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts.findindex((d",{"_index":1071,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts.push(draft",{"_index":1061,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts.splice(index",{"_index":1062,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.drafts[index].fechaultimocambio",{"_index":1086,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.draftservice.deletedraft(index",{"_index":1109,"title":{},"body":{"components/DraftsPage.html":{}}}],["this.draftservice.getdrafts",{"_index":991,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{}}}],["this.draftservice.getlocaldrafts",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/DraftsPage.html":{}}}],["this.draftservice.pushdraft(copy",{"_index":1023,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.draftservice.removedraft",{"_index":1026,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.draftservice.savedrafts",{"_index":1024,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["this.draftservice.updatemodifydate(this.selectedform",{"_index":1028,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.enablequestion(childquestion",{"_index":2279,"title":{},"body":{"components/TableComponent.html":{}}}],["this.enablequestion(nextquestion",{"_index":2017,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.existsproducerwithspecializedform(selectedbeneficiary",{"_index":985,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.farming",{"_index":2435,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.fb.group",{"_index":1398,"title":{},"body":{"components/LoginPage.html":{}}}],["this.filtereditems",{"_index":2364,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.filteredquestions",{"_index":2000,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions.filter",{"_index":2001,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions.indexof(current",{"_index":2022,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions.length",{"_index":2006,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions[0",{"_index":2007,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions[lastindex",{"_index":2010,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filteredquestions[this.getcurrentindex(current",{"_index":2013,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.filterlist(ev.target.value",{"_index":2370,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.form",{"_index":973,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{}}}],["this.form.valid",{"_index":1408,"title":{},"body":{"components/LoginPage.html":{}}}],["this.formgroup",{"_index":1771,"title":{},"body":{"components/QuestionComponent.html":{},"components/UniqueComponent.html":{}}}],["this.formgroup.controls",{"_index":2241,"title":{},"body":{"components/TableComponent.html":{}}}],["this.formgroup.controls[nextquestion.id]!.disabled",{"_index":1825,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.formgroup.controls[this.currentquestion.id].valid",{"_index":1822,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.formgroup.controls[this.question.id",{"_index":1491,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["this.formgroup.controls[this.question.id].setvalue(event.detail.value",{"_index":1489,"title":{},"body":{"components/MonthDataTypeComponent.html":{}}}],["this.formgroup.get",{"_index":591,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.formgroup.get(`${this.question.id",{"_index":747,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MultipleComponent.html":{}}}],["this.formgroup.get(`${this.question.id}`)?.setvalue(base64data",{"_index":1187,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.formgroup.get(`${this.question.id}`)?.setvalue(event.target.value",{"_index":1198,"title":{},"body":{"components/EmailDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["this.formgroup.get(`${this.question.id}`)?.setvalue(photo",{"_index":1662,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.formgroup.get(`${this.question.id}`)?.value",{"_index":751,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["this.formgroup.valid",{"_index":1823,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.forms",{"_index":1225,"title":{},"body":{"components/FormListComponent.html":{},"components/FormsPage.html":{}}}],["this.formservice.getforms().subscribe((forms",{"_index":1332,"title":{},"body":{"components/FormsPage.html":{}}}],["this.formsservice.getforms().subscribe((forms",{"_index":1224,"title":{},"body":{"components/FormListComponent.html":{}}}],["this.generateformarray(question",{"_index":1917,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.generateformcontrol(question",{"_index":1916,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.generateformgroup(question",{"_index":1918,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.getanswerid(selection",{"_index":611,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getanswers",{"_index":605,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["this.getanswers().find((answer",{"_index":618,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getassociation",{"_index":2296,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["this.getcheckedanswerid(answersformgroup",{"_index":2425,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.getchildquestion",{"_index":2276,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getcurrentindex(currentquestion",{"_index":2031,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getdata",{"_index":589,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getfilteredlength",{"_index":2033,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getfirst",{"_index":2023,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getform().altitud",{"_index":871,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.getform().position",{"_index":868,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.getformcontrol(child",{"_index":1933,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.getformcontrol(question",{"_index":1912,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.getformgroup(i).get(questionid)!.enabled",{"_index":2283,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getformgroup(sectionindex",{"_index":2277,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getlast",{"_index":2011,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getlocaldrafts",{"_index":1056,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.getlocalforms",{"_index":1286,"title":{},"body":{"injectables/FormService.html":{}}}],["this.getlocalproducers",{"_index":1704,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.getlocation",{"_index":834,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.getnewyear(number(this.question.max",{"_index":778,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["this.getnewyear(number(this.question.min",{"_index":781,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["this.getnextquestion(question",{"_index":2014,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getpreviousquestion(question",{"_index":2025,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getpreviousvalidquestionfrom(previousquestion",{"_index":2028,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getprogress",{"_index":654,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["this.getquestionchildren(question",{"_index":1294,"title":{},"body":{"injectables/FormService.html":{}}}],["this.getquestionvalue",{"_index":587,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getselectedvalue(answers",{"_index":595,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.getsurveys",{"_index":2171,"title":{},"body":{"components/SurveysPage.html":{}}}],["this.getsyncedsurveys",{"_index":2175,"title":{},"body":{"components/SurveysPage.html":{}}}],["this.gettoken",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getunsyncedsurveys",{"_index":2179,"title":{},"body":{"components/SurveysPage.html":{}}}],["this.httpclient.get(`/api/${endpoint",{"_index":178,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient.get(`/api/${endpoint}/${id",{"_index":179,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient.post(`/api/${endpoint",{"_index":182,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.init",{"_index":2068,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.initializeapp",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdraft",{"_index":671,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["this.isform",{"_index":660,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["this.islastanswer(id",{"_index":1536,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["this.isquestionvalid",{"_index":1778,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.issurvey",{"_index":976,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/QuestionComponent.html":{}}}],["this.istokenexpired(token",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isvalid",{"_index":1816,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.items",{"_index":2365,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.items.filter((item",{"_index":2379,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.jwthelperservice.istokenexpired(token",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keys().then((keys",{"_index":2074,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.length().then((length",{"_index":2072,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.loadingcontroller.create",{"_index":1405,"title":{},"body":{"components/LoginPage.html":{},"components/QuestionComponent.html":{}}}],["this.loadingcontroller.dismiss",{"_index":1410,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loadothercontrol",{"_index":2441,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.loadproducers",{"_index":1353,"title":{},"body":{"components/HomePage.html":{}}}],["this.loaduser",{"_index":1354,"title":{},"body":{"components/HomePage.html":{}}}],["this.location.back",{"_index":658,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/QuestionComponent.html":{}}}],["this.modal.dismiss",{"_index":613,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/HomePage.html":{}}}],["this.modal.present",{"_index":590,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.navcontroller.pop",{"_index":880,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["this.navctrl.pop",{"_index":1818,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.online",{"_index":2118,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.open",{"_index":593,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.originalquestions",{"_index":1999,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.originalquestions.filter",{"_index":1998,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.originalquestions.length",{"_index":2005,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.other",{"_index":1537,"title":{},"body":{"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["this.phones",{"_index":1645,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["this.phonesobserver",{"_index":1646,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["this.phonesobserver.subscribe((phones",{"_index":1648,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["this.photoservice.takephoto().then((photo",{"_index":1661,"title":{},"body":{"components/PhotoDataTypeComponent.html":{}}}],["this.platform.backbutton.subscribewithpriority(10",{"_index":1776,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.platform.is('mobile",{"_index":1118,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{}}}],["this.platform.ready().then",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["this.preloadfarmingvalue(answersformgroup",{"_index":2423,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.preloadselectedanswers",{"_index":2237,"title":{},"body":{"components/TableComponent.html":{}}}],["this.preloadtransplantdate(transplantdate",{"_index":746,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["this.preloadvalue",{"_index":2292,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["this.presentalert",{"_index":2145,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.presentalert(false",{"_index":1819,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.presentalert(istable",{"_index":1801,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.producers",{"_index":1702,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.producerservice.updateproducers",{"_index":1371,"title":{},"body":{"components/HomePage.html":{}}}],["this.producersservice.getproducers",{"_index":602,"title":{},"body":{"components/AutocompleteComponent.html":{},"injectables/DraftService.html":{}}}],["this.progress",{"_index":653,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"injectables/QuestionService.html":{}}}],["this.question.answers",{"_index":608,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.answers.find",{"_index":599,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.datatype",{"_index":1623,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.question.id",{"_index":592,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.max",{"_index":777,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.min",{"_index":780,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question.order",{"_index":2236,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questioncategory.name",{"_index":2272,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questionchildren",{"_index":2270,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questionchildren.length",{"_index":2264,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questionchildren.pop",{"_index":2269,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.questionchildren.push(basearraycopy",{"_index":2261,"title":{},"body":{"components/TableComponent.html":{}}}],["this.question.text",{"_index":2271,"title":{},"body":{"components/TableComponent.html":{},"components/TextDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["this.question?.datatype",{"_index":2317,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.question?.order",{"_index":2319,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.question?.questioncategory.name",{"_index":2313,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.question?.text",{"_index":2318,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.question?.type",{"_index":2314,"title":{},"body":{"components/TypeComponent.html":{}}}],["this.questioncontrolservice.toformgroup(basearraycopy",{"_index":2258,"title":{},"body":{"components/TableComponent.html":{}}}],["this.questioncontrolservice.toformgroup(this.filteredquestions",{"_index":2035,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.questionservice.getfirst",{"_index":1774,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.getformgroup",{"_index":1772,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.getnextvalidquestionfrom",{"_index":1806,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.getpreviousvalidquestionfrom",{"_index":1807,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.getprogress",{"_index":655,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["this.questionservice.setquestions(this.selectedform.questions",{"_index":1014,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.questionservice.togglenextquestionfrom",{"_index":1780,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.togglenextquestionfrom(question",{"_index":1824,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.questionservice.togglenextquestionfrom(this.question",{"_index":2422,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.questionspage",{"_index":978,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.removeolddrafts",{"_index":1077,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.removetoken",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removeuser",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.requestdata",{"_index":1221,"title":{},"body":{"components/FormListComponent.html":{}}}],["this.requiredchildrenresponse",{"_index":1923,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.requiredtableresponse",{"_index":1935,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["this.resizecanvas",{"_index":1163,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.router.navigate(['/home",{"_index":425,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.router.navigate(['/login",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SecureInnerPagesGuard.html":{}}}],["this.router.navigate(['detail",{"_index":1120,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["this.savedrafts",{"_index":1068,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.saveopenresponse(question",{"_index":1832,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.saveresponse(child",{"_index":1844,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.saveresponse(this.currentquestion",{"_index":1779,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.saveselection(question",{"_index":1837,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.savesurveys",{"_index":2114,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.savetableresponse(question",{"_index":1834,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.searchansweridbyfarming",{"_index":2433,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.selectedform",{"_index":972,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.beneficiary",{"_index":980,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.id",{"_index":982,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.position",{"_index":1016,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selectedform.questions.length",{"_index":1019,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.selection",{"_index":586,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.selectioncancel.emit",{"_index":2368,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.selectionchange.emit(this.workingselectedvalue",{"_index":2369,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["this.sendrequests(storedobj).pipe",{"_index":1576,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.setcheckedvalue(answersformgroup",{"_index":2434,"title":{},"body":{"components/UniqueComponent.html":{}}}],["this.setcheckedvalue(formgroup",{"_index":612,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/MultipleComponent.html":{},"components/UniqueComponent.html":{}}}],["this.setlocalassociations(associations",{"_index":404,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.setlocalforms(forms",{"_index":1306,"title":{},"body":{"injectables/FormService.html":{}}}],["this.setlocalproducers(producers",{"_index":1710,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.setquestions",{"_index":977,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.setsignature",{"_index":1175,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.settoken(authresponse.token",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setuser(user",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.showalreadyspecializedbeneficiaryalert",{"_index":987,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.shownospecializedbeneficiaryalert",{"_index":988,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.showstorage",{"_index":2075,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.signatureimg",{"_index":1179,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad",{"_index":1160,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.clear",{"_index":1176,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.fromdata(data",{"_index":1190,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.fromdataurl(signature",{"_index":1178,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.off",{"_index":1164,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.on",{"_index":1165,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.todata",{"_index":1188,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.signaturepad.todataurl('image/png",{"_index":1185,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["this.storage.create",{"_index":2070,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.storage.definedriver(cordovasqlitedriver",{"_index":2069,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.storageservice.get('drafts').then((drafts",{"_index":1075,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.storageservice.get(associations_storage_key",{"_index":406,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.storageservice.get(forms_storage_key",{"_index":1318,"title":{},"body":{"injectables/FormService.html":{}}}],["this.storageservice.get(producers_storage_key",{"_index":1711,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.storageservice.get(storage_req_key).then((storedoperations",{"_index":1592,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.storageservice.get(surveys_storage_key).then((surveys",{"_index":2122,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.storageservice.remove(storage_req_key",{"_index":1584,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.storageservice.set",{"_index":1595,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.storageservice.set('associations",{"_index":405,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.storageservice.set('drafts",{"_index":1083,"title":{},"body":{"injectables/DraftService.html":{}}}],["this.storageservice.set(endpoint",{"_index":1712,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.storageservice.set(forms_storage_key",{"_index":1319,"title":{},"body":{"injectables/FormService.html":{}}}],["this.storageservice.set(surveys_storage_key",{"_index":2124,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.survey",{"_index":975,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/FormListComponent.html":{}}}],["this.surveys",{"_index":2123,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.filter((survey",{"_index":2126,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.indexof(survey",{"_index":2150,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.map((survey",{"_index":2139,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys.push(copy",{"_index":2113,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveys[index].sync",{"_index":2151,"title":{},"body":{"injectables/SurveyService.html":{}}}],["this.surveyservice.addnetworkchangelistener",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["this.surveyservice.getlocalsurveys",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/SurveysPage.html":{}}}],["this.surveyservice.getsurveys",{"_index":993,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/SurveysPage.html":{}}}],["this.surveyservice.pushsurvey(removeddraft",{"_index":1027,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["this.surveyservice.syncsurveys",{"_index":1364,"title":{},"body":{"components/HomePage.html":{}}}],["this.syncassociations(true).subscribe((associations",{"_index":384,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.syncproducers(true).subscribe((producers",{"_index":1703,"title":{},"body":{"injectables/ProducerService.html":{}}}],["this.toastcontroller.create",{"_index":1111,"title":{},"body":{"components/DraftsPage.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["this.togglenextquestionfrom(nextquestion",{"_index":2020,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.updateprogress(nextquestion",{"_index":2018,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.updateprogress(previousquestion",{"_index":2029,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.url}/api/${endpoint",{"_index":191,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.user",{"_index":1370,"title":{},"body":{"components/HomePage.html":{}}}],["this.workingselectedvalue",{"_index":2366,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["thousandseparator",{"_index":1453,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["through",{"_index":1309,"title":{},"body":{"injectables/FormService.html":{}}}],["throw",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DetailedFormService.html":{}}}],["tiene",{"_index":1001,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["time",{"_index":1590,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["title",{"_index":537,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TypeaheadComponent.html":{}}}],["toast",{"_index":1577,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["toast.present",{"_index":1583,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["toast.then((toast",{"_index":1582,"title":{},"body":{"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["toastcontroller",{"_index":1093,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["todas",{"_index":1810,"title":{},"body":{"components/QuestionComponent.html":{}}}],["today",{"_index":753,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["today.toisostring",{"_index":754,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["todo",{"_index":2152,"title":{},"body":{"injectables/SurveyService.html":{},"components/TypeComponent.html":{}}}],["toformgroup",{"_index":1890,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["toformgroup(questions",{"_index":1906,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["togglenextquestionfrom",{"_index":1964,"title":{},"body":{"injectables/QuestionService.html":{}}}],["togglenextquestionfrom(question",{"_index":1987,"title":{},"body":{"injectables/QuestionService.html":{}}}],["token",{"_index":188,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["token.value",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["token_key",{"_index":187,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["token_storage_key",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokengetter",{"_index":2506,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toolbar",{"_index":703,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/HomePage.html":{}}}],["top",{"_index":902,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{}}}],["total",{"_index":892,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["trackitems",{"_index":2331,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["trackitems(index",{"_index":2360,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["transform",{"_index":585,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DetailedFormComponent.html":{},"components/FormListComponent.html":{}}}],["transition",{"_index":1875,"title":{},"body":{"components/QuestionComponent.html":{}}}],["translatey",{"_index":904,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["transplantdate",{"_index":320,"title":{},"body":{"interfaces/Association.html":{},"components/DateDataTypeComponent.html":{},"interfaces/Producer.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["true",{"_index":132,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":837,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{}}}],["tslib",{"_index":2547,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Association.html":{},"injectables/AssociationService.html":{},"injectables/AuthGuard.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"injectables/OfflineManagerService.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"interfaces/Producer.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/SecureInnerPagesGuard.html":{},"injectables/StorageService.html":{},"interfaces/StoredRequest.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type'},{'name",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["type.component",{"_index":1619,"title":{},"body":{"components/OpenComponent.html":{},"components/TableComponent.html":{}}}],["type.component.html",{"_index":718,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{}}}],["type.component.scss",{"_index":717,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{}}}],["type.component.ts",{"_index":715,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"coverage.html":{}}}],["type.component.ts:14",{"_index":1625,"title":{},"body":{"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:15",{"_index":728,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:16",{"_index":727,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:17",{"_index":726,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:18",{"_index":1148,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:19",{"_index":1550,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:20",{"_index":1549,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:21",{"_index":736,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:22",{"_index":1636,"title":{},"body":{"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:23",{"_index":1147,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:24",{"_index":1444,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:25",{"_index":1443,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{}}}],["type.component.ts:26",{"_index":1641,"title":{},"body":{"components/PhoneDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:27",{"_index":1152,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/TextAreaDataTypeComponent.html":{}}}],["type.component.ts:28",{"_index":2289,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["type.component.ts:29",{"_index":738,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["type.component.ts:30",{"_index":1456,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{}}}],["type.component.ts:31",{"_index":1627,"title":{},"body":{"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:33",{"_index":2291,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["type.component.ts:34",{"_index":735,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:35",{"_index":1628,"title":{},"body":{"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:36",{"_index":1442,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{}}}],["type.component.ts:37",{"_index":2290,"title":{},"body":{"components/TextDataTypeComponent.html":{}}}],["type.component.ts:42",{"_index":1643,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:43",{"_index":1447,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["type.component.ts:44",{"_index":1551,"title":{},"body":{"components/NumberDataTypeComponent.html":{}}}],["type.component.ts:46",{"_index":1154,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:54",{"_index":1446,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{}}}],["type.component.ts:55",{"_index":741,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:59",{"_index":1637,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:60",{"_index":1151,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:62",{"_index":1626,"title":{},"body":{"components/PercentageDataTypeComponent.html":{}}}],["type.component.ts:64",{"_index":1149,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:68",{"_index":1153,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/MoneyDataTypeComponent.html":{}}}],["type.component.ts:71",{"_index":729,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{}}}],["type.component.ts:74",{"_index":1156,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["type.component.ts:78",{"_index":730,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["type.component.ts:80",{"_index":1642,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:85",{"_index":733,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["type.component.ts:89",{"_index":1639,"title":{},"body":{"components/PhoneDataTypeComponent.html":{}}}],["type.component.ts:95",{"_index":1445,"title":{},"body":{"components/MoneyDataTypeComponent.html":{}}}],["type/date",{"_index":714,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/drawing",{"_index":1135,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/email",{"_index":1197,"title":{},"body":{"components/EmailDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/money",{"_index":1434,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/month",{"_index":1486,"title":{},"body":{"components/MonthDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/number",{"_index":1547,"title":{},"body":{"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"coverage.html":{}}}],["type/percentage",{"_index":1621,"title":{},"body":{"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"coverage.html":{}}}],["type/phone",{"_index":1622,"title":{},"body":{"components/OpenComponent.html":{},"components/PhoneDataTypeComponent.html":{},"coverage.html":{}}}],["type/photo",{"_index":1618,"title":{},"body":{"components/OpenComponent.html":{},"components/PhotoDataTypeComponent.html":{},"coverage.html":{}}}],["type/table/table.component",{"_index":1768,"title":{},"body":{"components/QuestionComponent.html":{}}}],["type/text",{"_index":1620,"title":{},"body":{"components/OpenComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"coverage.html":{}}}],["type/type.component",{"_index":1769,"title":{},"body":{"components/QuestionComponent.html":{}}}],["typeahead",{"_index":2321,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["typeahead'},{'name",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["typeahead.component.html",{"_index":2323,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["typeahead.component.scss",{"_index":2322,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["typeaheadcomponent",{"_index":295,"title":{"components/TypeaheadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["typealiases",{"_index":2576,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typecomponent",{"_index":297,"title":{"components/TypeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["types",{"_index":442,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["técnica",{"_index":334,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["ubicación",{"_index":849,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["un",{"_index":1011,"title":{},"body":{"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["una",{"_index":1413,"title":{},"body":{"components/LoginPage.html":{}}}],["undefined",{"_index":366,"title":{},"body":{"injectables/AssociationService.html":{},"components/DateDataTypeComponent.html":{},"injectables/FormService.html":{},"injectables/QuestionService.html":{},"injectables/SurveyService.html":{},"components/TextDataTypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["undopad",{"_index":1146,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["unique",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["unique.component.html",{"_index":2384,"title":{},"body":{"components/UniqueComponent.html":{}}}],["unique.component.scss",{"_index":2383,"title":{},"body":{"components/UniqueComponent.html":{}}}],["unique/unique.component",{"_index":2312,"title":{},"body":{"components/TypeComponent.html":{}}}],["uniquecomponent",{"_index":298,"title":{"components/UniqueComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"coverage.html":{}}}],["unknown",{"_index":418,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/StorageService.html":{}}}],["uno",{"_index":549,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TypeaheadComponent.html":{}}}],["unsyncedsurvey.dateend",{"_index":2189,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurvey.description",{"_index":2191,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurvey.name",{"_index":2188,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurvey.questions[0].answers[0].value",{"_index":2190,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurvey.uuid",{"_index":2187,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurveys",{"_index":2178,"title":{},"body":{"components/SurveysPage.html":{}}}],["unsyncedsurveys.length",{"_index":2180,"title":{},"body":{"components/SurveysPage.html":{}}}],["up",{"_index":701,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["update",{"_index":2347,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["updated_at",{"_index":444,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["updateddate",{"_index":437,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{}}}],["updatedsurveys",{"_index":2138,"title":{},"body":{"injectables/SurveyService.html":{}}}],["updatemodifydate",{"_index":930,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{}}}],["updatemodifydate(draft",{"_index":1054,"title":{},"body":{"injectables/DraftService.html":{}}}],["updateproducers",{"_index":1692,"title":{},"body":{"injectables/ProducerService.html":{}}}],["updateprogress",{"_index":1965,"title":{},"body":{"injectables/QuestionService.html":{}}}],["updateprogress(currentquestion",{"_index":1989,"title":{},"body":{"injectables/QuestionService.html":{}}}],["uploadsurvey",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadsurveys",{"_index":1341,"title":{},"body":{"components/HomePage.html":{},"injectables/SurveyService.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":149,"title":{},"body":{"injectables/ApiService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{},"miscellaneous/variables.html":{}}}],["url('../../../assets/imgs/header",{"_index":1383,"title":{},"body":{"components/HomePage.html":{}}}],["used",{"_index":1320,"title":{},"body":{"injectables/FormService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":432,"title":{"interfaces/User.html":{}},"body":{"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["user.name",{"_index":1378,"title":{},"body":{"components/HomePage.html":{}}}],["user.type",{"_index":1380,"title":{},"body":{"components/HomePage.html":{}}}],["user_id",{"_index":44,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["user_key",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["user_storage_key",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_type_restriction",{"_index":63,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["userbuilder",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["userbuilder(authresponse.user",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["userbuilder(user",{"_index":2564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userresponse",{"_index":439,"title":{},"body":{"interfaces/AuthManagement.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["usertyperestriction",{"_index":58,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"interfaces/Form.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{}}}],["usuario",{"_index":1377,"title":{},"body":{"components/HomePage.html":{}}}],["utils/builder",{"_index":383,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/ProducerService.html":{}}}],["uuid",{"_index":26,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"injectables/OfflineManagerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"interfaces/StoredRequest.html":{},"components/SurveysPage.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":966,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["v4",{"_index":965,"title":{},"body":{"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"injectables/OfflineManagerService.html":{},"interfaces/StoredRequest.html":{}}}],["validation",{"_index":1941,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validationerrors",{"_index":1908,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validatorfn",{"_index":1895,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validators",{"_index":1403,"title":{},"body":{"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/QuestionControlService.html":{},"components/UniqueComponent.html":{}}}],["validators.email",{"_index":1400,"title":{},"body":{"components/LoginPage.html":{}}}],["validators.maxlength(10",{"_index":1922,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validators.minlength(10",{"_index":1921,"title":{},"body":{"injectables/QuestionControlService.html":{}}}],["validators.minlength(6",{"_index":1401,"title":{},"body":{"components/LoginPage.html":{}}}],["validators.required",{"_index":1399,"title":{},"body":{"components/LoginPage.html":{},"injectables/QuestionControlService.html":{}}}],["valor",{"_index":1472,"title":{},"body":{"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/UniqueComponent.html":{}}}],["value",{"_index":13,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/AnswerPivot.html":{},"interfaces/AnswerRelation.html":{},"injectables/AnswerRelationService.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DraftService.html":{},"interfaces/Form.html":{},"components/FormListComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/PhoneDataTypeComponent.html":{},"injectables/ProducerService.html":{},"interfaces/Question.html":{},"interfaces/QuestionCategory.html":{},"components/QuestionComponent.html":{},"injectables/QuestionControlService.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":126,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AppComponent.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"components/QuestionComponent.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{}}}],["variable",{"_index":2484,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2581,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":897,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["version",{"_index":1381,"title":{},"body":{"components/HomePage.html":{},"properties.html":{}}}],["vertically",{"_index":696,"title":{},"body":{"components/DataquestHeaderComponent.html":{}}}],["view",{"_index":2349,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["viewchild",{"_index":574,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{}}}],["viewchild('canvas",{"_index":1158,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["viewchild('modal",{"_index":569,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/HomePage.html":{}}}],["viewsurvey",{"_index":809,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["void",{"_index":115,"title":{},"body":{"injectables/AnswerRelationService.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"interfaces/AuthManagement.html":{},"injectables/AuthService.html":{},"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DateDataTypeComponent.html":{},"components/DetailPage.html":{},"components/DetailedFormComponent.html":{},"injectables/DetailedFormService.html":{},"injectables/DraftService.html":{},"components/DraftsPage.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/EmailDataTypeComponent.html":{},"components/FormListComponent.html":{},"injectables/FormService.html":{},"components/FormsPage.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/MonthDataTypeComponent.html":{},"components/MultipleComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/OpenComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/PhoneDataTypeComponent.html":{},"components/PhotoDataTypeComponent.html":{},"injectables/ProducerService.html":{},"components/QuestionComponent.html":{},"injectables/QuestionService.html":{},"injectables/StorageService.html":{},"injectables/SurveyService.html":{},"components/SurveysPage.html":{},"components/TableComponent.html":{},"components/TextAreaDataTypeComponent.html":{},"components/TextDataTypeComponent.html":{},"components/TypeComponent.html":{},"components/TypeaheadComponent.html":{},"components/UniqueComponent.html":{},"interfaces/User.html":{}}}],["vuelve",{"_index":858,"title":{},"body":{"components/DetailedFormComponent.html":{}}}],["válidos",{"_index":1415,"title":{},"body":{"components/LoginPage.html":{}}}],["white",{"_index":1388,"title":{},"body":{"components/HomePage.html":{},"components/LoginPage.html":{}}}],["width",{"_index":624,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/DataquestHeaderComponent.html":{},"components/DrawingPadDataTypeComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PhotoDataTypeComponent.html":{}}}],["window.addeventlistener('resize",{"_index":1162,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["workingselectedvalue",{"_index":2325,"title":{},"body":{"components/TypeaheadComponent.html":{}}}],["works",{"_index":1181,"title":{},"body":{"components/DrawingPadDataTypeComponent.html":{}}}],["x",{"_index":711,"title":{},"body":{"components/DataquestHeaderComponent.html":{},"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["xx",{"_index":1133,"title":{},"body":{"components/DraftsPage.html":{},"components/FormListComponent.html":{},"components/SurveysPage.html":{}}}],["y",{"_index":857,"title":{},"body":{"components/DetailedFormComponent.html":{},"components/LoginPage.html":{},"components/MoneyDataTypeComponent.html":{},"components/NumberDataTypeComponent.html":{},"components/PercentageDataTypeComponent.html":{},"components/SurveysPage.html":{},"components/UniqueComponent.html":{}}}],["ya",{"_index":1000,"title":{},"body":{"injectables/DetailedFormService.html":{}}}],["year",{"_index":756,"title":{},"body":{"components/DateDataTypeComponent.html":{},"components/DetailedFormComponent.html":{}}}],["years",{"_index":734,"title":{},"body":{"components/DateDataTypeComponent.html":{}}}],["yes",{"_index":166,"title":{},"body":{"injectables/ApiService.html":{}}}],["zona",{"_index":351,"title":{},"body":{"interfaces/Association.html":{},"interfaces/Producer.html":{}}}],["zone",{"_index":307,"title":{},"body":{"interfaces/Association.html":{},"interfaces/AuthManagement.html":{},"interfaces/Producer.html":{},"interfaces/User.html":{}}}],["zone.js",{"_index":2550,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Answer.html":{"url":"interfaces/Answer.html","title":"interface - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnswerPivot.html":{"url":"interfaces/AnswerPivot.html","title":"interface - AnswerPivot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnswerPivot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            answerId\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answerId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnswerRelation.html":{"url":"interfaces/AnswerRelation.html","title":"interface - AnswerRelation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnswerRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            answerPivot\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            questionId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answerPivot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answerPivot:         AnswerPivot\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnswerPivot\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnswerRelationService.html":{"url":"injectables/AnswerRelationService.html","title":"injectable - AnswerRelationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnswerRelationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                areSelected\n                            \n                            \n                                    Private\n                                checkAndRelation\n                            \n                            \n                                    Public\n                                checkAnswerRelation\n                            \n                            \n                                    Private\n                                checkOrRelation\n                            \n                            \n                                    Public\n                                disableQuestion\n                            \n                            \n                                    Public\n                                enableQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        areSelected\n                        \n                    \n                \n            \n            \n                \n                        \n                    areSelected(relation: FormDetail.AnswerRelation, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n                                            \n                                                        FormDetail.AnswerRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkAndRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAndRelation(answerRelation: FormDetail.AnswerRelation[], formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answerRelation\n                                            \n                                                        FormDetail.AnswerRelation[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        checkAnswerRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAnswerRelation(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkOrRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkOrRelation(answerRelation: FormDetail.AnswerRelation[], formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answerRelation\n                                            \n                                                        FormDetail.AnswerRelation[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        disableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        enableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnswerRelationService {\n  constructor() {}\n\n  public checkAnswerRelation(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): boolean {\n    const answerRelation: FormDetail.AnswerRelation[] = question.answersRelation;\n    var answerRelationType: string = answerRelation[0]?.answerPivot.type;\n    if (answerRelationType === 'and') {\n      return this.checkAndRelation(answerRelation, formGroup);\n    } else if (answerRelationType === 'or') {\n      return this.checkOrRelation(answerRelation, formGroup);\n    } else {\n      return true;\n    }\n  }\n\n  private checkAndRelation(answerRelation: FormDetail.AnswerRelation[], formGroup: FormGroup): boolean {\n    const everyAnswerIsSelected: boolean = answerRelation.every(\n      (relation: FormDetail.AnswerRelation) => {\n        return this.areSelected(relation, formGroup);\n      }\n    );\n    return everyAnswerIsSelected;\n  }\n\n  private checkOrRelation(answerRelation: FormDetail.AnswerRelation[], formGroup: FormGroup): boolean {\n    const someAnswerIsSelected: boolean = answerRelation.some(\n      (relation: FormDetail.AnswerRelation) => {\n        return this.areSelected(relation, formGroup);\n      }\n    );\n\n    return someAnswerIsSelected;\n  }\n\n  private areSelected(relation: FormDetail.AnswerRelation, formGroup: FormGroup): boolean {\n    const questionId: string = relation.questionId;\n    const answerId: number = relation.answerPivot.answerId;\n    const value: boolean = formGroup\n      .get(questionId)!\n      .get(answerId.toString())!.value;\n\n    return value;\n  }\n\n  public disableQuestion(question: FormDetail.Question, formGroup: FormGroup): void {\n    const questionId: string = question.id.toString();\n    formGroup.get(questionId)?.reset();\n    formGroup.get(questionId)?.disable();\n  }\n\n  public enableQuestion(question: FormDetail.Question, formGroup: FormGroup): void {\n    const questionId: string = question.id.toString();\n    formGroup.get(questionId)?.enable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                    Async\n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/api.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(endpoint: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:23\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(endpoint: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:19\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(endpoint: string, resource?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                endpoint\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                resource\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.url\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api/api.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CapacitorHttp, HttpResponse } from '@capacitor/core';\nimport { environment } from 'environment';\nimport { Preferences } from '@capacitor/preferences';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private readonly url = environment.url;\n\n  constructor(\n    private httpClient: HttpClient,\n  ) {}\n\n  public getAll (endpoint: string): Observable {\n    return this.httpClient.get(`/api/${endpoint}/`);\n  }\n\n  public get (endpoint: string, id: string): Observable {\n    return this.httpClient.get(`/api/${endpoint}/${id}`);\n  }\n\n  /* public post (endpoint: string, resource?: { email: string; password: string; }): Observable {\n    return this.httpClient.post(`/api/${endpoint}/`, resource);\n  } */\n\n  public async post (endpoint: string, resource?: any): Promise {\n    const result = await Preferences.get({ key: 'TOKEN_KEY' });\n    const token = result.value\n    const options = {\n      url: `${this.url}/api/${endpoint}`,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      data: JSON.stringify(resource)\n    }\n\n    return CapacitorHttp.post(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                environmentInjector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(surveyService: SurveyService, draftService: DraftService, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeApp\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        environmentInjector\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EnvironmentInjector)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EnvironmentInjector, inject } from '@angular/core';\nimport { IonicModule, Platform } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { SurveyService } from '@services/survey/survey.service';\nimport { DraftService } from '@services/draft/draft.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule],\n})\nexport class AppComponent {\n  public environmentInjector = inject(EnvironmentInjector);\n\n  constructor(\n    private surveyService: SurveyService,\n    private draftService: DraftService,\n    private platform: Platform\n  ) {\n    this.initializeApp();\n  }\n\n  private initializeApp() {\n    this.platform.ready().then(() => {\n      this.surveyService.addNetworkChangeListener();\n      this.surveyService.getLocalSurveys();\n      this.draftService.getLocalDrafts();\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Association.html":{"url":"interfaces/Association.html","title":"interface - Association","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Association\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Beneficiary.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            farming\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            identification\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nit\n                                        \n                                \n                                \n                                        \n                                            zone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        farming\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        farming:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identification\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identification:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Beneficiary {\n\n  export interface Producer {\n    cedula: string;\n    firstname: string;\n    middlename: string;\n    lastname: string;\n    secondLastname: string;\n    id: string;\n    specialized: boolean;\n    technicalAssistance: boolean;\n    demonstrationPlot: boolean;\n    greenhouse: boolean;\n    supplies: boolean;\n    associationId: number;\n    transplantDate: string;\n    recommendedActions: SelectedQuestions\n  }\n\n  export const ProducerBaseParams = {\n    cedula: '',\n    firstname: '',\n    middlename: '',\n    lastname: '',\n    secondLastname: '',\n    id: '',\n    specialized: false,\n    technicalAssistance: false,\n    demonstrationPlot: false,\n    greenhouse: false,\n    supplies: false,\n    associationId: 0,\n    transplantDate: '',\n    recommendedActions: {}\n  };\n\n  export type ProducerResponse = {\n    cedula: string;\n    primer_nombre: string;\n    segundo_nombre: string;\n    primer_apellido: string;\n    segundo_apellido: string;\n    identification: string;\n    has_especializada: number;\n    at_p5: number;          // asistencia técnica\n    pd_p5: number;          // parcela demostrativa\n    cm_p5: number;          // casa malla (invernadero espacial)\n    insumo_p5: number;      // insumos\n    association_id: number; // id de la asociacion\n    transplantDate: string;\n    selectedQuestionIds: SelectedQuestions\n  }\n\n  export type SelectedQuestions = { [questionId: string] : boolean };\n\n  export interface Association {\n    id: number;\n    nit: number;\n    name: string;\n    identification: string;\n    zone: string;\n    farming: string;\n  }\n\n  export type AssociationResponse = {\n    id: number;\n    nit: number;\n    name: string;\n    identification: string;\n    zona: string;\n    farming: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssociationService.html":{"url":"injectables/AssociationService.html","title":"injectable - AssociationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AssociationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/association/association.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                associations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAssociationById\n                            \n                            \n                                    Public\n                                getAssociations\n                            \n                            \n                                    Private\n                                getLocalAssociations\n                            \n                            \n                                    Private\n                                setLocalAssociations\n                            \n                            \n                                    Private\n                                syncAssociations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/association/association.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAssociationById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssociationById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Beneficiary.Association | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAssociations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssociations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Beneficiary.Association[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLocalAssociations\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalAssociations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLocalAssociations\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLocalAssociations(associations: Beneficiary.Association[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                associations\n                                            \n                                                            Beneficiary.Association[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncAssociations\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncAssociations(forceRefresh: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/association/association.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                forceRefresh\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Beneficiary.Association[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/association/association.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApiService } from '../api/api.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { StorageService } from '../storage/storage.service';\nimport { Network } from '@capacitor/network';\nimport { Observable, from, map, switchMap, tap } from 'rxjs';\nimport { HttpResponse } from '@capacitor/core';\nimport { associationBuilder } from '@utils/builder';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AssociationService {\n\n  associations: Beneficiary.Association[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private storageService: StorageService\n  ) {\n    this.syncAssociations(true).subscribe((associations: Beneficiary.Association[]) => {\n      this.associations = associations;\n    });\n  }\n\n  public getAssociations(): Beneficiary.Association[] {\n    console.log(this.associations);\n    return this.associations;\n  }\n\n  private syncAssociations(forceRefresh: boolean = false): Observable {\n    return from(Network.getStatus()).pipe(\n      switchMap((status) => {\n        console.log('status')\n        console.log(status.connected)\n        if (!status.connected || !forceRefresh) {\n          return from(this.getLocalAssociations());\n        } else {\n          console.log('syncAssociations')\n          return from(this.apiService.post(ENDPOINT)).pipe(\n            map((response: HttpResponse) => {\n              const associationResponse: Beneficiary.AssociationResponse[] = JSON.parse(\n                response.data\n              );\n              console.log('associationResponse');\n              console.log(associationResponse);\n              const associations: Beneficiary.Association[] = associationResponse.map(\n                (association) => associationBuilder(association)\n              );\n              return associations;\n            }),\n            tap((associations: Beneficiary.Association[]) => {\n              this.setLocalAssociations(associations);\n            })\n          );\n        }\n      })\n    );\n  }\n\n  private setLocalAssociations(associations: Beneficiary.Association[]): void {\n    this.storageService.set('associations', associations);\n  }\n\n  private getLocalAssociations(): Promise {\n    return this.storageService.get(ASSOCIATIONS_STORAGE_KEY)\n  }\n\n  public getAssociationById(id: number): Beneficiary.Association | undefined {\n    return this.associations.find((association) => association.id === id);\n  }\n}\n\nconst ASSOCIATIONS_STORAGE_KEY = 'associations';\nconst ENDPOINT = ASSOCIATIONS_STORAGE_KEY;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/guards/auth/auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/auth/auth.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/guards/auth/auth.guard.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/guards/auth/auth.guard.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard {\n  constructor(public authService: AuthService, public router: Router) {}\n\n  async canActivate() {\n\n    const Logged = await this.authService.isLogged();\n\n    if (Logged) {\n      this.router.navigate(['/home']);\n    }\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthManagement.html":{"url":"interfaces/AuthManagement.html","title":"interface - AuthManagement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthManagement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Auth.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            logout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logout:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Authentication {\n  export interface User {\n    id: number;\n    name: string;\n    email: string;\n    emailVerifiedAt: string;\n    idCard: string;\n    role: string;\n    type: string;\n    zone: string;\n    creationDate: string;\n    updatedDate: string;\n  }\n\n  export type AuthResponse = {\n    token: string;\n    user: UserResponse;\n  };\n\n  export type UserResponse = {\n    id: number;\n    name: string;\n    email: string;\n    email_verified_at: string;\n    cedula: string;\n    roles: string;\n    types: string;\n    zone: string;\n    created_at: string;\n    updated_at: string;\n  };\n\n  export type AuthParams = {\n    email: string;\n    password: string;\n  };\n\n  export interface AuthManagement {\n    login: (credentials: AuthParams) => Promise;\n    logout: () => void;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                decodeToken\n                            \n                            \n                                    Public\n                                    Async\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                getUser\n                            \n                            \n                                    Public\n                                    Async\n                                isLogged\n                            \n                            \n                                    Private\n                                isTokenExpired\n                            \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                removeToken\n                            \n                            \n                                    Private\n                                removeUser\n                            \n                            \n                                    Private\n                                setToken\n                            \n                            \n                                    Private\n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, apiService: ApiService, jwtHelperService: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelperService\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        decodeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decodeToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        isLogged\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLogged()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isTokenExpired\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTokenExpired(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(authParams: Authentication.AuthParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authParams\n                                            \n                                                            Authentication.AuthParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    setToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUser(user: Authentication.User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Authentication.User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport jwt_decode from 'jwt-decode';\nimport { ApiService } from '../api/api.service';\nimport { HttpResponse } from '@capacitor/core';\nimport { Preferences } from '@capacitor/preferences';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Authentication } from '@models/Auth.namespace';\nimport { userBuilder } from '@utils/builder';\nimport { Observable, from, map } from 'rxjs';\n\nconst TOKEN_STORAGE_KEY = 'TOKEN_KEY';\nconst USER_STORAGE_KEY = 'USER_KEY';\nconst ENDPOINT = 'auth/login';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService implements Authentication.AuthManagement {\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private jwtHelperService: JwtHelperService\n  ) {}\n\n  public async getToken(): Promise {\n    const token = await Preferences.get({ key: TOKEN_STORAGE_KEY });\n    return token.value || null;\n  }\n\n  public async getUser(): Promise {\n    const { value } = await Preferences.get({ key: USER_STORAGE_KEY })\n    return JSON.parse(value!) as Authentication.User;\n  }\n\n  private setUser(user: Authentication.User) {\n    this.removeUser();\n    const options = { key: USER_STORAGE_KEY, value: JSON.stringify(user) };\n    Preferences.set(options);\n  }\n\n  private removeUser() {\n    Preferences.remove({ key: USER_STORAGE_KEY });\n  }\n\n  private setToken(token: string) {\n    this.removeToken();\n    const options = { key: TOKEN_STORAGE_KEY, value: token };\n    Preferences.set(options);\n  }\n\n  public removeToken() {\n    Preferences.remove({ key: TOKEN_STORAGE_KEY });\n  }\n\n  public async decodeToken(token: string): Promise {\n    if (token) {\n      return jwt_decode(token);\n    }\n    return false;\n  }\n\n  public async login(\n    authParams: Authentication.AuthParams\n  ): Promise {\n    const response: HttpResponse = await this.apiService.post(\n      ENDPOINT,\n      authParams\n    );\n    console.log(response);\n    if (response.status !== 200) {\n      throw new Error(response.data.error);\n    }\n    const authResponse: Authentication.AuthResponse =\n      response.data as Authentication.AuthResponse;\n    this.setToken(authResponse.token);\n    const user: Authentication.User = userBuilder(authResponse.user);\n    this.setUser(user);\n    this.router.navigate(['/home']);\n    return user;\n  }\n\n  public logout(): void {\n    this.removeToken();\n    this.router.navigate(['/login']);\n  }\n\n  public async isLogged(): Promise {\n    const token = (await this.getToken()) as string;\n    const decodedToken = await this.decodeToken(token);\n    return decodedToken && !this.isTokenExpired(token);\n  }\n\n  private isTokenExpired(token: string): boolean {\n    return this.jwtHelperService.isTokenExpired(token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AutocompleteComponent.html":{"url":"components/AutocompleteComponent.html","title":"component - AutocompleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AutocompleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/autocomplete/autocomplete.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-autocomplete\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                TypeaheadComponent\n                \n            \n\n            \n                styleUrls\n                ./autocomplete.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./autocomplete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    \n                                modal\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assignBeneficiary\n                            \n                            \n                                    Private\n                                getAnswerId\n                            \n                            \n                                getAnswers\n                            \n                            \n                                    Private\n                                getData\n                            \n                            \n                                    Private\n                                getQuestionValue\n                            \n                            \n                                    Private\n                                getSelectedValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                    Private\n                                setCheckedValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                open\n                            \n                            \n                                question\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(producersService: ProducerService, alertController: AlertController, detailedFormService: DetailedFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        producersService\n                                                  \n                                                        \n                                                                        ProducerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Selecciona uno'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        assignBeneficiary\n                        \n                    \n                \n            \n            \n                \n                        \n                    assignBeneficiary(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAnswerId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnswerId(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAnswers\n                        \n                    \n                \n            \n            \n                \ngetAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getQuestionValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQuestionValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSelectedValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSelectedValue(answersFormGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionChanged\n                        \n                    \n                \n            \n            \n                \nselectionChanged(selection: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setCheckedValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCheckedValue(answersFormGroup: FormGroup, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonModal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/autocomplete/autocomplete.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n  booleanAttribute,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n} from '@angular/forms';\nimport { AlertController, IonModal, IonicModule } from '@ionic/angular';\nimport { TypeaheadComponent } from '@components/typeahead/typeahead.component';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { AssociationService } from '@services/association/association.service';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { ProducerService } from '@services/producer/producer.service';\n\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule, TypeaheadComponent],\n})\nexport class AutocompleteComponent implements OnInit {\n  @ViewChild('modal', { static: true }) modal!: IonModal;\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ transform: booleanAttribute }) open!: boolean;\n  @Input() title = 'Selecciona uno';\n  @Input({ required: true }) disabled!: boolean;\n\n  selection!: string;\n\n  public data: string[] = [];\n\n  constructor(\n    private producersService: ProducerService,\n    private alertController: AlertController,\n    private detailedFormService: DetailedFormService\n  ) {}\n\n  ngOnInit() {\n    this.selection = this.getQuestionValue();\n  }\n\n  openModal(): void {\n    this.data = this.getData();\n    this.modal.present();\n  }\n\n  private getQuestionValue(): string {\n    const answers: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    let value: string = '';\n    if (this.open) {\n      const formControl: FormControl = this.formGroup.get(\n        `${this.question.id}`\n      ) as FormControl;\n      value = formControl.value;\n    } else {\n      value = this.getSelectedValue(answers);\n    }\n    return value;\n  }\n\n  private getSelectedValue(answersFormGroup: FormGroup): string {\n    let selectedValue: string = '';\n    for (const key in answersFormGroup.controls) {\n      if (answersFormGroup.controls[key].value) {\n        selectedValue = this.question.answers.find(\n          (answer) => answer.id.toString() === key\n        )?.value as string;\n      }\n    }\n    return selectedValue;\n  }\n\n  private getData(): string[] {\n    let result: string[] = [];\n    if (this.open) {\n      const producers: Beneficiary.Producer[] = this.producersService.getProducers();\n      result = producers.map((producer) => producer.id);\n    } else {\n      const answers = this.getAnswers();\n      result = answers.map((answer) => answer.value);\n    }\n    return result;\n  }\n\n  getAnswers() {\n    return this.question.answers;\n  }\n\n  selectionChanged(selection: string) {\n\n    if (this.open) {\n      const formControl: FormControl = this.formGroup.get(\n        `${this.question.id}`\n      ) as FormControl;\n      if (!this.assignBeneficiary(selection)) {\n        return;\n      }\n      formControl.setValue(selection);\n    } else {\n      const formGroup: FormGroup = this.formGroup.get(\n        `${this.question.id}`\n      ) as FormGroup;\n      const answerId: string = this.getAnswerId(selection);\n      this.setCheckedValue(formGroup, answerId);\n    }\n    this.selection = selection;\n    this.modal.dismiss();\n  }\n\n  private setCheckedValue(answersFormGroup: FormGroup, id: string): void {\n    for (const key in answersFormGroup.controls) {\n      if (key === id) {\n        answersFormGroup.controls[key].setValue(true);\n      } else {\n        answersFormGroup.controls[key].setValue(false);\n      }\n    }\n  }\n\n  private assignBeneficiary(id: string): boolean {\n    const producers: Beneficiary.Producer[] = this.producersService.getProducers();\n    const beneficiary: Beneficiary.Producer = producers.find(\n      (producer) => producer.id === id\n    )!;\n\n    return this.detailedFormService.setBeneficiary(beneficiary);\n  }\n\n  private getAnswerId(value: string): string {\n    const answer = this.getAnswers().find((answer) => answer.value === value);\n    return answer ? answer.id.toString() : '';\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n    {{ selection }}\n  \n\n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./autocomplete.component.scss\n                \n                ion-item::part(native) {\n  border-color: lightgray;\n  border-width: 2px;\n  border-radius: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}    {{ selection }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AutocompleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataquestHeaderComponent.html":{"url":"components/DataquestHeaderComponent.html","title":"component - DataquestHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DataquestHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/dataquest-header/dataquest-header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dataquest-header\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./dataquest-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dataquest-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                back\n                            \n                            \n                                    Private\n                                    Async\n                                confirmExit\n                            \n                            \n                                getProgress\n                            \n                            \n                                isDraft\n                            \n                            \n                                isForm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressBar\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, alertController: AlertController, location: Location, detailedFormService: DetailedFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressBar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        back\n                        \n                    \n                \n            \n            \n                \nback()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        confirmExit\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmExit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProgress\n                        \n                    \n                \n            \n            \n                \ngetProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isForm\n                        \n                    \n                \n            \n            \n                \nisForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        progress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/dataquest-header/dataquest-header.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, booleanAttribute } from '@angular/core';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { CommonModule, Location } from '@angular/common';\nimport { QuestionService } from '@services/detailed-form/question/question.service';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\n\n@Component({\n  selector: 'app-dataquest-header',\n  templateUrl: './dataquest-header.component.html',\n  styleUrls: ['./dataquest-header.component.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule],\n})\nexport class DataquestHeaderComponent implements OnInit {\n  @Input({ transform: booleanAttribute }) progressBar: boolean = false;\n\n  progress: number;\n\n  constructor(\n    private questionService: QuestionService,\n    private alertController: AlertController,\n    private location: Location,\n    private detailedFormService: DetailedFormService,\n  ) {\n    this.progress = this.getProgress();\n  }\n\n  ngOnInit() {}\n\n  getProgress(): number {\n    return this.questionService.getProgress();\n  }\n\n  back() {\n    if (this.detailedFormService.isQuestionsPage())\n      this.confirmExit();\n    else\n      this.location.back();\n  }\n\n  private async confirmExit() {\n    var message: string = ''\n    if (this.isForm())\n      message = 'Si sale, su progreso se guardará como borrador. ¿Desea salir?';\n    else if (this.isDraft())\n      message = 'Si sale, se guardará el borrador. ¿Desea salir?';\n\n    const alert = await this.alertController.create({\n      header: '¿Desea salir?',\n      message: message,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n        },\n        {\n          text: 'Salir',\n          role: 'confirm',\n          cssClass: 'danger',\n          handler: () => {\n            this.location.back();\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  isForm(): boolean {\n    return this.detailedFormService.isForm();\n  }\n\n  isDraft(): boolean {\n    return this.detailedFormService.isDraft();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./dataquest-header.component.scss\n                \n                .img-container {\n  width: 90%;\n  display: flex;\n  justify-content: center; /* Center horizontally */\n  align-items: center; /* Center vertically */\n  height: 100%; /* Ensure the container takes up the full height of the toolbar */\n}\n\nion-img {\n  max-width: 100%; /* Ensure the image doesn't exceed the container's width */\n  max-height: 100%; /* Ensure the image doesn't exceed the container's height */\n}\n\nion-icon {\n  font-size: x-large;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataquestHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateDataTypeComponent.html":{"url":"components/DateDataTypeComponent.html","title":"component - DateDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/date-data-type/date-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-date-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./date-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMaxDate\n                            \n                            \n                                getMinDate\n                            \n                            \n                                    Private\n                                getNewYear\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preloadTransplantDate\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detailedFormService: DetailedFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMaxDate\n                        \n                    \n                \n            \n            \n                \ngetMaxDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinDate\n                        \n                    \n                \n            \n            \n                \ngetMinDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNewYear\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNewYear(years: number, sum: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                years\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sum\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        preloadTransplantDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadTransplantDate(transplantDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transplantDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/date-data-type/date-data-type.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ReactiveFormsModule, FormGroup, FormControl } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\n\n@Component({\n  selector: 'app-date-data-type',\n  templateUrl: './date-data-type.component.html',\n  styleUrls: ['./date-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule, ReactiveFormsModule],\n})\nexport class DateDataTypeComponent {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(private detailedFormService: DetailedFormService) {}\n\n  ngOnInit() {\n    const transplantDate: string = this.detailedFormService.getForm().beneficiary.transplantDate;\n    if (this.question.id === '170' && transplantDate) {\n      this.disabled = true;\n      this.preloadTransplantDate(transplantDate);\n    }\n  }\n\n  private preloadTransplantDate(transplantDate: string) {\n    const formControl: FormControl = this.formGroup.get(`${this.question.id}`) as FormControl;\n    formControl.setValue(transplantDate);\n  }\n\n  getValue(): string {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n    console.log('formControl: ', formControl)\n    const stringDate: string = this.formGroup.get(`${this.question.id}`)?.value;\n    console.log('stringDate: ', stringDate);\n    if (!stringDate) {\n      const today: Date = new Date();\n      return today.toISOString();\n    }\n    const [day, month, year] = stringDate.split('/');\n    const parsedDate: Date = new Date(\n      Number(year),\n      Number(month) - 1,\n      Number(day)\n    );\n    console.log('date: ', parsedDate.toISOString());\n    return parsedDate.toISOString();\n  }\n\n  setValue(event: Event): void {\n    const questionFormControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n    const dateTimeElement = event.target as HTMLInputElement;\n    const value: string = dateTimeElement.value;\n    const date: Date = new Date(value);\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n    };\n    const stringDate: string = date.toLocaleDateString('es-ES', options);\n    questionFormControl.setValue(stringDate);\n  }\n\n  getMaxDate(): string | undefined {\n    const maxDate: string | undefined = this.question.max\n      ? this.getNewYear(Number(this.question.max), true)\n      : undefined;\n    return maxDate;\n  }\n\n  getMinDate(): string | undefined {\n    const minDate: string | undefined = this.question.min\n      ? this.getNewYear(Number(this.question.min), false)\n      : undefined;\n    return minDate;\n  }\n\n  private getNewYear(years: number, sum: boolean): string {\n    console.log(years, sum);\n    const date: Date = new Date();\n    const newYear: number = sum\n      ? date.getFullYear() + years\n      : date.getFullYear() - years;\n    date.setFullYear(newYear);\n    const formattedDate: string = date.toISOString();\n    return formattedDate;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./date-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailPage.html":{"url":"components/DetailPage.html","title":"component - DetailPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/detail/detail.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detail\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                                FormsModule\n                \n            \n\n            \n                styleUrls\n                ./detail.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./detail.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/detail/detail.page.ts:16\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/detail/detail.page.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DetailedFormComponent\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detail/detail.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { DetailedFormComponent } from '@components/detailed-form/detailed-form.component';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.page.html',\n  styleUrls: ['./detail.page.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule, FormsModule]\n})\nexport class DetailPage implements OnInit {\n\n  component = DetailedFormComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./detail.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailedFormComponent.html":{"url":"components/DetailedFormComponent.html","title":"component - DetailedFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailedFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/detailed-form/detailed-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detailed-form\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                QuestionComponent\n                                DataquestHeaderComponent\n                \n            \n\n            \n                styleUrls\n                ./detailed-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./detailed-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getForm\n                            \n                            \n                                    Private\n                                    Async\n                                getLocation\n                            \n                            \n                                getTotalQuestions\n                            \n                            \n                                getTransformedDownladedDate\n                            \n                            \n                                isDraft\n                            \n                            \n                                isForm\n                            \n                            \n                                isSurvey\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                resumeDraft\n                            \n                            \n                                startForm\n                            \n                            \n                                viewSurvey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detailedFormService: DetailedFormService, formService: FormService, alertController: AlertController, navController: NavController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/detailed-form/detailed-form.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navController\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getForm\n                        \n                    \n                \n            \n            \n                \ngetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getLocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalQuestions\n                        \n                    \n                \n            \n            \n                \ngetTotalQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransformedDownladedDate\n                        \n                    \n                \n            \n            \n                \ngetTransformedDownladedDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isForm\n                        \n                    \n                \n            \n            \n                \nisForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSurvey\n                        \n                    \n                \n            \n            \n                \nisSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resumeDraft\n                        \n                    \n                \n            \n            \n                \nresumeDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startForm\n                        \n                    \n                \n            \n            \n                \nstartForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewSurvey\n                        \n                    \n                \n            \n            \n                \nviewSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/detailed-form/detailed-form.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Default value : QuestionComponent\n                    \n                \n                    \n                        \n                                Defined in src/app/components/detailed-form/detailed-form.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { AlertController, IonicModule, NavController } from '@ionic/angular';\nimport { FormService } from '@services/form/form.service';\nimport { Geolocation, Position } from '@capacitor/geolocation';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { QuestionComponent } from '@components/question/question.component';\nimport { DataquestHeaderComponent } from '@components/header/dataquest-header/dataquest-header.component';\n\n@Component({\n  selector: 'app-detailed-form',\n  templateUrl: './detailed-form.component.html',\n  styleUrls: ['./detailed-form.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    IonicModule,\n    QuestionComponent,\n    DataquestHeaderComponent,\n  ],\n})\nexport class DetailedFormComponent {\n  component = QuestionComponent;\n\n  constructor(\n    private detailedFormService: DetailedFormService,\n    private formService: FormService,\n    private alertController: AlertController,\n    private navController: NavController\n  ) {}\n\n  ngOnDestroy() {\n    this.detailedFormService.setQuestionsPage(false);\n  }\n\n  getForm(): FormDetail.Form {\n    return this.detailedFormService.getForm();\n  }\n\n  isForm(): boolean {\n    return this.detailedFormService.isForm();\n  }\n\n  isDraft(): boolean {\n    return this.detailedFormService.isDraft();\n  }\n\n  isSurvey(): boolean {\n    return this.detailedFormService.isSurvey();\n  }\n\n  startForm(): void {\n    this.getLocation();\n    this.detailedFormService.startDraft();\n    this.detailedFormService.setQuestionsPage(true);\n  }\n\n  viewSurvey(): void {\n    this.detailedFormService.setQuestionsPage(true);\n  }\n\n  resumeDraft(): void {\n    this.detailedFormService.setQuestionsPage(true);\n  }\n\n  private async getLocation(): Promise {\n    try {\n      const permissions = await Geolocation.checkPermissions();\n\n      if (permissions.location !== 'granted') {\n        const permissionAlert = await this.alertController.create({\n          header: 'Problema con los permisos',\n          message:\n            'No se pudo obtener los permisos de ubicación del dispositivo. Por favor, habilita los permisos de ubicación en los ajustes del dispositivo y vuelve a intentarlo.',\n          buttons: ['OK'],\n        });\n\n        const permissionResult = await Geolocation.requestPermissions();\n\n        if (permissionResult.location !== 'granted') {\n          permissionAlert.present();\n          return;\n        }\n      }\n      const locationAlert = await this.alertController.create({\n        header: 'Problema con la ubicación',\n        message:\n          'No se pudo obtener la ubicación del dispositivo. Por favor, habilita la ubicación en los ajustes del dispositivo y vuelve a intentarlo.',\n        buttons: ['OK'],\n      });\n\n      const position = await Geolocation.getCurrentPosition();\n\n      if (position) {\n        console.log(position.coords);\n        this.getForm().position =\n          position.coords.latitude + ',' + position.coords.longitude;\n        this.getForm().altitud = position.coords.altitude ?? 0;\n        console.log(\n          'Position: ',\n          position,\n          ', Altitude: ',\n          this.getForm().altitud\n        );\n      } else {\n        locationAlert.present();\n      }\n    } catch (error) {\n      const locationAlert = await this.alertController.create({\n        header: 'Servicios de ubicación deshabilitados',\n        message:\n          'No se pudo obtener la ubicación del dispositivo. Por favor, habilita la ubicación en los ajustes del dispositivo y vuelve a intentarlo.',\n        buttons: ['OK'],\n      });\n      locationAlert.present();\n      this.navController.pop();\n    }\n  }\n\n  getTotalQuestions(): number {\n    return this.detailedFormService.getTotalQuestions();\n  }\n\n  getTransformedDownladedDate() {\n    const date = new Date(this.getForm().fechaDescarga);\n\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    };\n    return date.toLocaleDateString('es-ES', options);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Encuesta descargada el {{getTransformedDownladedDate()}}\n      {{getForm().name}}\n      Proyecto iniciado el {{getForm().dateInit}} | Finaliza el {{getForm().dateEnd}}\n      Total preguntas: {{getTotalQuestions()}}\n    \n\n    \n      {{getForm().description}}\n    \n    \n      Comenzar formulario\n      Ver encuesta\n      Reanudar borrador\n    \n  \n\n\n    \n\n    \n                \n                    ./detailed-form.component.scss\n                \n                #container {\n  text-align: center;\n\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n#container strong {\n  font-size: 20px;\n  line-height: 26px;\n}\n\n#container p {\n  font-size: 16px;\n  line-height: 22px;\n\n  color: #8c8c8c;\n\n  margin: 0;\n}\n\n#container a {\n  text-decoration: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Encuesta descargada el {{getTransformedDownladedDate()}}      {{getForm().name}}      Proyecto iniciado el {{getForm().dateInit}} | Finaliza el {{getForm().dateEnd}}      Total preguntas: {{getTotalQuestions()}}              {{getForm().description}}              Comenzar formulario      Ver encuesta      Reanudar borrador      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailedFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DetailedFormService.html":{"url":"injectables/DetailedFormService.html","title":"injectable - DetailedFormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DetailedFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/detailed-form.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                draft\n                            \n                            \n                                    Private\n                                form\n                            \n                            \n                                    Private\n                                questionsPage\n                            \n                            \n                                    Private\n                                selectedForm\n                            \n                            \n                                    Private\n                                survey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                existsProducerWithSpecializedForm\n                            \n                            \n                                    Public\n                                getForm\n                            \n                            \n                                    Public\n                                getLocation\n                            \n                            \n                                    Public\n                                getTotalQuestions\n                            \n                            \n                                    Public\n                                isDraft\n                            \n                            \n                                    Public\n                                isForm\n                            \n                            \n                                    Public\n                                isQuestionsPage\n                            \n                            \n                                    Public\n                                isSurvey\n                            \n                            \n                                    Public\n                                saveSurvey\n                            \n                            \n                                    Public\n                                setBeneficiary\n                            \n                            \n                                    Public\n                                setForm\n                            \n                            \n                                    Public\n                                setQuestions\n                            \n                            \n                                    Public\n                                setQuestionsPage\n                            \n                            \n                                    Private\n                                    Async\n                                showAlreadySpecializedBeneficiaryAlert\n                            \n                            \n                                    Private\n                                    Async\n                                showNoSpecializedBeneficiaryAlert\n                            \n                            \n                                    Public\n                                startDraft\n                            \n                            \n                                    Public\n                                updateModifyDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService, draftService: DraftService, surveyService: SurveyService, questionService: QuestionService, alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        existsProducerWithSpecializedForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    existsProducerWithSpecializedForm(producerToSearch: Beneficiary.Producer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                producerToSearch\n                                            \n                                                            Beneficiary.Producer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    getForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getTotalQuestions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:165\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    isDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    isForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isQuestionsPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    isQuestionsPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isSurvey\n                        \n                    \n                \n            \n            \n                \n                        \n                    isSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveSurvey\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setBeneficiary\n                        \n                    \n                \n            \n            \n                \n                        \n                    setBeneficiary(selectedBeneficiary: Beneficiary.Producer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedBeneficiary\n                                            \n                                                            Beneficiary.Producer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    setForm(form: FormDetail.Form, formType: boolean, draftType: boolean, surveyType: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formType\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                draftType\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                surveyType\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setQuestions\n                        \n                    \n                \n            \n            \n                \n                        \n                    setQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setQuestionsPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setQuestionsPage(questionPage: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                questionPage\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        showAlreadySpecializedBeneficiaryAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    showAlreadySpecializedBeneficiaryAlert()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        showNoSpecializedBeneficiaryAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    showNoSpecializedBeneficiaryAlert()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateModifyDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateModifyDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/detailed-form.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        draft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        questionsPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        survey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/detailed-form.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { FormService } from '../form/form.service';\nimport { Geolocation } from '@capacitor/geolocation';\nimport { v4 as uuidv4 } from 'uuid';\nimport { QuestionService } from './question/question.service';\nimport { DraftService } from '../draft/draft.service';\nimport { SurveyService } from '../survey/survey.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { AlertController } from '@ionic/angular';\nimport _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DetailedFormService {\n  private selectedForm!: FormDetail.Form;\n  private form!: boolean;\n  private draft!: boolean;\n  private survey!: boolean;\n  private questionsPage!: boolean;\n\n  constructor(\n    private formService: FormService,\n    private draftService: DraftService,\n    private surveyService: SurveyService,\n    private questionService: QuestionService,\n    private alertController: AlertController\n  ) {}\n\n  public getForm(): FormDetail.Form {\n    return this.selectedForm;\n  }\n\n  public isForm(): boolean {\n    return this.form;\n  }\n\n  public isDraft(): boolean {\n    return this.draft;\n  }\n\n  public isSurvey(): boolean {\n    return this.survey;\n  }\n\n  public setForm(\n    form: FormDetail.Form,\n    formType: boolean,\n    draftType: boolean,\n    surveyType: boolean\n  ): void {\n    this.selectedForm = form;\n    this.form = formType;\n    this.draft = draftType;\n    this.survey = surveyType;\n    if (this.isDraft() || this.isSurvey()) {\n      this.setQuestions();\n    }\n  }\n\n  public setQuestionsPage(questionPage: boolean): void {\n    this.questionsPage = questionPage;\n  }\n\n  public isQuestionsPage(): boolean {\n    return this.questionsPage;\n  }\n\n  public setBeneficiary(selectedBeneficiary: Beneficiary.Producer): boolean {\n    const previousBeneficiary: Beneficiary.Producer =\n      this.selectedForm.beneficiary;\n    const isSpecializedForm: boolean = this.selectedForm.id === 1;\n    if (isSpecializedForm && previousBeneficiary) {\n      previousBeneficiary.specialized = false;\n    }\n    if (this.selectedForm.beneficiary === selectedBeneficiary) {\n      return true;\n    }\n\n    const canSet =\n      (isSpecializedForm &&\n        !this.existsProducerWithSpecializedForm(selectedBeneficiary)) ||\n      (isSpecializedForm && !selectedBeneficiary.specialized) ||\n      (!isSpecializedForm && selectedBeneficiary.specialized);\n\n    if (canSet) {\n      if (this.selectedForm.id === 1) {\n        selectedBeneficiary.specialized = true;\n      }\n      this.selectedForm.beneficiary = selectedBeneficiary;\n      return true;\n    } else if (this.selectedForm.id === 1) {\n      this.showAlreadySpecializedBeneficiaryAlert();\n      return false;\n    } else {\n      this.showNoSpecializedBeneficiaryAlert();\n      return false;\n    }\n  }\n\n  private existsProducerWithSpecializedForm(\n    producerToSearch: Beneficiary.Producer\n  ): boolean {\n    var exists = false;\n\n    const drafts: FormDetail.Form[] = this.draftService.getDrafts();\n    const surveys: FormDetail.Form[] = this.surveyService.getSurveys();\n\n    drafts.some((draft) => {\n      if (draft.beneficiary.id === producerToSearch.id) {\n        exists = true;\n        return true;\n      }\n\n      return false;\n    });\n\n    surveys.some((survey) => {\n      if (survey.beneficiary.id === producerToSearch.id) {\n        exists = true;\n        return true;\n      }\n\n      return false;\n    });\n\n    return exists;\n  }\n\n  private async showAlreadySpecializedBeneficiaryAlert(): Promise {\n    const alert = await this.alertController.create({\n      header: 'Beneficiario ya tiene formulario especializado',\n      message: 'Elimina el formulario respectivo o escoge otro beneficiario',\n      buttons: ['OK'],\n    });\n    await alert.present();\n  }\n\n  private async showNoSpecializedBeneficiaryAlert(): Promise {\n    const alert = await this.alertController.create({\n      header: 'Sin formulario especializado',\n      message:\n        'Debes realizar un formulario especializado primero a este beneficiario',\n      buttons: ['OK'],\n    });\n    await alert.present();\n  }\n\n  public setQuestions(): void {\n    this.questionService.setQuestions(this.selectedForm.questions);\n  }\n\n  public getLocation(): void {\n    Geolocation.getCurrentPosition()\n      .then((position) => {\n        this.selectedForm.position =\n          position.coords.latitude + ',' + position.coords.longitude;\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n\n  public getTotalQuestions(): number {\n    return this.selectedForm.questions.length;\n  }\n\n  public startDraft(): void {\n    const copy: FormDetail.Form = _.cloneDeep(this.selectedForm);\n    copy.uuid = uuidv4();\n    this.draftService.pushDraft(copy);\n    this.selectedForm = copy;\n    this.setQuestions();\n    this.draftService.saveDrafts();\n  }\n\n  public saveSurvey(): void {\n    const removedDraft: FormDetail.Form = this.draftService.removeDraft(\n      this.selectedForm\n    );\n    this.surveyService.pushSurvey(removedDraft);\n    this.draftService.saveDrafts();\n  }\n\n  public updateModifyDate(): void {\n    if (this.isDraft()) {\n      this.draftService.updateModifyDate(this.selectedForm);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DraftService.html":{"url":"injectables/DraftService.html","title":"injectable - DraftService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DraftService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/draft/draft.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drafts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeSpecialized\n                            \n                            \n                                    Public\n                                deleteDraft\n                            \n                            \n                                    Public\n                                generateUUID\n                            \n                            \n                                    Public\n                                getDrafts\n                            \n                            \n                                    Public\n                                getLocalDrafts\n                            \n                            \n                                    Public\n                                pushDraft\n                            \n                            \n                                    Public\n                                removeDraft\n                            \n                            \n                                    Private\n                                removeOldDrafts\n                            \n                            \n                                    Public\n                                saveDrafts\n                            \n                            \n                                    Public\n                                updateModifyDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, producersService: ProducerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/draft/draft.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        producersService\n                                                  \n                                                        \n                                                                        ProducerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeSpecialized\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeSpecialized(producer: Beneficiary.Producer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                producer\n                                            \n                                                            Beneficiary.Producer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDraft(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        generateUUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUUID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getDrafts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLocalDrafts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pushDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    pushDraft(draft: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                draft\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeDraft(draft: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                draft\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormDetail.Form\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeOldDrafts\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOldDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveDrafts\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateModifyDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateModifyDate(draft: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/draft/draft.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                draft\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drafts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/draft/draft.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { StorageService } from '../storage/storage.service';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { ProducerService } from '@services/producer/producer.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DraftService {\n  private drafts: FormDetail.Form[] = [];\n\n  constructor(\n    private storageService: StorageService,\n    private producersService: ProducerService\n  ) {\n    this.getLocalDrafts();\n  }\n\n  public pushDraft(draft: FormDetail.Form): void {\n    const currentDate: Date = new Date();\n    const formattedDate: string = currentDate.toISOString();\n    draft.fechaInicial = formattedDate;\n    draft.fechaUltimoCambio = formattedDate;\n    this.drafts.push(draft);\n  }\n\n  public deleteDraft(index: number) {\n    const removedDraft: FormDetail.Form = this.drafts.splice(index, 1).pop()!;\n    const producer: Beneficiary.Producer = removedDraft.beneficiary;\n    if (removedDraft.id === 1 && producer.specialized)\n      this.changeSpecialized(producer);\n\n    this.saveDrafts();\n  }\n\n  private changeSpecialized(producer: Beneficiary.Producer): void {\n    const producers: Beneficiary.Producer[] =\n      this.producersService.getProducers();\n    const beneficiary: Beneficiary.Producer = producers.find(\n      (p) => p.id === producer.id\n    )!;\n    beneficiary.specialized = false;\n  }\n\n  public removeDraft(draft: FormDetail.Form): FormDetail.Form {\n    const index = this.drafts.findIndex((d) => d.uuid === draft.uuid);\n    if (index > -1) {\n      return this.drafts.splice(index, 1)[0];\n    }\n    return draft;\n  }\n\n  public getLocalDrafts(): void {\n    this.storageService.get('drafts').then((drafts) => {\n      if (drafts) {\n        this.drafts = drafts;\n        this.removeOldDrafts();\n      }\n    });\n  }\n\n  public getDrafts(): FormDetail.Form[] {\n    return this.drafts;\n  }\n\n  private removeOldDrafts(): void {\n    const dateThreshold = new Date();\n    dateThreshold.setDate(dateThreshold.getDate() - 7);\n    this.drafts = this.drafts.filter((draft) => {\n      const date = new Date(draft.fechaUltimoCambio);\n      return date >= dateThreshold;\n    });\n  }\n\n  public saveDrafts(): void {\n    this.storageService.set('drafts', this.drafts);\n  }\n\n  public generateUUID(): string {\n    return uuidv4();\n  }\n\n  public updateModifyDate(draft: FormDetail.Form): void {\n    const index = this.drafts.findIndex((d) => d.id === draft.id);\n    if (index > -1) {\n      const currentDate: Date = new Date();\n      const formattedDate: string = currentDate.toISOString();\n      this.drafts[index].fechaUltimoCambio = formattedDate;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DraftsPage.html":{"url":"components/DraftsPage.html","title":"component - DraftsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DraftsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/drafts/drafts.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drafts\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                drafts.page.scss\n            \n\n\n\n            \n                templateUrl\n                drafts.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteDraft\n                            \n                            \n                                getDrafts\n                            \n                            \n                                    Async\n                                goToDetail\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, detailedFormService: DetailedFormService, router: Router, draftService: DraftService, alertController: AlertController, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/drafts/drafts.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteDraft\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteDraft(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/drafts/drafts.page.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDrafts\n                        \n                    \n                \n            \n            \n                \ngetDrafts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/drafts/drafts.page.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        goToDetail\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToDetail(formToSend: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/drafts/drafts.page.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formToSend\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/drafts/drafts.page.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AlertController, IonicModule, Platform, ToastController } from '@ionic/angular';\nimport { DraftService } from '@services/draft/draft.service';\nimport { Router } from '@angular/router';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-drafts',\n  templateUrl: 'drafts.page.html',\n  styleUrls: ['drafts.page.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule],\n})\nexport class DraftsPage {\n  constructor(\n    private platform: Platform,\n    private detailedFormService: DetailedFormService,\n    private router: Router,\n    private draftService: DraftService,\n    private alertController: AlertController,\n    private toastController: ToastController\n  ) {}\n\n  ionViewWillEnter() {\n    this.draftService.getLocalDrafts();\n  }\n\n  getDrafts() {\n    return this.draftService.getDrafts();\n  }\n\n  async deleteDraft(index: number) {\n    const deletionAlert = await this.alertController.create({\n      header: '¿Estás seguro?',\n      message: 'Esta acción no se puede deshacer',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n        },\n        {\n          text: 'Eliminar',\n          handler: async () => {\n            this.draftService.deleteDraft(index);\n            const deletedToast = await this.toastController.create({\n              message: 'Borrador eliminado exitosamente',\n              duration: 2000,\n            });\n            await deletedToast.present();\n          },\n        },\n      ],\n    });\n    await deletionAlert.present();\n  }\n\n  async goToDetail(formToSend: FormDetail.Form) {\n    if (this.platform.is('mobile')) {\n      this.detailedFormService.setForm(formToSend, false, true, false);\n      this.router.navigate(['detail']);\n    } else {\n      const alert = await this.alertController.create({\n        header: 'Dispositivo no compatible',\n        message:\n          'Para acceder al formulario, ingresa desde un dispositivo móvil',\n        buttons: ['OK'],\n      });\n      await alert.present();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      # {{ draft.uuid }}\n      {{ draft.name }}\n      Finaliza el {{ draft.dateEnd }}\n      {{\n        draft.questions[0].answers[0].value\n      }}\n    \n    \n      {{ draft.description }}\n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    drafts.page.scss\n                \n                #uuid {\n  font-size: x-small;\n}\n\nion-icon {\n  font-size: xx-large;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            # {{ draft.uuid }}      {{ draft.name }}      Finaliza el {{ draft.dateEnd }}      {{        draft.questions[0].answers[0].value      }}              {{ draft.description }}                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DraftsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawingPadDataTypeComponent.html":{"url":"components/DrawingPadDataTypeComponent.html","title":"component - DrawingPadDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawingPadDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-drawing-pad-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./drawing-pad-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drawing-pad-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvas\n                            \n                            \n                                signatureImg\n                            \n                            \n                                    Private\n                                signaturePad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearPad\n                            \n                            \n                                moved\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                resizeCanvas\n                            \n                            \n                                savePad\n                            \n                            \n                                setSignature\n                            \n                            \n                                startDrawing\n                            \n                            \n                                undoPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:23\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearPad\n                        \n                    \n                \n            \n            \n                \nclearPad()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moved\n                        \n                    \n                \n            \n            \n                \nmoved(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resizeCanvas\n                        \n                    \n                \n            \n            \n                \nresizeCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        savePad\n                        \n                    \n                \n            \n            \n                \nsavePad()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSignature\n                        \n                    \n                \n            \n            \n                \nsetSignature()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDrawing\n                        \n                    \n                \n            \n            \n                \nstartDrawing(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undoPad\n                        \n                    \n                \n            \n            \n                \nundoPad()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signatureImg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        signaturePad\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SignaturePad\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport SignaturePad from 'signature_pad';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-drawing-pad-data-type',\n  templateUrl: './drawing-pad-data-type.component.html',\n  styleUrls: ['./drawing-pad-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule],\n})\nexport class DrawingPadDataTypeComponent {\n  private signaturePad!: SignaturePad;\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  @ViewChild('canvas')\n  canvas!: ElementRef;\n\n  signatureImg!: string;\n\n  constructor() {}\n\n  ngAfterViewInit() {\n    this.signaturePad = new SignaturePad(this.canvas.nativeElement);\n    window.addEventListener('resize', () => this.resizeCanvas());\n    this.resizeCanvas();\n    this.disabled ? this.signaturePad.off() : this.signaturePad.on();\n  }\n\n  resizeCanvas() {\n    this.canvas.nativeElement.style.width = '100%';\n    this.canvas.nativeElement.style.height = '100%';\n    var width = this.canvas.nativeElement.offsetWidth;\n    var height = this.canvas.nativeElement.offsetHeight;\n    var ratio = Math.max(window.devicePixelRatio || 1, 1);\n    this.canvas.nativeElement.width = width * ratio;\n    this.canvas.nativeElement.height = height * ratio;\n    this.canvas.nativeElement.getContext('2d').scale(ratio, ratio);\n    this.setSignature();\n  }\n\n  setSignature() {\n    this.signaturePad.clear();\n    let signature = this.formGroup.get(`${this.question.id}`)?.value;\n    if (signature) {\n      this.signaturePad.fromDataURL(signature)\n      this.signatureImg = signature;\n    }\n  }\n\n  startDrawing(event: Event) {\n    console.log(event);\n    // works in device not in browser\n  }\n\n  moved(event: Event) {\n    // works in device not in browser\n  }\n\n  clearPad() {\n    this.signaturePad.clear();\n  }\n\n  savePad() {\n    const base64Data = this.signaturePad.toDataURL('image/png', 0.5);\n    this.signatureImg = base64Data;\n    this.formGroup.get(`${this.question.id}`)?.setValue(base64Data);\n  }\n\n  undoPad() {\n    const data = this.signaturePad.toData();\n    if (data) {\n      data.pop();\n      this.signaturePad.fromData(data);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Limpiar\n      Guardar\n    \n    \n      Deshacer\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./drawing-pad-data-type.component.scss\n                \n                canvas {\n  border: 2px solid lightgray;\n  border-radius: 20px;\n  background-color: var(--ion-color-success);\n}\n\nimg {\n  border: 2px solid lightgray;\n  border-radius: 20px;\n  width: 100%;\n  height: 100%;\n}\n\nion-button[slot='fixed'] {\n  right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Limpiar      Guardar              Deshacer      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawingPadDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailDataTypeComponent.html":{"url":"components/EmailDataTypeComponent.html","title":"component - EmailDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/email-data-type/email-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./email-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./email-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/email-data-type/email-data-type.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-email-data-type',\n  templateUrl: './email-data-type.component.html',\n  styleUrls: ['./email-data-type.component.scss'],\n  standalone: true,\n  imports: [ IonicModule, ReactiveFormsModule ],\n})\nexport class EmailDataTypeComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  getValue(): string {\n    return this.formGroup.get(`${this.question.id}`)?.value;\n  }\n\n  setValue(event: any) {\n    this.formGroup.get(`${this.question.id}`)?.setValue(event.target.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./email-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmailDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Form.html":{"url":"interfaces/Form.html","title":"interface - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            altitud\n                                        \n                                \n                                \n                                        \n                                            beneficiary\n                                        \n                                \n                                \n                                        \n                                            dateEnd\n                                        \n                                \n                                \n                                        \n                                            dateInit\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            fechaCarga\n                                        \n                                \n                                \n                                        \n                                            fechaDescarga\n                                        \n                                \n                                \n                                        \n                                            fechaInicial\n                                        \n                                \n                                \n                                        \n                                            fechaUltimoCambio\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            questions\n                                        \n                                \n                                \n                                        \n                                            sync\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        altitud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        altitud:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beneficiary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beneficiary:         Beneficiary.Producer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Beneficiary.Producer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateEnd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateEnd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateInit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateInit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaCarga\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaCarga:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaDescarga\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaDescarga:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaInicial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaInicial:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaUltimoCambio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaUltimoCambio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questions:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sync\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sync:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormListComponent.html":{"url":"components/FormListComponent.html","title":"component - FormListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form-list/form-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form-list\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./form-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRefresh\n                            \n                            \n                                    Async\n                                navigate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                requestData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                draft\n                            \n                            \n                                form\n                            \n                            \n                                forms\n                            \n                            \n                                survey\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formsService: FormService, draftService: DraftService, surveyService: SurveyService, detailedFormService: DetailedFormService, router: Router, platform: Platform, alertController: AlertController, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/form-list/form-list.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formsService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        draft\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-list/form-list.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-list/form-list.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        forms\n                    \n                \n                \n                    \n                        Type :         FormDetail.Form[]\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-list/form-list.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        survey\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-list/form-list.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRefresh\n                        \n                    \n                \n            \n            \n                \nhandleRefresh(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/form-list/form-list.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        navigate\n                        \n                    \n                \n            \n            \n                \n                        \n                    navigate(formToSend: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/form-list/form-list.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formToSend\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/form-list/form-list.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requestData\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/form-list/form-list.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, booleanAttribute } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Platform, AlertController, IonicModule, ToastController } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { DraftService } from '@services/draft/draft.service';\nimport { FormService } from '@services/form/form.service';\nimport { SurveyService } from '@services/survey/survey.service';\n\n@Component({\n  selector: 'app-form-list',\n  templateUrl: './form-list.component.html',\n  styleUrls: ['./form-list.component.scss'],\n  standalone: true,\n  imports: [ CommonModule, IonicModule ],\n})\nexport class FormListComponent {\n\n  @Input({ required: true }) forms!: FormDetail.Form[];\n  @Input({ transform: booleanAttribute }) form: boolean = false;\n  @Input({ transform: booleanAttribute }) draft: boolean = false;\n  @Input({ transform: booleanAttribute }) survey: boolean = false;\n\n  constructor(\n    private formsService: FormService,\n    private draftService: DraftService,\n    private surveyService: SurveyService,\n    private detailedFormService: DetailedFormService,\n    private router: Router,\n    private platform: Platform,\n    private alertController: AlertController,\n    private toastController: ToastController\n  ) {}\n\n  ngOnInit() {\n    this.requestData();\n  }\n\n  async navigate(formToSend: FormDetail.Form) {\n    if (this.platform.is('mobile')) {\n      this.detailedFormService.setForm(formToSend, this.form, this.draft, this.survey);\n      this.router.navigate(['detail']);\n    } else {\n      const alert = await this.alertController.create({\n        header: 'Dispositivo no compatible',\n        message:\n          'Para acceder al formulario, ingresa desde un dispositivo móvil',\n        buttons: ['OK'],\n      });\n      await alert.present();\n    }\n  }\n\n  handleRefresh(event: any) {\n    setTimeout(() => {\n      this.requestData()\n      event.target.complete();\n    }, 2000);\n  }\n\n  private requestData() {\n    if (this.form) {\n      this.formsService.getForms().subscribe((forms) => {\n        this.forms = forms;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n    \n      # {{ form.uuid }}\n      {{ form.name }}\n      Finaliza el {{ form.dateEnd }}\n      {{\n        form.questions[0].answers[0].value\n      }}\n    \n    \n      {{ form.description }}\n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./form-list.component.scss\n                \n                #uuid {\n  font-size: x-small;\n}\n\nion-icon {\n  float: right;\n  font-size: xx-large;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        # {{ form.uuid }}      {{ form.name }}      Finaliza el {{ form.dateEnd }}      {{        form.questions[0].answers[0].value      }}              {{ form.description }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/form/form.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing the forms.\nLocal and remote forms are handled here\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getForms\n                            \n                            \n                                    Private\n                                getLocalForms\n                            \n                            \n                                    Private\n                                getQuestionChildren\n                            \n                            \n                                    Private\n                                setLocalForms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/form/form.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor. Dependencies are injected here\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For making requests to the server\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                For saving and retrieving forms from the local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getForms\n                        \n                    \n                \n            \n            \n                \n                        \n                    getForms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/form/form.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Retrieves the forms from the server or local storage based on network connectivity.\nIf the device is offline, it retrieves the forms from local storage.\nIf the device is online, it makes a POST request to the server to fetch the forms.\nThe forms are then processed and filtered based on the current date.\nFinally, the forms are stored in local storage and returned as an Observable.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable of FormDetail.Form[] representing the retrieved forms.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLocalForms\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalForms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/form/form.service.ts:120\n                        \n                    \n\n\n            \n                \n                        Retrieves the local forms from the storage service.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of FormDetail.Form type.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getQuestionChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    getQuestionChildren(question: FormDetail.Question, form: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/form/form.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Retrieves the children questions of a\ngiven question in a form only when its\ntype is \"Tabla\".\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe parent question.\n\n\n                                            \n                                        \n                                        \n                                                form\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form containing the questions.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                An array of arrays of questions representing the children questions.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLocalForms\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLocalForms(forms: FormDetail.Form[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/form/form.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Sets the local forms in the storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                forms\n                                            \n                                                            FormDetail.Form[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe forms to be stored locally.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApiService } from '@services/api/api.service';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { HttpResponse } from '@capacitor/core';\nimport { StorageService } from '../storage/storage.service';\nimport { Network } from '@capacitor/network';\nimport { Observable, from } from 'rxjs';\nimport { tap, map, switchMap } from 'rxjs/operators';\nimport { formBuilder } from '@utils/builder';\n\n/**\n * Service for managing the forms.\n * Local and remote forms are handled here\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormService {\n\n  /**\n   * Constructor. Dependencies are injected here\n   * @param apiService For making requests to the server\n   * @param storageService For saving and retrieving forms from the local storage\n   */\n  constructor(\n    private apiService: ApiService,\n    private storageService: StorageService\n  ) {}\n\n  /**\n   * Retrieves the forms from the server or local storage based on network connectivity.\n   * If the device is offline, it retrieves the forms from local storage.\n   * If the device is online, it makes a POST request to the server to fetch the forms.\n   * The forms are then processed and filtered based on the current date.\n   * Finally, the forms are stored in local storage and returned as an Observable.\n   *\n   * @returns An Observable of FormDetail.Form[] representing the retrieved forms.\n   */\n  public getForms(): Observable {\n    return from(Network.getStatus()).pipe(\n      switchMap((status) => {\n        if (!status.connected) {\n          return this.getLocalForms();\n        } else {\n          return from(this.apiService.post(ENDPOINT)).pipe(\n            map((response: HttpResponse) => {\n              const formsResponse: FormDetail.FormResponse[] = JSON.parse(\n                response.data\n              );\n              const currentDate: Date = new Date();\n              var forms: FormDetail.Form[] = formsResponse.map(\n                (form: FormDetail.FormResponse) => {\n                  const builtForm: FormDetail.Form = formBuilder(form);\n                  builtForm.questions.forEach((question) => {\n                    if (question.type === 'Tabla') {\n                      let children: FormDetail.Question[][] =\n                        this.getQuestionChildren(question, builtForm);\n                      question.questionChildren = children;\n                    }\n                  });\n                  builtForm.questions = builtForm.questions.filter(\n                    (question) => question.questionParentId === null || question.questionParentId === undefined\n                  );\n                  builtForm.fechaDescarga = currentDate.toISOString(); // Convert Date to string\n\n                  return builtForm;\n                }\n              );\n              forms = forms.filter((form) => {\n                const initialDate: Date = new Date(form.dateInit);\n                const finalDate: Date = new Date(form.dateEnd);\n                return currentDate >= initialDate && currentDate  {\n              this.setLocalForms(forms);\n            })\n          );\n        }\n      })\n    );\n  }\n\n  /**\n   * Retrieves the children questions of a\n   * given question in a form only when its\n   * type is \"Tabla\".\n   *\n   * @param question - The parent question.\n   * @param form - The form containing the questions.\n   * @returns An array of arrays of questions representing the children questions.\n   */\n  private getQuestionChildren(\n    question: FormDetail.Question,\n    form: FormDetail.Form\n  ): FormDetail.Question[][] {\n    let children: FormDetail.Question[][] = [];\n    let base: FormDetail.Question[] = [];\n\n    // Iterate through each question of the form\n    form.questions.forEach((q: FormDetail.Question) => {\n      // If the question is a child of the current question\n      if (q.questionParentId === question.id) {\n        // Add the question to the base array\n        base.push(q);\n      }\n    });\n\n    // Add the base array to the children array\n    children.push(base);\n\n    return children;\n  }\n\n  /**\n   * Retrieves the local forms from the storage service.\n   * @returns A promise that resolves to an array of FormDetail.Form type.\n   */\n  private getLocalForms(): Promise {\n    return this.storageService.get(FORMS_STORAGE_KEY);\n  }\n\n  /**\n   * Sets the local forms in the storage.\n   *\n   * @param forms - The forms to be stored locally.\n   */\n  private setLocalForms(forms: FormDetail.Form[]): void {\n    this.storageService.set(FORMS_STORAGE_KEY, forms);\n  }\n}\n\n/**\n * The key used to store forms in local storage.\n */\nconst FORMS_STORAGE_KEY = 'forms';\n/**\n * The endpoint for form details.\n */\nconst ENDPOINT = 'form-detail';\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormsPage.html":{"url":"components/FormsPage.html","title":"component - FormsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/forms/forms.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forms\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                FormListComponent\n                \n            \n\n            \n                styleUrls\n                forms.page.scss\n            \n\n\n\n            \n                templateUrl\n                forms.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                forms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadForms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/forms/forms.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadForms\n                        \n                    \n                \n            \n            \n                \nloadForms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forms/forms.page.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        forms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forms/forms.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { FormService } from '@services/form/form.service';\nimport { FormListComponent } from '@components/form-list/form-list.component';\nimport { FormDetail } from '@models/FormDetail.namespace';\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: 'forms.page.html',\n  styleUrls: ['forms.page.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule, FormListComponent],\n})\nexport class FormsPage {\n  forms!: FormDetail.Form[];\n\n  constructor(private formService: FormService) {}\n\n  loadForms() {\n    this.formService.getForms().subscribe((forms) => {\n      this.forms = forms;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    forms.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                            \n                                    \n                                modal\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppVersion\n                            \n                            \n                                    Private\n                                loadProducers\n                            \n                            \n                                loadUser\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                uploadSurveys\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(surveyService: SurveyService, alertController: AlertController, authService: AuthService, producerService: ProducerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        producerService\n                                                  \n                                                        \n                                                                        ProducerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppVersion\n                        \n                    \n                \n            \n            \n                \ngetAppVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadProducers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUser\n                        \n                    \n                \n            \n            \n                \nloadUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLIonModalElement\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Authentication.User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { Authentication } from '@models/Auth.namespace';\nimport { AuthService } from '@services/auth/auth.service';\nimport { SurveyService } from '@services/survey/survey.service';\nimport { App } from '@capacitor/app';\nimport { ProducerService } from '@services/producer/producer.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n  standalone: true,\n  imports: [IonicModule],\n})\nexport class HomePage {\n\n  @ViewChild('modal') modal!: HTMLIonModalElement;\n\n  user!: Authentication.User;\n  appVersion!: string;\n\n  constructor(\n    private surveyService: SurveyService,\n    private alertController: AlertController,\n    private authService: AuthService,\n    private producerService: ProducerService,\n  ) {}\n\n  ngOnInit() {\n    this.loadProducers();\n    this.loadUser();\n    App.getInfo().then((info) => {\n      this.appVersion = info.version;\n    });\n  }\n\n  async uploadSurveys() {\n\n    const logoutAlert = await this.alertController.create({\n      header: 'Sincronizar',\n      message: 'Este proceso puede tardar. ¿Estás seguro que deseas sincronizar?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n        },\n        {\n          text: 'Sincronizar',\n          handler: () => {\n            this.surveyService.syncSurveys();\n          },\n        },\n      ],\n    })\n\n    await logoutAlert.present();\n  }\n\n  async logout() {\n\n    const logoutAlert = await this.alertController.create({\n      header: 'Cerrar Sesión',\n      message: '¿Estás seguro que deseas cerrar sesión?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n        },\n        {\n          text: 'Cerrar Sesión',\n          cssClass: 'logout',\n          handler: () => {\n            this.authService.logout();\n            this.modal.dismiss();\n          },\n        },\n      ],\n    })\n\n    await logoutAlert.present();\n  }\n\n  loadUser(): void {\n    this.authService.getUser().then((user) => {\n      this.user = user;\n    });\n  }\n\n  private loadProducers(): void {\n    this.producerService.updateProducers();\n  }\n\n  getAppVersion(): string {\n    return this.appVersion;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n        Formularios\n      \n\n      \n        \n        Borradores\n      \n\n      \n        \n        Encuestas\n      \n    \n  \n\n\n\n  \n    \n      \n        Información General\n      \n    \n    \n      \n        Usuario\n        {{ user.name }}\n      \n      \n        Cargo\n        {{ user.type }}\n      \n      \n        App Version\n        {{ getAppVersion() }}\n      \n      Cerrar Sesión\n    \n  \n\n\n    \n\n    \n                \n                    home.page.scss\n                \n                ion-img {\n  width: 60%;\n}\n\n#home-header {\n  ion-toolbar {\n    --background: url('../../../assets/imgs/header-inner.jpg');\n    display: flex;\n    align-content: center;\n    height: 100px;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n}\n\n.header-icon {\n  color: white;\n}\n\nion-modal {\n  .modal-content {\n    --height: 10px;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Formularios                            Borradores                            Encuestas                                Información General                            Usuario        {{ user.name }}                    Cargo        {{ user.type }}                    App Version        {{ getAppVersion() }}            Cerrar Sesión      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                                FormsModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, alertController: AlertController, loadingController: LoadingController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.page.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormsModule,\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { IonicModule } from '@ionic/angular';\nimport { AuthService } from '@services/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule, FormsModule, ReactiveFormsModule],\n})\nexport class LoginPage implements OnInit {\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private alertController: AlertController,\n    private loadingController: LoadingController\n  ) {}\n\n  form: FormGroup = this.fb.group({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n  });\n\n  ngOnInit() {}\n\n  async login() {\n    const loading = await this.loadingController.create({\n      message: 'Cargando...',\n    });\n    await loading.present();\n\n    if (this.form.valid) {\n      try {\n        this.authService.login(this.form.value);\n        await this.loadingController.dismiss();\n      } catch (error: any) {\n        await this.loadingController.dismiss();\n        const alert = await this.alertController.create({\n          header: 'Error',\n          message: error.message,\n          buttons: ['OK'],\n        });\n        await alert.present();\n      }\n    } else {\n      await this.loadingController.dismiss();\n      const alert = await this.alertController.create({\n        header: 'Error',\n        message: 'Por favor, ingrese un email y una contraseña válidos',\n        buttons: ['OK'],\n      });\n      await alert.present();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n          \n        \n        \n          \n          \n        \n        \n          \n            Iniciar Sesión\n            \n          \n        \n      \n      \n        \n          \n          \n          Desarrollado por Blaucast®\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .container {\n  display: grid;\n  place-items: center;\n  height: 100vh;\n  background-color: #999999;\n}\n\n.login-button {\n  margin-top: 2%;\n  width: 100%;\n}\n\n.bottom-info {\n  margin-top: 10%;\n  font-size: 11px;\n  color: #999999;\n}\n\n.center {\n  text-align: center;\n}\n\n.login-input {\n  border-radius: 4%;\n}\n\nion-card {\n  min-width: 200px;\n  max-width: 500px;\n  background-color: white;\n}\n\nion-item {\n  --background: white;\n}\n\nion-input {\n  --color: #999999;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                      Iniciar Sesión                                                                                Desarrollado por Blaucast®                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoneyDataTypeComponent.html":{"url":"components/MoneyDataTypeComponent.html","title":"component - MoneyDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MoneyDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/money-data-type/money-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-money-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            MaskitoModule\n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./money-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./money-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                maskPredicate\n                            \n                            \n                                    Readonly\n                                moneyMask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHelperText\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Async\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, currencyPipe: CurrencyPipe)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currencyPipe\n                                                  \n                                                        \n                                                                    CurrencyPipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHelperText\n                        \n                    \n                \n            \n            \n                \ngetHelperText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        maskPredicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MaskitoElementPredicateAsync\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        moneyMask\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MaskitoOptions\n\n                    \n                \n                \n                    \n                        Default value : maskitoNumberOptionsGenerator({\n    decimalZeroPadding: true,\n    prefix: '$',\n    thousandSeparator: ',',\n    decimalSeparator: '.',\n    precision: 2,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/money-data-type/money-data-type.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CurrencyPipe } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { maskitoNumberOptionsGenerator, maskitoParseNumber } from '@maskito/kit';\nimport { MaskitoModule } from '@maskito/angular';\nimport { MaskitoElementPredicateAsync, MaskitoOptions } from '@maskito/core';\n\n@Component({\n  selector: 'app-money-data-type',\n  templateUrl: './money-data-type.component.html',\n  styleUrls: ['./money-data-type.component.scss'],\n  standalone: true,\n  imports: [MaskitoModule, IonicModule, ReactiveFormsModule],\n})\nexport class MoneyDataTypeComponent {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  readonly maskPredicate: MaskitoElementPredicateAsync = async (el) =>\n    (el as HTMLIonInputElement).getInputElement();\n\n  readonly moneyMask: MaskitoOptions = maskitoNumberOptionsGenerator({\n    decimalZeroPadding: true,\n    prefix: '$',\n    thousandSeparator: ',',\n    decimalSeparator: '.',\n    precision: 2,\n  });\n\n  constructor(\n    private alertController: AlertController,\n    private currencyPipe: CurrencyPipe\n  ) {}\n\n  ngOnChanges() {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    if (this.question.min)\n      formControl.addValidators(Validators.min(this.question.min));\n    if (this.question.max)\n      formControl.addValidators(Validators.max(this.question.max));\n  }\n\n  getValue(): string {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    const currency: string = this.currencyPipe.transform(\n      formControl.value,\n      'COP',\n      '$',\n    )!;\n\n    return currency;\n  }\n\n  async setValue(event: Event): Promise {\n    const element: HTMLIonInputElement = event.target as HTMLIonInputElement;\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    formControl.setValue(maskitoParseNumber(element.value as string));\n\n    if (formControl.getError('min')) {\n      const minAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor mínimo',\n        message: `El valor mínimo es ${this.question.min}`,\n        buttons: ['OK'],\n      });\n\n      await minAlert.present();\n    } else if (formControl.getError('max')) {\n      const maxAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor máximo',\n        message: `El valor máximo es ${this.question.max}`,\n        buttons: ['OK'],\n      });\n\n      await maxAlert.present();\n    }\n  }\n\n  getHelperText(): string {\n    let message: string = 'Ingrese un valor';\n    const minCurrency: string = this.currencyPipe.transform(\n      this.question.min,\n      'COP',\n      '$',\n      '1.2-2'\n    )!;\n    const maxCurrency: string = this.currencyPipe.transform(\n      this.question.max,\n      'COP',\n      '$',\n      '1.2-2'\n    )!;\n    if (this.question.min && this.question.max)\n      message += ` entre ${minCurrency} y ${maxCurrency}`;\n    else if (this.question.min) message += ` mayor a ${minCurrency}`;\n    else if (this.question.max) message += ` menor a ${maxCurrency}`;\n    return message;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./money-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoneyDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MonthDataTypeComponent.html":{"url":"components/MonthDataTypeComponent.html","title":"component - MonthDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MonthDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/month-data-type/month-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-month-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./month-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./month-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/month-data-type/month-data-type.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-month-data-type',\n  templateUrl: './month-data-type.component.html',\n  styleUrls: ['./month-data-type.component.scss'],\n  standalone: true,\n  imports: [ IonicModule, ReactiveFormsModule ],\n})\nexport class MonthDataTypeComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  onChange(event: any) {\n    this.formGroup.controls[this.question.id].setValue(event.detail.value)\n  }\n\n  getValue(): string {\n    const control: FormControl = this.formGroup.controls[this.question.id] as FormControl\n\n    const date: Date = control.value ? new Date(control.value) : new Date()\n    return date.toISOString()\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./month-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MonthDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultipleComponent.html":{"url":"components/MultipleComponent.html","title":"component - MultipleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MultipleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/multiple/multiple.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-multiple\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./multiple.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./multiple.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                other\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeInputState\n                            \n                            \n                                checkAnswer\n                            \n                            \n                                getAnswers\n                            \n                            \n                                getTextValue\n                            \n                            \n                                isChecked\n                            \n                            \n                                    Private\n                                isLastAnswer\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setCheckedValue\n                            \n                            \n                                setTextValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/multiple/multiple.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/multiple/multiple.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/multiple/multiple.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/multiple/multiple.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeInputState\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeInputState(answerGroup: FormGroup, id: string, value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answerGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAnswer\n                        \n                    \n                \n            \n            \n                \ncheckAnswer(event: Event, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAnswers\n                        \n                    \n                \n            \n            \n                \ngetAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Answer[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTextValue\n                        \n                    \n                \n            \n            \n                \ngetTextValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChecked\n                        \n                    \n                \n            \n            \n                \nisChecked(answer: FormDetail.Answer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answer\n                                            \n                                                        FormDetail.Answer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLastAnswer\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLastAnswer(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCheckedValue\n                        \n                    \n                \n            \n            \n                \nsetCheckedValue(formGroup: FormGroup, value: boolean, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTextValue\n                        \n                    \n                \n            \n            \n                \nsetTextValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/multiple/multiple.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        other\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/multiple/multiple.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-multiple',\n  templateUrl: './multiple.component.html',\n  styleUrls: ['./multiple.component.scss'],\n  standalone: true,\n  imports: [ CommonModule, IonicModule, ReactiveFormsModule ]\n})\nexport class MultipleComponent implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  other: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  getAnswers(): FormDetail.Answer[] {\n    return this.question.answers;\n  }\n\n  isChecked(answer: FormDetail.Answer): boolean {\n    const formGroup: FormGroup = this.formGroup.get(`${this.question.id}`) as FormGroup;\n\n    const formControl: AbstractControl | null = formGroup.get(answer.id.toString());\n\n    if (formControl) {\n      const value: boolean = formControl.value;\n      this.changeInputState(formGroup, answer.id.toString(), value);\n      return value;\n    }\n\n    return false;\n  }\n\n  checkAnswer(event: Event, id: number): void {\n    const formGroup: FormGroup = this.formGroup.get(`${this.question.id}`) as FormGroup;\n\n    const element: HTMLInputElement = event.target as HTMLInputElement;\n    const value: boolean = element.checked;\n\n    this.setCheckedValue(formGroup, value, id);\n  }\n\n  setCheckedValue(formGroup: FormGroup, value: boolean, id: number): void {\n    const formControl: AbstractControl | null = formGroup.get(id.toString());\n\n    if (formControl) {\n      this.changeInputState(formGroup, id.toString(), value);\n      formControl.setValue(value);\n    }\n  }\n\n  getTextValue(): string {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherValue: string = answerGroup.get('other')?.value;\n    return otherValue;\n  }\n\n  setTextValue(event: any): void {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherValue: string = event.detail.value;\n    answerGroup.get('other')?.setValue(otherValue);\n  }\n\n  private changeInputState(answerGroup: FormGroup, id: string, value: boolean): void {\n\n    if (this.isLastAnswer(id) && value) {\n      this.other = true;\n      answerGroup.get('other')?.enable();\n    } else if (this.isLastAnswer(id) && !value) {\n      this.other = false;\n      answerGroup.get('other')?.disable();\n    }\n  }\n\n  private isLastAnswer(id: string): boolean {\n    const answers: FormDetail.Answer[] = this.getAnswers();\n    const lastAnswer: FormDetail.Answer = answers[answers.length - 1];\n    return Number(id) === lastAnswer.id;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ answer.value }}\n      \n    \n  \n\n\n\n  \n    \n      \n        {{ isLast ? answer.value.split(\":\")[0] : answer.value }}\n      \n    \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./multiple.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ answer.value }}                                {{ isLast ? answer.value.split(\":\")[0] : answer.value }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MultipleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NumberDataTypeComponent.html":{"url":"components/NumberDataTypeComponent.html","title":"component - NumberDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NumberDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/number-data-type/number-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-number-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./number-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./number-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlaceholder\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Async\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaceholder\n                        \n                    \n                \n            \n            \n                \ngetPlaceholder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/number-data-type/number-data-type.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-number-data-type',\n  templateUrl: './number-data-type.component.html',\n  styleUrls: ['./number-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule, ReactiveFormsModule],\n})\nexport class NumberDataTypeComponent {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(private alertController: AlertController) {}\n\n  ngOnChanges() {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    if (this.question.min)\n      formControl.addValidators(Validators.min(this.question.min));\n    if (this.question.max)\n      formControl.addValidators(Validators.max(this.question.max));\n  }\n\n  getValue(): string {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    return formControl.value;\n  }\n\n  async setValue(event: Event): Promise {\n    const element: HTMLInputElement = event.target as HTMLInputElement;\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    formControl.setValue(element.value);\n\n    if (formControl.getError('min')) {\n      const minAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor mínimo',\n        message: `El valor mínimo es ${this.question.min}`,\n        buttons: ['OK'],\n      });\n\n      await minAlert.present();\n    } else if (formControl.getError('max')) {\n      const maxAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor máximo',\n        message: `El valor máximo es ${this.question.max}`,\n        buttons: ['OK'],\n      });\n\n      await maxAlert.present();\n    }\n  }\n\n  getPlaceholder(): string {\n    let message: string = 'Ingrese un valor';\n    if (this.question.min && this.question.max)\n      message += ` entre ${this.question.min} y ${this.question.max}`;\n    else if (this.question.min) message += ` mayor a ${this.question.min}`;\n    else if (this.question.max) message += ` menor a ${this.question.max}`;\n    return message;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./number-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NumberDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OfflineManagerService.html":{"url":"injectables/OfflineManagerService.html","title":"injectable - OfflineManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OfflineManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/offline-manager/offline-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkForEvents\n                            \n                            \n                                    Private\n                                sendRequests\n                            \n                            \n                                    Public\n                                    Async\n                                storeRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, apiService: ApiService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/offline-manager/offline-manager.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        checkForEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkForEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/offline-manager/offline-manager.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sendRequests\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendRequests(operations: StoredRequest[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/offline-manager/offline-manager.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                operations\n                                            \n                                                            StoredRequest[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        storeRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeRequest(url: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/offline-manager/offline-manager.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@capacitor/core';\nimport { ToastController } from '@ionic/angular';\nimport { ApiService } from '@services/api/api.service';\nimport { StorageService } from '@services/storage/storage.service';\nimport { Observable, from, of, forkJoin } from 'rxjs';\nimport { switchMap, finalize } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OfflineManagerService {\n  constructor(\n    private storageService: StorageService,\n    private apiService: ApiService,\n    private toastController: ToastController\n  ) {}\n\n  public checkForEvents(): Observable {\n    return from(this.storageService.get(STORAGE_REQ_KEY)).pipe(\n      switchMap((storedOperations: StoredRequest[]) => {\n        let storedObj: StoredRequest[] = storedOperations;\n        if (storedObj && storedObj.length > 0) {\n          return this.sendRequests(storedObj).pipe(\n            finalize(() => {\n              let toast = this.toastController.create({\n                message: `Local data succesfully synced to API!`,\n                duration: 3000,\n                position: 'bottom',\n              });\n              toast.then((toast) => toast.present());\n              this.storageService.remove(STORAGE_REQ_KEY);\n            })\n          );\n        } else {\n          console.log('no local events to sync');\n          return of(false);\n        }\n      })\n    );\n  }\n\n  public async storeRequest(url: string, data: any): Promise {\n    let toast = this.toastController.create({\n      message: `Your data is stored locally because you seem to be offline.`,\n      duration: 3000,\n      position: 'bottom',\n    });\n    toast.then((toast) => toast.present());\n\n    const action: StoredRequest = {\n      url: url,\n      data: data,\n      time: new Date().getTime(),\n      id: uuidv4(),\n    };\n\n    return this.storageService.get(STORAGE_REQ_KEY).then((storedOperations) => {\n      let storedObj: StoredRequest[] = JSON.parse(storedOperations);\n      if (storedObj) {\n        storedObj.push(action);\n      } else {\n        storedObj = [action];\n      }\n      return this.storageService.set(\n        STORAGE_REQ_KEY,\n        JSON.stringify(storedObj)\n      );\n    });\n  }\n\n  private sendRequests(\n    operations: StoredRequest[]\n  ): Observable {\n    let obs = [];\n    for (let op of operations) {\n      console.log('Make one request: ', op);\n      let oneObs = this.apiService.post(op.url, op.data);\n      obs.push(oneObs);\n    }\n    return forkJoin(obs);\n  }\n}\n\nconst STORAGE_REQ_KEY: string = 'storedreq';\n\ninterface StoredRequest {\n  url: string;\n  data: any;\n  time: number;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenComponent.html":{"url":"components/OpenComponent.html","title":"component - OpenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/open.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-open\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                AutocompleteComponent\n                                PhotoDataTypeComponent\n                                DrawingPadDataTypeComponent\n                                TextAreaDataTypeComponent\n                                NumberDataTypeComponent\n                                TextDataTypeComponent\n                                DateDataTypeComponent\n                                PercentageDataTypeComponent\n                                MonthDataTypeComponent\n                                EmailDataTypeComponent\n                                MoneyDataTypeComponent\n                                PhoneDataTypeComponent\n                \n            \n\n            \n                styleUrls\n                ./open.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./open.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDataType\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/open.component.ts:46\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/open.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/open.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/open.component.ts:44\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDataType\n                        \n                    \n                \n            \n            \n                \ngetDataType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/open.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/open.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { QuestionService } from '@services/detailed-form/question/question.service';\nimport { AutocompleteComponent } from '../autocomplete/autocomplete.component';\nimport { CommonModule } from '@angular/common';\nimport { PhotoDataTypeComponent } from './photo-data-type/photo-data-type.component';\nimport { DrawingPadDataTypeComponent } from './drawing-pad-data-type/drawing-pad-data-type.component';\nimport { TextAreaDataTypeComponent } from './text-area-data-type/text-area-data-type.component';\nimport { NumberDataTypeComponent } from './number-data-type/number-data-type.component';\nimport { TextDataTypeComponent } from './text-data-type/text-data-type.component';\nimport { DateDataTypeComponent } from './date-data-type/date-data-type.component';\nimport { PercentageDataTypeComponent } from './percentage-data-type/percentage-data-type.component';\nimport { MonthDataTypeComponent } from './month-data-type/month-data-type.component';\nimport { EmailDataTypeComponent } from './email-data-type/email-data-type.component';\nimport { MoneyDataTypeComponent } from './money-data-type/money-data-type.component';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { FormGroup } from '@angular/forms';\nimport { PhoneDataTypeComponent } from './phone-data-type/phone-data-type.component';\n\n@Component({\n  selector: 'app-open',\n  templateUrl: './open.component.html',\n  styleUrls: ['./open.component.scss'],\n  imports: [\n    CommonModule,\n    IonicModule,\n    AutocompleteComponent,\n    PhotoDataTypeComponent,\n    DrawingPadDataTypeComponent,\n    TextAreaDataTypeComponent,\n    NumberDataTypeComponent,\n    TextDataTypeComponent,\n    DateDataTypeComponent,\n    PercentageDataTypeComponent,\n    MonthDataTypeComponent,\n    EmailDataTypeComponent,\n    MoneyDataTypeComponent,\n    PhoneDataTypeComponent\n  ],\n  standalone: true,\n})\nexport class OpenComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  getDataType(): string {\n    return this.question.dataType;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./open.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OpenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PercentageDataTypeComponent.html":{"url":"components/PercentageDataTypeComponent.html","title":"component - PercentageDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PercentageDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-percentage-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./percentage-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./percentage-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlaceholder\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Async\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlaceholder\n                        \n                    \n                \n            \n            \n                \ngetPlaceholder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-percentage-data-type',\n  templateUrl: './percentage-data-type.component.html',\n  styleUrls: ['./percentage-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule, ReactiveFormsModule],\n})\nexport class PercentageDataTypeComponent {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(private alertController: AlertController) {}\n\n  ngOnChanges() {\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    if (this.question.min)\n      formControl.addValidators(Validators.min(this.question.min));\n    if (this.question.max)\n      formControl.addValidators(Validators.max(this.question.max));\n  }\n\n  getValue(): string {\n    return this.formGroup.get(`${this.question.id}`)?.value;\n  }\n\n  async setValue(event: Event) {\n    const element: HTMLInputElement = event.target as HTMLInputElement;\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n\n    formControl.setValue(element.value);\n\n    if (formControl.getError('min')) {\n      const minAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor mínimo',\n        message: `El valor mínimo es ${this.question.min}`,\n        buttons: ['OK'],\n      });\n\n      await minAlert.present();\n    } else if (formControl.getError('max')) {\n      const maxAlert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'Valor máximo',\n        message: `El valor máximo es ${this.question.max}`,\n        buttons: ['OK'],\n      });\n\n      await maxAlert.present();\n    }\n  }\n\n  getPlaceholder(): string {\n    let message: string = 'Ingrese un valor';\n    if (this.question.min && this.question.max)\n      message += ` entre ${this.question.min} y ${this.question.max}`;\n    else if (this.question.min) message += ` mayor a ${this.question.min}`;\n    else if (this.question.max) message += ` menor a ${this.question.max}`;\n    return message;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./percentage-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PercentageDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneDataTypeComponent.html":{"url":"components/PhoneDataTypeComponent.html","title":"component - PhoneDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhoneDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-phone-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./phone-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabledRemoveButton\n                            \n                            \n                                phones\n                            \n                            \n                                phonesObserver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPhone\n                            \n                            \n                                    Private\n                                checkPhoneListLength\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removePhone\n                            \n                            \n                                    Async\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPhone\n                        \n                    \n                \n            \n            \n                \naddPhone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkPhoneListLength\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkPhoneListLength(phones: FormDetail.Answer[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phones\n                                            \n                                                        FormDetail.Answer[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(order: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePhone\n                        \n                    \n                \n            \n            \n                \nremovePhone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValue(event: any, order: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                order\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabledRemoveButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormDetail.Answer[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phonesObserver\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AlertController, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-phone-data-type',\n  templateUrl: './phone-data-type.component.html',\n  styleUrls: ['./phone-data-type.component.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule],\n})\nexport class PhoneDataTypeComponent implements OnInit {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n  disabledRemoveButton: boolean = false;\n\n  phones!: FormDetail.Answer[];\n  phonesObserver!: BehaviorSubject;\n\n  constructor(private alertController: AlertController) {}\n\n  ngOnInit() {\n    this.phones = this.question.answers;\n    this.phonesObserver = new BehaviorSubject(this.phones);\n    this.phonesObserver.subscribe((phones) => {\n      this.checkPhoneListLength(phones);\n    });\n  }\n\n  getValue(order: number): string {\n    const formGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const formControl: FormControl = formGroup.get(`${order}`) as FormControl;\n    return formControl.value;\n  }\n\n  async setValue(event: any, order: number) {\n    if (event.target.value.length \n    \n\n    \n        \n  \n  \n\n\n\n  \n    Agregar\n  \n  \n    Eliminar\n  \n\n\n\n  \n    \n  \n  \n    \n      \n    \n    \n      \n    \n  \n -->\n\n    \n\n    \n                \n                    ./phone-data-type.component.scss\n                \n                div {\n  display: flex;\n  justify-content: flex-end;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Agregar        Eliminar                                           -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhoneDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhotoDataTypeComponent.html":{"url":"components/PhotoDataTypeComponent.html","title":"component - PhotoDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PhotoDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-photo-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                \n            \n\n            \n                styleUrls\n                ./photo-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./photo-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPhoto\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                takePhoto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(photoService: PhotoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photoService\n                                                  \n                                                        \n                                                                        PhotoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPhoto\n                        \n                    \n                \n            \n            \n                \ngetPhoto()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        takePhoto\n                        \n                    \n                \n            \n            \n                \ntakePhoto()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { PhotoService } from '@services/detailed-form/question/photo/photo.service';\n\n@Component({\n  selector: 'app-photo-data-type',\n  templateUrl: './photo-data-type.component.html',\n  styleUrls: ['./photo-data-type.component.scss'],\n  standalone: true,\n  imports: [ IonicModule ],\n})\nexport class PhotoDataTypeComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor(private photoService: PhotoService) { }\n\n  ngOnInit() { }\n\n  takePhoto() {\n    this.photoService.takePhoto().then((photo) => {\n      this.formGroup.get(`${this.question.id}`)?.setValue(photo);\n    })\n  }\n\n  getPhoto(): any {\n    let photoBase64 = this.formGroup.get(`${this.question.id}`)?.value;\n    let photo = `data:image/jpeg;base64,${photoBase64}`;\n    return photo;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./photo-data-type.component.scss\n                \n                ion-content {\n  height: 70vh;\n}\n\nion-img::part(image) {\n  border-radius: 5%;\n}\n\nion-img {\n  width: 100%;\n  height: 85%;\n  background-color: lightgray;\n  border-radius: 5%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhotoDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PhotoService.html":{"url":"injectables/PhotoService.html","title":"injectable - PhotoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PhotoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/question/photo/photo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                takePhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/question/photo/photo.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        takePhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    takePhoto()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/photo/photo.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Camera, CameraResultType, CameraSource, Photo } from '@capacitor/camera';\nimport { Filesystem, Directory } from '@capacitor/filesystem';\nimport { Preferences } from '@capacitor/preferences';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n\n  constructor() { }\n\n  public async takePhoto(): Promise {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Base64,\n      source: CameraSource.Camera,\n      quality: 50\n    });\n\n    const photo = capturedPhoto.base64String!;\n\n    return photo;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Producer.html":{"url":"interfaces/Producer.html","title":"interface - Producer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Producer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Beneficiary.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            associationId\n                                        \n                                \n                                \n                                        \n                                            cedula\n                                        \n                                \n                                \n                                        \n                                            demonstrationPlot\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            greenhouse\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            middlename\n                                        \n                                \n                                \n                                        \n                                            recommendedActions\n                                        \n                                \n                                \n                                        \n                                            secondLastname\n                                        \n                                \n                                \n                                        \n                                            specialized\n                                        \n                                \n                                \n                                        \n                                            supplies\n                                        \n                                \n                                \n                                        \n                                            technicalAssistance\n                                        \n                                \n                                \n                                        \n                                            transplantDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        associationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        associationId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cedula\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cedula:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        demonstrationPlot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        demonstrationPlot:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        greenhouse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        greenhouse:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middlename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        middlename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recommendedActions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recommendedActions:         SelectedQuestions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectedQuestions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondLastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondLastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        specialized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        specialized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supplies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        supplies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technicalAssistance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technicalAssistance:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transplantDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transplantDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Beneficiary {\n\n  export interface Producer {\n    cedula: string;\n    firstname: string;\n    middlename: string;\n    lastname: string;\n    secondLastname: string;\n    id: string;\n    specialized: boolean;\n    technicalAssistance: boolean;\n    demonstrationPlot: boolean;\n    greenhouse: boolean;\n    supplies: boolean;\n    associationId: number;\n    transplantDate: string;\n    recommendedActions: SelectedQuestions\n  }\n\n  export const ProducerBaseParams = {\n    cedula: '',\n    firstname: '',\n    middlename: '',\n    lastname: '',\n    secondLastname: '',\n    id: '',\n    specialized: false,\n    technicalAssistance: false,\n    demonstrationPlot: false,\n    greenhouse: false,\n    supplies: false,\n    associationId: 0,\n    transplantDate: '',\n    recommendedActions: {}\n  };\n\n  export type ProducerResponse = {\n    cedula: string;\n    primer_nombre: string;\n    segundo_nombre: string;\n    primer_apellido: string;\n    segundo_apellido: string;\n    identification: string;\n    has_especializada: number;\n    at_p5: number;          // asistencia técnica\n    pd_p5: number;          // parcela demostrativa\n    cm_p5: number;          // casa malla (invernadero espacial)\n    insumo_p5: number;      // insumos\n    association_id: number; // id de la asociacion\n    transplantDate: string;\n    selectedQuestionIds: SelectedQuestions\n  }\n\n  export type SelectedQuestions = { [questionId: string] : boolean };\n\n  export interface Association {\n    id: number;\n    nit: number;\n    name: string;\n    identification: string;\n    zone: string;\n    farming: string;\n  }\n\n  export type AssociationResponse = {\n    id: number;\n    nit: number;\n    name: string;\n    identification: string;\n    zona: string;\n    farming: string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProducerService.html":{"url":"injectables/ProducerService.html","title":"injectable - ProducerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProducerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/producer/producer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                producers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLocalProducers\n                            \n                            \n                                    Public\n                                getProducers\n                            \n                            \n                                    Private\n                                setLocalProducers\n                            \n                            \n                                    Private\n                                syncProducers\n                            \n                            \n                                    Public\n                                updateProducers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/producer/producer.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLocalProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalProducers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProducers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Beneficiary.Producer[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setLocalProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLocalProducers(producers: Beneficiary.Producer[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                producers\n                                            \n                                                            Beneficiary.Producer[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        syncProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncProducers(forceRefresh: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                forceRefresh\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateProducers\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProducers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/producer/producer.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        producers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Beneficiary.Producer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/producer/producer.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ApiService } from '../api/api.service';\nimport { StorageService } from '../storage/storage.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { Network } from '@capacitor/network';\nimport { Observable, from } from 'rxjs';\nimport { tap, map, switchMap } from 'rxjs/operators';\nimport { HttpResponse } from '@capacitor/core';\nimport { producerBuilder } from '@utils/builder';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProducerService {\n\n  producers: Beneficiary.Producer[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private storageService: StorageService,\n  ) { }\n\n  public getProducers(): Beneficiary.Producer[] {\n    return this.producers;\n  }\n\n  public updateProducers(): void {\n    this.syncProducers(true).subscribe((producers) => {\n      this.producers = producers;\n    });\n  }\n\n  private syncProducers(\n    forceRefresh: boolean = false\n  ): Observable {\n    return from(Network.getStatus()).pipe(\n      switchMap((status) => {\n        if (!status.connected || !forceRefresh) {\n          return this.getLocalProducers();\n        } else {\n          return from(this.apiService.post(ENDPOINT)).pipe(\n            map((response: HttpResponse) => {\n              const producerResponse: Beneficiary.ProducerResponse[] =\n                JSON.parse(response.data);\n              const producers: Beneficiary.Producer[] = producerResponse.map(\n                (producer) => producerBuilder(producer)\n              );\n              return producers;\n            }),\n            tap((producers: Beneficiary.Producer[]) => {\n              this.setLocalProducers(producers);\n            })\n          );\n        }\n      })\n    );\n  }\n\n  private getLocalProducers(): Promise {\n    return this.storageService.get(PRODUCERS_STORAGE_KEY);\n  }\n\n  private setLocalProducers(producers: Beneficiary.Producer[]): void {\n    this.storageService.set(ENDPOINT, producers);\n  }\n}\n\nconst PRODUCERS_STORAGE_KEY = 'producers';\nconst ENDPOINT = PRODUCERS_STORAGE_KEY;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Question.html":{"url":"interfaces/Question.html","title":"interface - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            answerLength\n                                        \n                                \n                                \n                                        \n                                            answers\n                                        \n                                \n                                \n                                        \n                                            answersRelation\n                                        \n                                \n                                \n                                        \n                                            dataType\n                                        \n                                \n                                \n                                        \n                                            extendable\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            questionCategory\n                                        \n                                \n                                \n                                        \n                                            questionCategoryId\n                                        \n                                \n                                \n                                        \n                                            questionChildren\n                                        \n                                \n                                \n                                        \n                                            questionParentId\n                                        \n                                \n                                \n                                        \n                                            required\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            userTypeRestriction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        answerLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answerLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        answers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answers:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        answersRelation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        answersRelation:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extendable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extendable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionCategory:         QuestionCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuestionCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionCategoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionCategoryId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionChildren\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionChildren:         Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionParentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionParentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userTypeRestriction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userTypeRestriction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionCategory.html":{"url":"interfaces/QuestionCategory.html","title":"interface - QuestionCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuestionCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormDetail.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beneficiary } from \"./Beneficiary.namespace\";\n\nexport namespace FormDetail {\n  export interface Form {\n    id: number,\n    uuid: string,\n    name: string,\n    fechaDescarga: string,\n    fechaInicial: string,\n    fechaUltimoCambio: string,\n    fechaCarga: string,\n    sync: boolean,\n    position: string,\n    altitud: number,\n    dateInit: string,\n    dateEnd: string,\n    questions: Array,\n    description: string,\n    beneficiary: Beneficiary.Producer,\n  }\n\n  export type FormResponse = {\n    id: number,\n    name: string,\n    description: string,\n    dateInit: string,\n    dateEnd: string,\n    projectID: number,\n    questions: Array,\n    pivot: Pivot,\n  }\n\n  export type Pivot = {\n    user_id: number,\n    form_id: number,\n  }\n\n  export interface Question {\n    id: string,\n    text: string,\n    type: string,\n    required: number,\n    dataType: string,\n    order: number,\n    answerLength: number,\n    extendable: boolean,\n    questionParentId: string,\n    answers: Array,\n    questionCategoryId: number,\n    questionCategory: QuestionCategory,\n    answersRelation: Array,\n    questionChildren: Array>,\n    userTypeRestriction: string,\n    min?: number,\n    max?: number\n  }\n\n  export type QuestionResponse = {\n    id: number,\n    type: string,\n    required: number,\n    dataType: string,\n    text: string,\n    order: number,\n    extends: number,\n    min: number,\n    max: number,\n    user_type_restriction: string,\n    questionParentId: number,\n    formID: number,\n    question_category_id: number,\n    answers: Array,\n    answers_relation: Array,\n    question_category: QuestionCategoryResponse,\n  }\n\n  export interface QuestionCategory {\n    id: number,\n    name: string,\n  }\n\n  export type QuestionCategoryResponse = QuestionCategory\n\n  export interface Answer {\n    id: number,\n    order: number,\n    questionId: string,\n    checked: boolean,\n    value: string,\n  }\n\n  export type AnswerResponse = {\n    id: number,\n    order: number,\n    question_id: number,\n    value: string,\n  }\n\n  export interface AnswerRelation {\n    id: number,\n    questionId: string,\n    answerPivot: AnswerPivot,\n  }\n\n  export type AnswerRelationResponse = {\n    id: number,\n    question_id: number,\n    pivot: AnswerPivotResponse,\n  }\n\n  export interface AnswerPivot {\n    questionId: string,\n    answerId: number,\n    type: string,\n  }\n\n  export type AnswerPivotResponse = {\n    question_id: number,\n    answer_id: number,\n    type: string,\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionComponent.html":{"url":"components/QuestionComponent.html","title":"component - QuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/question.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                TypeComponent\n                                TableComponent\n                                DataquestHeaderComponent\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./question.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertShown\n                            \n                            \n                                    Private\n                                backButtonSubscription\n                            \n                            \n                                currentQuestion\n                            \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                confirmExit\n                            \n                            \n                                getCategory\n                            \n                            \n                                getType\n                            \n                            \n                                isDraft\n                            \n                            \n                                isFirstQuestion\n                            \n                            \n                                isForm\n                            \n                            \n                                isLastQuestion\n                            \n                            \n                                    Private\n                                isQuestionValid\n                            \n                            \n                                isSurvey\n                            \n                            \n                                    Private\n                                isValid\n                            \n                            \n                                    Async\n                                nextQuestion\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Async\n                                presentAlert\n                            \n                            \n                                previousQuestion\n                            \n                            \n                                    Private\n                                saveOpenResponse\n                            \n                            \n                                    Private\n                                saveResponse\n                            \n                            \n                                    Private\n                                saveSelection\n                            \n                            \n                                    Private\n                                saveTableResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(draftService: DraftService, detailedFormService: DetailedFormService, questionService: QuestionService, navCtrl: NavController, alertController: AlertController, loadingController: LoadingController, platform: Platform, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/question.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        draftService\n                                                  \n                                                        \n                                                                        DraftService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        confirmExit\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmExit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:183\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getType\n                        \n                    \n                \n            \n            \n                \ngetType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:187\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:304\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFirstQuestion\n                        \n                    \n                \n            \n            \n                \nisFirstQuestion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:210\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isForm\n                        \n                    \n                \n            \n            \n                \nisForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:300\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLastQuestion\n                        \n                    \n                \n            \n            \n                \nisLastQuestion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:199\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isQuestionValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isQuestionValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:191\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSurvey\n                        \n                    \n                \n            \n            \n                \nisSurvey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:308\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isValid\n                        \n                    \n                \n            \n            \n                \n                        \n                    isValid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        nextQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextQuestion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentAlert(isTable: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isTable\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousQuestion\n                        \n                    \n                \n            \n            \n                \npreviousQuestion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveOpenResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveOpenResponse(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:281\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveResponse(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveSelection\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSelection(question: FormDetail.Question, answersFormGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:253\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        saveTableResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveTableResponse(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/question.component.ts:236\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alertShown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        backButtonSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/question.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  AlertController,\n  IonicModule,\n  LoadingController,\n  NavController,\n} from '@ionic/angular';\nimport { QuestionService } from '@services/detailed-form/question/question.service';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DataquestHeaderComponent } from '../header/dataquest-header/dataquest-header.component';\nimport { CommonModule, Location } from '@angular/common';\nimport { TableComponent } from './type/table/table.component';\nimport { TypeComponent } from './type/type.component';\nimport { FormArray, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { DraftService } from '@services/draft/draft.service';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { Platform } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss'],\n  imports: [\n    CommonModule,\n    IonicModule,\n    TypeComponent,\n    TableComponent,\n    DataquestHeaderComponent,\n    ReactiveFormsModule,\n  ],\n  standalone: true,\n})\nexport class QuestionComponent {\n  currentQuestion!: FormDetail.Question;\n  formGroup!: FormGroup;\n  disabled: boolean = false;\n  alertShown: boolean = false;\n  private backButtonSubscription!: Subscription;\n\n  constructor(\n    private draftService: DraftService,\n    private detailedFormService: DetailedFormService,\n    private questionService: QuestionService,\n    private navCtrl: NavController,\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    private platform: Platform,\n    private location: Location\n  ) {}\n\n  ngOnInit() {\n    this.formGroup = this.questionService.getFormGroup();\n    this.currentQuestion = this.questionService.getFirst();\n    if (this.isSurvey()) {\n      this.disabled = true;\n    }\n    this.backButtonSubscription = this.platform.backButton.subscribeWithPriority(10, () => {\n      this.confirmExit();\n    });\n  }\n\n  ngOnDestroy() {\n    this.backButtonSubscription.unsubscribe();\n  }\n\n  private async confirmExit() {\n    var message: string = ''\n    if (this.isForm())\n      message = 'Si sale, su progreso se guardará como borrador. ¿Desea salir?';\n    else if (this.isDraft())\n      message = 'Si sale, se guardará el borrador. ¿Desea salir?';\n\n    const alert = await this.alertController.create({\n      header: '¿Desea salir?',\n      message: message,\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          cssClass: 'secondary',\n        },\n        {\n          text: 'Salir',\n          role: 'confirm',\n          cssClass: 'danger',\n          handler: () => {\n            this.location.back();\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async nextQuestion() {\n    const loading = await this.loadingController.create({\n      message: 'Cargando...',\n    });\n    await loading.present();\n    if (this.isQuestionValid()) {\n      this.saveResponse(this.currentQuestion, this.formGroup);\n      this.draftService.saveDrafts();\n      const nextQuestion = this.questionService.toggleNextQuestionFrom(\n        this.currentQuestion,\n        this.formGroup\n      );\n      if (nextQuestion) {\n        this.currentQuestion = nextQuestion;\n        if (\n          this.currentQuestion.questionCategory.name ===\n            'Capital social individual' &&\n          !this.alertShown\n        ) {\n          this.alertShown = true;\n          this.alertController\n            .create({\n              header: 'Atención',\n              subHeader: 'Capital social individual',\n              message:\n                'A continuación, pasamos a las preguntas que corresponden al componente del capital social individual del índice de desarrollo socio-organizacional.',\n              buttons: ['OK'],\n            })\n            .then((alert) => alert.present());\n        }\n      }\n    } else {\n      const type: string = this.currentQuestion.type;\n      const isTable: boolean = type === 'Tabla';\n      this.presentAlert(isTable);\n    }\n    await loading.dismiss();\n  }\n\n  // private getLastAnsweredQuestion(): FormDetail.Question {\n  //   let lastAnsweredQuestion: FormDetail.Question =\n  //     this.questionService.getFirst();\n  //   const formGroup: FormGroup = this.formGroup;\n  //   while (formGroup.controls[lastAnsweredQuestion.id.toString()].valid) {\n  //     lastAnsweredQuestion = this.questionService.getNextValidQuestionFrom(\n  //       lastAnsweredQuestion,\n  //       this.formGroup\n  //     )!;\n  //   }\n  //   return lastAnsweredQuestion;\n  // }\n\n  previousQuestion(): void {\n    const previousQuestion = this.questionService.getPreviousValidQuestionFrom(\n      this.currentQuestion,\n      this.formGroup\n    );\n    if (previousQuestion) {\n      this.currentQuestion = previousQuestion;\n    }\n  }\n\n  async presentAlert(isTable: boolean) {\n    const tableMessage: string =\n      'Por favor, responda todas las preguntas de las secciones para continuar.';\n    const genericMessage: string =\n      'Por favor, responda la pregunta para continuar.';\n    const alert = await this.alertController.create({\n      header: 'Pregunta requerida',\n      message: isTable ? tableMessage : genericMessage,\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  onSubmit() {\n    if (this.isValid()) {\n      this.saveResponse(this.currentQuestion, this.formGroup);\n      this.detailedFormService.saveSurvey();\n      this.navCtrl.pop();\n    } else {\n      this.presentAlert(false);\n    }\n  }\n\n  getCategory(): string {\n    return this.currentQuestion?.questionCategory.name;\n  }\n\n  getType(): string {\n    return this.currentQuestion?.type;\n  }\n\n  private isQuestionValid() {\n    return this.formGroup.controls[this.currentQuestion.id].valid;\n  }\n\n  private isValid() {\n    return this.formGroup.valid;\n  }\n\n  isLastQuestion(): boolean {\n    let question: FormDetail.Question = this.currentQuestion;\n    const nextQuestion: FormDetail.Question | null =\n      this.questionService.toggleNextQuestionFrom(question, this.formGroup);\n    if (!nextQuestion) {\n      return true;\n    }\n\n    return this.formGroup.controls[nextQuestion.id]!.disabled;\n  }\n\n  isFirstQuestion(): boolean {\n    let question: FormDetail.Question = this.currentQuestion;\n    let firstQuestion: FormDetail.Question = this.questionService.getFirst();\n    return question?.id === firstQuestion.id;\n  }\n\n  private saveResponse(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): void {\n    switch (question.type) {\n      case 'Abierta':\n        this.saveOpenResponse(question, formGroup);\n        break;\n      case 'Tabla':\n        this.saveTableResponse(question, formGroup);\n        break;\n      default:\n        const questionFormGroup: FormGroup = formGroup.controls[\n          question.id\n        ] as FormGroup;\n        this.saveSelection(question, questionFormGroup);\n    }\n    this.detailedFormService.updateModifyDate();\n  }\n\n  private saveTableResponse(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ) {\n    let questionFormArray: FormArray = formGroup.controls[\n      question.id\n    ] as FormArray;\n    this.currentQuestion.questionChildren.forEach((section, index) => {\n      let sectionFormGroup: FormGroup = questionFormArray.at(\n        index\n      ) as FormGroup;\n      section.forEach((child) => {\n        this.saveResponse(child, sectionFormGroup);\n      });\n    });\n  }\n\n  private saveSelection(\n    question: FormDetail.Question,\n    answersFormGroup: FormGroup\n  ) {\n    question.answers.forEach((answer) => {\n      const value: boolean =\n        answersFormGroup.controls[answer.id.toString()].value;\n      answer.checked = value;\n    });\n    if (\n      question.type === 'Múltiple respuesta con otro' ||\n      question.type === 'Única respuesta con otro'\n    ) {\n      const textAnswered: string = answersFormGroup.controls['other'].value;\n      const fullSavedString: string =\n        question.answers[question.answers.length - 1].value;\n      const savedStringArray: string[] = fullSavedString.split(':');\n\n      if (savedStringArray.length === 2) {\n        savedStringArray[1] = textAnswered;\n      } else {\n        savedStringArray.push(textAnswered);\n      }\n      question.answers[question.answers.length - 1].value =\n        savedStringArray.join(':');\n    }\n  }\n\n  private saveOpenResponse(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ) {\n    if (question.dataType === 'tel') {\n      let answersGroup: FormGroup = formGroup.controls[\n        question.id\n      ] as FormGroup;\n      question.answers.forEach((answer) => {\n        const value: string = answersGroup.controls[answer.order].value;\n        answer.value = value;\n      });\n    } else {\n      let formResponse = formGroup.controls[question.id].value;\n      let answer = question.answers[0];\n      answer.value = formResponse;\n    }\n  }\n\n  isForm(): boolean {\n    return this.detailedFormService.isForm();\n  }\n\n  isDraft(): boolean {\n    return this.detailedFormService.isDraft();\n  }\n\n  isSurvey(): boolean {\n    return this.detailedFormService.isSurvey();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n\n  \n    \n      \n        Anterior\n      \n    \n    \n      \n        Guardar\n      \n    \n    \n      \n        Siguiente\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./question.component.scss\n                \n                ion-icon {\n  font-size: 2.5em;\n  color: gray;\n  margin: 0 0.5em;\n  cursor: pointer;\n  transition: 0.3s;\n  &:hover {\n    color: #f4f4f4;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Anterior                            Guardar                            Siguiente            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionControlService.html":{"url":"injectables/QuestionControlService.html","title":"injectable - QuestionControlService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuestionControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/control/question-control.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assignFormControls\n                            \n                            \n                                    Private\n                                atLeastOneChecked\n                            \n                            \n                                    Private\n                                generateFormArray\n                            \n                            \n                                    Private\n                                generateFormControl\n                            \n                            \n                                    Private\n                                generateFormGroup\n                            \n                            \n                                    Private\n                                getFormControl\n                            \n                            \n                                    Private\n                                requiredChildrenResponse\n                            \n                            \n                                    Private\n                                requiredTableResponse\n                            \n                            \n                                    Public\n                                toFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/control/question-control.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        assignFormControls\n                        \n                    \n                \n            \n            \n                \n                        \n                    assignFormControls(question: FormDetail.Question, required: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                required\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormControl | FormArray | FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        atLeastOneChecked\n                        \n                    \n                \n            \n            \n                \n                        \n                    atLeastOneChecked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFormArray\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFormArray(question: FormDetail.Question, required: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                required\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormArray\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFormControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFormControl(question: FormDetail.Question, required: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                required\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormControl | FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFormGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFormGroup(question: FormDetail.Question, required: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                required\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getFormControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFormControl(question: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormControl | FormGroup | FormArray\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requiredChildrenResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    requiredChildrenResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requiredTableResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    requiredTableResponse()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toFormGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    toFormGroup(questions: FormDetail.Question[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/control/question-control.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                questions\n                                            \n                                                        FormDetail.Question[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionControlService {\n  constructor() {}\n\n  public toFormGroup(questions: FormDetail.Question[]): FormGroup {\n    const group: { [key: string]: FormControl | FormGroup | FormArray } = {};\n    questions.forEach((question) => {\n      group[question.id] = this.getFormControl(question);\n    });\n\n    return new FormGroup(group);\n  }\n\n  private getFormControl(\n    question: FormDetail.Question\n  ): FormControl | FormGroup | FormArray {\n    if (question.required === 1) {\n      return this.assignFormControls(question, true);\n    } else {\n      return this.assignFormControls(question, false);\n    }\n  }\n\n  private assignFormControls(\n    question: FormDetail.Question,\n    required: boolean\n  ): FormControl | FormArray | FormGroup {\n    switch (question.type) {\n      case 'Abierta':\n        return this.generateFormControl(question, required);\n      case 'Tabla':\n        return this.generateFormArray(question, required);\n      default:\n        return this.generateFormGroup(question, required);\n    }\n  }\n\n  private generateFormControl(\n    question: FormDetail.Question,\n    required: boolean\n  ): FormControl | FormGroup {\n    if (question.dataType === 'tel') {\n      const group: { [key: string]: FormControl } = {};\n      question.answers.forEach((answer) => {\n        group[answer.order] = new FormControl(answer.value, [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(10),\n        ]);\n      });\n      const formGroup: FormGroup = new FormGroup(\n        group,\n        required ? this.requiredChildrenResponse() : null\n      );\n      return formGroup;\n    }\n    return new FormControl(\n      question.answers[0].value || '',\n      required ? Validators.required : null\n    );\n  }\n\n  private generateFormGroup(question: FormDetail.Question, required: boolean): any {\n    const group: { [key: string]: FormControl } = {};\n    question.answers.forEach((answer) => {\n      group[answer.id] = new FormControl(answer.checked);\n    });\n\n    const formGroup: FormGroup = new FormGroup(\n      group,\n      required ? this.atLeastOneChecked() : null\n    );\n\n    if (\n      question.type === 'Múltiple respuesta con otro' ||\n      question.type === 'Única respuesta con otro'\n    ) {\n      let value: string =\n        question.answers[question.answers.length - 1].value.split(':')[1] || '';\n      formGroup.addControl(\n        'other',\n        new FormControl(value, Validators.required)\n      );\n    }\n    return formGroup;\n  }\n\n  private generateFormArray(question: FormDetail.Question, required: boolean): FormArray {\n    const array: FormGroup[] = [];\n    question.questionChildren.forEach((section) => {\n      const group: { [key: string]: FormControl | FormGroup | FormArray } = {};\n      section.forEach((child) => {\n        group[child.id] = this.getFormControl(child);\n      });\n\n      const formGroup: FormGroup = new FormGroup(\n        group,\n        required ? this.requiredChildrenResponse() : null\n      );\n\n      array.push(formGroup);\n    });\n\n    const formArray: FormArray = new FormArray(\n      array,\n      required ? this.requiredTableResponse() : null\n    );\n\n    return formArray;\n  }\n\n  private atLeastOneChecked(): ValidatorFn {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n      if (formGroup instanceof FormGroup) {\n        const checkboxValues = Object.values(formGroup.value);\n\n        if (checkboxValues.includes(true)) {\n          return null; // At least one checkbox is checked, validation passes\n        }\n      }\n      return { atLeastOneChecked: true }; // No checkboxes are checked, validation fails\n    };\n  }\n\n  private requiredChildrenResponse(): ValidatorFn {\n    return (formGroup: AbstractControl): ValidationErrors | null => {\n      if (formGroup instanceof FormGroup) {\n        const invalidControls = Object.keys(formGroup.controls).filter(\n          (key) => formGroup.controls[key].invalid\n        );\n\n        if (invalidControls.length > 0) {\n          return { requiredChildrenResponse: true };\n        }\n      }\n      return null;\n    };\n  }\n\n  private requiredTableResponse(): ValidatorFn {\n    return (formArray: AbstractControl): ValidationErrors | null => {\n      if (formArray instanceof FormArray) {\n        for (const formGroup of formArray.controls) {\n          if (formGroup instanceof FormGroup && !formGroup.valid) {\n            return { requiredTableResponse: true };\n          }\n        }\n      }\n      return null;\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/detailed-form/question/question.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filteredQuestions\n                            \n                            \n                                    Private\n                                originalQuestions\n                            \n                            \n                                    Private\n                                progress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                disableQuestion\n                            \n                            \n                                    Private\n                                enableQuestion\n                            \n                            \n                                getCurrentIndex\n                            \n                            \n                                getFilteredLength\n                            \n                            \n                                getFirst\n                            \n                            \n                                getFormGroup\n                            \n                            \n                                getLast\n                            \n                            \n                                    Private\n                                getNextQuestion\n                            \n                            \n                                getOriginalLength\n                            \n                            \n                                getOriginalQuestions\n                            \n                            \n                                    Private\n                                getPreviousQuestion\n                            \n                            \n                                getPreviousValidQuestionFrom\n                            \n                            \n                                getProgress\n                            \n                            \n                                setQuestions\n                            \n                            \n                                toggleNextQuestionFrom\n                            \n                            \n                                updateProgress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(questionControlService: QuestionControlService, answerRelationService: AnswerRelationService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/detailed-form/question/question.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionControlService\n                                                  \n                                                        \n                                                                        QuestionControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerRelationService\n                                                  \n                                                        \n                                                                        AnswerRelationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        disableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentIndex\n                        \n                    \n                \n            \n            \n                \ngetCurrentIndex(current: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredLength\n                        \n                    \n                \n            \n            \n                \ngetFilteredLength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirst\n                        \n                    \n                \n            \n            \n                \ngetFirst()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Question\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormGroup\n                        \n                    \n                \n            \n            \n                \ngetFormGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormGroup\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLast\n                        \n                    \n                \n            \n            \n                \ngetLast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Question\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNextQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNextQuestion(current: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOriginalLength\n                        \n                    \n                \n            \n            \n                \ngetOriginalLength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOriginalQuestions\n                        \n                    \n                \n            \n            \n                \ngetOriginalQuestions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Question[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getPreviousQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPreviousQuestion(current: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPreviousValidQuestionFrom\n                        \n                    \n                \n            \n            \n                \ngetPreviousValidQuestionFrom(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProgress\n                        \n                    \n                \n            \n            \n                \ngetProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setQuestions\n                        \n                    \n                \n            \n            \n                \nsetQuestions(questions: FormDetail.Question[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                questions\n                                            \n                                                        FormDetail.Question[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleNextQuestionFrom\n                        \n                    \n                \n            \n            \n                \ntoggleNextQuestionFrom(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProgress\n                        \n                    \n                \n            \n            \n                \nupdateProgress(currentQuestion: FormDetail.Question)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/detailed-form/question/question.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentQuestion\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filteredQuestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormDetail.Question[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/question/question.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        originalQuestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormDetail.Question[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/question/question.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        progress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/detailed-form/question/question.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { FormGroup } from '@angular/forms';\nimport { QuestionControlService } from '../control/question-control.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { AnswerRelationService } from './answer-relation/answer-relation.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionService {\n  private filteredQuestions!: FormDetail.Question[];\n  private originalQuestions!: FormDetail.Question[];\n  private progress: number = 0;\n\n  constructor(\n    private questionControlService: QuestionControlService,\n    private answerRelationService: AnswerRelationService,\n    private authService: AuthService,\n  ) {}\n\n  /*   getFilteredQuestions(): FormDetail.Question[] {\n    let filteredQuestions: FormDetail.Question[] = this.originalQuestions.filter(\n      (question) => question.questionParentId === null\n    );\n    return filteredQuestions;\n  } */\n\n  getOriginalQuestions(): FormDetail.Question[] {\n    return this.originalQuestions;\n  }\n\n  setQuestions(questions: FormDetail.Question[]): void {\n    this.originalQuestions = questions;\n    this.filteredQuestions = this.originalQuestions.filter(\n      (question) => question.questionParentId === null || question.questionParentId === undefined\n    );\n    this.filteredQuestions = this.filteredQuestions.filter(\n      async (question) =>\n        question.userTypeRestriction ===\n          (await this.authService.getUser()).type ||\n        question.userTypeRestriction === null\n    );\n    console.log(this.filteredQuestions);\n  }\n\n  getOriginalLength(): number {\n    return this.originalQuestions.length;\n  }\n\n  getFilteredLength(): number {\n    return this.filteredQuestions.length;\n  }\n\n  getFirst(): FormDetail.Question {\n    let firstQuestion: FormDetail.Question = this.filteredQuestions[0];\n    return firstQuestion;\n  }\n\n  getLast(): FormDetail.Question {\n    let lastIndex: number = this.filteredQuestions.length - 1;\n    let lastQuestion: FormDetail.Question = this.filteredQuestions[lastIndex];\n    return lastQuestion;\n  }\n\n  private getNextQuestion(current: FormDetail.Question): FormDetail.Question | null {\n    if (current !== this.getLast()) {\n      let next: FormDetail.Question =\n        this.filteredQuestions[this.getCurrentIndex(current) + 1];\n      return next;\n    }\n    return null;\n  }\n\n  toggleNextQuestionFrom(question: FormDetail.Question, formGroup: FormGroup): FormDetail.Question | null {\n    const nextQuestion: FormDetail.Question | null =\n      this.getNextQuestion(question);\n    if (!nextQuestion) {\n      return null;\n    }\n    const checkedAnswersRelation: boolean =\n      this.answerRelationService.checkAnswerRelation(nextQuestion, formGroup);\n\n    if (checkedAnswersRelation) {\n      this.enableQuestion(nextQuestion, formGroup);\n      this.updateProgress(nextQuestion);\n      return nextQuestion;\n    } else {\n      this.disableQuestion(nextQuestion, formGroup);\n      return this.toggleNextQuestionFrom(nextQuestion, formGroup);\n    }\n  }\n\n  getCurrentIndex(current: FormDetail.Question): number {\n    let currentIndex: number = this.filteredQuestions.indexOf(current);\n    return currentIndex;\n  }\n\n  private getPreviousQuestion(current: FormDetail.Question): FormDetail.Question | null {\n    if (current !== this.getFirst()) {\n      let previous: FormDetail.Question =\n        this.filteredQuestions[this.getCurrentIndex(current) - 1];\n      return previous;\n    }\n    return null;\n  }\n\n  getPreviousValidQuestionFrom(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): FormDetail.Question | null {\n    const previousQuestion: FormDetail.Question | null =\n      this.getPreviousQuestion(question);\n    if (!previousQuestion) {\n      return null;\n    }\n    const id: string = previousQuestion.id.toString();\n    const disabled: boolean = formGroup.get(id)!.disabled;\n\n    if (disabled) {\n      return this.getPreviousValidQuestionFrom(previousQuestion, formGroup);\n    } else {\n      this.updateProgress(previousQuestion);\n      return previousQuestion;\n    }\n  }\n\n  getProgress(): number {\n    return this.progress;\n  }\n\n  updateProgress(currentQuestion: FormDetail.Question): void {\n    let currentPosition: number = this.getCurrentIndex(currentQuestion) + 1;\n    let length: number = this.getFilteredLength();\n    let currentProgress: number = currentPosition / length;\n    this.progress = currentProgress;\n  }\n\n  getFormGroup(): FormGroup {\n    return this.questionControlService.toFormGroup(this.filteredQuestions);\n  }\n\n  private enableQuestion(question: FormDetail.Question, formGroup: FormGroup): void {\n    this.answerRelationService.enableQuestion(question, formGroup);\n  }\n\n  private disableQuestion(question: FormDetail.Question, formGroup: FormGroup): void {\n    this.answerRelationService.disableQuestion(question, formGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SecureInnerPagesGuard.html":{"url":"injectables/SecureInnerPagesGuard.html","title":"injectable - SecureInnerPagesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SecureInnerPagesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/guards/secure-inner-pages/secure-inner-pages.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/secure-inner-pages/secure-inner-pages.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/secure-inner-pages/secure-inner-pages.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SecureInnerPagesGuard {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate() {\n\n    const logged = this.authService.isLogged();\n\n    if (!logged) {\n      this.authService.logout();\n      this.router.navigate(['/login']);\n    }\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/storage/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                keys\n                            \n                            \n                                    Async\n                                length\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                set\n                            \n                            \n                                showStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/storage/storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        keys\n                        \n                    \n                \n            \n            \n                \n                        \n                    keys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        length\n                        \n                    \n                \n            \n            \n                \n                        \n                    length()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showStorage\n                        \n                    \n                \n            \n            \n                \nshowStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage/storage.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/storage/storage.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage-angular';\nimport CordovaSQLiteDriver from 'localforage-cordovasqlitedriver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  private _storage: Storage | null = null;\n\n  constructor(private storage: Storage) {\n    this.init();\n  }\n\n  async init() {\n    await this.storage.defineDriver(CordovaSQLiteDriver);\n    const storage = await this.storage.create();\n    this._storage = storage;\n    this.length().then((length) => {\n      console.log('Storage length:', length);\n    });\n    this.keys().then((keys) => {\n      console.log('Storage keys:', keys);\n    });\n    this.showStorage();\n  }\n\n  async set(key: string, value: any) {\n    await this._storage?.set(key, value);\n  }\n\n  async get(key: string) {\n    return await this._storage?.get(key);\n  }\n\n  async remove(key: string){\n    return await this._storage?.remove(key);\n  }\n\n  async length() {\n    return await this._storage?.length();\n  }\n\n  async keys() {\n    return await this._storage?.keys();\n  }\n\n  showStorage() {\n    this._storage?.forEach((value, key, index) => {\n      console.log('Key:', key);\n      console.log('Index:', index);\n      console.log('Value:', value);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoredRequest.html":{"url":"interfaces/StoredRequest.html","title":"interface - StoredRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoredRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/offline-manager/offline-manager.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@capacitor/core';\nimport { ToastController } from '@ionic/angular';\nimport { ApiService } from '@services/api/api.service';\nimport { StorageService } from '@services/storage/storage.service';\nimport { Observable, from, of, forkJoin } from 'rxjs';\nimport { switchMap, finalize } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OfflineManagerService {\n  constructor(\n    private storageService: StorageService,\n    private apiService: ApiService,\n    private toastController: ToastController\n  ) {}\n\n  public checkForEvents(): Observable {\n    return from(this.storageService.get(STORAGE_REQ_KEY)).pipe(\n      switchMap((storedOperations: StoredRequest[]) => {\n        let storedObj: StoredRequest[] = storedOperations;\n        if (storedObj && storedObj.length > 0) {\n          return this.sendRequests(storedObj).pipe(\n            finalize(() => {\n              let toast = this.toastController.create({\n                message: `Local data succesfully synced to API!`,\n                duration: 3000,\n                position: 'bottom',\n              });\n              toast.then((toast) => toast.present());\n              this.storageService.remove(STORAGE_REQ_KEY);\n            })\n          );\n        } else {\n          console.log('no local events to sync');\n          return of(false);\n        }\n      })\n    );\n  }\n\n  public async storeRequest(url: string, data: any): Promise {\n    let toast = this.toastController.create({\n      message: `Your data is stored locally because you seem to be offline.`,\n      duration: 3000,\n      position: 'bottom',\n    });\n    toast.then((toast) => toast.present());\n\n    const action: StoredRequest = {\n      url: url,\n      data: data,\n      time: new Date().getTime(),\n      id: uuidv4(),\n    };\n\n    return this.storageService.get(STORAGE_REQ_KEY).then((storedOperations) => {\n      let storedObj: StoredRequest[] = JSON.parse(storedOperations);\n      if (storedObj) {\n        storedObj.push(action);\n      } else {\n        storedObj = [action];\n      }\n      return this.storageService.set(\n        STORAGE_REQ_KEY,\n        JSON.stringify(storedObj)\n      );\n    });\n  }\n\n  private sendRequests(\n    operations: StoredRequest[]\n  ): Observable {\n    let obs = [];\n    for (let op of operations) {\n      console.log('Make one request: ', op);\n      let oneObs = this.apiService.post(op.url, op.data);\n      obs.push(oneObs);\n    }\n    return forkJoin(obs);\n  }\n}\n\nconst STORAGE_REQ_KEY: string = 'storedreq';\n\ninterface StoredRequest {\n  url: string;\n  data: any;\n  time: number;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SurveyService.html":{"url":"injectables/SurveyService.html","title":"injectable - SurveyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SurveyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/survey/survey.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                online\n                            \n                            \n                                    Private\n                                surveys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addNetworkChangeListener\n                            \n                            \n                                    Private\n                                changeSyncStatus\n                            \n                            \n                                    Public\n                                getLocalSurveys\n                            \n                            \n                                    Private\n                                getNetworkStatus\n                            \n                            \n                                    Public\n                                getSurveys\n                            \n                            \n                                    Private\n                                    Async\n                                presentAlert\n                            \n                            \n                                    Public\n                                pushSurvey\n                            \n                            \n                                    Public\n                                removeAllListeners\n                            \n                            \n                                    Public\n                                saveSurveys\n                            \n                            \n                                    Public\n                                syncSurveys\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, alertController: AlertController, storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/survey/survey.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addNetworkChangeListener\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNetworkChangeListener()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeSyncStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeSyncStatus(survey: FormDetail.Form, status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                survey\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLocalSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLocalSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNetworkStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNetworkStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        presentAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentAlert()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pushSurvey\n                        \n                    \n                \n            \n            \n                \n                        \n                    pushSurvey(survey: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                survey\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        removeAllListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeAllListeners()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        syncSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/survey/survey.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        online\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/survey/survey.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        surveys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormDetail.Form[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/survey/survey.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { StorageService } from '../storage/storage.service';\nimport { ApiService } from '../api/api.service';\nimport { Network } from '@capacitor/network';\nimport { AlertController } from '@ionic/angular';\nimport { Observable, catchError, forkJoin, from, mergeMap, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SurveyService {\n  private online: boolean = false;\n  private surveys: FormDetail.Form[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private alertController: AlertController,\n    private storageService: StorageService\n  ) { }\n\n  public pushSurvey(survey: FormDetail.Form): void {\n    const copy = JSON.parse(JSON.stringify(survey));\n    this.surveys.push(copy);\n    this.saveSurveys();\n  }\n\n  public addNetworkChangeListener(): void {\n    Network.addListener('networkStatusChange', (status) => {\n      console.log('Network status changed', status);\n      this.online = status.connected;\n      console.log('Online status is:', this.online);\n    });\n  }\n\n  private getNetworkStatus(): void {\n    Network.getStatus().then((status) => {\n      console.log('Network status:', status.connected);\n      this.online = status.connected;\n      console.log('Online status is:', this.online);\n    });\n  }\n\n  public removeAllListeners(): void {\n    Network.removeAllListeners();\n  }\n\n  public getLocalSurveys(): void {\n    this.storageService.get(SURVEYS_STORAGE_KEY).then((surveys) => {\n      this.surveys = surveys || [];\n    });\n  }\n\n  public getSurveys(): FormDetail.Form[] {\n    return this.surveys;\n  }\n\n  public saveSurveys(): void {\n    this.storageService.set(SURVEYS_STORAGE_KEY, this.surveys);\n  }\n\n  public syncSurveys(): void {\n    if (this.online) {\n      const surveysToSync: FormDetail.Form[] = this.surveys.filter((survey) => !survey.sync);\n      const syncRequests: Observable[] = surveysToSync.map((survey) => {\n        return from(this.apiService.post(ENDPOINT, survey)).pipe(\n          mergeMap((response) => {\n            console.log(response)\n            return of(response.status === 200 ? survey : undefined);\n          }),\n          catchError((error) => {\n            console.error(error)\n            return of(undefined)\n          })\n        );\n      });\n\n      forkJoin(syncRequests).subscribe((syncResults: (FormDetail.Form | undefined)[]) => {\n        const updatedSurveys: FormDetail.Form[] = this.surveys.map((survey) => {\n          const syncedSurvey = syncResults.find((syncResult) => syncResult?.id === survey.id);\n          if (syncedSurvey) {\n            survey.sync = true;\n          }\n\n          return survey;\n        });\n        console.log(updatedSurveys)\n        this.surveys = updatedSurveys;\n        this.saveSurveys();\n      });\n    } else {\n      this.presentAlert();\n    }\n  }\n\n  private async presentAlert(): Promise {\n    const alert = await this.alertController.create({\n      header: 'No hay conexión a internet',\n      message: 'Por favor, conéctese a internet para sincronizar las encuestas',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  private changeSyncStatus(survey: FormDetail.Form, status: boolean): void {\n    const index = this.surveys.indexOf(survey);\n    this.surveys[index].sync = status; //TODO save into storage\n  }\n}\n\nconst SURVEYS_STORAGE_KEY = 'uploadSurveys';\nconst ENDPOINT = SURVEYS_STORAGE_KEY;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SurveysPage.html":{"url":"components/SurveysPage.html","title":"component - SurveysPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SurveysPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/surveys/surveys.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-surveys\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                surveys.page.scss\n            \n\n\n\n            \n                templateUrl\n                surveys.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSurveys\n                            \n                            \n                                getSyncedRatio\n                            \n                            \n                                getSyncedSurveys\n                            \n                            \n                                getUnsyncedRatio\n                            \n                            \n                                getUnsyncedSurveys\n                            \n                            \n                                goToDetail\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(surveyService: SurveyService, detailedFormService: DetailedFormService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/surveys/surveys.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        surveyService\n                                                  \n                                                        \n                                                                        SurveyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSurveys\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSyncedRatio\n                        \n                    \n                \n            \n            \n                \ngetSyncedRatio()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSyncedSurveys\n                        \n                    \n                \n            \n            \n                \ngetSyncedSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUnsyncedRatio\n                        \n                    \n                \n            \n            \n                \ngetUnsyncedRatio()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUnsyncedSurveys\n                        \n                    \n                \n            \n            \n                \ngetUnsyncedSurveys()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         FormDetail.Form[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToDetail\n                        \n                    \n                \n            \n            \n                \ngoToDetail(survey: FormDetail.Form)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                survey\n                                            \n                                                            FormDetail.Form\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ionViewWillEnter\n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/surveys/surveys.page.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { FormListComponent } from '@components/form-list/form-list.component';\nimport { SurveyService } from '@services/survey/survey.service';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-surveys',\n  templateUrl: 'surveys.page.html',\n  styleUrls: ['surveys.page.scss'],\n  standalone: true,\n  imports: [ IonicModule, CommonModule ],\n})\nexport class SurveysPage {\n\n  constructor(\n    private surveyService: SurveyService,\n    private detailedFormService: DetailedFormService,\n    private router: Router\n  ) {}\n\n  ionViewWillEnter() {\n    this.surveyService.getLocalSurveys();\n  }\n\n  private getSurveys(): FormDetail.Form[] {\n    return this.surveyService.getSurveys();\n  }\n\n  getSyncedSurveys(): FormDetail.Form[] {\n    const surveys: FormDetail.Form[] = this.getSurveys();\n    return surveys.filter((survey) => survey.sync);\n  }\n\n  getUnsyncedSurveys(): FormDetail.Form[] {\n    const surveys: FormDetail.Form[] = this.getSurveys();\n    return surveys.filter((survey) => !survey.sync);\n  }\n\n  goToDetail(survey: FormDetail.Form): void {\n    this.detailedFormService.setForm(survey, false, false, true);\n    this.router.navigate(['detail']);\n  }\n\n  getSyncedRatio(): string {\n    const surveys: FormDetail.Form[] = this.getSurveys();\n    const syncedSurveys: FormDetail.Form[] = this.getSyncedSurveys();\n    return `${syncedSurveys.length} / ${surveys.length}`;\n  }\n\n  getUnsyncedRatio(): string {\n    const surveys: FormDetail.Form[] = this.getSurveys();\n    const unsyncedSurveys: FormDetail.Form[] = this.getUnsyncedSurveys();\n    return `${unsyncedSurveys.length} / ${surveys.length}`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Sincronizadas {{ getSyncedRatio() }}\n        \n      \n    \n    \n      \n      \n        # {{ syncedSurvey.uuid }}\n        {{ syncedSurvey.name }}\n        Finaliza el {{ syncedSurvey.dateEnd }}\n        {{ syncedSurvey.questions[0].answers[0].value }}\n      \n       {{ syncedSurvey.description }} \n      \n        \n      \n    \n  \n  \n    \n      \n        \n          Sin sincronizar {{ getUnsyncedRatio() }}\n        \n      \n    \n    \n      \n      \n        # {{ unsyncedSurvey.uuid }}\n        {{ unsyncedSurvey.name }}\n        Finaliza el {{ unsyncedSurvey.dateEnd }}\n        {{ unsyncedSurvey.questions[0].answers[0].value }}\n      \n       {{ unsyncedSurvey.description }} \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    surveys.page.scss\n                \n                #uuid {\n  font-size: x-small;\n}\n\nion-icon {\n  float: right;\n  font-size: xx-large;\n}\n\nion-accordion::part(content) {\n  min-height: fit-content;\n  max-height: 67vh;\n  overflow-y: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Sincronizadas {{ getSyncedRatio() }}                                          # {{ syncedSurvey.uuid }}        {{ syncedSurvey.name }}        Finaliza el {{ syncedSurvey.dateEnd }}        {{ syncedSurvey.questions[0].answers[0].value }}             {{ syncedSurvey.description }}                                                         Sin sincronizar {{ getUnsyncedRatio() }}                                          # {{ unsyncedSurvey.uuid }}        {{ unsyncedSurvey.name }}        Finaliza el {{ unsyncedSurvey.dateEnd }}        {{ unsyncedSurvey.questions[0].answers[0].value }}             {{ unsyncedSurvey.description }}                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SurveysPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/table/table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                TypeComponent\n                            RxFor\n                \n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSection\n                            \n                            \n                                    Private\n                                changeQuestionId\n                            \n                            \n                                    Private\n                                disableQuestion\n                            \n                            \n                                    Private\n                                enableQuestion\n                            \n                            \n                                getCategory\n                            \n                            \n                                getChildQuestion\n                            \n                            \n                                getFormGroup\n                            \n                            \n                                getOrder\n                            \n                            \n                                getQuestionChildren\n                            \n                            \n                                getText\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preloadSelectedAnswers\n                            \n                            \n                                removeSection\n                            \n                            \n                                showQuestion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(answerRelationService: AnswerRelationService, questionControlService: QuestionControlService, detailedFormService: DetailedFormService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/table/table.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerRelationService\n                                                  \n                                                        \n                                                                        AnswerRelationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionControlService\n                                                  \n                                                        \n                                                                        QuestionControlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/table/table.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/table/table.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/table/table.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSection\n                        \n                    \n                \n            \n            \n                \naddSection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeQuestionId\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeQuestionId(base: FormDetail.Question[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                base\n                                            \n                                                        FormDetail.Question[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        disableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        enableQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableQuestion(question: FormDetail.Question, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n                                            \n                                                        FormDetail.Question\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChildQuestion\n                        \n                    \n                \n            \n            \n                \ngetChildQuestion(sectionIndex: number, childIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sectionIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                childIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormGroup\n                        \n                    \n                \n            \n            \n                \ngetFormGroup(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrder\n                        \n                    \n                \n            \n            \n                \ngetOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQuestionChildren\n                        \n                    \n                \n            \n            \n                \ngetQuestionChildren()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     [][]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getText\n                        \n                    \n                \n            \n            \n                \ngetText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        preloadSelectedAnswers\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadSelectedAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSection\n                        \n                    \n                \n            \n            \n                \nremoveSection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showQuestion\n                        \n                    \n                \n            \n            \n                \nshowQuestion(childIndex: number, sectionIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/table/table.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                childIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sectionIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace';\nimport { TypeComponent } from '../type.component';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { AnswerRelationService } from '@services/detailed-form/question/answer-relation/answer-relation.service';\nimport { QuestionControlService } from '@services/detailed-form/control/question-control.service';\nimport { RxFor } from '@rx-angular/template/for';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n  standalone: true,\n  imports: [CommonModule, IonicModule, TypeComponent, RxFor],\n})\nexport class TableComponent {\n  @Input({ required: true }) question!: any;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(\n    private answerRelationService: AnswerRelationService,\n    private questionControlService: QuestionControlService,\n    private detailedFormService: DetailedFormService\n  ) {}\n\n  ngOnInit() {\n    if (this.question.order === 5) {\n      this.disabled = true;\n      this.preloadSelectedAnswers();\n    }\n  }\n\n  private preloadSelectedAnswers() {\n    const selectedAnswers: Beneficiary.SelectedQuestions =\n      this.detailedFormService.getForm().beneficiary.recommendedActions;\n    const formArray: FormArray = this.formGroup.controls[\n      this.question.id\n    ] as FormArray;\n    const sectionFormGroup: FormGroup = formArray.at(0) as FormGroup;\n    console.log('selectedAnswers', selectedAnswers);\n    Object.keys(sectionFormGroup.controls).forEach((key) => {\n      const answersFormGroup: FormGroup = sectionFormGroup.get(\n        key\n      ) as FormGroup;\n      const answersControls: string[] = Object.keys(answersFormGroup.controls);\n      const answerFormGroupKey: string = selectedAnswers[key]\n        ? answersControls[0]\n        : answersControls[1];\n      answersFormGroup.get(answerFormGroupKey)?.setValue(true);\n      console.log('selectedAnswer', selectedAnswers[key]);\n    });\n  }\n\n  addSection() {\n    const formArray: FormArray = this.formGroup.controls[\n      this.question.id\n    ] as FormArray;\n    let baseArrayCopy: FormDetail.Question[] = JSON.parse(\n      JSON.stringify(this.question.questionChildren[0])\n    );\n    this.changeQuestionId(baseArrayCopy);\n    const newFormGroup: FormGroup =\n      this.questionControlService.toFormGroup(baseArrayCopy);\n    newFormGroup.reset();\n    formArray.push(newFormGroup);\n    this.question.questionChildren.push(baseArrayCopy);\n  }\n\n  private changeQuestionId(base: FormDetail.Question[]) {\n    base.forEach((question) => {\n      const newId: string = `${this.question.questionChildren.length}-${question.id}`;\n      base.forEach((q) => {\n        q.answersRelation.forEach((ar) => {\n          if (ar.questionId === question.id) {\n            ar.questionId = newId;\n          }\n        });\n      });\n      question.id = newId;\n    });\n  }\n\n  removeSection() {\n    if (this.question.questionChildren.length > 1) {\n      const formArray: FormArray = this.formGroup.controls[\n        this.question.id\n      ] as FormArray;\n      formArray.removeAt(formArray.length - 1);\n      this.question.questionChildren.pop();\n    }\n  }\n\n  getQuestionChildren(): FormDetail.Question[][] {\n    return this.question.questionChildren;\n  }\n\n  getText(): string {\n    return this.question.text;\n  }\n\n  getOrder(): number {\n    return this.question.order;\n  }\n\n  getCategory(): string {\n    return this.question.questionCategory.name;\n  }\n\n  getFormGroup(index: number): FormGroup {\n    const formArray: FormArray = this.formGroup.controls[\n      this.question.id\n    ] as FormArray;\n    return formArray.at(index) as FormGroup;\n  }\n\n  getChildQuestion(\n    sectionIndex: number,\n    childIndex: number\n  ): FormDetail.Question {\n    const questionChildren: FormDetail.Question[][] =\n      this.question.questionChildren;\n    return questionChildren[sectionIndex][childIndex];\n  }\n\n  showQuestion(childIndex: number, sectionIndex: number) {\n    const childQuestion: FormDetail.Question = this.getChildQuestion(\n      sectionIndex,\n      childIndex\n    );\n    const sectionFormGroup: FormGroup = this.getFormGroup(sectionIndex);\n    let checkedAnswersRelation: boolean = false;\n    if (childQuestion) {\n      checkedAnswersRelation = this.answerRelationService.checkAnswerRelation(\n        childQuestion,\n        sectionFormGroup\n      );\n\n      checkedAnswersRelation\n        ? this.enableQuestion(childQuestion, sectionFormGroup)\n        : this.disableQuestion(childQuestion, sectionFormGroup);\n    }\n\n    return checkedAnswersRelation;\n  }\n\n  /*   showQuestion(id: number, i: number): boolean {\n    const questionId: string = id.toString();\n    const enabled: boolean = this.getFormGroup(i).get(questionId)!.enabled;\n    console.log('enabled: ', enabled)\n    return enabled\n  } */\n\n  private enableQuestion(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): void {\n    this.answerRelationService.enableQuestion(question, formGroup);\n  }\n\n  private disableQuestion(\n    question: FormDetail.Question,\n    formGroup: FormGroup\n  ): void {\n    this.answerRelationService.disableQuestion(question, formGroup);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ getCategory() }}\n      \n        {{ getOrder() }}. {{ getText() }}\n      \n    \n    \n      \n        \n          \n            Sección {{ sectionIndex + 1 }}\n          \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      \n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ getCategory() }}              {{ getOrder() }}. {{ getText() }}                                                  Sección {{ sectionIndex + 1 }}                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextAreaDataTypeComponent.html":{"url":"components/TextAreaDataTypeComponent.html","title":"component - TextAreaDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextAreaDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-area-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./text-area-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-area-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\n\n@Component({\n  selector: 'app-text-area-data-type',\n  templateUrl: './text-area-data-type.component.html',\n  styleUrls: ['./text-area-data-type.component.scss'],\n  standalone : true,\n  imports: [ IonicModule, ReactiveFormsModule ],\n})\nexport class TextAreaDataTypeComponent  implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  getValue(): string {\n    return this.formGroup.get(`${this.question.id}`)?.value;\n  }\n\n  setValue(event: any) {\n    this.formGroup.get(`${this.question.id}`)?.setValue(event.target.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./text-area-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextAreaDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextDataTypeComponent.html":{"url":"components/TextDataTypeComponent.html","title":"component - TextDataTypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextDataTypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/open/text-data-type/text-data-type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-data-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                                ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./text-data-type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-data-type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAssociation\n                            \n                            \n                                getValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preloadValue\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detailedFormService: DetailedFormService, associationService: AssociationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAssociation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAssociation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Beneficiary.Association | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        preloadValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/open/text-data-type/text-data-type.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { AssociationService } from '@services/association/association.service';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\n\n@Component({\n  selector: 'app-text-data-type',\n  templateUrl: './text-data-type.component.html',\n  styleUrls: ['./text-data-type.component.scss'],\n  standalone: true,\n  imports: [IonicModule, ReactiveFormsModule],\n})\nexport class TextDataTypeComponent implements OnInit {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  constructor(\n    private detailedFormService: DetailedFormService,\n    private associationService: AssociationService\n  ) {}\n\n  ngOnInit() {}\n\n  getValue(): string {\n    this.preloadValue();\n    return this.formGroup.get(`${this.question.id}`)?.value;\n  }\n\n  setValue(event: any) {\n    this.formGroup.get(`${this.question.id}`)?.setValue(event.target.value);\n  }\n\n  private preloadValue(): void {\n    const isAssociationQuestion: boolean =\n      this.question.text === 'Asociación a la que pertenece';\n\n    const association: Beneficiary.Association | undefined = this.getAssociation();\n\n    const formControl: FormControl = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormControl;\n    if (isAssociationQuestion) {\n      if (association) {\n        formControl.setValue(association.name);\n        this.disabled = true;\n      }\n    }\n  }\n\n  private getAssociation(): Beneficiary.Association | undefined {\n    const associationId: number =\n      this.detailedFormService.getForm().beneficiary.associationId;\n\n    const association: Beneficiary.Association | undefined =\n      this.associationService.getAssociationById(associationId);\n\n    return association;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./text-data-type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextDataTypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeComponent.html":{"url":"components/TypeComponent.html","title":"component - TypeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TypeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/type.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-type\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                AutocompleteComponent\n                                OpenComponent\n                                MultipleComponent\n                                UniqueComponent\n                \n            \n\n            \n                styleUrls\n                ./type.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCategory\n                            \n                            \n                                getDataType\n                            \n                            \n                                getOrder\n                            \n                            \n                                getText\n                            \n                            \n                                getType\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/type.component.ts:29\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/type.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/type.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/type.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataType\n                        \n                    \n                \n            \n            \n                \ngetDataType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrder\n                        \n                    \n                \n            \n            \n                \ngetOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getText\n                        \n                    \n                \n            \n            \n                \ngetText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getType\n                        \n                    \n                \n            \n            \n                \ngetType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/type.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { OpenComponent } from './open/open.component';\nimport { MultipleComponent } from './multiple/multiple.component';\nimport { UniqueComponent } from './unique/unique.component';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-type',\n  templateUrl: './type.component.html',\n  styleUrls: ['./type.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    IonicModule,\n    AutocompleteComponent,\n    OpenComponent,\n    MultipleComponent,\n    UniqueComponent\n  ]\n})\nexport class TypeComponent implements OnInit {\n\n  @Input({ required: true }) question!: FormDetail.Question\n  @Input({ required: true }) formGroup!: FormGroup\n  @Input({ required: true }) disabled!: boolean\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getCategory(): string {\n    return this.question?.questionCategory.name;\n  }\n\n  getType(): string {\n    return this.question?.type;\n  }\n\n  getDataType(): string { // TODO move this method to open component\n    return this.question?.dataType;\n  }\n\n  getText(): string {\n    return this.question?.text;\n  }\n\n  getOrder(): number {\n    return this.question?.order;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ getCategory() }}\n    \n      {{ getOrder() }}. {{ getText() }}\n    \n  \n\n  \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./type.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ getCategory() }}          {{ getOrder() }}. {{ getText() }}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TypeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeaheadComponent.html":{"url":"components/TypeaheadComponent.html","title":"component - TypeaheadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TypeaheadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/typeahead/typeahead.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-typeahead\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                            RxFor\n                \n            \n\n            \n                styleUrls\n                ./typeahead.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./typeahead.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredItems\n                            \n                            \n                                workingSelectedValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelChanges\n                            \n                            \n                                confirmChanges\n                            \n                            \n                                filterList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchbarInput\n                            \n                            \n                                select\n                            \n                            \n                                trackItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                selectedItem\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionCancel\n                            \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/typeahead/typeahead.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedItem\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Selecciona uno'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionCancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/typeahead/typeahead.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelChanges\n                        \n                    \n                \n            \n            \n                \ncancelChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmChanges\n                        \n                    \n                \n            \n            \n                \nconfirmChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterList\n                        \n                    \n                \n            \n            \n                \nfilterList(searchQuery: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Update the rendered view with\nthe provided search query. If no\nquery is provided, all data\nwill be rendered.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchQuery\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchbarInput\n                        \n                    \n                \n            \n            \n                \nsearchbarInput(ev: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n            \n                \nselect(item: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackItems\n                        \n                    \n                \n            \n            \n                \ntrackItems(index: number, item: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/typeahead/typeahead.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                item\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/typeahead/typeahead.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workingSelectedValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/typeahead/typeahead.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IonicModule, Platform } from '@ionic/angular';\nimport { RxFor } from \"@rx-angular/template/for\";\n\n@Component({\n  selector: 'app-typeahead',\n  templateUrl: './typeahead.component.html',\n  styleUrls: ['./typeahead.component.scss'],\n  standalone: true,\n  imports: [ CommonModule, IonicModule, RxFor],\n})\nexport class TypeaheadComponent {\n  @Input() items: string[] = [];\n  @Input() selectedItem: string = '';\n  @Input() title = 'Selecciona uno';\n\n  @Output() selectionCancel = new EventEmitter();\n  @Output() selectionChange = new EventEmitter();\n\n  filteredItems: string[] = [];\n  workingSelectedValue: string = '';\n\n  constructor(private platform: Platform) {}\n\n  ngOnInit() {\n    this.filteredItems = [...this.items];\n  }\n\n  select(item: string) {\n    this.workingSelectedValue = item;\n    this.confirmChanges();\n  }\n\n  trackItems(index: number, item: string) {\n    return item;\n  }\n\n  cancelChanges() {\n    this.selectionCancel.emit();\n  }\n\n  confirmChanges() {\n    this.selectionChange.emit(this.workingSelectedValue);\n  }\n\n  searchbarInput(ev: any) {\n    this.filterList(ev.target.value);\n  }\n\n  /**\n   * Update the rendered view with\n   * the provided search query. If no\n   * query is provided, all data\n   * will be rendered.\n   */\n  filterList(searchQuery: string | undefined) {\n    /**\n     * If no search query is defined,\n     * return all options.\n     */\n    if (searchQuery === undefined) {\n      this.filteredItems = [...this.items];\n    } else {\n      /**\n       * Otherwise, normalize the search\n       * query and check to see which items\n       * contain the search query as a substring.\n       */\n      const normalizedQuery = searchQuery.toLowerCase();\n      this.filteredItems = this.items.filter((item) => {\n        return item.toLowerCase().includes(normalizedQuery);\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Cancelar\n    \n    {{ title }}\n    \n      Hecho\n    \n  \n  \n    \n  \n\n\n\n  \n    \n      {{ item }}\n    \n  \n\n\n    \n\n    \n                \n                    ./typeahead.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Cancelar        {{ title }}          Hecho                          {{ item }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TypeaheadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UniqueComponent.html":{"url":"components/UniqueComponent.html","title":"component - UniqueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UniqueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/type/unique/unique.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-unique\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            IonicModule\n                                ReactiveFormsModule\n                                AutocompleteComponent\n                \n            \n\n            \n                styleUrls\n                ./unique.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./unique.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                farming\n                            \n                            \n                                other\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeInputState\n                            \n                            \n                                getAnswers\n                            \n                            \n                                    Private\n                                getCheckedAnswerId\n                            \n                            \n                                getOtherErrorMessage\n                            \n                            \n                                getOtherPlaceholder\n                            \n                            \n                                getOtherValue\n                            \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                isLastAnswer\n                            \n                            \n                                isOtherInvalid\n                            \n                            \n                                    Private\n                                loadOtherControl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                preloadFarmingValue\n                            \n                            \n                                    Private\n                                searchAnswerIdByFarming\n                            \n                            \n                                    Private\n                                setCheckedValue\n                            \n                            \n                                setOtherValue\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formGroup\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detailedFormService: DetailedFormService, questionService: QuestionService, assoaciationService: AssociationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/type/unique/unique.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detailedFormService\n                                                  \n                                                        \n                                                                        DetailedFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assoaciationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/unique/unique.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formGroup\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/unique/unique.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n                \n                    \n                        Type :     FormDetail.Question\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/question/type/unique/unique.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeInputState\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeInputState(answerGroup: FormGroup, id: string, value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answerGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAnswers\n                        \n                    \n                \n            \n            \n                \ngetAnswers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormDetail.Answer[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCheckedAnswerId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCheckedAnswerId(answersFormGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetOtherErrorMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherPlaceholder\n                        \n                    \n                \n            \n            \n                \ngetOtherPlaceholder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:183\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherValue\n                        \n                    \n                \n            \n            \n                \ngetOtherValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLastAnswer\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLastAnswer(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOtherInvalid\n                        \n                    \n                \n            \n            \n                \nisOtherInvalid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadOtherControl\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadOtherControl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        preloadFarmingValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    preloadFarmingValue(answersFormGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        searchAnswerIdByFarming\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAnswerIdByFarming()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setCheckedValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCheckedValue(answersFormGroup: FormGroup, id: string, value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answersFormGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOtherValue\n                        \n                    \n                \n            \n            \n                \nsetOtherValue(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/question/type/unique/unique.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        farming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/unique/unique.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        other\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/question/type/unique/unique.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { InputChangeEventDetail, InputCustomEvent, IonicModule } from '@ionic/angular';\nimport { FormDetail } from '@models/FormDetail.namespace'\nimport { AutocompleteComponent } from '../autocomplete/autocomplete.component';\nimport { DetailedFormService } from '@services/detailed-form/detailed-form.service';\nimport { AssociationService } from '@services/association/association.service';\nimport { Beneficiary } from '@models/Beneficiary.namespace';\nimport { QuestionService } from '@services/detailed-form/question/question.service';\n\n@Component({\n  selector: 'app-unique',\n  templateUrl: './unique.component.html',\n  styleUrls: ['./unique.component.scss'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    AutocompleteComponent,\n  ],\n})\nexport class UniqueComponent implements OnInit {\n  @Input({ required: true }) question!: FormDetail.Question;\n  @Input({ required: true }) formGroup!: FormGroup;\n  @Input({ required: true }) disabled!: boolean;\n\n  other: boolean = false;\n  farming: boolean = false;\n\n  constructor(\n    private detailedFormService: DetailedFormService,\n    private questionService: QuestionService,\n    private assoaciationService: AssociationService\n  ) {}\n\n  ngOnInit() {}\n\n  getAnswers(): FormDetail.Answer[] {\n    return this.question.answers;\n  }\n\n  setValue(event: any): void {\n    const formGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n\n    const id: string = event.detail.value;\n\n    this.setCheckedValue(formGroup, id, true);\n    this.questionService.toggleNextQuestionFrom(this.question, this.formGroup);\n  }\n\n  getValue(): string {\n    const answersFormGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n\n    this.preloadFarmingValue(answersFormGroup);\n\n    const { answerId, answerValue } = this.getCheckedAnswerId(answersFormGroup);\n    if (answerId !== 'other')\n      this.changeInputState(answersFormGroup, answerId, answerValue);\n\n    return answerId;\n  }\n\n  private getCheckedAnswerId(answersFormGroup: FormGroup): {\n    answerId: string;\n    answerValue: boolean;\n  } {\n    let answerId: string = '';\n    let answerValue: boolean = false;\n\n    for (const key in answersFormGroup.controls) {\n      const value = answersFormGroup.controls[key].value;\n      if (value && key !== 'other') {\n        answerId = key;\n        answerValue = value;\n      }\n    }\n\n    return { answerId, answerValue };\n  }\n\n  private setCheckedValue(\n    answersFormGroup: FormGroup,\n    id: string,\n    value: boolean\n  ): void {\n    for (const key in answersFormGroup.controls) {\n      if (key === id && key !== 'other') {\n        this.changeInputState(answersFormGroup, id, value);\n        answersFormGroup.controls[key].setValue(value);\n      } else if (key !== 'other') {\n        answersFormGroup.controls[key].setValue(!value);\n      }\n    }\n  }\n\n  private preloadFarmingValue(answersFormGroup: FormGroup): void {\n    const isFarmingQuestion: boolean =\n      this.question.text === 'Cultivo Priorizado';\n        if (isFarmingQuestion) {\n      const answerIdToCheck: string = this.searchAnswerIdByFarming();\n      this.setCheckedValue(answersFormGroup, answerIdToCheck, true);\n      this.farming = true;\n    } else {\n      this.farming = false;\n    }\n  }\n\n  private searchAnswerIdByFarming(): string {\n    const associationId: number =\n      this.detailedFormService.getForm().beneficiary.associationId;\n\n    const association: Beneficiary.Association | undefined =\n      this.assoaciationService.getAssociationById(associationId);\n\n    const associationFarming: string =\n      association!.farming;\n\n    const answer: FormDetail.Answer = this.question.answers.find(\n      (answer) => answer.value.toLowerCase() === associationFarming.toLowerCase()\n    )!;\n\n    return answer.id.toString();\n  }\n\n  getOtherValue(): string {\n    this.loadOtherControl();\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherValue: string = answerGroup.get('other')?.value;\n    return otherValue;\n  }\n\n  setOtherValue(event: Event): void {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherControl: FormControl = answerGroup.get('other') as FormControl;\n    const eventTarget: HTMLIonInputElement = event.target as HTMLIonInputElement;\n    const otherValue: string | number = eventTarget.value!;\n    otherControl.setValue(otherValue);\n  }\n\n  isOtherInvalid(): boolean {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherControl: FormControl = answerGroup.get('other') as FormControl;\n    const invalid: boolean = otherControl?.invalid;\n    return invalid\n  }\n\n/*   isOtherTouched(): boolean {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherControl: FormControl = answerGroup.get('other') as FormControl;\n    return otherControl?.touched;\n  } */\n\n  getOtherErrorMessage(): string {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherControl: FormControl = answerGroup.get('other') as FormControl;\n    const errors: any = otherControl?.errors;\n    if (errors?.required) {\n      return 'Este campo es requerido';\n    } else if (errors?.min) {\n      return `El valor mínimo es ${this.question.min}`;\n    } else if (errors?.max) {\n      return `El valor máximo es ${this.question.max}`;\n    }\n    return '';\n  }\n\n  getOtherPlaceholder(): string {\n    let message: string = 'Ingrese un valor';\n    if (this.question.min && this.question.max)\n      message += ` entre ${this.question.min} y ${this.question.max}`;\n    else if (this.question.min) message += ` mayor a ${this.question.min}`;\n    else if (this.question.max) message += ` menor a ${this.question.max}`;\n    return message;\n  }\n\n  private loadOtherControl(): void {\n    const answerGroup: FormGroup = this.formGroup.get(\n      `${this.question.id}`\n    ) as FormGroup;\n    const otherFormControl: FormControl = answerGroup.get(\n      'other'\n    ) as FormControl;\n    if (this.question.min)\n      otherFormControl.addValidators(Validators.min(this.question.min));\n    if (this.question.max)\n      otherFormControl.addValidators(Validators.max(this.question.max));\n  }\n\n  private changeInputState(\n    answerGroup: FormGroup,\n    id: string,\n    value: boolean\n  ): void {\n    if (this.isLastAnswer(id) && value) {\n      this.other = true;\n      answerGroup.get('other')?.enable();\n    } else {\n      this.other = false;\n      answerGroup.get('other')?.disable();\n    }\n  }\n\n  private isLastAnswer(id: string): boolean {\n    const answers: FormDetail.Answer[] = this.getAnswers();\n    const lastAnswer: FormDetail.Answer = answers[answers.length - 1];\n    return Number(id) === lastAnswer.id;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ answer.value }}\n      \n    \n  \n\n\n\n  \n    \n      \n        \n          {{ isLast ? answer.value.split(\":\")[0] : answer.value }}\n        \n      \n    \n  \n  \n    \n    \n  \n  \n    \n      \n        Valor\n        ({{ getOtherErrorMessage() }})\n      \n    \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./unique.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ answer.value }}                                          {{ isLast ? answer.value.split(\":\")[0] : answer.value }}                                                    Valor        ({{ getOtherErrorMessage() }})                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutocompleteComponent', 'selector': 'app-autocomplete'},{'name': 'DataquestHeaderComponent', 'selector': 'app-dataquest-header'},{'name': 'DateDataTypeComponent', 'selector': 'app-date-data-type'},{'name': 'DetailedFormComponent', 'selector': 'app-detailed-form'},{'name': 'DetailPage', 'selector': 'app-detail'},{'name': 'DraftsPage', 'selector': 'app-drafts'},{'name': 'DrawingPadDataTypeComponent', 'selector': 'app-drawing-pad-data-type'},{'name': 'EmailDataTypeComponent', 'selector': 'app-email-data-type'},{'name': 'FormListComponent', 'selector': 'app-form-list'},{'name': 'FormsPage', 'selector': 'app-forms'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MoneyDataTypeComponent', 'selector': 'app-money-data-type'},{'name': 'MonthDataTypeComponent', 'selector': 'app-month-data-type'},{'name': 'MultipleComponent', 'selector': 'app-multiple'},{'name': 'NumberDataTypeComponent', 'selector': 'app-number-data-type'},{'name': 'OpenComponent', 'selector': 'app-open'},{'name': 'PercentageDataTypeComponent', 'selector': 'app-percentage-data-type'},{'name': 'PhoneDataTypeComponent', 'selector': 'app-phone-data-type'},{'name': 'PhotoDataTypeComponent', 'selector': 'app-photo-data-type'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'SurveysPage', 'selector': 'app-surveys'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TextAreaDataTypeComponent', 'selector': 'app-text-area-data-type'},{'name': 'TextDataTypeComponent', 'selector': 'app-text-data-type'},{'name': 'TypeaheadComponent', 'selector': 'app-typeahead'},{'name': 'TypeComponent', 'selector': 'app-type'},{'name': 'UniqueComponent', 'selector': 'app-unique'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UniqueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Auth.namespace.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            creationDate\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            emailVerifiedAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            idCard\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedDate\n                                        \n                                \n                                \n                                        \n                                            zone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creationDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailVerifiedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailVerifiedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idCard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idCard:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Authentication {\n  export interface User {\n    id: number;\n    name: string;\n    email: string;\n    emailVerifiedAt: string;\n    idCard: string;\n    role: string;\n    type: string;\n    zone: string;\n    creationDate: string;\n    updatedDate: string;\n  }\n\n  export type AuthResponse = {\n    token: string;\n    user: UserResponse;\n  };\n\n  export type UserResponse = {\n    id: number;\n    name: string;\n    email: string;\n    email_verified_at: string;\n    cedula: string;\n    roles: string;\n    types: string;\n    zone: string;\n    created_at: string;\n    updated_at: string;\n  };\n\n  export type AuthParams = {\n    email: string;\n    password: string;\n  };\n\n  export interface AuthManagement {\n    login: (credentials: AuthParams) => Promise;\n    logout: () => void;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/detailed-form/detailed-form.component.ts\n            \n            component\n            DetailedFormComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/form-list/form-list.component.ts\n            \n            component\n            FormListComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/header/dataquest-header/dataquest-header.component.ts\n            \n            component\n            DataquestHeaderComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/question/question.component.ts\n            \n            component\n            QuestionComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/components/question/type/autocomplete/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/question/type/multiple/multiple.component.ts\n            \n            component\n            MultipleComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/date-data-type/date-data-type.component.ts\n            \n            component\n            DateDataTypeComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/drawing-pad-data-type/drawing-pad-data-type.component.ts\n            \n            component\n            DrawingPadDataTypeComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/email-data-type/email-data-type.component.ts\n            \n            component\n            EmailDataTypeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/money-data-type/money-data-type.component.ts\n            \n            component\n            MoneyDataTypeComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/month-data-type/month-data-type.component.ts\n            \n            component\n            MonthDataTypeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/number-data-type/number-data-type.component.ts\n            \n            component\n            NumberDataTypeComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/open.component.ts\n            \n            component\n            OpenComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/percentage-data-type/percentage-data-type.component.ts\n            \n            component\n            PercentageDataTypeComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/phone-data-type/phone-data-type.component.ts\n            \n            component\n            PhoneDataTypeComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/photo-data-type/photo-data-type.component.ts\n            \n            component\n            PhotoDataTypeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/text-area-data-type/text-area-data-type.component.ts\n            \n            component\n            TextAreaDataTypeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/question/type/open/text-data-type/text-data-type.component.ts\n            \n            component\n            TextDataTypeComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/question/type/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/question/type/type.component.ts\n            \n            component\n            TypeComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/question/type/unique/unique.component.ts\n            \n            component\n            UniqueComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/typeahead/typeahead.component.ts\n            \n            component\n            TypeaheadComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/guards/auth/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/guards/details/details.guard.ts\n            \n            variable\n            DetailsGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/secure-inner-pages/secure-inner-pages.guard.ts\n            \n            injectable\n            SecureInnerPagesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/Auth.namespace.ts\n            \n            interface\n            AuthManagement\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/Auth.namespace.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/Beneficiary.namespace.ts\n            \n            interface\n            Association\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/Beneficiary.namespace.ts\n            \n            interface\n            Producer\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/Beneficiary.namespace.ts\n            \n            variable\n            ProducerBaseParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            Answer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            AnswerPivot\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            AnswerRelation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            Form\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            Question\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/models/FormDetail.namespace.ts\n            \n            interface\n            QuestionCategory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/detail/detail.page.ts\n            \n            component\n            DetailPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/drafts/drafts.page.ts\n            \n            component\n            DraftsPage\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/forms/forms.page.ts\n            \n            component\n            FormsPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/surveys/surveys.page.ts\n            \n            component\n            SurveysPage\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/association/association.service.ts\n            \n            injectable\n            AssociationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/association/association.service.ts\n            \n            variable\n            ASSOCIATIONS_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/association/association.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            TOKEN_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            USER_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/control/question-control.service.ts\n            \n            injectable\n            QuestionControlService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/detailed-form.service.ts\n            \n            injectable\n            DetailedFormService\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/question/answer-relation/answer-relation.service.ts\n            \n            injectable\n            AnswerRelationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/question/photo/photo.service.ts\n            \n            injectable\n            PhotoService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/detailed-form/question/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/draft/draft.service.ts\n            \n            injectable\n            DraftService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/form/form.service.ts\n            \n            injectable\n            FormService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/form/form.service.ts\n            \n            variable\n            ENDPOINT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/form/form.service.ts\n            \n            variable\n            FORMS_STORAGE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/offline-manager/offline-manager.service.ts\n            \n            injectable\n            OfflineManagerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/offline-manager/offline-manager.service.ts\n            \n            interface\n            StoredRequest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/offline-manager/offline-manager.service.ts\n            \n            variable\n            STORAGE_REQ_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/producer/producer.service.ts\n            \n            injectable\n            ProducerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/producer/producer.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/producer/producer.service.ts\n            \n            variable\n            PRODUCERS_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/storage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/survey/survey.service.ts\n            \n            injectable\n            SurveyService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/services/survey/survey.service.ts\n            \n            variable\n            ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/survey/survey.service.ts\n            \n            variable\n            SURVEYS_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            answerBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            answerPivotBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            answerRelationBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            associationBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            formBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            producerBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            questionBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            questionCategoryBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utils/builder.ts\n            \n            function\n            userBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.mobile.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            tokenGetter\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.0\n        \n            @angular/common : ^16.0.0\n        \n            @angular/compiler : ^16.0.0\n        \n            @angular/core : ^16.0.0\n        \n            @angular/forms : ^16.0.0\n        \n            @angular/platform-browser : ^16.0.0\n        \n            @angular/platform-browser-dynamic : ^16.0.0\n        \n            @angular/router : ^16.2.12\n        \n            @auth0/angular-jwt : ^5.1.2\n        \n            @capacitor/android : 5.5.1\n        \n            @capacitor/app : 5.0.6\n        \n            @capacitor/camera : ^5.0.7\n        \n            @capacitor/core : 5.5.1\n        \n            @capacitor/filesystem : ^5.1.3\n        \n            @capacitor/geolocation : ^5.0.6\n        \n            @capacitor/haptics : 5.0.6\n        \n            @capacitor/ios : 5.5.1\n        \n            @capacitor/keyboard : 5.0.6\n        \n            @capacitor/network : ^5.0.6\n        \n            @capacitor/preferences : ^5.0.6\n        \n            @capacitor/splash-screen : ^5.0.6\n        \n            @capacitor/status-bar : 5.0.6\n        \n            @ionic/angular : ^7.5.5\n        \n            @ionic/storage-angular : ^4.0.0\n        \n            @maskito/angular : ^1.8.1\n        \n            @maskito/core : ^1.8.1\n        \n            @maskito/kit : ^1.8.1\n        \n            @rx-angular/template : ^16.1.1\n        \n            cordova-sqlite-storage : ^6.1.0\n        \n            date-fns : ^2.30.0\n        \n            ionicons : ^7.0.0\n        \n            json-server : ^0.17.3\n        \n            jwt-decode : ^3.1.2\n        \n            localforage-cordovasqlitedriver : ^1.8.0\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            signature_pad : ^4.1.6\n        \n            tslib : ^2.3.0\n        \n            uuid : ^9.0.1\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            answerBuilder   (src/.../builder.ts)\n                        \n                        \n                            answerPivotBuilder   (src/.../builder.ts)\n                        \n                        \n                            answerRelationBuilder   (src/.../builder.ts)\n                        \n                        \n                            associationBuilder   (src/.../builder.ts)\n                        \n                        \n                            formBuilder   (src/.../builder.ts)\n                        \n                        \n                            producerBuilder   (src/.../builder.ts)\n                        \n                        \n                            questionBuilder   (src/.../builder.ts)\n                        \n                        \n                            questionCategoryBuilder   (src/.../builder.ts)\n                        \n                        \n                            tokenGetter   (src/.../main.ts)\n                        \n                        \n                            userBuilder   (src/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        answerBuilder\n                        \n                    \n                \n            \n            \n                \nanswerBuilder(answer)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                answer\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Answer\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answerPivotBuilder\n                        \n                    \n                \n            \n            \n                \nanswerPivotBuilder(pivot)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pivot\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormDetail.AnswerPivot\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answerRelationBuilder\n                        \n                    \n                \n            \n            \n                \nanswerRelationBuilder(relation)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relation\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.AnswerRelation\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associationBuilder\n                        \n                    \n                \n            \n            \n                \nassociationBuilder(association)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                association\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Beneficiary.Association\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formBuilder\n                        \n                    \n                \n            \n            \n                \nformBuilder(form)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FormDetail.Form\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        producerBuilder\n                        \n                    \n                \n            \n            \n                \nproducerBuilder(producer)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                producer\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Beneficiary.Producer\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionBuilder\n                        \n                    \n                \n            \n            \n                \nquestionBuilder(question)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                question\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.Question\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionCategoryBuilder\n                        \n                    \n                \n            \n            \n                \nquestionCategoryBuilder(category)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FormDetail.QuestionCategory\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userBuilder\n                        \n                    \n                \n            \n            \n                \nuserBuilder(user)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Authentication.User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tokenGetter\n                        \n                    \n                \n            \n            \n                \ntokenGetter()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.1.2\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnswerPivotResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            AnswerRelationResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            AnswerResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            AssociationResponse   (src/.../Beneficiary.namespace.ts)\n                        \n                        \n                            AuthParams   (src/.../Auth.namespace.ts)\n                        \n                        \n                            AuthResponse   (src/.../Auth.namespace.ts)\n                        \n                        \n                            FormResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            Pivot   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            ProducerResponse   (src/.../Beneficiary.namespace.ts)\n                        \n                        \n                            QuestionCategoryResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            QuestionResponse   (src/.../FormDetail.namespace.ts)\n                        \n                        \n                            SelectedQuestions   (src/.../Beneficiary.namespace.ts)\n                        \n                        \n                            UserResponse   (src/.../Auth.namespace.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/FormDetail.namespace.ts\n    \n    \n        \n            \n                \n                    \n                    AnswerPivotResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AnswerRelationResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AnswerResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FormResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pivot\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QuestionCategoryResponse\n                \n            \n            \n                \n                            QuestionCategory\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QuestionResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/models/Beneficiary.namespace.ts\n    \n    \n        \n            \n                \n                    \n                    AssociationResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ProducerResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectedQuestions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/models/Auth.namespace.ts\n    \n    \n        \n            \n                \n                    \n                    AuthParams\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ASSOCIATIONS_STORAGE_KEY   (src/.../association.service.ts)\n                        \n                        \n                            DetailsGuard   (src/.../details.guard.ts)\n                        \n                        \n                            ENDPOINT   (src/.../association.service.ts)\n                        \n                        \n                            ENDPOINT   (src/.../auth.service.ts)\n                        \n                        \n                            ENDPOINT   (src/.../form.service.ts)\n                        \n                        \n                            ENDPOINT   (src/.../producer.service.ts)\n                        \n                        \n                            ENDPOINT   (src/.../survey.service.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.mobile.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            FORMS_STORAGE_KEY   (src/.../form.service.ts)\n                        \n                        \n                            ProducerBaseParams   (src/.../Beneficiary.namespace.ts)\n                        \n                        \n                            PRODUCERS_STORAGE_KEY   (src/.../producer.service.ts)\n                        \n                        \n                            STORAGE_REQ_KEY   (src/.../offline-manager.service.ts)\n                        \n                        \n                            SURVEYS_STORAGE_KEY   (src/.../survey.service.ts)\n                        \n                        \n                            TOKEN_STORAGE_KEY   (src/.../auth.service.ts)\n                        \n                        \n                            USER_STORAGE_KEY   (src/.../auth.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/association/association.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ASSOCIATIONS_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'associations'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ASSOCIATIONS_STORAGE_KEY\n                    \n                \n\n\n        \n    \n\n    src/app/guards/details/details.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DetailsGuard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n\n  const detailedFormService = inject(DetailedFormService);\n  const router = inject(Router);\n\n  if (!detailedFormService.getForm()) {\n    router.navigate(['/home/forms']);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/services/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth/login'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'TOKEN_KEY'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USER_KEY'\n                    \n                \n\n\n        \n    \n\n    src/app/services/form/form.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'form-detail'\n                    \n                \n\n            \n                \n                    The endpoint for form details.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FORMS_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'forms'\n                    \n                \n\n            \n                \n                    The key used to store forms in local storage.\n\n                \n            \n\n        \n    \n\n    src/app/services/producer/producer.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : PRODUCERS_STORAGE_KEY\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRODUCERS_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'producers'\n                    \n                \n\n\n        \n    \n\n    src/app/services/survey/survey.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SURVEYS_STORAGE_KEY\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SURVEYS_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'uploadSurveys'\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  url: 'https://pif5.blaucast.com',\n  authEndpoint: 'auth/login',\n  formsEndpoint: 'form-detail',\n  producersEndpoint: 'producers',\n  associationsEndpoint: 'associations',\n  syncEndpoint: 'uploadSurvey',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.mobile.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  url: 'http://192.168.1.18:3000',\n  appVersion: \"1.0.0\",\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  url: 'https://programaintegraldefruticultura.com.co',\n  authEndpoint: 'auth/login',\n  formsEndpoint: 'form-detail',\n  producersEndpoint: 'producers',\n  associationsEndpoint: 'associations',\n  syncEndpoint: 'uploadSurvey',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  url: 'http://192.168.1.18:3000',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/models/Beneficiary.namespace.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProducerBaseParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    cedula: '',\n    firstname: '',\n    middlename: '',\n    lastname: '',\n    secondLastname: '',\n    id: '',\n    specialized: false,\n    technicalAssistance: false,\n    demonstrationPlot: false,\n    greenhouse: false,\n    supplies: false,\n    associationId: 0,\n    transplantDate: '',\n    recommendedActions: {}\n  }\n                    \n                \n\n\n        \n    \n\n    src/app/services/offline-manager/offline-manager.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STORAGE_REQ_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'storedreq'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
