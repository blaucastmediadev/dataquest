# Template docker-push

# This template allows you to build and push your docker image to a Docker Hub account.
# The workflow allows running tests, code linting and security scans on feature branches (as well as master).
# The docker image will be validated and pushed to the docker registry after the code is merged to master.

# Prerequisites: $DOCKERHUB_USERNAME, $DOCKERHUB_PASSWORD setup as deployment variables

image: atlassian/default-image:3

definitions:
  steps:
    - step: &build
        name: Build
        script:
          - IMAGE_NAME=$BITBUCKET_REPO_SLUG
          - docker build . --file Dockerfile --tag ${IMAGE_NAME}
          - docker save --output "${IMAGE_NAME}.tar" ${IMAGE_NAME}
        services:
          - docker
        caches:
          - docker
        artifacts:
          - "*.tar"
    - step: &push
        name: Push to Dockerhub
        script:
          - echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
          - IMAGE_NAME=$BITBUCKET_REPO_SLUG
          - docker load --input "${IMAGE_NAME}.tar"
          - BRANCH=${BITBUCKET_BRANCH}
          - if [ $BRANCH =~ master ]; then
          -   STAGE="prod-"
          - else
          -   STAGE="test-"
          - fi
          - VERSION="${STAGE}V${BITBUCKET_BUILD_NUMBER}"
          - IMAGE=${DOCKERHUB_NAMESPACE}/${IMAGE_NAME}
          - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
          - docker push "${IMAGE}:${VERSION}"
          - VERSION="${STAGE}latest"
          - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
          - docker push "${IMAGE}:${VERSION}"
        services:
          - docker

pipelines:
  default:
    - parallel:
        - step:
            name: Build and Test
            script:
              - IMAGE_NAME=$BITBUCKET_REPO_SLUG
              - docker build . --file Dockerfile --tag ${IMAGE_NAME}
            services:
              - docker
            caches:
              - docker
  branches:
    master:
      - step: *build
      - step: *push
    release/*:
      - step: *build
      - step: *push
      - step:
          name: Generate AAB
          deployment: test
          image:
            name: blaucastmedia/pif5_dataquest:test-V7
            username: $DOCKERHUB_USERNAME
            password: $DOCKERHUB_PASSWORD
            email: $DOCKERHUB_EMAIL
          script:
            - npx cap build android --keystorealiaspass="Tyrion_Lannister" --keystorepass="Tyrion_Lannister"
          artifacts:
            - "/www/app/android/app/build/outputs/bundle/release/app-release-signed.aab"

